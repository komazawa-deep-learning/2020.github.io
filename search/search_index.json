{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Shin Aasakawa , all rights reserved. Date: 08/May/2020 Appache 2.0 license 2020\u5e74\u5ea6\u958b\u8b1b \u99d2\u6fa4\u5927\u5b66 \u5fc3\u7406\u5b66\u7279\u8b1bIIIA \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA) \u00b6 \u6388\u696d\u306e\u8af8\u5143 \u00b6 \u5c65\u4fee\u30b3\u30fc\u30c9/\u79d1\u76ee\u540d\u79f0:\u3000 074401/\u5fc3\u7406\u5b66\u7279\u8b1b\u2162\uff21 \u526f\u984c: \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 \u958b\u8b1b\u5e74\u5ea6\u30fb\u671f:\u30002020\u5e74 \u524d\u671f \u958b\u8b1b\u66dc\u65e5\u30fb\u6642\u9650: \u91d1\u66dc\u65e5 1 \u9650 09:00 - 10:30 \u6388\u696d\u30da\u30fc\u30b8: GitHub https://komazawa-deep-learning.github.io/ \u30aa\u30f3\u30e9\u30a4\u30f3\u6388\u696d: Google Meet 2020komazawa_deep_learning \u6559\u5ba4: \u30aa\u30f3\u30e9\u30a4\u30f3 \u5358\u4f4d\u6570\u30002 \u62c5\u5f53\u8005: \u6d45\u5ddd\u4f38\u4e00 educ0233@komazawa-u.ac.jp , asakawa@ieee.org \u30aa\u30d5\u30a3\u30b9\u30a2\u30ef\u30fc: \u306a\u3057, \u30e1\u30fc\u30eb\u3084 SNS \u3092\u6d3b\u7528\u3057\u3066\u304f\u3060\u3055\u3044 \u6388\u696d\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb \u00b6 X \u6708 XX \u65e5: \u7b2c 00 \u56de \u4e8b\u524d\u52d5\u4f5c\u78ba\u8a8d\u30c6\u30b9\u30c8 5 \u6708 08 \u65e5: \u7b2c 01 \u56de \u30ac\u30a4\u30c0\u30f3\u30b9, \u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3 , \u4eba\u5de5\u77e5\u80fd\u306e\u6b74\u53f2 5 \u6708 15 \u65e5: \u7b2c 02 \u56de \u8a08\u7b97\u8ad6\u7684\u795e\u7d4c\u79d1\u5b66 vs. \u8a8d\u77e5\u79d1\u5b66 vs. \u4eba\u5de5\u77e5\u80fd, \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u6982\u8ad6 5 \u6708 22 \u65e5: \u7b2c 03 \u56de \u753b\u50cf\u8a8d\u8b58, \u7573\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af, \u53d7\u5bb9\u91ce\u5f62\u6210 5 \u6708 29 \u65e5: \u7b2c 04 \u56de \u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5, \u6a19\u6e96\u6700\u9069\u5316\u7406\u8ad6\u3068\u6700\u9069\u5316, \u591a\u5c64\u5316\u306e\u5de5\u592b 6 \u6708 06 \u65e5: \u7b2c 05 \u56de \u753b\u50cf\u5207\u308a\u5206\u3051, \u6575\u5bfe\u7684\u751f\u6210\u30cd\u30c3\u30c8\u30ef\u30fc\u30af, \u8ee2\u79fb\u5b66\u7fd2, \u8179\u5074\u7d4c\u8def\u3068\u80cc\u5074\u7d4c\u8def, \u9854\u8a8d\u8b58 6 \u6708 12 \u65e5: \u7b2c 06 \u56de \u4f11\u8b1b (\u6ce8\u610f, \u5909\u5206\u81ea\u52d5\u7b26\u53f7\u5316\u5668, \u5185\u90e8\u8868\u8c61, \u8868\u73fe\u5b66\u7fd2) 6 \u6708 19 \u65e5: \u7b2c 07 \u56de \u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af, \u81ea\u7136\u8a00\u8a9e\u51e6\u7406, \u97f3\u58f0\u8a8d\u8b58, \u7cfb\u5217\u4e88\u6e2c, 6 \u6708 26 \u65e5: \u7b2c 08 \u56de \u5358\u8a9e, \u6587\u7ae0\u57cb\u3081\u8fbc\u307f\u30e2\u30c7\u30eb\u306b\u3088\u308b\u610f\u5473\u8ad6 7 \u6708 03 \u65e5: \u7b2c 09 \u56de \u81ea\u52d5\u7ffb\u8a33, \u6587\u7ae0\u8981\u7d04, \u8ee2\u79fb\u5b66\u7fd2, \u30de\u30eb\u30c1\u30e2\u30fc\u30c0\u30eb\u5b66\u7fd2, \u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd2, 7 \u6708 10 \u65e5: \u7b2c 10 \u56de \u5f37\u5316\u5b66\u7fd2, \u4e88\u6e2c\u5831\u916c\u8aa4\u5dee, \u30b2\u30fc\u30e0AI, \u7d4c\u6e08\u5b66 7 \u6708 17 \u65e5: \u7b2c 11 \u56de \u753b\u50cf\u8a8d\u8b58\u3068\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3068\u306e\u878d\u5408, \u8cea\u7591\u5fdc\u7b54\u751f\u6210, \u6b21\u5143\u5727\u7e2e, \u4f5c\u52d5\u8a18\u61b6, \u624b\u7d9a\u304d\u8a18\u61b6 7 \u6708 24 \u65e5: \u7b2c 12 \u56de \u7cbe\u795e\u533b\u5b66(\u7d71\u5408\u5931\u8abf\u75c7, \u5f37\u8feb\u795e\u7d4c\u75c7, \u4f9d\u5b58\u75c7, \u5e7b\u899a\u5e7b\u8074), \u795e\u7d4c\u5fc3\u7406\u5b66(\u610f\u5473\u75f4\u5446, \u76f8\u8c8c\u5931\u8a8d, \u5931\u8a9e, \u5931\u884c)","title":"2020\u5e74\u5ea6 \u99d2\u6fa4\u5927\u5b66\u5fc3\u7406\u5b66\u7279\u8b1bIIIA \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8"},{"location":"#iiia","text":"","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA)"},{"location":"#_1","text":"\u5c65\u4fee\u30b3\u30fc\u30c9/\u79d1\u76ee\u540d\u79f0:\u3000 074401/\u5fc3\u7406\u5b66\u7279\u8b1b\u2162\uff21 \u526f\u984c: \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 \u958b\u8b1b\u5e74\u5ea6\u30fb\u671f:\u30002020\u5e74 \u524d\u671f \u958b\u8b1b\u66dc\u65e5\u30fb\u6642\u9650: \u91d1\u66dc\u65e5 1 \u9650 09:00 - 10:30 \u6388\u696d\u30da\u30fc\u30b8: GitHub https://komazawa-deep-learning.github.io/ \u30aa\u30f3\u30e9\u30a4\u30f3\u6388\u696d: Google Meet 2020komazawa_deep_learning \u6559\u5ba4: \u30aa\u30f3\u30e9\u30a4\u30f3 \u5358\u4f4d\u6570\u30002 \u62c5\u5f53\u8005: \u6d45\u5ddd\u4f38\u4e00 educ0233@komazawa-u.ac.jp , asakawa@ieee.org \u30aa\u30d5\u30a3\u30b9\u30a2\u30ef\u30fc: \u306a\u3057, \u30e1\u30fc\u30eb\u3084 SNS \u3092\u6d3b\u7528\u3057\u3066\u304f\u3060\u3055\u3044","title":"\u6388\u696d\u306e\u8af8\u5143"},{"location":"#_2","text":"X \u6708 XX \u65e5: \u7b2c 00 \u56de \u4e8b\u524d\u52d5\u4f5c\u78ba\u8a8d\u30c6\u30b9\u30c8 5 \u6708 08 \u65e5: \u7b2c 01 \u56de \u30ac\u30a4\u30c0\u30f3\u30b9, \u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3 , \u4eba\u5de5\u77e5\u80fd\u306e\u6b74\u53f2 5 \u6708 15 \u65e5: \u7b2c 02 \u56de \u8a08\u7b97\u8ad6\u7684\u795e\u7d4c\u79d1\u5b66 vs. \u8a8d\u77e5\u79d1\u5b66 vs. \u4eba\u5de5\u77e5\u80fd, \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u6982\u8ad6 5 \u6708 22 \u65e5: \u7b2c 03 \u56de \u753b\u50cf\u8a8d\u8b58, \u7573\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af, \u53d7\u5bb9\u91ce\u5f62\u6210 5 \u6708 29 \u65e5: \u7b2c 04 \u56de \u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5, \u6a19\u6e96\u6700\u9069\u5316\u7406\u8ad6\u3068\u6700\u9069\u5316, \u591a\u5c64\u5316\u306e\u5de5\u592b 6 \u6708 06 \u65e5: \u7b2c 05 \u56de \u753b\u50cf\u5207\u308a\u5206\u3051, \u6575\u5bfe\u7684\u751f\u6210\u30cd\u30c3\u30c8\u30ef\u30fc\u30af, \u8ee2\u79fb\u5b66\u7fd2, \u8179\u5074\u7d4c\u8def\u3068\u80cc\u5074\u7d4c\u8def, \u9854\u8a8d\u8b58 6 \u6708 12 \u65e5: \u7b2c 06 \u56de \u4f11\u8b1b (\u6ce8\u610f, \u5909\u5206\u81ea\u52d5\u7b26\u53f7\u5316\u5668, \u5185\u90e8\u8868\u8c61, \u8868\u73fe\u5b66\u7fd2) 6 \u6708 19 \u65e5: \u7b2c 07 \u56de \u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af, \u81ea\u7136\u8a00\u8a9e\u51e6\u7406, \u97f3\u58f0\u8a8d\u8b58, \u7cfb\u5217\u4e88\u6e2c, 6 \u6708 26 \u65e5: \u7b2c 08 \u56de \u5358\u8a9e, \u6587\u7ae0\u57cb\u3081\u8fbc\u307f\u30e2\u30c7\u30eb\u306b\u3088\u308b\u610f\u5473\u8ad6 7 \u6708 03 \u65e5: \u7b2c 09 \u56de \u81ea\u52d5\u7ffb\u8a33, \u6587\u7ae0\u8981\u7d04, \u8ee2\u79fb\u5b66\u7fd2, \u30de\u30eb\u30c1\u30e2\u30fc\u30c0\u30eb\u5b66\u7fd2, \u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd2, 7 \u6708 10 \u65e5: \u7b2c 10 \u56de \u5f37\u5316\u5b66\u7fd2, \u4e88\u6e2c\u5831\u916c\u8aa4\u5dee, \u30b2\u30fc\u30e0AI, \u7d4c\u6e08\u5b66 7 \u6708 17 \u65e5: \u7b2c 11 \u56de \u753b\u50cf\u8a8d\u8b58\u3068\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3068\u306e\u878d\u5408, \u8cea\u7591\u5fdc\u7b54\u751f\u6210, \u6b21\u5143\u5727\u7e2e, \u4f5c\u52d5\u8a18\u61b6, \u624b\u7d9a\u304d\u8a18\u61b6 7 \u6708 24 \u65e5: \u7b2c 12 \u56de \u7cbe\u795e\u533b\u5b66(\u7d71\u5408\u5931\u8abf\u75c7, \u5f37\u8feb\u795e\u7d4c\u75c7, \u4f9d\u5b58\u75c7, \u5e7b\u899a\u5e7b\u8074), \u795e\u7d4c\u5fc3\u7406\u5b66(\u610f\u5473\u75f4\u5446, \u76f8\u8c8c\u5931\u8a8d, \u5931\u8a9e, \u5931\u884c)","title":"\u6388\u696d\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb"},{"location":"00/","text":"Google Meet \u306e\u4e8b\u524d\u78ba\u8a8d\u30c6\u30b9\u30c8\u6848\u5185 \u00b6 \u4ee5\u4e0b\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3067\u63a5\u7d9a\u78ba\u8a8d\u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002\u90fd\u5408\u306e\u826f\u3044\u6642\u9593\u306b\u53c2\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u52d5\u4f5c\u78ba\u8a8d\u3067\u3059\u306e\u3067\uff0c\u3044\u305a\u308c\u304b\u306e\u6a5f\u4f1a\u306b\u4e00\u5ea6\u3060\u3051\u53c2\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4e8b\u524d\u30c6\u30b9\u30c8\u65e5\u7a0b \u00b6 2020\u5e74 4\u670827\u65e5\u6708\u66dc\u65e5 10:30-11:00 2020\u5e74 4\u670828\u65e5\u706b\u66dc\u65e5 10:30-11:00 2020\u5e74 5\u670807\u65e5\u6728\u66dc\u65e5 10:30-11:00 2020\u5e74 5\u670807\u65e5\u6728\u66dc\u65e5 16:30-17:00 \u4e8b\u524d\u30c6\u30b9\u30c8\u5185\u5bb9 \u00b6 \u6b63\u3057\u304f\u5165\u5ba4\u3057\uff0c\u9000\u51fa\u3067\u304d\u308b\u304b\uff1f \u97f3\u58f0\u914d\u4fe1\uff0c\u3053\u3061\u3089\u306e\u97f3\u58f0\u304c\u805e\u304d\u53d6\u308c\u308b\u304b\uff1f \u52d5\u753b\u914d\u4fe1\uff0c\u3053\u3061\u3089\u306e\u6620\u50cf\u304c\u8996\u8074\u3067\u304d\u308b\u304b\uff1f \u97f3\u58f0\u9001\u4fe1\uff0c\u30de\u30a4\u30af\u5165\u529b\u3067\u304d\u308b\u304b\uff1f \u52d5\u753b\u9001\u4fe1\uff0c\u753b\u9762\u5171\u6709\u3067\u304d\u308b\u304b\uff1f \u30c1\u30e3\u30c3\u30c8\u6a5f\u80fd\u3092\u5229\u7528\u3067\u304d\u308b\u304b Meet \u306b\u3088\u308b\u30aa\u30f3\u30e9\u30a4\u30f3\u6388\u696d\u53c2\u52a0\u65b9\u6cd5 \u00b6 \u8aac\u660e\u52d5\u753b \u74b0\u5883 \u00b6 PC \u307e\u305f\u306f Mac \u306e\u4f7f\u7528\u3092\u5f37\u304f\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002 \u30aa\u30f3\u30e9\u30a4\u30f3\u6388\u696d\u3092\u95b2\u89a7\u3059\u308b\u3060\u3051\u306a\u3089\u3070\uff0c\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\uff0ciPhone\uff0c\u307e\u305f\u306f\u30bf\u30d6\u30ec\u30c3\u30c8\u7aef\u672b\u3067\u53ef\u80fd\u3067\u3059\u3002 \u3067\u3059\u304c\uff0c\u5b9f\u7fd2\u3092\u8003\u3048\u305f\u5834\u5408\uff0cPC \u304b Mac \u3067\u3042\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002 \u3069\u3046\u3057\u3066\u3082 PC \u3042\u308b\u3044\u306f Mac \u3092\u7528\u610f\u3067\u304d\u306a\u3044\u5834\u5408\u306b\u306f\u4e8b\u524d\u306b\u7533\u3057\u51fa\u3066\u304f\u3060\u3055\u3044\u3002 Google Meet \u306b\u3064\u3044\u3066 \u00b6 \u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u306f MacOS, Windows, Chrome OS, Ubuntu \u306a\u3069 Linux \u7cfb\u306e\u3044\u305a\u308c\u304b\u3067\u3059 \u30d6\u30e9\u30a6\u30b6 Google Chrome \u3092\u524d\u63d0\u3068\u3057\u307e\u3059\u3002Safari, Edge, FireFox \u3067\u3082\u52d5\u4f5c\u3057\u307e\u3059\u304c\uff0ccolab \u304c\u52d5\u4f5c\u3057\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 PC \u304b\u3089\u30aa\u30f3\u30e9\u30a4\u30f3\u6388\u696d\u306b\u51fa\u5e2d\u3059\u308b\u5834\u5408\u306b\u306f\uff0cChrome \u304c\u52d5\u4f5c\u3057\u3066\u3044\u308c\u3070\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002 \u3084\u3080\u3092\u5f97\u305a Android \u3084 iOS \u304b\u3089\u51fa\u5e2d\u3059\u308b\u5834\u5408\u306b\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u304b\u3089\u30a2\u30d7\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002 Android \u7248 iOS \u7248 \u521d\u3081\u3066 Meet \u3092\u8d77\u52d5\u3057\u305f\u3068\u304d\u306b\uff0c\u30d1\u30bd\u30b3\u30f3\u306e\u30ab\u30e1\u30e9\u3068\u30de\u30a4\u30af\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3092\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u624b\u9806\u3067\uff0c\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u306e\u8a2d\u5b9a\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002 Meet \u3092\u521d\u3081\u3066\u4f7f\u7528\u3059\u308b\u3068\u304d\u306b\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b \u00b6 \u30a6\u30a7\u30d6\u30d6\u30e9\u30a6\u30b6\u3067 Meet \u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8 \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002 [\u65b0\u3057\u3044\u30df\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u958b\u59cb] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 [\u8a31\u53ef] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 \u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b \u00b6 \u30a2\u30af\u30bb\u30b9\u306e\u8a31\u53ef\u3092\u6c42\u3081\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u3084\u3001\u4ee5\u524d\u306b\u30a2\u30af\u30bb\u30b9\u3092\u30d6\u30ed\u30c3\u30af\u3057\u305f\u5834\u5408\u3067\u3082\u3001\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u3068\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3067\u304d\u307e\u3059\u3002 \u30a6\u30a7\u30d6\u30d6\u30e9\u30a6\u30b6\u3067 Meet \u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8 \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002 [\u65b0\u3057\u3044\u30df\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u958b\u59cb] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 \u753b\u9762\u53f3\u4e0a\u306e\u30ab\u30e1\u30e9\u30a8\u30e9\u30fc \u30a2\u30a4\u30b3\u30f3 [https://meet.google.com \u306b\u3088\u308b\u30ab\u30e1\u30e9\u3068\u30de\u30a4\u30af\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u5e38\u306b\u8a31\u53ef\u3059\u308b] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 [\u5b8c\u4e86] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\u30d3\u30c7\u30aa\u4f1a\u8b70\u304c\u81ea\u52d5\u7684\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\u4f1a\u8b70\u304c\u518d\u8aad\u307f\u8fbc\u307f\u3055\u308c\u306a\u3044\u5834\u5408\u306f\u3001\u3044\u3063\u305f\u3093\u7d42\u4e86\u3057\u3066\u518d\u5ea6\u4f1a\u8b70\u3092\u958b\u59cb\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Google \u306e \u30d8\u30eb\u30d7 \u30ab\u30e1\u30e9\u3068\u30de\u30a4\u30af\u3092\u4f7f\u7528\u3059\u308b \u3082\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044 Google Chrome \u306e Windows \u3078\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u00b6 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u30d5\u30a1\u30a4\u30eb \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 \u78ba\u8a8d\u306e\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u305f\u5834\u5408\u306f\u3001[\u5b9f\u884c] \u307e\u305f\u306f [\u4fdd\u5b58] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 [\u4fdd\u5b58] \u3092\u9078\u629e\u3057\u305f\u5834\u5408\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u958b\u59cb\u3059\u308b\u306b\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 Chrome \u3092\u8d77\u52d5\u3057\u307e\u3059\u3002 Windows 7: \u3059\u3079\u3066\u306e\u51e6\u7406\u304c\u5b8c\u4e86\u3059\u308b\u3068 Chrome \u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u958b\u304d\u307e\u3059\u3002 Windows 8\u30018.1: [\u3088\u3046\u3053\u305d] \u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001[\u6b21\u3078] \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u65e2\u5b9a\u306e\u30d6\u30e9\u30a6\u30b6\u3092\u9078\u629e\u3057\u307e\u3059\u3002 Windows 10: \u3059\u3079\u3066\u306e\u51e6\u7406\u304c\u5b8c\u4e86\u3059\u308b\u3068 Chrome \u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u958b\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u3001Chrome \u3092\u65e2\u5b9a\u306e\u30d6\u30e9\u30a6\u30b6\u306b\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 Google Chrome \u306e Mac \u3078\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u00b6 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 \u300cgooglechrome.dmg\u300d\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304d\u307e\u3059\u3002 \u958b\u3044\u305f\u30a6\u30a3\u30f3\u30c9\u30a6\u3067 Chrome Chrome \u3092\u63a2\u3057\u307e\u3059\u3002 Chrome \u3092 [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3] \u30d5\u30a9\u30eb\u30c0\u306b\u30c9\u30e9\u30c3\u30b0\u3057\u307e\u3059\u3002 \u3053\u306e\u3068\u304d\u3001\u7ba1\u7406\u8005\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u5165\u529b\u3092\u6c42\u3081\u3089\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u7ba1\u7406\u8005\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306f\u3001\u30d1\u30bd\u30b3\u30f3\u4e0a\u3067\u81ea\u5206\u304c\u7de8\u96c6\u6a29\u9650\u3092\u6301\u3063\u3066\u3044\u308b\u5834\u6240\uff08\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306a\u3069\uff09\u306b Chrome \u3092\u30c9\u30e9\u30c3\u30b0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Chrome \u3092\u958b\u304d\u307e\u3059\u3002 Finder \u3092\u958b\u304d\u307e\u3059\u3002 \u30b5\u30a4\u30c9\u30d0\u30fc\u3067\u3001Google Chrome \u306e\u53f3\u306b\u3042\u308b\u53d6\u308a\u51fa\u3057 \u53d6\u308a\u51fa\u3057 \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 iOS \u3084 Adroid \u3078\u306e Meet \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \uff08\u975e\u63a8\u5968\uff09 \u00b6 iOS \u7248 Android \u7248 Google Chrome \u306e Android \u3078\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u00b6 Android \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3068\u30bf\u30d6\u30ec\u30c3\u30c8\u5411\u3051\u306e Chrome \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 \u306f Android 5.0\uff08Lollipop\uff09\u4ee5\u4e0a\u3092\u642d\u8f09\u3057\u305f\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3084\u30bf\u30d6\u30ec\u30c3\u30c8\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059: Android \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u307e\u305f\u306f\u30bf\u30d6\u30ec\u30c3\u30c8\u3067 Google Play \u306e Chrome \u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002 [\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb] \u3092\u30bf\u30c3\u30d7\u3057\u307e\u3059\u3002 [\u540c\u610f\u3059\u308b] \u3092\u30bf\u30c3\u30d7\u3057\u307e\u3059\u3002 \u4f7f\u7528\u3092\u958b\u59cb\u3059\u308b\u306b\u306f\u3001\u30db\u30fc\u30e0\u307e\u305f\u306f \uff3b\u3059\u3079\u3066\u306e\u30a2\u30d7\u30ea] \u30da\u30fc\u30b8\u306b\u79fb\u52d5\u3057\u3066 Chrome \u30a2\u30d7\u30ea \u3092\u30bf\u30c3\u30d7\u3057\u307e\u3059\u3002 \u691c\u7d22\u30a8\u30f3\u30b8\u30f3 Flash \u30dd\u30c3\u30d7\u30a2\u30c3\u30d7 Chrome \u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306b\u95a2\u3059\u308b\u554f\u984c\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306f Chrome \u3092\u3044\u3063\u305f\u3093\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u3057 \u518d\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"2020\u5e74\u5ea6 \u99d2\u6fa4\u5927\u5b66\u5fc3\u7406\u5b66\u7279\u8b1bIIIA \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8"},{"location":"00/#google-meet","text":"\u4ee5\u4e0b\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3067\u63a5\u7d9a\u78ba\u8a8d\u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002\u90fd\u5408\u306e\u826f\u3044\u6642\u9593\u306b\u53c2\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u52d5\u4f5c\u78ba\u8a8d\u3067\u3059\u306e\u3067\uff0c\u3044\u305a\u308c\u304b\u306e\u6a5f\u4f1a\u306b\u4e00\u5ea6\u3060\u3051\u53c2\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Google Meet \u306e\u4e8b\u524d\u78ba\u8a8d\u30c6\u30b9\u30c8\u6848\u5185"},{"location":"00/#_1","text":"2020\u5e74 4\u670827\u65e5\u6708\u66dc\u65e5 10:30-11:00 2020\u5e74 4\u670828\u65e5\u706b\u66dc\u65e5 10:30-11:00 2020\u5e74 5\u670807\u65e5\u6728\u66dc\u65e5 10:30-11:00 2020\u5e74 5\u670807\u65e5\u6728\u66dc\u65e5 16:30-17:00","title":"\u4e8b\u524d\u30c6\u30b9\u30c8\u65e5\u7a0b"},{"location":"00/#_2","text":"\u6b63\u3057\u304f\u5165\u5ba4\u3057\uff0c\u9000\u51fa\u3067\u304d\u308b\u304b\uff1f \u97f3\u58f0\u914d\u4fe1\uff0c\u3053\u3061\u3089\u306e\u97f3\u58f0\u304c\u805e\u304d\u53d6\u308c\u308b\u304b\uff1f \u52d5\u753b\u914d\u4fe1\uff0c\u3053\u3061\u3089\u306e\u6620\u50cf\u304c\u8996\u8074\u3067\u304d\u308b\u304b\uff1f \u97f3\u58f0\u9001\u4fe1\uff0c\u30de\u30a4\u30af\u5165\u529b\u3067\u304d\u308b\u304b\uff1f \u52d5\u753b\u9001\u4fe1\uff0c\u753b\u9762\u5171\u6709\u3067\u304d\u308b\u304b\uff1f \u30c1\u30e3\u30c3\u30c8\u6a5f\u80fd\u3092\u5229\u7528\u3067\u304d\u308b\u304b","title":"\u4e8b\u524d\u30c6\u30b9\u30c8\u5185\u5bb9"},{"location":"00/#meet","text":"\u8aac\u660e\u52d5\u753b","title":"Meet \u306b\u3088\u308b\u30aa\u30f3\u30e9\u30a4\u30f3\u6388\u696d\u53c2\u52a0\u65b9\u6cd5"},{"location":"00/#_3","text":"PC \u307e\u305f\u306f Mac \u306e\u4f7f\u7528\u3092\u5f37\u304f\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002 \u30aa\u30f3\u30e9\u30a4\u30f3\u6388\u696d\u3092\u95b2\u89a7\u3059\u308b\u3060\u3051\u306a\u3089\u3070\uff0c\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\uff0ciPhone\uff0c\u307e\u305f\u306f\u30bf\u30d6\u30ec\u30c3\u30c8\u7aef\u672b\u3067\u53ef\u80fd\u3067\u3059\u3002 \u3067\u3059\u304c\uff0c\u5b9f\u7fd2\u3092\u8003\u3048\u305f\u5834\u5408\uff0cPC \u304b Mac \u3067\u3042\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002 \u3069\u3046\u3057\u3066\u3082 PC \u3042\u308b\u3044\u306f Mac \u3092\u7528\u610f\u3067\u304d\u306a\u3044\u5834\u5408\u306b\u306f\u4e8b\u524d\u306b\u7533\u3057\u51fa\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u74b0\u5883"},{"location":"00/#google-meet_1","text":"\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u306f MacOS, Windows, Chrome OS, Ubuntu \u306a\u3069 Linux \u7cfb\u306e\u3044\u305a\u308c\u304b\u3067\u3059 \u30d6\u30e9\u30a6\u30b6 Google Chrome \u3092\u524d\u63d0\u3068\u3057\u307e\u3059\u3002Safari, Edge, FireFox \u3067\u3082\u52d5\u4f5c\u3057\u307e\u3059\u304c\uff0ccolab \u304c\u52d5\u4f5c\u3057\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 PC \u304b\u3089\u30aa\u30f3\u30e9\u30a4\u30f3\u6388\u696d\u306b\u51fa\u5e2d\u3059\u308b\u5834\u5408\u306b\u306f\uff0cChrome \u304c\u52d5\u4f5c\u3057\u3066\u3044\u308c\u3070\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002 \u3084\u3080\u3092\u5f97\u305a Android \u3084 iOS \u304b\u3089\u51fa\u5e2d\u3059\u308b\u5834\u5408\u306b\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u304b\u3089\u30a2\u30d7\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002 Android \u7248 iOS \u7248 \u521d\u3081\u3066 Meet \u3092\u8d77\u52d5\u3057\u305f\u3068\u304d\u306b\uff0c\u30d1\u30bd\u30b3\u30f3\u306e\u30ab\u30e1\u30e9\u3068\u30de\u30a4\u30af\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3092\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u624b\u9806\u3067\uff0c\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u306e\u8a2d\u5b9a\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002","title":"Google Meet \u306b\u3064\u3044\u3066"},{"location":"00/#meet_1","text":"\u30a6\u30a7\u30d6\u30d6\u30e9\u30a6\u30b6\u3067 Meet \u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8 \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002 [\u65b0\u3057\u3044\u30df\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u958b\u59cb] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 [\u8a31\u53ef] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002","title":"Meet \u3092\u521d\u3081\u3066\u4f7f\u7528\u3059\u308b\u3068\u304d\u306b\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b"},{"location":"00/#_4","text":"\u30a2\u30af\u30bb\u30b9\u306e\u8a31\u53ef\u3092\u6c42\u3081\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u3084\u3001\u4ee5\u524d\u306b\u30a2\u30af\u30bb\u30b9\u3092\u30d6\u30ed\u30c3\u30af\u3057\u305f\u5834\u5408\u3067\u3082\u3001\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u3068\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3067\u304d\u307e\u3059\u3002 \u30a6\u30a7\u30d6\u30d6\u30e9\u30a6\u30b6\u3067 Meet \u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8 \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002 [\u65b0\u3057\u3044\u30df\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u958b\u59cb] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 \u753b\u9762\u53f3\u4e0a\u306e\u30ab\u30e1\u30e9\u30a8\u30e9\u30fc \u30a2\u30a4\u30b3\u30f3 [https://meet.google.com \u306b\u3088\u308b\u30ab\u30e1\u30e9\u3068\u30de\u30a4\u30af\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u5e38\u306b\u8a31\u53ef\u3059\u308b] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 [\u5b8c\u4e86] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\u30d3\u30c7\u30aa\u4f1a\u8b70\u304c\u81ea\u52d5\u7684\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\u4f1a\u8b70\u304c\u518d\u8aad\u307f\u8fbc\u307f\u3055\u308c\u306a\u3044\u5834\u5408\u306f\u3001\u3044\u3063\u305f\u3093\u7d42\u4e86\u3057\u3066\u518d\u5ea6\u4f1a\u8b70\u3092\u958b\u59cb\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Google \u306e \u30d8\u30eb\u30d7 \u30ab\u30e1\u30e9\u3068\u30de\u30a4\u30af\u3092\u4f7f\u7528\u3059\u308b \u3082\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044","title":"\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b"},{"location":"00/#google-chrome-windows","text":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u30d5\u30a1\u30a4\u30eb \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 \u78ba\u8a8d\u306e\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u305f\u5834\u5408\u306f\u3001[\u5b9f\u884c] \u307e\u305f\u306f [\u4fdd\u5b58] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 [\u4fdd\u5b58] \u3092\u9078\u629e\u3057\u305f\u5834\u5408\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u958b\u59cb\u3059\u308b\u306b\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 Chrome \u3092\u8d77\u52d5\u3057\u307e\u3059\u3002 Windows 7: \u3059\u3079\u3066\u306e\u51e6\u7406\u304c\u5b8c\u4e86\u3059\u308b\u3068 Chrome \u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u958b\u304d\u307e\u3059\u3002 Windows 8\u30018.1: [\u3088\u3046\u3053\u305d] \u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001[\u6b21\u3078] \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u65e2\u5b9a\u306e\u30d6\u30e9\u30a6\u30b6\u3092\u9078\u629e\u3057\u307e\u3059\u3002 Windows 10: \u3059\u3079\u3066\u306e\u51e6\u7406\u304c\u5b8c\u4e86\u3059\u308b\u3068 Chrome \u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u958b\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u3001Chrome \u3092\u65e2\u5b9a\u306e\u30d6\u30e9\u30a6\u30b6\u306b\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002","title":"Google Chrome \u306e Windows \u3078\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"00/#google-chrome-mac","text":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 \u300cgooglechrome.dmg\u300d\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304d\u307e\u3059\u3002 \u958b\u3044\u305f\u30a6\u30a3\u30f3\u30c9\u30a6\u3067 Chrome Chrome \u3092\u63a2\u3057\u307e\u3059\u3002 Chrome \u3092 [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3] \u30d5\u30a9\u30eb\u30c0\u306b\u30c9\u30e9\u30c3\u30b0\u3057\u307e\u3059\u3002 \u3053\u306e\u3068\u304d\u3001\u7ba1\u7406\u8005\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u5165\u529b\u3092\u6c42\u3081\u3089\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u7ba1\u7406\u8005\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306f\u3001\u30d1\u30bd\u30b3\u30f3\u4e0a\u3067\u81ea\u5206\u304c\u7de8\u96c6\u6a29\u9650\u3092\u6301\u3063\u3066\u3044\u308b\u5834\u6240\uff08\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306a\u3069\uff09\u306b Chrome \u3092\u30c9\u30e9\u30c3\u30b0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Chrome \u3092\u958b\u304d\u307e\u3059\u3002 Finder \u3092\u958b\u304d\u307e\u3059\u3002 \u30b5\u30a4\u30c9\u30d0\u30fc\u3067\u3001Google Chrome \u306e\u53f3\u306b\u3042\u308b\u53d6\u308a\u51fa\u3057 \u53d6\u308a\u51fa\u3057 \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002","title":"Google Chrome \u306e Mac \u3078\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"00/#ios-adroid-meet","text":"iOS \u7248 Android \u7248","title":"iOS \u3084 Adroid \u3078\u306e Meet \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \uff08\u975e\u63a8\u5968\uff09"},{"location":"00/#google-chrome-android","text":"Android \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3068\u30bf\u30d6\u30ec\u30c3\u30c8\u5411\u3051\u306e Chrome \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 \u306f Android 5.0\uff08Lollipop\uff09\u4ee5\u4e0a\u3092\u642d\u8f09\u3057\u305f\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3084\u30bf\u30d6\u30ec\u30c3\u30c8\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059: Android \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u307e\u305f\u306f\u30bf\u30d6\u30ec\u30c3\u30c8\u3067 Google Play \u306e Chrome \u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002 [\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb] \u3092\u30bf\u30c3\u30d7\u3057\u307e\u3059\u3002 [\u540c\u610f\u3059\u308b] \u3092\u30bf\u30c3\u30d7\u3057\u307e\u3059\u3002 \u4f7f\u7528\u3092\u958b\u59cb\u3059\u308b\u306b\u306f\u3001\u30db\u30fc\u30e0\u307e\u305f\u306f \uff3b\u3059\u3079\u3066\u306e\u30a2\u30d7\u30ea] \u30da\u30fc\u30b8\u306b\u79fb\u52d5\u3057\u3066 Chrome \u30a2\u30d7\u30ea \u3092\u30bf\u30c3\u30d7\u3057\u307e\u3059\u3002 \u691c\u7d22\u30a8\u30f3\u30b8\u30f3 Flash \u30dd\u30c3\u30d7\u30a2\u30c3\u30d7 Chrome \u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306b\u95a2\u3059\u308b\u554f\u984c\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306f Chrome \u3092\u3044\u3063\u305f\u3093\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u3057 \u518d\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Google Chrome \u306e Android \u3078\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"2019Sutton_Bitter_Lesson/","text":"Bitter Lesson \u00b6 author: Rich Sutton date: March 13, 2019 source: http://www.incompleteideas.net/IncIdeas/BitterLesson.html 70 \u5e74\u306b\u53ca\u3076 AI \u306e\u7814\u7a76\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u6700\u5927\u306e\u6559\u8a13\u306f, \u4e00\u822c\u7684\u306a\u65b9\u6cd5\u304c\u6700\u7d42\u7684\u306b\u306f\u6700\u3082\u52b9\u679c\u7684\u3067\u3042\u308a, \u5927\u304d\u306a\u5dee\u304c\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308b\u3002 \u3053\u306e\u6700\u7d42\u7684\u306a\u7406\u7531\u306f\u30e0\u30fc\u30a2\u306e\u6cd5\u5247, \u3042\u308b\u3044\u306f\u3080\u3057\u308d\u8a08\u7b97\u5358\u4f4d\u3042\u305f\u308a\u306e\u7d99\u7d9a\u7684\u306b\u6307\u6570\u95a2\u6570\u7684\u306b\u6e1b\u5c11\u3059\u308b\u30b3\u30b9\u30c8\u306e\u4e00\u822c\u5316\u3067\u3042\u308b\u3002 \u307b\u3068\u3093\u3069\u306e AI \u7814\u7a76\u306f, \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u5229\u7528\u53ef\u80fd\u306a\u8a08\u7b97\u304c\u4e00\u5b9a\u3067\u3042\u308b\u5834\u5408\u5fc5\u7136\u7684\u306b\u5229\u7528\u53ef\u80fd\u306b\u3067\u3042\u308b\uff08\u3053\u306e\u5834\u5408, \u4eba\u9593\u306e\u77e5\u8b58\u3092\u6d3b\u7528\u3059\u308b\u3053\u3068\u304c\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u552f\u4e00\u306e\u65b9\u6cd5\u3067\u3042\u308b\uff09\u3002 \u77ed\u671f\u9593\u3067\u9055\u3044\u3092\u751f\u307f\u51fa\u3059\u6539\u5584\u3092\u6c42\u3081\u3066, \u7814\u7a76\u8005\u306f\u30c9\u30e1\u30a4\u30f3\u306b\u95a2\u3059\u308b\u5f7c\u3089\u306e\u4eba\u9593\u306e\u77e5\u8b58\u3092\u6d3b\u7528\u3057\u3088\u3046\u3068\u3057\u3066\u304d\u305f\u304c, \u9577\u671f\u7684\u306b\u91cd\u8981\u306a\u3053\u3068\u306f\u8a08\u7b97\u306e\u6d3b\u7528\u3067\u3042\u308b\u3002 \u3053\u308c\u3089 2 \u3064\u306f\u4e92\u3044\u306b\u62ee\u6297\uff0c\u77db\u76fe\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u304c, \u5b9f\u969b\u306b\u306f\u50be\u5411\u304c\u3042\u308b\u3002 \u4e00\u65b9\u306b\u8cbb\u3084\u3055\u308c\u305f\u6642\u9593\u306f\u4ed6\u65b9\u306b\u8cbb\u3084\u3055\u308c\u305f\u6642\u9593\u3067\u306f\u306a\u3044\u3002 \u3069\u3061\u3089\u304b\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306b\u6295\u8cc7\u3059\u308b\u3068\u3044\u3046\u5fc3\u7406\u7684\u306a\u30b3\u30df\u30c3\u30c8\u30e1\u30f3\u30c8\u304c\u3042\u308b\u3002 \u305d\u3057\u3066, \u4eba\u9593\u306e\u77e5\u8b58\u3092\u6d3b\u7528\u3059\u308b\u30a2\u30d7\u30ed\u30fc\u30c1\u306f, \u8a08\u7b97\u3092\u5229\u7528\u4e00\u822c\u7684\u306a\u65b9\u6cd5\u3092\u7528\u3044\u308b\u3053\u3068\u306b\u305d\u308c\u3089\u304c\u3042\u307e\u308a\u9069\u3055\u306a\u304f\u306a\u308b\u3088\u3046\u306a\u65b9\u6cd5\u3067\uff0c\u624b\u6cd5\u3092\u8907\u96d1\u306b\u3059\u308b\u50be\u5411\u304c\u3042\u308b\u3002 AI \u306e\u7814\u7a76\u8005\u306b\u3088\u308b\u3053\u306e\u82e6\u3044\u30ec\u30c3\u30b9\u30f3 \u30fc \u5b66\u7fd2\u306e\u9045\u308c\u304c\u591a\u304f\u306e\u4f8b\u3067\u307f\u3089\u308c\u305f\u3002 \u305d\u3057\u3066\u305d\u308c\u306f\u6700\u3082\u8457\u540d\u306a\u3082\u306e\u306e\u3044\u304f\u3064\u304b\u3092\u30ec\u30d3\u30e5\u30fc\u3059\u308b\u3053\u3068\u306f\u6709\u76ca\u3067\u3042\u308d\u3046\u3002 \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30c1\u30a7\u30b9\u3067\u306f, 1997\u5e74\u306b\u4e16\u754c\u30c1\u30e3\u30f3\u30d4\u30aa\u30f3\u306e\u30ab\u30b9\u30d1\u30ed\u30d5\u3092\u7834\u3063\u305f\u65b9\u6cd5\u306f, \u5927\u898f\u6a21\u304b\u3064\u6df1\u6df5\u306a\u63a2\u7d22\u306b\u57fa\u3065\u3044\u3066\u3044\u305f\u3002 \u5f53\u6642, \u30c1\u30a7\u30b9\u306e\u7279\u6b8a\u306a\u69cb\u9020\u3092\u4eba\u9593\u304c\u7406\u89e3\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u305f\u65b9\u6cd5\u3092\u8ffd\u6c42\u3057\u3066\u3044\u305f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30c1\u30a7\u30b9\u7814\u7a76\u8005\u306e\u5927\u534a\u306f, \u3053\u306e\u65b9\u6cd5\u3092\u8efd\u8511\u306e\u76ee\u3067\u898b\u3066\u3044\u305f\u3002 \u7279\u6b8a\u306a\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3068\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u4f7f\u3063\u305f\u3088\u308a\u30b7\u30f3\u30d7\u30eb\u306a\u691c\u7d22\u30d9\u30fc\u30b9\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306e\u65b9\u304c\u306f\u308b\u304b\u306b\u52b9\u679c\u7684\u3067\u3042\u308b\u3053\u3068\u304c\u8a3c\u660e\u3055\u308c\u305f\u969b\u306f, \u5f7c\u3089\u4eba\u9593\u306e\u77e5\u8b58\u306b\u57fa\u3065\u3044\u305f\u30c1\u30a7\u30b9\u7814\u7a76\u8005\u305f\u3061\u306f, \u6557\u8005\u3067\u306f\u306a\u304b\u3063\u305f\u3002 \u5f7c\u3089\u306f, \u4eca\u56de\u306f\u300c\u529b\u307e\u304b\u305b\u306e\u300d\u63a2\u7d22\u304c\u52dd\u3063\u305f\u304b\u3082\u3057\u308c\u306a\u3044\u304c, \u305d\u308c\u306f\u4e00\u822c\u7684\u306a\u6226\u7565\u3067\u306f\u306a\u3044\u3002 \u7b2c\u4e00\u4eba\u9593\u304c\u30c1\u30a7\u30b9\u3092\u3059\u308b\u65b9\u6cd5\u3067\u306f\u306a\u3044\u3068\u8a00\u3063\u3066\u3044\u305f\u3002 \u3053\u306e\u7814\u7a76\u8005\u305f\u3061\u306f, \u4eba\u9593\u306e\u5165\u529b\u306b\u57fa\u3065\u3044\u305f\u65b9\u6cd5\u3067\u52dd\u3064\u3053\u3068\u3092\u671b\u3093\u3067\u3044\u307e\u3057\u305f\u3002 \u3060\u304c, \u305d\u308c\u304c\u4e0d\u53ef\u80fd\u3067\u3042\u3063\u305f\u305f\u3081\u843d\u80c6\u3057\u305f\u3002 \u540c\u69d8\u306e\u30d1\u30bf\u30fc\u30f3\u306e\u7814\u7a76\u306e\u9032\u6b69\u304c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u56f2\u7881\u3067\u3082\u898b\u3089\u308c\u305f\u3002 \u3055\u3089\u306b 20 \u5e74\u9045\u308c\u3067\u3042\u3063\u305f\u3060\u3051\u3067\u3042\u308b\u3002 \u4eba\u9593\u306e\u77e5\u8b58\u3084\u30b2\u30fc\u30e0\u306e\u7279\u5225\u306a\u6a5f\u80fd\u3092\u5229\u7528\u3057\u3066\u691c\u7d22\u3092\u56de\u907f\u3059\u308b\u3053\u3068\u306b\u591a\u5927\u306a\u521d\u671f\u306e\u52aa\u529b\u304c\u6255\u308f\u308c\u305f\u3002 \u99c4\u83d3\u5b50\u83d3\u5b50, \u3044\u3063\u305f\u3093\u5927\u898f\u6a21\u691c\u7d22\u304c\u52b9\u679c\u7684\u306b\u9069\u7528\u3055\u308c\u308b\u3068, \u3059\u3079\u3066\u306e\u52aa\u529b\u306f\u7121\u610f\u5473\u306a, \u307e\u305f\u306f\u3055\u3089\u306b\u60aa\u3044\u3053\u3068\u304c\u5224\u660e\u3057\u305f\u3002 1997 \u5e74\u306e\u4e16\u754c\u30c1\u30e3\u30f3\u30d4\u30aa\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f, \u5b66\u7fd2\u306f\u5927\u304d\u306a\u5f79\u5272\u3092\u679c\u305f\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u304c, \u4ed6\u306e\u591a\u304f\u306e\u30b2\u30fc\u30e0\u3084\u30c1\u30a7\u30b9\u306e\u3088\u3046\u306b, \u4fa1\u5024\u89b3\u3092\u5b66\u7fd2\u3059\u308b\u305f\u3081\u306e\u30bb\u30eb\u30d5\u30d7\u30ec\u30a4\u306b\u3088\u308b\u5b66\u7fd2\u306e\u4f7f\u7528\u3082\u91cd\u8981\u3067\u3042\u3063\u305f\u3002 \u30bb\u30eb\u30d5\u30d7\u30ec\u30a4\u306b\u3088\u308b\u5b66\u7fd2\u3084\u4e00\u822c\u7684\u306a\u5b66\u7fd2\u306f, \u5927\u91cf\u306e\u8a08\u7b97\u3092\u53ef\u80fd\u306b\u3059\u308b\u3068\u3044\u3046\u70b9\u3067\u691c\u7d22\u306b\u985e\u4f3c\u3059\u308b\u3002 \u691c\u7d22\u3068\u5b66\u7fd2\u306f, AI \u7814\u7a76\u3067\u5927\u91cf\u306e\u8a08\u7b97\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306e 2 \u3064\u306e\u6700\u3082\u91cd\u8981\u306a\u30af\u30e9\u30b9\u306e\u6280\u6cd5\u3067\u3042\u308b\u3002 \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u56f2\u7881\u3067\u306f, \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30c1\u30a7\u30b9\u3068\u540c\u69d8\u306b, \u7814\u7a76\u8005\u306e\u6700\u521d\u306e\u52aa\u529b\u306f\u4eba\u9593\u306e\u7406\u89e3\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u5411\u3051\u3089\u308c\uff08\u691c\u7d22\u304c\u5c11\u306a\u304f\u3066\u6e08\u3080\u3088\u3046\u306b\uff09, \u305d\u3057\u3066\u691c\u7d22\u3068\u5b66\u7fd2\u3092\u53d6\u308a\u5165\u308c\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u6210\u529f\u3057\u305f\u306e\u306f\u5f8c\u306b\u306a\u3063\u305f\u3002 \u97f3\u58f0\u8a8d\u8b58\u3067\u306f, 1970 \u5e74\u4ee3\u306b DARPA \u304c\u5f8c\u63f4\u3059\u308b\u521d\u671f\u306e\u7af6\u6280\u4f1a\u304c\u3042\u3063\u305f\u3002 \u53c2\u52a0\u8005\u306b\u306f, \u4eba\u306e\u77e5\u8b58, \u5358\u8a9e, \u97f3\u7d20, \u4eba\u306e\u58f0\u9053\u306a\u3069\u306e\u77e5\u8b58\u3092\u5229\u7528\u3057\u305f\u591a\u6570\u306e\u7279\u5225\u306a\u65b9\u6cd5\u304c\u542b\u307e\u308c\u3066\u3044\u305f\u3002 \u53cd\u5bfe\u306b, \u96a0\u308c\u30de\u30eb\u30b3\u30d5\u30e2\u30c7\u30eb\uff08HMM\uff09\u306b\u57fa\u3065\u304f\uff0c\u3088\u308a\u7d71\u8a08\u7684\u3067\u3088\u308a\u8a08\u7b97\u91cf\u304c\u591a\u3044\u65b0\u3057\u3044\u65b9\u6cd5\u304c\u3042\u3063\u305f\u3002 \u3084\u306f\u308a, \u7d71\u8a08\u7684\u65b9\u6cd5\u306f\u4eba\u9593\u306e\u77e5\u8b58\u306b\u57fa\u3065\u304f\u65b9\u6cd5\u3088\u308a\u52dd\u3063\u305f\u3002 \u3053\u308c\u306f, \u7d71\u8a08\u3068\u8a08\u7b97\u304c\u3053\u306e\u5206\u91ce\u3092\u652f\u914d\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u305f, \u4f55\u5341\u5e74\u306b\u3082\u308f\u305f\u3063\u3066\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u3059\u3079\u3066\u306b\u5927\u304d\u306a\u5909\u5316\u3092\u3082\u305f\u3089\u3057\u305f\u3002 \u97f3\u58f0\u8a8d\u8b58\u306b\u304a\u3051\u308b\u6df1\u3044\u5b66\u7fd2\u306e\u6700\u8fd1\u306e\u53f0\u982d\u306f, \u3053\u306e\u4e00\u8cab\u3057\u305f\u65b9\u5411\u3078\u306e\u6700\u3082\u6700\u8fd1\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u3042\u308b\u3002 \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306f\u4eba\u9593\u306e\u77e5\u8b58\u306b\u983c\u308b\u3053\u3068\u304c\u3055\u3089\u306b\u5c11\u306a\u304f, \u5de8\u5927\u306a\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30bb\u30c3\u30c8\u3067\u306e\u5b66\u7fd2\u3068\u4e00\u7dd2\u306b\u3055\u3089\u306b\u591a\u304f\u306e\u8a08\u7b97\u3092\u4f7f\u7528\u3057\u3066, \u5287\u7684\u306b\u512a\u308c\u305f\u97f3\u58f0\u8a8d\u8b58\u30b7\u30b9\u30c6\u30e0\u3092\u751f\u307f\u51fa\u3059\u3002 \u30b2\u30fc\u30e0\u306e\u3088\u3046\u306b, \u7814\u7a76\u8005\u306f\u5e38\u306b\u7814\u7a76\u8005\u304c\u81ea\u5206\u306e\u982d\u8133\u304c\u50cd\u3044\u305f\u3068\u601d\u3046\u3088\u3046\u306b\u50cd\u304f\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308d\u3046\u3068\u3057\u305f \u30fc \u5f7c\u3089\u306f\u5f7c\u3089\u306e\u30b7\u30b9\u30c6\u30e0\u306b\u305d\u306e\u77e5\u8b58\u3092\u5165\u308c\u3088\u3046\u3068\u3057\u305f \u30fc \u3057\u304b\u3057\u305d\u308c\u306f\u7d50\u5c40\u9006\u52b9\u679c\u3067, \u30e0\u30fc\u30a2\u306e\u6cd5\u5247\u306b\u3088\u3063\u3066\u5927\u898f\u6a21\u306a\u8a08\u7b97\u304c\u53ef\u80fd\u306b\u306a\u308a, \u305d\u308c\u3092\u6709\u52b9\u306b\u5229\u7528\u3059\u308b\u305f\u3081\u306e\u624b\u6bb5\u304c\u898b\u3064\u304b\u3063\u305f\u3068\u304d \u7814\u7a76\u8005\u306e\u6642\u9593\u306e\u5de8\u5927\u306a\u7121\u99c4\u3092\u8a3c\u660e\u3057\u305f\u3002 \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d3\u30b8\u30e7\u30f3\u3067\u3082, \u4f3c\u305f\u3088\u3046\u306a\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u308b\u3002 \u521d\u671f\u306e\u65b9\u6cd5\u306f, \u30a8\u30c3\u30b8, \u307e\u305f\u306f\u4e00\u822c\u5316\u5186\u67f1\u3092\u63a2\u7d22\u3059\u308b\u3053\u3068\u3068\u3057\u3066, \u307e\u305f\u306f SIFT \u7279\u5fb4\u306e\u89b3\u70b9\u304b\u3089\u30d3\u30b8\u30e7\u30f3\u3092\u8003\u3048\u51fa\u3057\u305f\u3002 \u3057\u304b\u3057, \u4eca\u65e5\u3067\u306f\u3053\u308c\u3089\u3059\u3079\u3066\u304c\u6368\u3066\u3089\u308c\u3066\u3044\u308b\u3002 \u73fe\u4ee3\u306e\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f, \u7573\u307f\u8fbc\u307f\u3068\u3042\u308b\u7a2e\u306e\u4e0d\u5909\u6027\u306e\u6982\u5ff5\u306e\u307f\u3092\u4f7f\u7528\u3057, \u306f\u308b\u304b\u306b\u512a\u308c\u305f\u6027\u80fd\u3092\u767a\u63ee\u3059\u308b\u3002 \u3053\u308c\u306f\u5927\u304d\u306a\u6559\u8a13\u3067\u3042\u308b\u3002 \u5206\u91ce\u3068\u3057\u3066, \u540c\u3058\u3088\u3046\u306a\u904e\u3061\u7e70\u308a\u8fd4\u3057\u3066\u3044\u308b\u6211\u3005\u306f, \u3044\u307e\u3060\u305d\u306e\u8aa4\u308a\u3092\u5fb9\u5e95\u3057\u3066\u5b66\u3093\u3067\u3044\u306a\u3044\u3002 \u3053\u308c\u306b\u9451\u307f, \u52b9\u679c\u7684\u306b\u62b5\u6297\u3059\u308b\u306b\u306f, \u3053\u306e\u904e\u3061\u306e\u9b45\u529b\u3092\u7406\u89e3\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002 \u6211\u3005\u306f, \u81ea\u5206\u306e\u8003\u3048\u3092\u3069\u3046\u3084\u3063\u3066\u69cb\u7bc9\u3057\u3066\u3082\u9577\u671f\u7684\u306b\u306f\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3068\u3044\u3046\u82e6\u3044\u6559\u8a13\u3092\u5b66\u3070\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002 \u3053\u306e\u82e6\u3044\u6559\u8a13\u306f, 1. AI\u7814\u7a76\u8005\u306f\u3057\u3070\u3057\u3070\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306b\u77e5\u8b58\u3092\u7d44\u307f\u8fbc\u3080\u3053\u3068\u3092\u8a66\u307f\u3066\u304d\u305f, 2. \u3053\u308c\u306f\u77ed\u671f\u7684\u306b\u306f\u5e38\u306b\u5f79\u7acb\u3061, \u7814\u7a76\u8005\u306b\u3068\u3063\u3066\u306f\u500b\u4eba\u7684\u306b\u306f\u6e80\u8db3\u3067\u304d\u308b\u304c, 3. \u9577\u671f\u7684\u306b\u306f\u505c\u6ede\u3057, \u3055\u3089\u306a\u308b\u9032\u6b69\u3092\u963b\u5bb3\u3059\u308b\u3053\u3068\u3055\u3048\u3042\u308b, 4. \u6700\u7d42\u7684\u306b\u306f, \u691c\u7d22\u3068\u5b66\u7fd2\u306b\u3088\u308b\u8a08\u7b97\u306e\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306b\u57fa\u3065\u304f\u53cd\u5bfe\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306b\u3088\u3063\u3066\u753b\u671f\u7684\u306a\u9032\u6b69\u304c\u3082\u305f\u3089\u3055\u308c\u308b, \u3068\u3044\u3046\u6b74\u53f2\u7684\u306a\u89b3\u5bdf\u306b\u57fa\u3065\u3044\u3066\u3044\u308b\u3002 \u6700\u7d42\u7684\u306a\u6210\u529f\u306f, \u597d\u307e\u3057\u3044\u4eba\u9593\u4e2d\u5fc3\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306b\u5bfe\u3059\u308b\u6210\u529f\u3067\u3042\u308b\u305f\u3081, \u82e6\u5473\u3092\u5e2f\u3073\u3066\u304a\u308a, \u3057\u3070\u3057\u3070\u4e0d\u5b8c\u5168\u306b\u6d88\u5316\u3055\u308c\u3066\u3057\u307e\u3046\u3002 \u82e6\u3044\u6559\u8a13\u304b\u3089\u5b66\u3070\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u306e 1 \u3064\u306f, \u5229\u7528\u53ef\u80fd\u306a\u8a08\u7b97\u304c\u975e\u5e38\u306b\u5927\u304d\u304f\u306a\u3063\u3066\u3082\u8a08\u7b97\u91cf\u306e\u5897\u52a0\u306b\u5fdc\u3058\u3066\u62e1\u5927\u3057\u7d9a\u3051\u308b\u624b\u6cd5, \u6c4e\u7528\u624b\u6cd5\u306e\u5927\u304d\u306a\u529b\u3067\u3042\u308b\u3002 \u3053\u306e\u3088\u3046\u306b\u4efb\u610f\u306b\u62e1\u5927\u7e2e\u5c0f\u3067\u304d\u308b\u3068\u601d\u308f\u308c\u308b 2 \u3064\u306e\u65b9\u6cd5\u306f, \u691c\u7d22\u3068\u5b66\u7fd2\u3067\u3042\u308b\u3002 \u82e6\u3044\u6559\u8a13\u304b\u3089\u5b66\u3076\u3079\u304d 2 \u3064\u76ee\u306e\u4e00\u822c\u7684\u306a\u70b9\u306f, \u5fc3\u306e\u5b9f\u969b\u306e\u5185\u5bb9\u306f\u9014\u65b9\u3082\u306a\u304f, \u53d6\u308a\u8fd4\u3057\u306e\u3064\u304b\u306a\u3044\u307b\u3069\u8907\u96d1\u3067\u3042\u308b\u3053\u3068\u3067\u3042\u308b\u3002 \u6211\u3005\u306f, \u7a7a\u9593, \u7269, \u8907\u6570\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8, \u5bfe\u79f0\u6027\u306b\u3064\u3044\u3066\u8003\u3048\u308b\u7c21\u5358\u306a\u65b9\u6cd5\u306a\u3069, \u5fc3\u306e\u5185\u5bb9\u306b\u3064\u3044\u3066\u8003\u3048\u308b\u7c21\u5358\u306a\u65b9\u6cd5\u3092\u63a2\u3059\u306e\u3092\u3084\u3081\u308b\u3079\u304d\u3067\u306f\u306a\u3044\u3002 \u3053\u308c\u3089\u3059\u3079\u3066\u306f, \u6063\u610f\u7684\u3067\u672c\u8cea\u7684\u306b\u8907\u96d1\u306a\u5916\u754c\u306e\u4e00\u90e8\u3067\u3042\u308b\u3002 \u305d\u308c\u3089\u306e\u8907\u96d1\u3055\u306f\u969b\u9650\u306a\u304f\u7d9a\u304f\u306e\u3067, \u305d\u308c\u3089\u306f\u7d44\u307f\u8fbc\u307e\u308c\u308b\u3079\u304d\u3082\u306e\u3067\u306f\u306a\u3044\u3002 \u4ee3\u308f\u308a\u306b, \u3053\u306e\u4efb\u610f\u306e\u8907\u96d1\u3055\u3092\u898b\u3064\u3051\u3066\u6349\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30e1\u30bf\u624b\u6cd5\u306e\u307f\u3092\u7d44\u307f\u8fbc\u3080\u3079\u304d\u3067\u3042\u308b\u3002 \u3053\u308c\u3089\u306e\u65b9\u6cd5\u306b\u6b20\u304b\u305b\u306a\u3044\u306e\u306f, \u305d\u308c\u3089\u304c\u826f\u3044\u8fd1\u4f3c\u5024\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u3067\u3042\u308b\u3002 \u305d\u306e\u63a2\u7d22\u306f\u6211\u3005\u306b\u3088\u308b\u3082\u306e\u3067\u306f\u306a\u304f\u6211\u3005\u306e\u65b9\u6cd5\u306b\u3088\u308b\u3082\u306e\u3067\u3042\u308b\u3079\u304d\u3067\u3042\u308b\u3002 \u6211\u3005\u306f, \u79c1\u305f\u3061\u304c\u767a\u898b\u3057\u305f\u3082\u306e\u3092\u542b\u307e\u306a\u3044, \u79c1\u305f\u3061\u304c\u3067\u304d\u308b\u9650\u308a\u767a\u898b\u3067\u304d\u308b AI \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u6b32\u3057\u3044\u306e\u3067\u3042\u308b\u3002 \u6211\u3005\u306e\u767a\u898b\u306b\u53d6\u308a\u8fbc\u3080\u3053\u3068\u306f, \u767a\u898b\u30d7\u30ed\u30bb\u30b9\u304c\u3069\u306e\u3088\u3046\u306b\u884c\u308f\u308c\u308b\u3053\u3068\u53ef\u80fd\u304b\u3092\u767a\u898b\u3059\u308b\u3053\u3068\u3092\u96e3\u3057\u304f\u3059\u308b\u3060\u3051\u3067\u3042\u308b\u3002","title":"Bitter Lesson"},{"location":"2019Sutton_Bitter_Lesson/#bitter-lesson","text":"author: Rich Sutton date: March 13, 2019 source: http://www.incompleteideas.net/IncIdeas/BitterLesson.html 70 \u5e74\u306b\u53ca\u3076 AI \u306e\u7814\u7a76\u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u6700\u5927\u306e\u6559\u8a13\u306f, \u4e00\u822c\u7684\u306a\u65b9\u6cd5\u304c\u6700\u7d42\u7684\u306b\u306f\u6700\u3082\u52b9\u679c\u7684\u3067\u3042\u308a, \u5927\u304d\u306a\u5dee\u304c\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308b\u3002 \u3053\u306e\u6700\u7d42\u7684\u306a\u7406\u7531\u306f\u30e0\u30fc\u30a2\u306e\u6cd5\u5247, \u3042\u308b\u3044\u306f\u3080\u3057\u308d\u8a08\u7b97\u5358\u4f4d\u3042\u305f\u308a\u306e\u7d99\u7d9a\u7684\u306b\u6307\u6570\u95a2\u6570\u7684\u306b\u6e1b\u5c11\u3059\u308b\u30b3\u30b9\u30c8\u306e\u4e00\u822c\u5316\u3067\u3042\u308b\u3002 \u307b\u3068\u3093\u3069\u306e AI \u7814\u7a76\u306f, \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u5229\u7528\u53ef\u80fd\u306a\u8a08\u7b97\u304c\u4e00\u5b9a\u3067\u3042\u308b\u5834\u5408\u5fc5\u7136\u7684\u306b\u5229\u7528\u53ef\u80fd\u306b\u3067\u3042\u308b\uff08\u3053\u306e\u5834\u5408, \u4eba\u9593\u306e\u77e5\u8b58\u3092\u6d3b\u7528\u3059\u308b\u3053\u3068\u304c\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u552f\u4e00\u306e\u65b9\u6cd5\u3067\u3042\u308b\uff09\u3002 \u77ed\u671f\u9593\u3067\u9055\u3044\u3092\u751f\u307f\u51fa\u3059\u6539\u5584\u3092\u6c42\u3081\u3066, \u7814\u7a76\u8005\u306f\u30c9\u30e1\u30a4\u30f3\u306b\u95a2\u3059\u308b\u5f7c\u3089\u306e\u4eba\u9593\u306e\u77e5\u8b58\u3092\u6d3b\u7528\u3057\u3088\u3046\u3068\u3057\u3066\u304d\u305f\u304c, \u9577\u671f\u7684\u306b\u91cd\u8981\u306a\u3053\u3068\u306f\u8a08\u7b97\u306e\u6d3b\u7528\u3067\u3042\u308b\u3002 \u3053\u308c\u3089 2 \u3064\u306f\u4e92\u3044\u306b\u62ee\u6297\uff0c\u77db\u76fe\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u304c, \u5b9f\u969b\u306b\u306f\u50be\u5411\u304c\u3042\u308b\u3002 \u4e00\u65b9\u306b\u8cbb\u3084\u3055\u308c\u305f\u6642\u9593\u306f\u4ed6\u65b9\u306b\u8cbb\u3084\u3055\u308c\u305f\u6642\u9593\u3067\u306f\u306a\u3044\u3002 \u3069\u3061\u3089\u304b\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306b\u6295\u8cc7\u3059\u308b\u3068\u3044\u3046\u5fc3\u7406\u7684\u306a\u30b3\u30df\u30c3\u30c8\u30e1\u30f3\u30c8\u304c\u3042\u308b\u3002 \u305d\u3057\u3066, \u4eba\u9593\u306e\u77e5\u8b58\u3092\u6d3b\u7528\u3059\u308b\u30a2\u30d7\u30ed\u30fc\u30c1\u306f, \u8a08\u7b97\u3092\u5229\u7528\u4e00\u822c\u7684\u306a\u65b9\u6cd5\u3092\u7528\u3044\u308b\u3053\u3068\u306b\u305d\u308c\u3089\u304c\u3042\u307e\u308a\u9069\u3055\u306a\u304f\u306a\u308b\u3088\u3046\u306a\u65b9\u6cd5\u3067\uff0c\u624b\u6cd5\u3092\u8907\u96d1\u306b\u3059\u308b\u50be\u5411\u304c\u3042\u308b\u3002 AI \u306e\u7814\u7a76\u8005\u306b\u3088\u308b\u3053\u306e\u82e6\u3044\u30ec\u30c3\u30b9\u30f3 \u30fc \u5b66\u7fd2\u306e\u9045\u308c\u304c\u591a\u304f\u306e\u4f8b\u3067\u307f\u3089\u308c\u305f\u3002 \u305d\u3057\u3066\u305d\u308c\u306f\u6700\u3082\u8457\u540d\u306a\u3082\u306e\u306e\u3044\u304f\u3064\u304b\u3092\u30ec\u30d3\u30e5\u30fc\u3059\u308b\u3053\u3068\u306f\u6709\u76ca\u3067\u3042\u308d\u3046\u3002 \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30c1\u30a7\u30b9\u3067\u306f, 1997\u5e74\u306b\u4e16\u754c\u30c1\u30e3\u30f3\u30d4\u30aa\u30f3\u306e\u30ab\u30b9\u30d1\u30ed\u30d5\u3092\u7834\u3063\u305f\u65b9\u6cd5\u306f, \u5927\u898f\u6a21\u304b\u3064\u6df1\u6df5\u306a\u63a2\u7d22\u306b\u57fa\u3065\u3044\u3066\u3044\u305f\u3002 \u5f53\u6642, \u30c1\u30a7\u30b9\u306e\u7279\u6b8a\u306a\u69cb\u9020\u3092\u4eba\u9593\u304c\u7406\u89e3\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u305f\u65b9\u6cd5\u3092\u8ffd\u6c42\u3057\u3066\u3044\u305f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30c1\u30a7\u30b9\u7814\u7a76\u8005\u306e\u5927\u534a\u306f, \u3053\u306e\u65b9\u6cd5\u3092\u8efd\u8511\u306e\u76ee\u3067\u898b\u3066\u3044\u305f\u3002 \u7279\u6b8a\u306a\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3068\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u4f7f\u3063\u305f\u3088\u308a\u30b7\u30f3\u30d7\u30eb\u306a\u691c\u7d22\u30d9\u30fc\u30b9\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306e\u65b9\u304c\u306f\u308b\u304b\u306b\u52b9\u679c\u7684\u3067\u3042\u308b\u3053\u3068\u304c\u8a3c\u660e\u3055\u308c\u305f\u969b\u306f, \u5f7c\u3089\u4eba\u9593\u306e\u77e5\u8b58\u306b\u57fa\u3065\u3044\u305f\u30c1\u30a7\u30b9\u7814\u7a76\u8005\u305f\u3061\u306f, \u6557\u8005\u3067\u306f\u306a\u304b\u3063\u305f\u3002 \u5f7c\u3089\u306f, \u4eca\u56de\u306f\u300c\u529b\u307e\u304b\u305b\u306e\u300d\u63a2\u7d22\u304c\u52dd\u3063\u305f\u304b\u3082\u3057\u308c\u306a\u3044\u304c, \u305d\u308c\u306f\u4e00\u822c\u7684\u306a\u6226\u7565\u3067\u306f\u306a\u3044\u3002 \u7b2c\u4e00\u4eba\u9593\u304c\u30c1\u30a7\u30b9\u3092\u3059\u308b\u65b9\u6cd5\u3067\u306f\u306a\u3044\u3068\u8a00\u3063\u3066\u3044\u305f\u3002 \u3053\u306e\u7814\u7a76\u8005\u305f\u3061\u306f, \u4eba\u9593\u306e\u5165\u529b\u306b\u57fa\u3065\u3044\u305f\u65b9\u6cd5\u3067\u52dd\u3064\u3053\u3068\u3092\u671b\u3093\u3067\u3044\u307e\u3057\u305f\u3002 \u3060\u304c, \u305d\u308c\u304c\u4e0d\u53ef\u80fd\u3067\u3042\u3063\u305f\u305f\u3081\u843d\u80c6\u3057\u305f\u3002 \u540c\u69d8\u306e\u30d1\u30bf\u30fc\u30f3\u306e\u7814\u7a76\u306e\u9032\u6b69\u304c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u56f2\u7881\u3067\u3082\u898b\u3089\u308c\u305f\u3002 \u3055\u3089\u306b 20 \u5e74\u9045\u308c\u3067\u3042\u3063\u305f\u3060\u3051\u3067\u3042\u308b\u3002 \u4eba\u9593\u306e\u77e5\u8b58\u3084\u30b2\u30fc\u30e0\u306e\u7279\u5225\u306a\u6a5f\u80fd\u3092\u5229\u7528\u3057\u3066\u691c\u7d22\u3092\u56de\u907f\u3059\u308b\u3053\u3068\u306b\u591a\u5927\u306a\u521d\u671f\u306e\u52aa\u529b\u304c\u6255\u308f\u308c\u305f\u3002 \u99c4\u83d3\u5b50\u83d3\u5b50, \u3044\u3063\u305f\u3093\u5927\u898f\u6a21\u691c\u7d22\u304c\u52b9\u679c\u7684\u306b\u9069\u7528\u3055\u308c\u308b\u3068, \u3059\u3079\u3066\u306e\u52aa\u529b\u306f\u7121\u610f\u5473\u306a, \u307e\u305f\u306f\u3055\u3089\u306b\u60aa\u3044\u3053\u3068\u304c\u5224\u660e\u3057\u305f\u3002 1997 \u5e74\u306e\u4e16\u754c\u30c1\u30e3\u30f3\u30d4\u30aa\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f, \u5b66\u7fd2\u306f\u5927\u304d\u306a\u5f79\u5272\u3092\u679c\u305f\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u304c, \u4ed6\u306e\u591a\u304f\u306e\u30b2\u30fc\u30e0\u3084\u30c1\u30a7\u30b9\u306e\u3088\u3046\u306b, \u4fa1\u5024\u89b3\u3092\u5b66\u7fd2\u3059\u308b\u305f\u3081\u306e\u30bb\u30eb\u30d5\u30d7\u30ec\u30a4\u306b\u3088\u308b\u5b66\u7fd2\u306e\u4f7f\u7528\u3082\u91cd\u8981\u3067\u3042\u3063\u305f\u3002 \u30bb\u30eb\u30d5\u30d7\u30ec\u30a4\u306b\u3088\u308b\u5b66\u7fd2\u3084\u4e00\u822c\u7684\u306a\u5b66\u7fd2\u306f, \u5927\u91cf\u306e\u8a08\u7b97\u3092\u53ef\u80fd\u306b\u3059\u308b\u3068\u3044\u3046\u70b9\u3067\u691c\u7d22\u306b\u985e\u4f3c\u3059\u308b\u3002 \u691c\u7d22\u3068\u5b66\u7fd2\u306f, AI \u7814\u7a76\u3067\u5927\u91cf\u306e\u8a08\u7b97\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306e 2 \u3064\u306e\u6700\u3082\u91cd\u8981\u306a\u30af\u30e9\u30b9\u306e\u6280\u6cd5\u3067\u3042\u308b\u3002 \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u56f2\u7881\u3067\u306f, \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30c1\u30a7\u30b9\u3068\u540c\u69d8\u306b, \u7814\u7a76\u8005\u306e\u6700\u521d\u306e\u52aa\u529b\u306f\u4eba\u9593\u306e\u7406\u89e3\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u5411\u3051\u3089\u308c\uff08\u691c\u7d22\u304c\u5c11\u306a\u304f\u3066\u6e08\u3080\u3088\u3046\u306b\uff09, \u305d\u3057\u3066\u691c\u7d22\u3068\u5b66\u7fd2\u3092\u53d6\u308a\u5165\u308c\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u6210\u529f\u3057\u305f\u306e\u306f\u5f8c\u306b\u306a\u3063\u305f\u3002 \u97f3\u58f0\u8a8d\u8b58\u3067\u306f, 1970 \u5e74\u4ee3\u306b DARPA \u304c\u5f8c\u63f4\u3059\u308b\u521d\u671f\u306e\u7af6\u6280\u4f1a\u304c\u3042\u3063\u305f\u3002 \u53c2\u52a0\u8005\u306b\u306f, \u4eba\u306e\u77e5\u8b58, \u5358\u8a9e, \u97f3\u7d20, \u4eba\u306e\u58f0\u9053\u306a\u3069\u306e\u77e5\u8b58\u3092\u5229\u7528\u3057\u305f\u591a\u6570\u306e\u7279\u5225\u306a\u65b9\u6cd5\u304c\u542b\u307e\u308c\u3066\u3044\u305f\u3002 \u53cd\u5bfe\u306b, \u96a0\u308c\u30de\u30eb\u30b3\u30d5\u30e2\u30c7\u30eb\uff08HMM\uff09\u306b\u57fa\u3065\u304f\uff0c\u3088\u308a\u7d71\u8a08\u7684\u3067\u3088\u308a\u8a08\u7b97\u91cf\u304c\u591a\u3044\u65b0\u3057\u3044\u65b9\u6cd5\u304c\u3042\u3063\u305f\u3002 \u3084\u306f\u308a, \u7d71\u8a08\u7684\u65b9\u6cd5\u306f\u4eba\u9593\u306e\u77e5\u8b58\u306b\u57fa\u3065\u304f\u65b9\u6cd5\u3088\u308a\u52dd\u3063\u305f\u3002 \u3053\u308c\u306f, \u7d71\u8a08\u3068\u8a08\u7b97\u304c\u3053\u306e\u5206\u91ce\u3092\u652f\u914d\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u305f, \u4f55\u5341\u5e74\u306b\u3082\u308f\u305f\u3063\u3066\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u3059\u3079\u3066\u306b\u5927\u304d\u306a\u5909\u5316\u3092\u3082\u305f\u3089\u3057\u305f\u3002 \u97f3\u58f0\u8a8d\u8b58\u306b\u304a\u3051\u308b\u6df1\u3044\u5b66\u7fd2\u306e\u6700\u8fd1\u306e\u53f0\u982d\u306f, \u3053\u306e\u4e00\u8cab\u3057\u305f\u65b9\u5411\u3078\u306e\u6700\u3082\u6700\u8fd1\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u3042\u308b\u3002 \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306f\u4eba\u9593\u306e\u77e5\u8b58\u306b\u983c\u308b\u3053\u3068\u304c\u3055\u3089\u306b\u5c11\u306a\u304f, \u5de8\u5927\u306a\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30bb\u30c3\u30c8\u3067\u306e\u5b66\u7fd2\u3068\u4e00\u7dd2\u306b\u3055\u3089\u306b\u591a\u304f\u306e\u8a08\u7b97\u3092\u4f7f\u7528\u3057\u3066, \u5287\u7684\u306b\u512a\u308c\u305f\u97f3\u58f0\u8a8d\u8b58\u30b7\u30b9\u30c6\u30e0\u3092\u751f\u307f\u51fa\u3059\u3002 \u30b2\u30fc\u30e0\u306e\u3088\u3046\u306b, \u7814\u7a76\u8005\u306f\u5e38\u306b\u7814\u7a76\u8005\u304c\u81ea\u5206\u306e\u982d\u8133\u304c\u50cd\u3044\u305f\u3068\u601d\u3046\u3088\u3046\u306b\u50cd\u304f\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308d\u3046\u3068\u3057\u305f \u30fc \u5f7c\u3089\u306f\u5f7c\u3089\u306e\u30b7\u30b9\u30c6\u30e0\u306b\u305d\u306e\u77e5\u8b58\u3092\u5165\u308c\u3088\u3046\u3068\u3057\u305f \u30fc \u3057\u304b\u3057\u305d\u308c\u306f\u7d50\u5c40\u9006\u52b9\u679c\u3067, \u30e0\u30fc\u30a2\u306e\u6cd5\u5247\u306b\u3088\u3063\u3066\u5927\u898f\u6a21\u306a\u8a08\u7b97\u304c\u53ef\u80fd\u306b\u306a\u308a, \u305d\u308c\u3092\u6709\u52b9\u306b\u5229\u7528\u3059\u308b\u305f\u3081\u306e\u624b\u6bb5\u304c\u898b\u3064\u304b\u3063\u305f\u3068\u304d \u7814\u7a76\u8005\u306e\u6642\u9593\u306e\u5de8\u5927\u306a\u7121\u99c4\u3092\u8a3c\u660e\u3057\u305f\u3002 \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d3\u30b8\u30e7\u30f3\u3067\u3082, \u4f3c\u305f\u3088\u3046\u306a\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u308b\u3002 \u521d\u671f\u306e\u65b9\u6cd5\u306f, \u30a8\u30c3\u30b8, \u307e\u305f\u306f\u4e00\u822c\u5316\u5186\u67f1\u3092\u63a2\u7d22\u3059\u308b\u3053\u3068\u3068\u3057\u3066, \u307e\u305f\u306f SIFT \u7279\u5fb4\u306e\u89b3\u70b9\u304b\u3089\u30d3\u30b8\u30e7\u30f3\u3092\u8003\u3048\u51fa\u3057\u305f\u3002 \u3057\u304b\u3057, \u4eca\u65e5\u3067\u306f\u3053\u308c\u3089\u3059\u3079\u3066\u304c\u6368\u3066\u3089\u308c\u3066\u3044\u308b\u3002 \u73fe\u4ee3\u306e\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f, \u7573\u307f\u8fbc\u307f\u3068\u3042\u308b\u7a2e\u306e\u4e0d\u5909\u6027\u306e\u6982\u5ff5\u306e\u307f\u3092\u4f7f\u7528\u3057, \u306f\u308b\u304b\u306b\u512a\u308c\u305f\u6027\u80fd\u3092\u767a\u63ee\u3059\u308b\u3002 \u3053\u308c\u306f\u5927\u304d\u306a\u6559\u8a13\u3067\u3042\u308b\u3002 \u5206\u91ce\u3068\u3057\u3066, \u540c\u3058\u3088\u3046\u306a\u904e\u3061\u7e70\u308a\u8fd4\u3057\u3066\u3044\u308b\u6211\u3005\u306f, \u3044\u307e\u3060\u305d\u306e\u8aa4\u308a\u3092\u5fb9\u5e95\u3057\u3066\u5b66\u3093\u3067\u3044\u306a\u3044\u3002 \u3053\u308c\u306b\u9451\u307f, \u52b9\u679c\u7684\u306b\u62b5\u6297\u3059\u308b\u306b\u306f, \u3053\u306e\u904e\u3061\u306e\u9b45\u529b\u3092\u7406\u89e3\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002 \u6211\u3005\u306f, \u81ea\u5206\u306e\u8003\u3048\u3092\u3069\u3046\u3084\u3063\u3066\u69cb\u7bc9\u3057\u3066\u3082\u9577\u671f\u7684\u306b\u306f\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3068\u3044\u3046\u82e6\u3044\u6559\u8a13\u3092\u5b66\u3070\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002 \u3053\u306e\u82e6\u3044\u6559\u8a13\u306f, 1. AI\u7814\u7a76\u8005\u306f\u3057\u3070\u3057\u3070\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306b\u77e5\u8b58\u3092\u7d44\u307f\u8fbc\u3080\u3053\u3068\u3092\u8a66\u307f\u3066\u304d\u305f, 2. \u3053\u308c\u306f\u77ed\u671f\u7684\u306b\u306f\u5e38\u306b\u5f79\u7acb\u3061, \u7814\u7a76\u8005\u306b\u3068\u3063\u3066\u306f\u500b\u4eba\u7684\u306b\u306f\u6e80\u8db3\u3067\u304d\u308b\u304c, 3. \u9577\u671f\u7684\u306b\u306f\u505c\u6ede\u3057, \u3055\u3089\u306a\u308b\u9032\u6b69\u3092\u963b\u5bb3\u3059\u308b\u3053\u3068\u3055\u3048\u3042\u308b, 4. \u6700\u7d42\u7684\u306b\u306f, \u691c\u7d22\u3068\u5b66\u7fd2\u306b\u3088\u308b\u8a08\u7b97\u306e\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306b\u57fa\u3065\u304f\u53cd\u5bfe\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306b\u3088\u3063\u3066\u753b\u671f\u7684\u306a\u9032\u6b69\u304c\u3082\u305f\u3089\u3055\u308c\u308b, \u3068\u3044\u3046\u6b74\u53f2\u7684\u306a\u89b3\u5bdf\u306b\u57fa\u3065\u3044\u3066\u3044\u308b\u3002 \u6700\u7d42\u7684\u306a\u6210\u529f\u306f, \u597d\u307e\u3057\u3044\u4eba\u9593\u4e2d\u5fc3\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306b\u5bfe\u3059\u308b\u6210\u529f\u3067\u3042\u308b\u305f\u3081, \u82e6\u5473\u3092\u5e2f\u3073\u3066\u304a\u308a, \u3057\u3070\u3057\u3070\u4e0d\u5b8c\u5168\u306b\u6d88\u5316\u3055\u308c\u3066\u3057\u307e\u3046\u3002 \u82e6\u3044\u6559\u8a13\u304b\u3089\u5b66\u3070\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u306e 1 \u3064\u306f, \u5229\u7528\u53ef\u80fd\u306a\u8a08\u7b97\u304c\u975e\u5e38\u306b\u5927\u304d\u304f\u306a\u3063\u3066\u3082\u8a08\u7b97\u91cf\u306e\u5897\u52a0\u306b\u5fdc\u3058\u3066\u62e1\u5927\u3057\u7d9a\u3051\u308b\u624b\u6cd5, \u6c4e\u7528\u624b\u6cd5\u306e\u5927\u304d\u306a\u529b\u3067\u3042\u308b\u3002 \u3053\u306e\u3088\u3046\u306b\u4efb\u610f\u306b\u62e1\u5927\u7e2e\u5c0f\u3067\u304d\u308b\u3068\u601d\u308f\u308c\u308b 2 \u3064\u306e\u65b9\u6cd5\u306f, \u691c\u7d22\u3068\u5b66\u7fd2\u3067\u3042\u308b\u3002 \u82e6\u3044\u6559\u8a13\u304b\u3089\u5b66\u3076\u3079\u304d 2 \u3064\u76ee\u306e\u4e00\u822c\u7684\u306a\u70b9\u306f, \u5fc3\u306e\u5b9f\u969b\u306e\u5185\u5bb9\u306f\u9014\u65b9\u3082\u306a\u304f, \u53d6\u308a\u8fd4\u3057\u306e\u3064\u304b\u306a\u3044\u307b\u3069\u8907\u96d1\u3067\u3042\u308b\u3053\u3068\u3067\u3042\u308b\u3002 \u6211\u3005\u306f, \u7a7a\u9593, \u7269, \u8907\u6570\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8, \u5bfe\u79f0\u6027\u306b\u3064\u3044\u3066\u8003\u3048\u308b\u7c21\u5358\u306a\u65b9\u6cd5\u306a\u3069, \u5fc3\u306e\u5185\u5bb9\u306b\u3064\u3044\u3066\u8003\u3048\u308b\u7c21\u5358\u306a\u65b9\u6cd5\u3092\u63a2\u3059\u306e\u3092\u3084\u3081\u308b\u3079\u304d\u3067\u306f\u306a\u3044\u3002 \u3053\u308c\u3089\u3059\u3079\u3066\u306f, \u6063\u610f\u7684\u3067\u672c\u8cea\u7684\u306b\u8907\u96d1\u306a\u5916\u754c\u306e\u4e00\u90e8\u3067\u3042\u308b\u3002 \u305d\u308c\u3089\u306e\u8907\u96d1\u3055\u306f\u969b\u9650\u306a\u304f\u7d9a\u304f\u306e\u3067, \u305d\u308c\u3089\u306f\u7d44\u307f\u8fbc\u307e\u308c\u308b\u3079\u304d\u3082\u306e\u3067\u306f\u306a\u3044\u3002 \u4ee3\u308f\u308a\u306b, \u3053\u306e\u4efb\u610f\u306e\u8907\u96d1\u3055\u3092\u898b\u3064\u3051\u3066\u6349\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30e1\u30bf\u624b\u6cd5\u306e\u307f\u3092\u7d44\u307f\u8fbc\u3080\u3079\u304d\u3067\u3042\u308b\u3002 \u3053\u308c\u3089\u306e\u65b9\u6cd5\u306b\u6b20\u304b\u305b\u306a\u3044\u306e\u306f, \u305d\u308c\u3089\u304c\u826f\u3044\u8fd1\u4f3c\u5024\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u3067\u3042\u308b\u3002 \u305d\u306e\u63a2\u7d22\u306f\u6211\u3005\u306b\u3088\u308b\u3082\u306e\u3067\u306f\u306a\u304f\u6211\u3005\u306e\u65b9\u6cd5\u306b\u3088\u308b\u3082\u306e\u3067\u3042\u308b\u3079\u304d\u3067\u3042\u308b\u3002 \u6211\u3005\u306f, \u79c1\u305f\u3061\u304c\u767a\u898b\u3057\u305f\u3082\u306e\u3092\u542b\u307e\u306a\u3044, \u79c1\u305f\u3061\u304c\u3067\u304d\u308b\u9650\u308a\u767a\u898b\u3067\u304d\u308b AI \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u6b32\u3057\u3044\u306e\u3067\u3042\u308b\u3002 \u6211\u3005\u306e\u767a\u898b\u306b\u53d6\u308a\u8fbc\u3080\u3053\u3068\u306f, \u767a\u898b\u30d7\u30ed\u30bb\u30b9\u304c\u3069\u306e\u3088\u3046\u306b\u884c\u308f\u308c\u308b\u3053\u3068\u53ef\u80fd\u304b\u3092\u767a\u898b\u3059\u308b\u3053\u3068\u3092\u96e3\u3057\u304f\u3059\u308b\u3060\u3051\u3067\u3042\u308b\u3002","title":"Bitter Lesson"},{"location":"2020-0510how_to_save_and_share_colab_files/","text":"2020-0510 \u8ab2\u984c\u63d0\u51fa\u306e\u65b9\u6cd5 \u00b6 \u3053\u3053\u3067\u306f\u6388\u696d\u3067\u4f7f\u3063\u305f [colab](https://colab.research.google.com/notebooks/intro.ipynb#recent=true){target=\"_blank\"} \u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u5206\u306e Google Drive \u306b\u4fdd\u5b58\u3057\uff0c\u305d\u306e\u4fdd\u5b58\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u5171\u6709\u3057\u3066\uff0c\u63d0\u51fa\u3059\u308b\u65b9\u6cd5\u3092\u6982\u8aac\u3057\u307e\u3059\u3002 Google Drive \u306b\u8ab2\u984c\u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002 \u99d2\u6fa4\u30e1\u30fc\u30eb\u306e\u53f3\u4e0a\u306b\u3042\u308b\u30a2\u30a4\u30b3\u30f3\u304b\u3089 Google Drive \u3092\u958b\u304d\u307e\u3059 \u8a2d\u5b9a\u306b\u3082\u3088\u308a\u307e\u3059\u304c\uff0c2 \u7b87\u6240\u304f\u3089\u3044\u306b\u8a72\u5f53\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3069\u3061\u3089\u304b\u3092\u9078\u3093\u3067\u304f\u3060\u3055\u3044 \u30d5\u30a1\u30a4\u30eb\u540d\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30e1\u30cb\u30e5\u30fc\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u305d\u3053\u3067\uff0c \u5171\u6709 \u3092\u9078\u3093\u3067\u304f\u3060\u3055\u3044\u3002 \u5171\u6709\u3059\u308b\u76f8\u624b\u3068\u3057\u3066 educ0233@komazawa-u.ac.jp \u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30a6\u30a3\u30f3\u30c9\u30a6\u53f3\u4e0a\u306e \u5171\u6709\u53ef\u80fd\u306a\u30ea\u30f3\u30af\u3092\u53d6\u5f97 \u3092\u62bc\u4e0b\u3059\u308b\u3068\u30ea\u30f3\u30af\u30a2\u30c9\u30ec\u30b9\u304c\u30b3\u30d4\u30fc\u3055\u308c\u307e\u3059\u3002 \u305d\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u30e1\u30fc\u30eb\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u9001\u4fe1\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4ee5\u4e0a\u3067\u3059\u3002","title":"2020-0510 \u8ab2\u984c\u63d0\u51fa\u306e\u65b9\u6cd5"},{"location":"2020-0510how_to_save_and_share_colab_files/#2020-0510","text":"\u3053\u3053\u3067\u306f\u6388\u696d\u3067\u4f7f\u3063\u305f [colab](https://colab.research.google.com/notebooks/intro.ipynb#recent=true){target=\"_blank\"} \u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u5206\u306e Google Drive \u306b\u4fdd\u5b58\u3057\uff0c\u305d\u306e\u4fdd\u5b58\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u5171\u6709\u3057\u3066\uff0c\u63d0\u51fa\u3059\u308b\u65b9\u6cd5\u3092\u6982\u8aac\u3057\u307e\u3059\u3002 Google Drive \u306b\u8ab2\u984c\u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002 \u99d2\u6fa4\u30e1\u30fc\u30eb\u306e\u53f3\u4e0a\u306b\u3042\u308b\u30a2\u30a4\u30b3\u30f3\u304b\u3089 Google Drive \u3092\u958b\u304d\u307e\u3059 \u8a2d\u5b9a\u306b\u3082\u3088\u308a\u307e\u3059\u304c\uff0c2 \u7b87\u6240\u304f\u3089\u3044\u306b\u8a72\u5f53\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3069\u3061\u3089\u304b\u3092\u9078\u3093\u3067\u304f\u3060\u3055\u3044 \u30d5\u30a1\u30a4\u30eb\u540d\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30e1\u30cb\u30e5\u30fc\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u305d\u3053\u3067\uff0c \u5171\u6709 \u3092\u9078\u3093\u3067\u304f\u3060\u3055\u3044\u3002 \u5171\u6709\u3059\u308b\u76f8\u624b\u3068\u3057\u3066 educ0233@komazawa-u.ac.jp \u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30a6\u30a3\u30f3\u30c9\u30a6\u53f3\u4e0a\u306e \u5171\u6709\u53ef\u80fd\u306a\u30ea\u30f3\u30af\u3092\u53d6\u5f97 \u3092\u62bc\u4e0b\u3059\u308b\u3068\u30ea\u30f3\u30af\u30a2\u30c9\u30ec\u30b9\u304c\u30b3\u30d4\u30fc\u3055\u308c\u307e\u3059\u3002 \u305d\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u30e1\u30fc\u30eb\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u9001\u4fe1\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4ee5\u4e0a\u3067\u3059\u3002","title":"2020-0510 \u8ab2\u984c\u63d0\u51fa\u306e\u65b9\u6cd5"},{"location":"2020pytorch_tutorail_reinforcement_q_learning/","text":"Click here to download the full example code Reinforcement Learning (DQN) Tutorial \u00b6 Author: Adam Paszke This tutorial shows how to use PyTorch to train a Deep Q Learning (DQN) agent on the CartPole-v0 task from the OpenAI Gym . Task The agent has to decide between two actions - moving the cart left or right - so that the pole attached to it stays upright. You can find an official leaderboard with various algorithms and visualizations at the Gym website . As the agent observes the current state of the environment and chooses an action, the environment transitions to a new state, and also returns a reward that indicates the consequences of the action. In this task, rewards are +1 for every incremental timestep and the environment terminates if the pole falls over too far or the cart moves more then 2.4 units away from center. This means better performing scenarios will run for longer duration, accumulating larger return. The CartPole task is designed so that the inputs to the agent are 4 real values representing the environment state (position, velocity, etc.). However, neural networks can solve the task purely by looking at the scene, so we\\'ll use a patch of the screen centered on the cart as an input. Because of this, our results aren't directly comparable to the ones from the official leaderboard - our task is much harder. Unfortunately this does slow down the training, because we have to render all the frames. Strictly speaking, we will present the state as the difference between the current screen patch and the previous one. This will allow the agent to take the velocity of the pole into account from one image. Packages First, let's import needed packages. Firstly, we need gym for the environment (Install using [pip install gym]. We 'll also use the following from PyTorch: neural networks ( torch.nn ) optimization ( torch.optim ) automatic differentiation ( torch.autograd ) utilities for vision tasks ( torchvision - a separate package ). 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 import gym import math import random import numpy as np import matplotlib import matplotlib.pyplot as plt from collections import namedtuple from itertools import count from PIL import Image import torch import torch.nn as nn import torch.optim as optim import torch.nn.functional as F import torchvision.transforms as T env = gym.make( 'CartPole-v0' ).unwrapped # set up matplotlib is_ipython = 'inline' in matplotlib.get_backend() if is_ipython: from IPython import display plt.ion() # if gpu is to be used device = torch.device( \"cuda\" if torch.cuda.is_available() else \"cpu\" ) Replay Memory \u00b6 We'll be using experience replay memory for training our DQN. It stores the transitions that the agent observes, allowing us to reuse this data later. By sampling from it randomly, the transitions that build up a batch are decorrelated. It has been shown that this greatly stabilizes and improves the DQN training procedure. For this, we're going to need two classses: Transition - a named tuple representing a single transition in our environment. It essentially maps (state, action) pairs to their (next_state, reward) result, with the state being the screen difference image as described later on. ReplayMemory - a cyclic buffer of bounded size that holds the transitions observed recently. It also implements a .sample() method for selecting a random batch of transitions for training. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 Transition = namedtuple( 'Transition' , ( 'state' , 'action' , 'next_state' , 'reward' )) class ReplayMemory ( object ): def __init__ ( self , capacity): self .capacity = capacity self .memory = [] self .position = 0 def push ( self , *args): \"\"\"Saves a transition.\"\"\" if len ( self .memory) < self .capacity: self .memory.append( None ) self .memory[ self .position] = Transition(*args) self .position = ( self .position + 1 ) % self .capacity def sample ( self , batch_size): return random.sample( self .memory, batch_size) def __len__ ( self ): return len ( self .memory) Now, let's define our model. But first, let quickly recap what a DQN is. DQN algorithm \u00b6 Our environment is deterministic, so all equations presented here are also formulated deterministically for the sake of simplicity. In the reinforcement learning literature, they would also contain expectations over stochastic transitions in the environment. Our aim will be to train a policy that tries to maximize the discounted, cumulative reward R_{t_0} = \\sum_{t=t_0}^{\\infty} \\gamma^{t - t_0} r_t , where R_{t_0} is also known as the return . The discount, \\gamma , should be a constant between 0 and 1 that ensures the sum converges. It makes rewards from the uncertain far future less important for our agent than the ones in the near future that it can be fairly confident about. The main idea behind Q-learning is that if we had a function Q^*: \\text{State} \\times \\text{Action} \\rightarrow \\mathbb{R} , that could tell us what our return would be, if we were to take an action in a given state, then we could easily construct a policy that maximizes our rewards: \\pi^*(s) = \\arg\\!\\max_a \\ Q^*(s, a) However, we don't know everything about the world, so we don't have access to Q^* . But, since neural networks are universal function approximators, we can simply create one and train it to resemble Q^* . For our training update rule, we\\'ll use a fact that every Q function for some policy obeys the Bellman equation: Q^{\\pi}(s, a) = r + \\gamma Q^{\\pi}(s', \\pi(s')) The difference between the two sides of the equality is known as the temporal difference error, \\delta : \\delta = Q(s, a) - (r + \\gamma \\max_a Q(s', a)) To minimise this error, we will use the Huber loss . The Huber loss acts like the mean squared error when the error is small, but like the mean absolute error when the error is large - this makes it more robust to outliers when the estimates of Q are very noisy. We calculate this over a batch of transitions, B , sampled from the replay memory: \\mathcal{L} = \\frac{1}{|B|}\\sum_{(s, a, s', r) \\ \\in \\ B} \\mathcal{L}(\\delta) \\begin{aligned} \\text{where} \\quad \\mathcal{L}(\\delta) = \\begin{cases} \\frac{1}{2}{\\delta^2} & \\text{for } |\\delta| \\le 1, \\\\ |\\delta| - \\frac{1}{2} & \\text{otherwise.} \\end{cases} \\end{aligned} Q-network \u00b6 Our model will be a convolutional neural network that takes in the difference between the current and previous screen patches. It has two outputs, representing Q(s, \\mathrm{left}) and Q(s, \\mathrm{right}) (where s is the input to the network). In effect, the network is trying to predict the expected return of taking each action given the current input. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 class DQN(nn.Module): def __init__( self , h, w , outputs): super(DQN, self ).__init__() self .conv1 = nn.Conv2d( 3 , 16 , kernel_size= 5 , stride= 2 ) self .bn1 = nn.BatchNorm2d( 16 ) self .conv2 = nn.Conv2d( 16 , 32 , kernel_size= 5 , stride= 2 ) self .bn2 = nn.BatchNorm2d( 32 ) self .conv3 = nn.Conv2d( 32 , 32 , kernel_size= 5 , stride= 2 ) self .bn3 = nn.BatchNorm2d( 32 ) # Number of Linear input connections depends on output of conv2d layers # and therefore the input image size, so compute it. def conv2d_size_out(size, kernel_size = 5 , stride = 2 ): return (size - (kernel_size - 1 ) - 1 ) // stride + 1 convw = conv2d_size_out(conv2d_size_out(conv2d_size_out( w ))) convh = conv2d_size_out(conv2d_size_out(conv2d_size_out(h))) linear_input_size = convw * convh * 32 self . head = nn.Linear(linear_input_size, outputs) # Called with either one element to determine next action, or a batch # during optimization. Returns tensor([[left0exp,right0exp]...]). def forward( self , x ): x = F.relu( self .bn1( self .conv1( x ))) x = F.relu( self .bn2( self .conv2( x ))) x = F.relu( self .bn3( self .conv3( x ))) return self . head ( x .view( x .size( 0 ), - 1 )) Input extraction \u00b6 The code below are utilities for extracting and processing rendered images from the environment. It uses the torchvision package, which makes it easy to compose image transforms. Once you run the cell it will display an example patch that it extracted. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 resize = T.Compose([T.ToPILImage(), T.Resize( 40 , interpolation=Image.CUBIC), T.ToTensor()]) def get_cart_location(screen_width): world_width = env.x_threshold * 2 scale = screen_width / world_width return int (env. state [ 0 ] * scale + screen_width / 2 . 0 ) # MIDDLE OF CART def get_screen(): # Returned screen requested by gym is 400 x600x3, but is sometimes larger # such as 800 x1200x3. Transpose it into torch order (CHW). screen = env.render( mode = 'rgb_array' ).transpose(( 2 , 0 , 1 )) # Cart is in the lower half, so strip off the top and bottom of the screen _, screen_height, screen_width = screen.shape screen = screen[:, int (screen_height* 0 . 4 ): int (screen_height * 0 . 8 )] view_width = int (screen_width * 0 . 6 ) cart_location = get_cart_location(screen_width) if cart_location < view_width // 2 : slice_range = slice(view_width) elif cart_location > (screen_width - view_width // 2 ): slice_range = slice(-view_width, None ) else : slice_range = slice(cart_location - view_width // 2 , cart_location + view_width // 2 ) # Strip off the edges, so that we have a square image centered on a cart screen = screen[:, :, slice_range] # Convert to float , rescale, convert to torch tensor # (this doesn 't require a copy) screen = np.ascontiguousarray(screen, dtype=np.float32) / 255 screen = torch.from_numpy(screen) # Resize, and add a batch dimension (BCHW) return resize(screen).unsqueeze(0).to(device) env.reset() plt.figure() plt.imshow(get_screen().cpu().squeeze(0).permute(1, 2, 0).numpy(), interpolation=' none ') plt.title(' Example extracted screen ' ) plt. show () Training \u00b6 Hyperparameters and utilities \u00b6 This cell instantiates our model and its optimizer, and defines some utilities: select_action - will select an action accordingly to an epsilon greedy policy. Simply put, we\\'ll sometimes use our model for choosing the action, and sometimes we\\'ll just sample one uniformly. The probability of choosing a random action will start at EPS_START and will decay exponentially towards EPS_END . EPS_DECAY controls the rate of the decay. plot_durations - a helper for plotting the durations of episodes, along with an average over the last 100 episodes (the measure used in the official evaluations). The plot will be underneath the cell containing the main training loop, and will update after every episode. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 BATCH_SIZE = 128 GAMMA = 0 . 999 EPS_START = 0 . 9 EPS_END = 0 . 05 EPS_DECAY = 200 TARGET_UPDATE = 10 # Get screen size so that we can initialize layers correctly based on shape # returned from AI gym. Typical dimensions at this point are close to 3 x40x90 # which is the result of a clamped and down-scaled render buffer in get_screen() init_screen = get_screen() _, _, screen_height, screen_width = init_screen.shape # Get number of actions from gym action space n_actions = env.action_space.n policy_net = DQN(screen_height, screen_width, n_actions). to (device) target_net = DQN(screen_height, screen_width, n_actions). to (device) target_net.load_state_dict(policy_net.state_dict()) target_net.eval() optimizer = optim.RMSprop(policy_net. parameters ()) memory = ReplayMemory( 10000 ) steps_done = 0 def select_action( state ): global steps_done sample = random.random() eps_threshold = EPS_END + (EPS_START - EPS_END) * \\ math.exp(- 1 . * steps_done / EPS_DECAY) steps_done += 1 if sample > eps_threshold: with torch.no_grad(): # t. max ( 1 ) will return largest column value of each row . # second column on max result is index of where max element was # found , so we pick action with the larger expected reward. return policy_net( state ). max ( 1 )[ 1 ]. view ( 1 , 1 ) else : return torch.tensor([[random.randrange(n_actions)]], device=device, dtype=torch.long) episode_durations = [] def plot_durations(): plt.figure( 2 ) plt.clf() durations_t = torch.tensor(episode_durations, dtype=torch. float ) plt.title( 'Training...' ) plt.xlabel( 'Episode' ) plt.ylabel( 'Duration' ) plt.plot(durations_t.numpy()) # Take 100 episode averages and plot them too if len(durations_t) >= 100 : means = durations_t.unfold( 0 , 100 , 1 ).mean( 1 ). view (- 1 ) means = torch.cat((torch.zeros( 99 ), means)) plt.plot(means.numpy()) plt.pause( 0 . 001 ) # pause a bit so that plots are updated if is_ipython: display.clear_output(wait= True ) display.display(plt.gcf()) Training loop \u00b6 Finally, the code for training our model. Here, you can find an optimize_model function that performs a single step of the optimization. It first samples a batch, concatenates all the tensors into a single one, computes Q(s_t, a_t) and V(s_{t+1}) = \\max_a Q(s_{t+1}, a) , and combines them into our loss. By defition we set V(s) = 0 if s is a terminal state. We also use a target network to compute V(s_{t+1}) for added stability. The target network has its weights kept frozen most of the time, but is updated with the policy network\\'s weights every so often. This is usually a set number of steps but we shall use episodes for simplicity. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 def optimize_model() : if len (memory) < BATCH_SIZE: return transitions = memory.sample(BATCH_SIZE) # Transpose the batch (see https://stackoverflow.com/a/ 19343 / 3343043 for # detailed explanation). This converts batch- array of Transitions # to Transition of batch-arrays. batch = Transition(*zip(*transitions)) # Compute a mask of non-final states and concatenate the batch elements # (a final state would 've been the one after which simulation ended) non_final_mask = torch.tensor(tuple(map(lambda s: s is not None, batch.next_state)), device=device, dtype=torch.bool) non_final_next_states = torch.cat([s for s in batch.next_state if s is not None]) state_batch = torch.cat(batch.state) action_batch = torch.cat(batch.action) reward_batch = torch.cat(batch.reward) # Compute Q(s_t, a) - the model computes Q(s_t), then we select the # columns of actions taken. These are the actions which would' ve been taken # for each batch state according to policy_net state_action_values = policy_net(state_batch).gather( 1 , action_batch) # Compute V(s_ { t+ 1 } ) for all next states. # Expected values of actions for non_final_next_states are computed based # on the \"older\" target_net; selecting their best reward with max ( 1 )[0]. # This is merged based on the mask, such that we ' ll have either the expected # state value or 0 in case the state was final. next_state_values = torch.zeros(BATCH_SIZE, device=device) next_state_values[non_final_mask] = target_net(non_final_next_states). max ( 1 )[0].detach() # Compute the expected Q values expected_state_action_values = (next_state_values * GAMMA) + reward_batch # Compute Huber loss loss = F.smooth_l1_loss(state_action_values, expected_state_action_values.unsqueeze( 1 )) # Optimize the model optimizer.zero_grad() loss.backward() for param in policy_net. parameters () : param.grad. data .clamp_(- 1 , 1 ) optimizer.step() Below, you can find the main training loop. At the beginning we reset the environment and initialize the state Tensor. Then, we sample an action, execute it, observe the next screen and the reward (always 1), and optimize our model once. When the episode ends (our model fails), we restart the loop. Below, [num_episodes]{.title-ref} is set small. You should download the notebook and run lot more epsiodes, such as 300+ for meaningful duration improvements. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 num_episodes = 50 for i_episode in range (num_episodes) : # Initialize the environment and state env.reset() last_screen = get_screen() current_screen = get_screen() state = current_screen - last_screen for t in count () : # Select and perform an action action = select_action( state ) _, reward, done, _ = env.step( action .item()) reward = torch.tensor([reward], device=device) # Observe new state last_screen = current_screen current_screen = get_screen() if not done: next_state = current_screen - last_screen else : next_state = None # Store the transition in memory memory.push( state , action , next_state, reward) # Move to the next state state = next_state # Perform one step of the optimization ( on the target network) optimize_model() if done: episode_durations.append(t + 1 ) plot_durations() break # Update the target network, copying all weights and biases in DQN if i_episode % TARGET_UPDATE == 0 : target_net.load_state_dict(policy_net.state_dict()) print ( 'Complete' ) env.render() env. close () plt.ioff() plt.show() Here is the diagram that illustrates the overall resulting data flow. Actions are chosen either randomly or based on a policy, getting the next step sample from the gym environment. We record the results in the replay memory and also run optimization step on every iteration. Optimization picks a random batch from the replay memory to do training of the new policy. \"Older\" target_net is also used in optimization to compute the expected Q values; it is updated occasionally to keep it current.","title":"2020pytorch tutorail reinforcement q learning"},{"location":"2020pytorch_tutorail_reinforcement_q_learning/#reinforcement-learning-dqn-tutorial","text":"Author: Adam Paszke This tutorial shows how to use PyTorch to train a Deep Q Learning (DQN) agent on the CartPole-v0 task from the OpenAI Gym . Task The agent has to decide between two actions - moving the cart left or right - so that the pole attached to it stays upright. You can find an official leaderboard with various algorithms and visualizations at the Gym website . As the agent observes the current state of the environment and chooses an action, the environment transitions to a new state, and also returns a reward that indicates the consequences of the action. In this task, rewards are +1 for every incremental timestep and the environment terminates if the pole falls over too far or the cart moves more then 2.4 units away from center. This means better performing scenarios will run for longer duration, accumulating larger return. The CartPole task is designed so that the inputs to the agent are 4 real values representing the environment state (position, velocity, etc.). However, neural networks can solve the task purely by looking at the scene, so we\\'ll use a patch of the screen centered on the cart as an input. Because of this, our results aren't directly comparable to the ones from the official leaderboard - our task is much harder. Unfortunately this does slow down the training, because we have to render all the frames. Strictly speaking, we will present the state as the difference between the current screen patch and the previous one. This will allow the agent to take the velocity of the pole into account from one image. Packages First, let's import needed packages. Firstly, we need gym for the environment (Install using [pip install gym]. We 'll also use the following from PyTorch: neural networks ( torch.nn ) optimization ( torch.optim ) automatic differentiation ( torch.autograd ) utilities for vision tasks ( torchvision - a separate package ). 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 import gym import math import random import numpy as np import matplotlib import matplotlib.pyplot as plt from collections import namedtuple from itertools import count from PIL import Image import torch import torch.nn as nn import torch.optim as optim import torch.nn.functional as F import torchvision.transforms as T env = gym.make( 'CartPole-v0' ).unwrapped # set up matplotlib is_ipython = 'inline' in matplotlib.get_backend() if is_ipython: from IPython import display plt.ion() # if gpu is to be used device = torch.device( \"cuda\" if torch.cuda.is_available() else \"cpu\" )","title":"Reinforcement Learning (DQN) Tutorial"},{"location":"2020pytorch_tutorail_reinforcement_q_learning/#replay-memory","text":"We'll be using experience replay memory for training our DQN. It stores the transitions that the agent observes, allowing us to reuse this data later. By sampling from it randomly, the transitions that build up a batch are decorrelated. It has been shown that this greatly stabilizes and improves the DQN training procedure. For this, we're going to need two classses: Transition - a named tuple representing a single transition in our environment. It essentially maps (state, action) pairs to their (next_state, reward) result, with the state being the screen difference image as described later on. ReplayMemory - a cyclic buffer of bounded size that holds the transitions observed recently. It also implements a .sample() method for selecting a random batch of transitions for training. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 Transition = namedtuple( 'Transition' , ( 'state' , 'action' , 'next_state' , 'reward' )) class ReplayMemory ( object ): def __init__ ( self , capacity): self .capacity = capacity self .memory = [] self .position = 0 def push ( self , *args): \"\"\"Saves a transition.\"\"\" if len ( self .memory) < self .capacity: self .memory.append( None ) self .memory[ self .position] = Transition(*args) self .position = ( self .position + 1 ) % self .capacity def sample ( self , batch_size): return random.sample( self .memory, batch_size) def __len__ ( self ): return len ( self .memory) Now, let's define our model. But first, let quickly recap what a DQN is.","title":"Replay Memory"},{"location":"2020pytorch_tutorail_reinforcement_q_learning/#dqn-algorithm","text":"Our environment is deterministic, so all equations presented here are also formulated deterministically for the sake of simplicity. In the reinforcement learning literature, they would also contain expectations over stochastic transitions in the environment. Our aim will be to train a policy that tries to maximize the discounted, cumulative reward R_{t_0} = \\sum_{t=t_0}^{\\infty} \\gamma^{t - t_0} r_t , where R_{t_0} is also known as the return . The discount, \\gamma , should be a constant between 0 and 1 that ensures the sum converges. It makes rewards from the uncertain far future less important for our agent than the ones in the near future that it can be fairly confident about. The main idea behind Q-learning is that if we had a function Q^*: \\text{State} \\times \\text{Action} \\rightarrow \\mathbb{R} , that could tell us what our return would be, if we were to take an action in a given state, then we could easily construct a policy that maximizes our rewards: \\pi^*(s) = \\arg\\!\\max_a \\ Q^*(s, a) However, we don't know everything about the world, so we don't have access to Q^* . But, since neural networks are universal function approximators, we can simply create one and train it to resemble Q^* . For our training update rule, we\\'ll use a fact that every Q function for some policy obeys the Bellman equation: Q^{\\pi}(s, a) = r + \\gamma Q^{\\pi}(s', \\pi(s')) The difference between the two sides of the equality is known as the temporal difference error, \\delta : \\delta = Q(s, a) - (r + \\gamma \\max_a Q(s', a)) To minimise this error, we will use the Huber loss . The Huber loss acts like the mean squared error when the error is small, but like the mean absolute error when the error is large - this makes it more robust to outliers when the estimates of Q are very noisy. We calculate this over a batch of transitions, B , sampled from the replay memory: \\mathcal{L} = \\frac{1}{|B|}\\sum_{(s, a, s', r) \\ \\in \\ B} \\mathcal{L}(\\delta) \\begin{aligned} \\text{where} \\quad \\mathcal{L}(\\delta) = \\begin{cases} \\frac{1}{2}{\\delta^2} & \\text{for } |\\delta| \\le 1, \\\\ |\\delta| - \\frac{1}{2} & \\text{otherwise.} \\end{cases} \\end{aligned}","title":"DQN algorithm"},{"location":"2020pytorch_tutorail_reinforcement_q_learning/#q-network","text":"Our model will be a convolutional neural network that takes in the difference between the current and previous screen patches. It has two outputs, representing Q(s, \\mathrm{left}) and Q(s, \\mathrm{right}) (where s is the input to the network). In effect, the network is trying to predict the expected return of taking each action given the current input. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 class DQN(nn.Module): def __init__( self , h, w , outputs): super(DQN, self ).__init__() self .conv1 = nn.Conv2d( 3 , 16 , kernel_size= 5 , stride= 2 ) self .bn1 = nn.BatchNorm2d( 16 ) self .conv2 = nn.Conv2d( 16 , 32 , kernel_size= 5 , stride= 2 ) self .bn2 = nn.BatchNorm2d( 32 ) self .conv3 = nn.Conv2d( 32 , 32 , kernel_size= 5 , stride= 2 ) self .bn3 = nn.BatchNorm2d( 32 ) # Number of Linear input connections depends on output of conv2d layers # and therefore the input image size, so compute it. def conv2d_size_out(size, kernel_size = 5 , stride = 2 ): return (size - (kernel_size - 1 ) - 1 ) // stride + 1 convw = conv2d_size_out(conv2d_size_out(conv2d_size_out( w ))) convh = conv2d_size_out(conv2d_size_out(conv2d_size_out(h))) linear_input_size = convw * convh * 32 self . head = nn.Linear(linear_input_size, outputs) # Called with either one element to determine next action, or a batch # during optimization. Returns tensor([[left0exp,right0exp]...]). def forward( self , x ): x = F.relu( self .bn1( self .conv1( x ))) x = F.relu( self .bn2( self .conv2( x ))) x = F.relu( self .bn3( self .conv3( x ))) return self . head ( x .view( x .size( 0 ), - 1 ))","title":"Q-network"},{"location":"2020pytorch_tutorail_reinforcement_q_learning/#input-extraction","text":"The code below are utilities for extracting and processing rendered images from the environment. It uses the torchvision package, which makes it easy to compose image transforms. Once you run the cell it will display an example patch that it extracted. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 resize = T.Compose([T.ToPILImage(), T.Resize( 40 , interpolation=Image.CUBIC), T.ToTensor()]) def get_cart_location(screen_width): world_width = env.x_threshold * 2 scale = screen_width / world_width return int (env. state [ 0 ] * scale + screen_width / 2 . 0 ) # MIDDLE OF CART def get_screen(): # Returned screen requested by gym is 400 x600x3, but is sometimes larger # such as 800 x1200x3. Transpose it into torch order (CHW). screen = env.render( mode = 'rgb_array' ).transpose(( 2 , 0 , 1 )) # Cart is in the lower half, so strip off the top and bottom of the screen _, screen_height, screen_width = screen.shape screen = screen[:, int (screen_height* 0 . 4 ): int (screen_height * 0 . 8 )] view_width = int (screen_width * 0 . 6 ) cart_location = get_cart_location(screen_width) if cart_location < view_width // 2 : slice_range = slice(view_width) elif cart_location > (screen_width - view_width // 2 ): slice_range = slice(-view_width, None ) else : slice_range = slice(cart_location - view_width // 2 , cart_location + view_width // 2 ) # Strip off the edges, so that we have a square image centered on a cart screen = screen[:, :, slice_range] # Convert to float , rescale, convert to torch tensor # (this doesn 't require a copy) screen = np.ascontiguousarray(screen, dtype=np.float32) / 255 screen = torch.from_numpy(screen) # Resize, and add a batch dimension (BCHW) return resize(screen).unsqueeze(0).to(device) env.reset() plt.figure() plt.imshow(get_screen().cpu().squeeze(0).permute(1, 2, 0).numpy(), interpolation=' none ') plt.title(' Example extracted screen ' ) plt. show ()","title":"Input extraction"},{"location":"2020pytorch_tutorail_reinforcement_q_learning/#training","text":"","title":"Training"},{"location":"2020pytorch_tutorail_reinforcement_q_learning/#hyperparameters-and-utilities","text":"This cell instantiates our model and its optimizer, and defines some utilities: select_action - will select an action accordingly to an epsilon greedy policy. Simply put, we\\'ll sometimes use our model for choosing the action, and sometimes we\\'ll just sample one uniformly. The probability of choosing a random action will start at EPS_START and will decay exponentially towards EPS_END . EPS_DECAY controls the rate of the decay. plot_durations - a helper for plotting the durations of episodes, along with an average over the last 100 episodes (the measure used in the official evaluations). The plot will be underneath the cell containing the main training loop, and will update after every episode. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 BATCH_SIZE = 128 GAMMA = 0 . 999 EPS_START = 0 . 9 EPS_END = 0 . 05 EPS_DECAY = 200 TARGET_UPDATE = 10 # Get screen size so that we can initialize layers correctly based on shape # returned from AI gym. Typical dimensions at this point are close to 3 x40x90 # which is the result of a clamped and down-scaled render buffer in get_screen() init_screen = get_screen() _, _, screen_height, screen_width = init_screen.shape # Get number of actions from gym action space n_actions = env.action_space.n policy_net = DQN(screen_height, screen_width, n_actions). to (device) target_net = DQN(screen_height, screen_width, n_actions). to (device) target_net.load_state_dict(policy_net.state_dict()) target_net.eval() optimizer = optim.RMSprop(policy_net. parameters ()) memory = ReplayMemory( 10000 ) steps_done = 0 def select_action( state ): global steps_done sample = random.random() eps_threshold = EPS_END + (EPS_START - EPS_END) * \\ math.exp(- 1 . * steps_done / EPS_DECAY) steps_done += 1 if sample > eps_threshold: with torch.no_grad(): # t. max ( 1 ) will return largest column value of each row . # second column on max result is index of where max element was # found , so we pick action with the larger expected reward. return policy_net( state ). max ( 1 )[ 1 ]. view ( 1 , 1 ) else : return torch.tensor([[random.randrange(n_actions)]], device=device, dtype=torch.long) episode_durations = [] def plot_durations(): plt.figure( 2 ) plt.clf() durations_t = torch.tensor(episode_durations, dtype=torch. float ) plt.title( 'Training...' ) plt.xlabel( 'Episode' ) plt.ylabel( 'Duration' ) plt.plot(durations_t.numpy()) # Take 100 episode averages and plot them too if len(durations_t) >= 100 : means = durations_t.unfold( 0 , 100 , 1 ).mean( 1 ). view (- 1 ) means = torch.cat((torch.zeros( 99 ), means)) plt.plot(means.numpy()) plt.pause( 0 . 001 ) # pause a bit so that plots are updated if is_ipython: display.clear_output(wait= True ) display.display(plt.gcf())","title":"Hyperparameters and utilities"},{"location":"2020pytorch_tutorail_reinforcement_q_learning/#training-loop","text":"Finally, the code for training our model. Here, you can find an optimize_model function that performs a single step of the optimization. It first samples a batch, concatenates all the tensors into a single one, computes Q(s_t, a_t) and V(s_{t+1}) = \\max_a Q(s_{t+1}, a) , and combines them into our loss. By defition we set V(s) = 0 if s is a terminal state. We also use a target network to compute V(s_{t+1}) for added stability. The target network has its weights kept frozen most of the time, but is updated with the policy network\\'s weights every so often. This is usually a set number of steps but we shall use episodes for simplicity. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 def optimize_model() : if len (memory) < BATCH_SIZE: return transitions = memory.sample(BATCH_SIZE) # Transpose the batch (see https://stackoverflow.com/a/ 19343 / 3343043 for # detailed explanation). This converts batch- array of Transitions # to Transition of batch-arrays. batch = Transition(*zip(*transitions)) # Compute a mask of non-final states and concatenate the batch elements # (a final state would 've been the one after which simulation ended) non_final_mask = torch.tensor(tuple(map(lambda s: s is not None, batch.next_state)), device=device, dtype=torch.bool) non_final_next_states = torch.cat([s for s in batch.next_state if s is not None]) state_batch = torch.cat(batch.state) action_batch = torch.cat(batch.action) reward_batch = torch.cat(batch.reward) # Compute Q(s_t, a) - the model computes Q(s_t), then we select the # columns of actions taken. These are the actions which would' ve been taken # for each batch state according to policy_net state_action_values = policy_net(state_batch).gather( 1 , action_batch) # Compute V(s_ { t+ 1 } ) for all next states. # Expected values of actions for non_final_next_states are computed based # on the \"older\" target_net; selecting their best reward with max ( 1 )[0]. # This is merged based on the mask, such that we ' ll have either the expected # state value or 0 in case the state was final. next_state_values = torch.zeros(BATCH_SIZE, device=device) next_state_values[non_final_mask] = target_net(non_final_next_states). max ( 1 )[0].detach() # Compute the expected Q values expected_state_action_values = (next_state_values * GAMMA) + reward_batch # Compute Huber loss loss = F.smooth_l1_loss(state_action_values, expected_state_action_values.unsqueeze( 1 )) # Optimize the model optimizer.zero_grad() loss.backward() for param in policy_net. parameters () : param.grad. data .clamp_(- 1 , 1 ) optimizer.step() Below, you can find the main training loop. At the beginning we reset the environment and initialize the state Tensor. Then, we sample an action, execute it, observe the next screen and the reward (always 1), and optimize our model once. When the episode ends (our model fails), we restart the loop. Below, [num_episodes]{.title-ref} is set small. You should download the notebook and run lot more epsiodes, such as 300+ for meaningful duration improvements. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 num_episodes = 50 for i_episode in range (num_episodes) : # Initialize the environment and state env.reset() last_screen = get_screen() current_screen = get_screen() state = current_screen - last_screen for t in count () : # Select and perform an action action = select_action( state ) _, reward, done, _ = env.step( action .item()) reward = torch.tensor([reward], device=device) # Observe new state last_screen = current_screen current_screen = get_screen() if not done: next_state = current_screen - last_screen else : next_state = None # Store the transition in memory memory.push( state , action , next_state, reward) # Move to the next state state = next_state # Perform one step of the optimization ( on the target network) optimize_model() if done: episode_durations.append(t + 1 ) plot_durations() break # Update the target network, copying all weights and biases in DQN if i_episode % TARGET_UPDATE == 0 : target_net.load_state_dict(policy_net.state_dict()) print ( 'Complete' ) env.render() env. close () plt.ioff() plt.show() Here is the diagram that illustrates the overall resulting data flow. Actions are chosen either randomly or based on a policy, getting the next step sample from the gym environment. We record the results in the replay memory and also run optimization step on every iteration. Optimization picks a random batch from the replay memory to do training of the new policy. \"Older\" target_net is also used in optimization to compute the expected Q values; it is updated occasionally to keep it current.","title":"Training loop"},{"location":"Hinton_Maxwell_award/","text":"\u30b8\u30a7\u30d5\u30a7\u30ea\u30fc\u30fb\u30d2\u30f3\u30c8\u30f3 \u306e IEEE \u30de\u30af\u30bb\u30eb\u8cde\u53d7\u8cde\u8b1b\u6f14 \uff082016\uff09 \u00b6 2016 Prof. Geoffrey Hinton's speech for the IEEE/RSE Wolfson James Clerk Maxwell Award 50\u5e74\u524d \u4eba\u5de5\u77e5\u80fd\u306e\u7523\u307f\u306e\u89aa\u305f\u3061\u306f \u8ad6\u7406\u3053\u305d\u304c\u77e5\u80fd\u306e\u9375\u3067\u3042\u308b\u3068\u7686\u3092\u4fe1\u3058\u8fbc\u307e\u305b\u307e\u3057\u305f\u3002 \u77e5\u7684\u306a\u632f\u308b\u821e\u3044\u3092\u3055\u305b\u308b\u305f\u3081\u306b\u306f \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u8ad6\u7406\u7684\u306a\u63a8\u8ad6\u3092\u3055\u305b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u3060\u3068\u3002 \u3067\u3059\u304c\uff0c\u5f7c\u3089\u304c \u9593\u9055\u3063\u3066\u3044\u308b(\u72c2\u3063\u3066\u3044\u308b) \u3068\u8003\u3048\u305f \u5168\u304f\u5225\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002 \u8ad6\u7406\u3092\u8107\u306b\u7f6e\u3044\u3066\u304a\u3044\u3066\uff0c\u8133\u7d30\u80de\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u3069\u306e\u3088\u3046\u306b\u7269\u4e8b\u3092\u5b66\u7fd2\u3059\u308b\u306e\u304b\u3092\u7406\u89e3\u3057\u3088\u3046\u3068\u3059\u308b\u3053\u3068\u3067\u3059\u3002 \u4e0d\u601d\u8b70\u306a\u3053\u3068\u306b, \u4eba\u5de5\u77e5\u80fd\u306e\u751f\u307f\u306e\u89aa\u305f\u3061\u304c\u63d0\u5531\u3057\u305f \u8ad6\u7406\u306b\u57fa\u3065\u304f\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u62d2\u5426\u3057\u305f \u521d\u671f\u306e 2\u4eba\u306e\u4eba\u9593\u304c\u3044\u307e\u3057\u305f\u3002 \u30c1\u30e5\u30fc\u30ea\u30f3\u30b0 \u3068 \u30d5\u30a9\u30f3\u30fb\u30ce\u30a4\u30de\u30f3\u3067\u3059\u3002 \u3082\u3057\u5f7c\u3089\u306e\u3069\u3061\u3089\u304b\u304c\u751f\u304d\u3066\u3044\u305f\u3089\u3001\u7269\u4e8b\u306f\u9055\u3063\u305f\u65b9\u5411\u306b\u5411\u304b\u3063\u3066\u3044\u305f\u3068\u601d\u3044\u307e\u3059...\u4eca\u3067\u306f\u3001\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u4e00\u822c\u7684\u306b\u7528\u3044\u3089\u308c\uff0c\u72c2\u3063\u3066\u3044\u308b\u30a2\u30d7\u30ed\u30fc\u30c1\u304c\u4e3b\u6d41\u3067\u3059\u3002","title":"\u30b8\u30a7\u30d5\u30a7\u30ea\u30fc\u30fb\u30d2\u30f3\u30c8\u30f3\u306e\u30de\u30af\u30bb\u30eb\u8cde\u53d7\u8cde\u8a18\u5ff5\u8b1b\u6f14(2016)"},{"location":"Hinton_Maxwell_award/#ieee-2016","text":"2016 Prof. Geoffrey Hinton's speech for the IEEE/RSE Wolfson James Clerk Maxwell Award 50\u5e74\u524d \u4eba\u5de5\u77e5\u80fd\u306e\u7523\u307f\u306e\u89aa\u305f\u3061\u306f \u8ad6\u7406\u3053\u305d\u304c\u77e5\u80fd\u306e\u9375\u3067\u3042\u308b\u3068\u7686\u3092\u4fe1\u3058\u8fbc\u307e\u305b\u307e\u3057\u305f\u3002 \u77e5\u7684\u306a\u632f\u308b\u821e\u3044\u3092\u3055\u305b\u308b\u305f\u3081\u306b\u306f \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u8ad6\u7406\u7684\u306a\u63a8\u8ad6\u3092\u3055\u305b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u3060\u3068\u3002 \u3067\u3059\u304c\uff0c\u5f7c\u3089\u304c \u9593\u9055\u3063\u3066\u3044\u308b(\u72c2\u3063\u3066\u3044\u308b) \u3068\u8003\u3048\u305f \u5168\u304f\u5225\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002 \u8ad6\u7406\u3092\u8107\u306b\u7f6e\u3044\u3066\u304a\u3044\u3066\uff0c\u8133\u7d30\u80de\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u3069\u306e\u3088\u3046\u306b\u7269\u4e8b\u3092\u5b66\u7fd2\u3059\u308b\u306e\u304b\u3092\u7406\u89e3\u3057\u3088\u3046\u3068\u3059\u308b\u3053\u3068\u3067\u3059\u3002 \u4e0d\u601d\u8b70\u306a\u3053\u3068\u306b, \u4eba\u5de5\u77e5\u80fd\u306e\u751f\u307f\u306e\u89aa\u305f\u3061\u304c\u63d0\u5531\u3057\u305f \u8ad6\u7406\u306b\u57fa\u3065\u304f\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u62d2\u5426\u3057\u305f \u521d\u671f\u306e 2\u4eba\u306e\u4eba\u9593\u304c\u3044\u307e\u3057\u305f\u3002 \u30c1\u30e5\u30fc\u30ea\u30f3\u30b0 \u3068 \u30d5\u30a9\u30f3\u30fb\u30ce\u30a4\u30de\u30f3\u3067\u3059\u3002 \u3082\u3057\u5f7c\u3089\u306e\u3069\u3061\u3089\u304b\u304c\u751f\u304d\u3066\u3044\u305f\u3089\u3001\u7269\u4e8b\u306f\u9055\u3063\u305f\u65b9\u5411\u306b\u5411\u304b\u3063\u3066\u3044\u305f\u3068\u601d\u3044\u307e\u3059...\u4eca\u3067\u306f\u3001\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u4e00\u822c\u7684\u306b\u7528\u3044\u3089\u308c\uff0c\u72c2\u3063\u3066\u3044\u308b\u30a2\u30d7\u30ed\u30fc\u30c1\u304c\u4e3b\u6d41\u3067\u3059\u3002","title":"\u30b8\u30a7\u30d5\u30a7\u30ea\u30fc\u30fb\u30d2\u30f3\u30c8\u30f3 \u306e IEEE \u30de\u30af\u30bb\u30eb\u8cde\u53d7\u8cde\u8b1b\u6f14 \uff082016\uff09"},{"location":"RL-FAQ/","text":"Reinforcement Learning FAQ: Frequently Asked Questions about Reinforcement Learning \u00b6 Edited by Rich Sutton \u00b6 Initiated 8/13/01\\ Last updated 2/4/04 I get many questions about reinforcement learning - how to think about it and how do it successfully in practice. This FAQ is an attempt to pull together in one place some of the more common questions and answers. I have been free with my opinions, but I would also welcome the opinions of others for inclusion here. In you have anything to add to my comments, including whole new questions or totally different answers, please send me a note at rich\\@richsutton.com. General Questions What is Reinforcement Learning? Is RL just trial-and-error learning, or does it include planning? How does RL relate to Neuro-Dynamic Programming? What advantages does RL offer on Operations Research problems? How does RL relate to Neuroscience? How does RL relate to the psychology of animal behavior? How does RL relate to behaviorism? How does RL relate to genetic algorithms? Who invented RL? Questions about studying and teaching RL What sources do you recommend for an introduction to RL? Where can I find an online version of the Sutton and Barto textbook? Where can I find an electronic version of the book suitable for printing? Where can I find the answers to the exercises? I have found an apparent error in the book. What should I do about it? How can I obtain an evaluation copy of the book? Nuts and Bolts of RL My state and/or action space is huge! Can I still apply RL? Most RL work assumes the action space is discrete; what about continuous actions? What about continuous time? What is the curse of dimensionality? Isn\\'t tile-coding just grids, and thus subject to the curse of dimensionality? Why do you call it \\\"tile coding\\\" instead of \\\"CMACs\\\"? Are RL methods stable with function approximation? Advice and Opinions I am doing RL with a backpropagation neural network and it doesn\\'t work; what should I do? What is the best algorithm to use? Why do you disparage the term Q-value? Miscellaneous Questions I am working on a project due soon. Can you help me? I am having trouble with your code. Can you help me get it to work? General Questions \u00b6 What is Reinforcement Learning? \u00b6 \u5f37\u5316\u5b66\u7fd2(RL)\u306f\u3001\u74b0\u5883\u3068\u306e\u76f8\u4e92\u4f5c\u7528\u304b\u3089\u306e\u5b66\u7fd2\u3067\u3042\u308a\u3001\u660e\u793a\u7684\u306a\u6559\u80b2\u304b\u3089\u306e\u5b66\u7fd2\u3067\u306f\u306a\u304f\u3001\u884c\u52d5\u306e\u7d50\u679c\u304b\u3089\u306e\u5b66\u7fd2\u3067\u3042\u308b\u3002 RL \u306f 1990 \u5e74\u4ee3\u306b\u6a5f\u68b0\u5b66\u7fd2\u3084\u4eba\u5de5\u77e5\u80fd\u306e\u5206\u91ce\u3067\u4eba\u6c17\u304c\u51fa\u3066\u304d\u305f\u304c\u3001\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u30ba\u30ea\u30b5\u30fc\u30c1 \u3084 \u5fc3\u7406\u5b66 \u3084 \u795e\u7d4c\u79d1\u5b66\u306e\u5206\u91ce\u3067\u3082\u5fdc\u7528\u3055\u308c\u3066\u3044\u308b\u3002 \u307b\u3068\u3093\u3069\u306e RL \u7814\u7a76\u306f\u3001\u30de\u30eb\u30b3\u30d5\u6c7a\u5b9a\u904e\u7a0b (MDP) \u306e\u6570\u5b66\u7684\u67a0\u7d44\u307f\u306e\u4e2d\u3067\u884c\u308f\u308c\u308b\u3002 MDP \u306f\u6642\u9593\u306e\u9593\u306b\u53d7\u3051\u53d6\u308b\u7d2f\u7a4d\u7684\u306a \u5831\u916c\u3092\u6700\u5927\u5316 \u306b\u3059\u308b\u305f\u3081\u306b \u74b0\u5883 \u3068\u76f8\u4e92\u4f5c\u7528\u3059\u308b \u610f\u601d\u6c7a\u5b9a \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 \u3092\u542b\u3080\u3002 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u74b0\u5883\u306e\u72b6\u614b\u306e\u5074\u9762\u3092\u77e5\u899a\u3057\u3001\u884c\u70ba\u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001 \u4fa1\u5024 \u3092\u63a8\u5b9a\u3057\u3001\u4fa1\u5024\u3092\u4f7f\u7528\u3057\u3066\u3001\u3088\u308a\u826f\u3044\u3001\u3088\u308a\u826f\u3044\u610f\u601d\u6c7a\u5b9a\u306e \u65b9\u7b56(\u30dd\u30ea\u30b7\u30fc) \u3092\u6642\u9593\u3092\u304b\u3051\u3066\u69cb\u7bc9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 RL \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u3053\u306e\u7a2e\u306e\u554f\u984c\u3092\u89e3\u304f\u305f\u3081\u306e\u65b9\u6cd5\u3067\u3042\u308b\u3002 \u3059\u306a\u308f\u3061\u3001\u5404\u6c7a\u5b9a\u304c\u5f8c\u306b\u5229\u7528\u53ef\u80fd\u306a\u6a5f\u4f1a\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u6c7a\u5b9a\u306e\u9023\u7d9a\u3092\u542b\u3080\u554f\u984c\u3067\u3042\u308a\u3001\u305d\u306e\u5f71\u97ff\u306f\u6c7a\u5b9a\u8ad6\u7684\u3067\u3042\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001\u9577\u671f\u7684\u306a\u76ee\u6a19\u304c\u3042\u308b\u3002 RL \u306f\u3001\u4eba\u9593\u3084\u52d5\u7269\u304c\u901a\u5e38\u306e\u65e5\u5e38\u751f\u6d3b\u306e\u4e2d\u3067\u76f4\u9762\u3059\u308b\u5b66\u7fd2\u3084\u610f\u601d\u6c7a\u5b9a\u306e\u554f\u984c\u306b\u5bfe\u51e6\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u3044\u308b\u3002 RL \u306f\u8a66\u884c\u932f\u8aa4\u5b66\u7fd2\u3060\u3051\u306a\u306e\u304b \u305d\u308c\u3068\u3082\u8a08\u753b\u3092\u542b\u3080\u306e\u304b\uff1f \u00b6 \u73fe\u4ee3\u306e\u5f37\u5316\u5b66\u7fd2\u306f \u74b0\u5883\u306e\u30e2\u30c7\u30eb\u3092\u6301\u305f\u306a\u3044\u8a66\u884c\u932f\u8aa4\u5b66\u7fd2\u3068 \u30e2\u30c7\u30eb\u3092\u7528\u3044\u305f\u610f\u56f3\u7684\u306a\u8a08\u753b\u306e\u4e21\u65b9\u306b\u95a2\u4fc2\u3059\u308b\u3002 \u3053\u3053\u3067\u3044\u3046 \u300c\u30e2\u30c7\u30eb\u300d\u3068\u306f \u74b0\u5883\u306e\u30c0\u30a4\u30ca\u30df\u30af\u30b9\u306e\u30e2\u30c7\u30eb\u3092\u610f\u5473\u3059\u308b\u3002 \u6700\u3082\u5358\u7d14\u306a\u5834\u5408\u306f\u3001\u74b0\u5883\u306e\u72b6\u614b\u9077\u79fb\u78ba\u7387\u3068\u671f\u5f85\u5373\u6642\u5831\u916c\u306e\u63a8\u5b9a\u5024\u3092\u610f\u5473\u3059\u308b\u3002 \u4e00\u822c\u306b\u3001\u30e2\u30c7\u30eb\u3068\u306f \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u884c\u52d5\u306b\u5bfe\u3057\u3066 \u6761\u4ef6\u4ed8\u304d\u306e\u5c06\u6765\u306e\u74b0\u5883\u306e\u5143\u3067\u306e\uff0c\u884c\u52d5\u306b\u3064\u3044\u3066\u306e\u4e88\u6e2c\u3092\u610f\u5473\u3059\u308b\u3002 RL \u3068 \u30cb\u30e5\u30fc\u30ed\u30fb\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u95a2\u4fc2 \u00b6 \u6700\u521d\u306e\u6982\u7b97\u3067\u306f\u3001\u5f37\u5316\u5b66\u7fd2\u3068\u30cb\u30e5\u30fc\u30ed\u30fb\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u540c\u8abf\u3057\u3066\u3044\u308b\u3002 \u5f37\u5316\u5b66\u7fd2\u3068\u3044\u3046\u540d\u524d\u306f\u3001\u5fc3\u7406\u5b66\u304b\u3089\u6765\u3066\u304a\u308a\uff08\u5fc3\u7406\u5b66\u8005\u304c\u3053\u306e\u7528\u8a9e\u3092\u6b63\u78ba\u306b\u4f7f\u3046\u3053\u3068\u306f\u307b\u3068\u3093\u3069\u306a\u3044\uff09\u3001\u30b5\u30a4\u30d0\u30cd\u30c6\u30a3\u30c3\u30af\u30b9\u306e\u4e00\u6614\u524d\u307e\u3067\u3055\u304b\u306e\u307c\u308b\u3002 \u4f8b\u3048\u3070 \u30de\u30fc\u30d3\u30f3\u30fb\u30df\u30f3\u30b9\u30ad\u30fc \u306f 1954 \u5e74\u306e\u8ad6\u6587\u3067\u3053\u306e\u8a00\u8449\u3092\u4f7f\u3063\u3066\u3044\u305f\u3002\u30d0\u30eb\u30c8\u3068\u30b5\u30c3\u30c8\u30f3\u306f 1980 \u5e74\u4ee3\u521d\u982d\u306b\u3053\u306e\u8a00\u8449\u3092\u5fa9\u6d3b\u3055\u305b\u305f\u3002 Neuro-dynamic programming \u3068\u3044\u3046\u540d\u524d\u306f 1996 \u5e74\u306b Bertsekas \u3068 Tsitsiklis \u306b\u3088\u3063\u3066 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u3068 \u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 \u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u3082\u306e\u3068\u3057\u3066\u3001\u3053\u306e\u5206\u91ce\u306e\u6982\u5ff5\u3092\u6355\u3089\u3048\u308b\u305f\u3081\u306b\u4f5c\u3089\u308c\u305f\u3002 \u5b9f\u969b\u306b\u306f \u3069\u3061\u3089\u306e\u540d\u524d\u3082\u3053\u306e\u5206\u91ce\u306e\u3053\u3068\u3092\u3042\u307e\u308a\u8aac\u660e\u3057\u3066\u3044\u306a\u3044\u3002\u6280\u8853\u7684\u306b\u6b63\u78ba\u306b\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3069\u3061\u3089\u306e\u540d\u524d\u3082\u4f7f\u308f\u306a\u3044\u3053\u3068\u3092\u304a\u52e7\u3081\u3059\u308b\u3002 \u3053\u306e\u3088\u3046\u306a\u540d\u524d\u306f \u4e00\u822c\u7684\u306a\u7814\u7a76\u3092\u53c2\u7167\u3059\u308b\u3068\u304d\u306b\u306f\u4fbf\u5229\u3067\u3042\u308b\u3002\u3060\u304c \u30a2\u30a4\u30c7\u30a2\u3092\u6ce8\u610f\u6df1\u304f\u533a\u5225\u3059\u308b\u305f\u3081\u306b\u306f\u4f7f\u308f\u306a\u3044\u3002 \u305d\u306e\u610f\u5473\u3067\u306f \u3053\u306e 2 \u3064\u306e\u540d\u524d\u306e\u53c2\u7167\u5148\u3092\u6ce8\u610f\u6df1\u304f\u533a\u5225\u3057\u3088\u3046\u3068\u3057\u3066\u3082\u610f\u5473\u304c\u306a\u3044\u3002 \u5f37\u5316\u5b66\u7fd2\u306e\u554f\u984c\u306f \u305d\u308c\u304c\u65e5\u4ed8\u3067\u3042\u308b\u3053\u3068\u3067\u3042\u308b\u3002 \u3053\u306e\u5206\u91ce\u306e\u591a\u304f\u306f\u3001\u5b66\u7fd2\u3068\u306f\u5168\u304f\u95a2\u4fc2\u306a\u304f\u3001\u554f\u984c\u306e\u5b8c\u5168\u306a\u77e5\u8b58(\u74b0\u5883\u306e\u30e2\u30c7\u30eb)\u304b\u3089\u306e\u8a08\u753b\u306b\u904e\u304e\u307e\u305b\u3093\u3002 \u8a08\u753b\u3068\u5b66\u7fd2\u306e\u65b9\u6cd5\u306f\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3001\u5b66\u7fd2\u3092\u5f37\u8abf\u3059\u308b\u306e\u306f\u7684\u5916\u308c\u306a\u6c17\u304c\u3057\u307e\u3059\u3002 Reinforcement \u3082\u7279\u306b\u610f\u5473\u304c\u3042\u308b\u3088\u3046\u306b\u306f\u601d\u3048\u307e\u305b\u3093\u3002 neuro-dynamic programming \u306e\u554f\u984c\u3082 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u3082 \u52d5\u7684\u8a08\u753b\u6cd5\u3082\u3001\u3053\u306e\u5206\u91ce\u3067\u306f\u91cd\u8981\u3067\u306f\u306a\u3044\u3068\u3044\u3046\u70b9\u3067\u306f\u4f3c\u3066\u3044\u307e\u3059\u3002 \u30e2\u30f3\u30c6\u30ab\u30eb\u30ed\u6cd5 \u3084\u30ed\u30fc\u30eb\u30a2\u30a6\u30c8\u6cd5 \u306a\u3069 \u52d5\u7684\u8a08\u753b\u6cd5\u3068\u306f\u5168\u304f\u7121\u95a2\u4fc2\u306a\u3082\u306e\u304c\u591a\u304f \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u306f\u95a2\u6570\u8fd1\u4f3c\u6cd5\u306e\u4e00\u3064\u306e\u9078\u629e\u80a2\u306b\u904e\u304e\u306a\u3044\u3002 \u307e\u305f \"neural networks\" \u3068 \"dynamic programming\" \u3068\u3044\u3046\u69cb\u6210\u8981\u7d20\u306e\u540d\u524d\u306f\uff0c\u305d\u308c\u305e\u308c\u306e\u624b\u6cd5\u306e\u8aac\u660e\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u3068\u3082\u8a00\u3048\u307e\u3059\uff0e What advantages does RL offer in Operations Research problems? \u00b6 Using function approximation, RL can apply to much larger state spaces than classical sequential optimization techniques such as dynamic programming. In addition, using simulations (sampling), RL can apply to systems that are too large or complicated to explicitly enumerate the next-state transition probabilities. How does RL relate to Neuroscience? \u00b6 Ideally, the ideas of reinforcement learning could constitute part of a computational theory of what the brain is doing and why. A number of links have been drawn between reinforcement learning and neuroscience, beginning with early models of classical conditioning based on temporal-difference learning (see Barto and Sutton, 1982 ; Sutton and Barto, 1981 , 1990 ; Moore et al., 1986 ), and continuing through work on foraging and prediction learning (see Montague et al., 1995 , 1996 ), and on dopamine neurons in monkeys as a temporal-difference-error distribution system. A good survey paper is available. See also Suri, submitted . A book collects a number of relevant papers. Doya has extensively developed RL models of the basal ganglia . Many of these areas are very active at present and changing rapidly. How does RL relate to the psychology of animal behavior? \u00b6 Broadly speaking, RL works as a pretty good model of instrumental learning, though a detailed argument for this has never been publically made (the closest to this is probably Barto, Sutton and Watkins, 1990 ). On the other hand, the links between classical (or Pavlovian) conditioning and temporal-difference (TD) learning (one of the central elements of RL) are close and widely acknowledged (see Sutton and Barto, 1990 ). Ron Sun has developed hybrid models combining high-level and low-level skill learning, based in part on RL, which make contact with psychological data (see Sun, Merrill, and Peterson, 2001 ). How does RL relate to behaviorism? \u00b6 Formally, RL is unrelated to behaviorism, or at least to the aspects of behaviorism that are widely viewed as undesireable. Behaviorism has been disparaged for focusing exclusively on behavior, refusing to consider what was going on inside the head of the subject. RL of course is all about the algorithms and processes going on inside the agent. For example, we often consider the construction of internal models of the environment within the agent, which is far outside the scope of behaviorism. Nevertheless, RL shares with behaviorism its origins in animal learning theory, and in its focus on the interface with the environment. RL's states and actions are essentially animal learning theory's stimuli and responses. Part of RL's point is that these are the essential common final path for all that goes on in the agent's head. In the end it all comes down to the actions taken and the states perceived. How does RL relate to genetic algorithms? \u00b6 Most work with genetic algorithms simulates evolution, not learning during an individual\\'s life, and because of this is very different from work in RL. That having been said, there are two provisos. First, there is a large body of work on classifier systems that uses or is closely related to genetic algorithms. This work is concerned with learning during a single agent's lifetime (using GAs to organize the components of the agent's mind) and is in fact RL research. The second proviso is that GA work is often related to RL by virtue of being applied to the same problems . For example, GA methods can be applied to evolve a backgammon player and that player can be compared with a player learned by RL methods. In fact, a large portion of systems evolved by GAs are controllers that could alternatively be learned by RL methods. It is tempting here to make a blanket statement about which class of methods is more appropriate or performs better. A crucial distinction is that between problems in which state information is available and those in which it is not. In backgammon, for example, the state of the board is available. In problems like these RL methods seem to have a distinct advantage over evolutionary methods such as GAs. On other problems there is little state information. Suppose you wish to learn a golf swing, or some other ballistic motion that is generally over before useful sensory feedback is available. Then the system is far from Markov and there is little or no advantage provided by addressing the state information during a single swing. In these cases RL methods would not be expected to have an advantage over evolutionary methods. In fact, if they insisted on trying to treat sensory information as state, as in using temporal-difference methods, they may well do worse. Who invented RL? \u00b6 There is plenty of blame here to go around. Minsky, Bellman, Howard, Andreae, Werbos, Barto, Sutton, Watkins... All played important or early roles. See the history from the Sutton and Barto text . Questions about studying and teaching RL \u00b6 What sources do you recommend for an introduction to reinforcement learning? \u00b6 For a general introduction, I recommend my book with Prof. Barto: Reinforcement Learning: An Introduction, by Richard S. Sutton and Andrew G. Barto. MIT Press 1998. Online version . There is also a Japanese translation available. For a more formal treatment, including rigorous proofs, I recommend the text by Bertsekas and Tsitsiklis: Neuro-dynamic Programming , by Dimitri P. Bersekas and John N. Tsitsiklis. Athena Press, 1996. If you don\\'t have time for a textbook-length treatment, your best bet is one or both of these two papers: Reinforcement learning: A survey , by Kaelbling, L.P., Littman, M.L., and Moore, A.W., in the Journal of Artificial Intelligence Research , 4:237--285, 1996. Learning and sequential decision making , by Barto, A.G., Sutton, R.S., & Watkins, C.J.C.H., in Learning and Computational Neuroscience , M. Gabriel and J.W. Moore (Eds.), pp. 539--602, 1990, MIT Press. Nuts and Bolts of RL \u00b6 My state and/or action space is huge! Can I still apply RL? \u00b6 Yes, but you can\\'t get by with simple tables; you will need some kind of function approximation. \\\"Function approximation\\\" refers to the use of a parameterized functional form to represent the value function (and/or the policy), as opposed to a simple table. A table is able to represent the value of each state separately, without confusion, interaction, or generalization with the value of any other state. In typical problems, however, there are far too many states to learn or represent their values individually; instead we have to generalize from observed to states to new, unobserved ones. In principle, this need not be a problem. There are a host of supervised learning methods that can used to approximate functions. However, there are both theoretical and practical pitfalls, and some care is needed. See Chapter 8 of the Sutton and Barto text. For the most part, the theoretical foundation that RL adopts from dynamic programming is no longer valid in the case of function approximation. For example, Q-learning with linear function approximation is known to be unsound. The strongest positive result is for on-policy prediction with linear function approximators ( Tsitsiklis and Van Roy, 1997 ; Tadic, 2001). This is an area of active current research (e.g., see Gordon, 2001 ; Precup, Sutton & Dasgupta, 2001 ). Most RL work assumes the action space is discrete; what about continuous actions? \u00b6 It is true that most RL work has considered discrete action spaces, but this was usually done for convenience, not as an essential limitation of the ideas; and there are exceptions. Nevertheless, it is often not obvious how to extend RL methods to continuous, or even large discrete, action spaces. The key problem is that RL methods typically involve a max or sum over elements of the action space, which is not feasible if the space is large or infinite. The natural approach is to replace the enumeration of actions with a sample of them, and average (just as we replace the enumeration of possible next states with a sample of the, and average). This requires either a very special structure for the action-value function, or else a stored representation of the best known policy. Actor-critic methods are one approach. With no attempt to be exhaustive, some of the earlier RL research with continuous actions includes: Williams, R.J. (1992). Simple statistical gradient-following algorithms for connectionist reinforcement learning. Machine Learning , 8:229-256. Millington, P.J. (1991). Associative Reinforcement Learning for Optimal Control, M.S. Thesis, Massachusetts Institute of Technology, Technical Report CSDL-T-1070. Baird, L. C., & Klopf, A. H. (1993). Reinforcement learning with high-dimensional, continuous actions . Technical Report WL-TR-93-1147. Wright-Patterson Air Force Base Ohio: Wright Laboratory. Santamaria, J.C., Sutton, R.S., Ram, A. (1998). Experiments with reinforcement learning in problems with continuous state and action spaces , Adaptive Behavior 6(2):163-218. Yamada, S., Nakashima, M., and Shiono, S. (1998). Reinforcement learning to train a cooperative network with both discrete and continuous output neurons, IEEE Trans. on Neural Networks 9(6):1502-1508. See also: The papers and thesis of Andrew Smith I would be glad to include new or other work in this list as well. Please send me pointers! What about continuous time? \u00b6 Although the ideas of RL extend naturally, in principle, to continuous time, there has been relatively little work here. The best work on this so far is probably that by Kenji Doya . What is the curse of dimensionality? \u00b6 The curse of dimensionality refers to the tendency of a state space to grow exponentially in its dimension, that is, in the number of state variables. This is of course a problem for methods such as dynamic programming and other table-based RL methods whose complexity scales linearly with the number of states. Many RL methods are able to partially escape the curse by sampling and by function approximation. Curiously, the key step in the tile-coding approach to function approximation is expanding the original state representation into a vastly higher dimensional space. This makes many complex nonlinear relationships in the original representation simpler and linear in the expanded representation. The more dimensions in the expanded representation, the more functions can be learned easily and quickly. I call this the blessing of dimensionality . It is one of the ideas behind modern support vector machines, but in fact it goes back at least as far as the perceptron. Isn\\'t tile-coding just grids, and thus subject to the curse of dimensionality? \u00b6 Basically, no. Tile coding is a quite general idea and many of the ways it can be used avoid the curse of dimensionality. There are at least three common tricks: 1) you can consider subsets of the state variables in separate tilings, 2) you can use overlapping tilings to get vastly higher resolution in high dimensional spaces than would be possible with a simple grid using the same amount of memory, and 3) you can hash down to a smaller space so as only to devote memory to the portions of state space that actually occur. Why do you call it \\\"tile coding\\\" instead of the conventional name, \\\"CMACs\\\"? \u00b6 The idea of tile coding is essentially the same as that underlying CMACs. Without in any way intending to detract from the credit due the pioneers of CMACs (e.g, Albus, Marr, Miller...), sometimes it is better to switch to a new name. The name CMAC stands for, among other things, \\\"Cerebellar Model Articulatory Controller,\\\" which seems pretty inappropriate for the current usage. The original CMAC also used a slightly different algorithm -- a correlation rule rather than an error correction rule. The use in reinforcement learning steps it even farther away from its original use. What remains is not so much a learning system (much less a cerebellar model), but a way of coding states for use by a learning system. The key features of the coding is that it is based on multiple exhaustive partitions (tilings!) of the state space, and that it is particularly suited for implementation on serial, digital computers. Are RL methods stable with function approximation? \u00b6 The situation is a bit complicated and in flux at present. Stability guarantees depend on the specific algorithm and function approximator, and on the way it is used. This is what we knew as of August 2001: For some nonlinear parameterized function approximators (FA), any temporal-difference (TD) learning method (including Q-learning and Sarsa) can become unstable (parameters and estimates going to infinity). Tsitsiklis & Van Roy 1996 TD(lambda) with linear FA converges near the best linear solution when trained on-policy... [Tsitsiklis & Van Roy 1997](http://web.mit.edu/jnt/www/Papers/td.ps) ...but may become unstable when trained off-policy (updating states with a different distribution than that seen when following the policy). [Baird 1995](http://www.leemon.com/papers/residual/res.html#RTFToC1) From which it follows that Q-learning with linear FA can also be unstable. [Baird 1995](http://www.leemon.com/papers/residual/res.html#RTFToC1) Sarsa(lambda), on the other hand, is guaranteed stable, although only the weakest of error bounds has been shown. [Gordon 2001](http://nips.djvuzone.org/djvu/nips13/Gordon.djvu) New linear TD algorithms for the off-policy case have been shown convergent near the best solution. [Precup, Sutton & Dasgupta 2001](sutton_publications.html#offpolicy) Since then, the new Perkins and Precup result from NIPS 2002 has appeared, which may at last have resolved the question positively by proving the convergence of Sarsa(0) with linear function approximation and an appropriate exploration regime. Advice and Opinions \u00b6 I am doing RL with a backpropagation neural network and it doesn\\'t work; what should I do? \u00b6 It is a common error to use a backpropagation neural network as the function approximator in one\\'s first experiments with reinforcement learning, which almost always leads to an unsatisfying failure. The primary reason for the failure is that backpropation is fairly tricky to use effectively, doubly so in an online application like reinforcement learning. It is true that Tesauro used this approach in his strikingly successful backgammon application, but note that at the time of his work with TDgammon, Tesauro was already an expert in applying backprop networks to backgammon. He had already built the world\\'s best computer player of backgammon using backprop networks. He had already learned all the tricks and tweaks and parameter settings to make backprop networks learn well. Unless you have a similarly extensive background of experience, you are likely to be very frustrated using a backprop network as your function approximator in reinforcement learning. The solution is to step back and accept you can only innovate in one area at a time. First make sure you understand RL ideas in the tabular case, and the general principles of function approximation in RL. Then proceed to a better understood function approximator, such as a linear one. In my own work I never go beyond linear function approximators. I just augment them with larger and larger feature vectors, using coarse tile-coding (see e.g., Chapter 8 of the book, Sutton, 1996; Stone and Sutton, 2001). It may be that this approach would always be superior to backpropagation nets, but that remains to be seen. But someone new to learning and RL algorithms certainly should not start with backprop nets. Also see here for some of the details for using TD methods with backprop nets. What is the best algorithm to use? \u00b6 The true answer, of course, is that we don\\'t know, and that it probably hasn\\'t been invented yet. Each algorithm has strengths and weaknesses, and the current favorite changes every few years. In the 1980s actor-critic methods were very popular, but in the 1990s they were largely superceded by value-function methods such as Q-learning and Sarsa. Q-learning is probably still the most widely used, but its instability with function approximation, discovered in 1995, probably rules it out for the long run. Recently policy-based methods such as actor-critic and value-function-less methods, including some of those from the 1980s, have become popular again. So, it seems we must keep our minds and options open as RL moves forward. Why do you disparage the term Q-value? \u00b6 RL researchers often talk about Q-values, Q-tables, and Q-functions, but to me such usage almost always seems like jargon---that is, like apparently precise technical terms that are off-putting to newcomers but really add nothing. In this case the Q- prefix means only that the values, tables, or functions pertain to state-action pairs. There are several pertinent functions that take state-action pairs, for example, that returning the optimal values, that returning the true values for some policy, and those returning the approximation of one of these two values. In most cases, we give these functions different notations, all of which involve the letter Q. That is why I consider the name Q-function to be apparently technical, but in fact imprecise, and thus undesireable, off-putting jargon. If you are just talking in general about the value of an action at a state, then the term I prefer is simply \\\"action value\\\".","title":"RL FAQ"},{"location":"RL-FAQ/#reinforcement-learning-faq-frequently-asked-questions-about-reinforcement-learning","text":"","title":"Reinforcement Learning FAQ: Frequently Asked Questions about Reinforcement Learning"},{"location":"RL-FAQ/#edited-by-rich-sutton","text":"Initiated 8/13/01\\ Last updated 2/4/04 I get many questions about reinforcement learning - how to think about it and how do it successfully in practice. This FAQ is an attempt to pull together in one place some of the more common questions and answers. I have been free with my opinions, but I would also welcome the opinions of others for inclusion here. In you have anything to add to my comments, including whole new questions or totally different answers, please send me a note at rich\\@richsutton.com. General Questions What is Reinforcement Learning? Is RL just trial-and-error learning, or does it include planning? How does RL relate to Neuro-Dynamic Programming? What advantages does RL offer on Operations Research problems? How does RL relate to Neuroscience? How does RL relate to the psychology of animal behavior? How does RL relate to behaviorism? How does RL relate to genetic algorithms? Who invented RL? Questions about studying and teaching RL What sources do you recommend for an introduction to RL? Where can I find an online version of the Sutton and Barto textbook? Where can I find an electronic version of the book suitable for printing? Where can I find the answers to the exercises? I have found an apparent error in the book. What should I do about it? How can I obtain an evaluation copy of the book? Nuts and Bolts of RL My state and/or action space is huge! Can I still apply RL? Most RL work assumes the action space is discrete; what about continuous actions? What about continuous time? What is the curse of dimensionality? Isn\\'t tile-coding just grids, and thus subject to the curse of dimensionality? Why do you call it \\\"tile coding\\\" instead of \\\"CMACs\\\"? Are RL methods stable with function approximation? Advice and Opinions I am doing RL with a backpropagation neural network and it doesn\\'t work; what should I do? What is the best algorithm to use? Why do you disparage the term Q-value? Miscellaneous Questions I am working on a project due soon. Can you help me? I am having trouble with your code. Can you help me get it to work?","title":"Edited by Rich Sutton"},{"location":"RL-FAQ/#general-questions","text":"","title":"General Questions"},{"location":"RL-FAQ/#what-is-reinforcement-learning","text":"\u5f37\u5316\u5b66\u7fd2(RL)\u306f\u3001\u74b0\u5883\u3068\u306e\u76f8\u4e92\u4f5c\u7528\u304b\u3089\u306e\u5b66\u7fd2\u3067\u3042\u308a\u3001\u660e\u793a\u7684\u306a\u6559\u80b2\u304b\u3089\u306e\u5b66\u7fd2\u3067\u306f\u306a\u304f\u3001\u884c\u52d5\u306e\u7d50\u679c\u304b\u3089\u306e\u5b66\u7fd2\u3067\u3042\u308b\u3002 RL \u306f 1990 \u5e74\u4ee3\u306b\u6a5f\u68b0\u5b66\u7fd2\u3084\u4eba\u5de5\u77e5\u80fd\u306e\u5206\u91ce\u3067\u4eba\u6c17\u304c\u51fa\u3066\u304d\u305f\u304c\u3001\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u30ba\u30ea\u30b5\u30fc\u30c1 \u3084 \u5fc3\u7406\u5b66 \u3084 \u795e\u7d4c\u79d1\u5b66\u306e\u5206\u91ce\u3067\u3082\u5fdc\u7528\u3055\u308c\u3066\u3044\u308b\u3002 \u307b\u3068\u3093\u3069\u306e RL \u7814\u7a76\u306f\u3001\u30de\u30eb\u30b3\u30d5\u6c7a\u5b9a\u904e\u7a0b (MDP) \u306e\u6570\u5b66\u7684\u67a0\u7d44\u307f\u306e\u4e2d\u3067\u884c\u308f\u308c\u308b\u3002 MDP \u306f\u6642\u9593\u306e\u9593\u306b\u53d7\u3051\u53d6\u308b\u7d2f\u7a4d\u7684\u306a \u5831\u916c\u3092\u6700\u5927\u5316 \u306b\u3059\u308b\u305f\u3081\u306b \u74b0\u5883 \u3068\u76f8\u4e92\u4f5c\u7528\u3059\u308b \u610f\u601d\u6c7a\u5b9a \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 \u3092\u542b\u3080\u3002 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u74b0\u5883\u306e\u72b6\u614b\u306e\u5074\u9762\u3092\u77e5\u899a\u3057\u3001\u884c\u70ba\u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001 \u4fa1\u5024 \u3092\u63a8\u5b9a\u3057\u3001\u4fa1\u5024\u3092\u4f7f\u7528\u3057\u3066\u3001\u3088\u308a\u826f\u3044\u3001\u3088\u308a\u826f\u3044\u610f\u601d\u6c7a\u5b9a\u306e \u65b9\u7b56(\u30dd\u30ea\u30b7\u30fc) \u3092\u6642\u9593\u3092\u304b\u3051\u3066\u69cb\u7bc9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 RL \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u3053\u306e\u7a2e\u306e\u554f\u984c\u3092\u89e3\u304f\u305f\u3081\u306e\u65b9\u6cd5\u3067\u3042\u308b\u3002 \u3059\u306a\u308f\u3061\u3001\u5404\u6c7a\u5b9a\u304c\u5f8c\u306b\u5229\u7528\u53ef\u80fd\u306a\u6a5f\u4f1a\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u6c7a\u5b9a\u306e\u9023\u7d9a\u3092\u542b\u3080\u554f\u984c\u3067\u3042\u308a\u3001\u305d\u306e\u5f71\u97ff\u306f\u6c7a\u5b9a\u8ad6\u7684\u3067\u3042\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001\u9577\u671f\u7684\u306a\u76ee\u6a19\u304c\u3042\u308b\u3002 RL \u306f\u3001\u4eba\u9593\u3084\u52d5\u7269\u304c\u901a\u5e38\u306e\u65e5\u5e38\u751f\u6d3b\u306e\u4e2d\u3067\u76f4\u9762\u3059\u308b\u5b66\u7fd2\u3084\u610f\u601d\u6c7a\u5b9a\u306e\u554f\u984c\u306b\u5bfe\u51e6\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u3044\u308b\u3002","title":"What is Reinforcement Learning?"},{"location":"RL-FAQ/#rl","text":"\u73fe\u4ee3\u306e\u5f37\u5316\u5b66\u7fd2\u306f \u74b0\u5883\u306e\u30e2\u30c7\u30eb\u3092\u6301\u305f\u306a\u3044\u8a66\u884c\u932f\u8aa4\u5b66\u7fd2\u3068 \u30e2\u30c7\u30eb\u3092\u7528\u3044\u305f\u610f\u56f3\u7684\u306a\u8a08\u753b\u306e\u4e21\u65b9\u306b\u95a2\u4fc2\u3059\u308b\u3002 \u3053\u3053\u3067\u3044\u3046 \u300c\u30e2\u30c7\u30eb\u300d\u3068\u306f \u74b0\u5883\u306e\u30c0\u30a4\u30ca\u30df\u30af\u30b9\u306e\u30e2\u30c7\u30eb\u3092\u610f\u5473\u3059\u308b\u3002 \u6700\u3082\u5358\u7d14\u306a\u5834\u5408\u306f\u3001\u74b0\u5883\u306e\u72b6\u614b\u9077\u79fb\u78ba\u7387\u3068\u671f\u5f85\u5373\u6642\u5831\u916c\u306e\u63a8\u5b9a\u5024\u3092\u610f\u5473\u3059\u308b\u3002 \u4e00\u822c\u306b\u3001\u30e2\u30c7\u30eb\u3068\u306f \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u884c\u52d5\u306b\u5bfe\u3057\u3066 \u6761\u4ef6\u4ed8\u304d\u306e\u5c06\u6765\u306e\u74b0\u5883\u306e\u5143\u3067\u306e\uff0c\u884c\u52d5\u306b\u3064\u3044\u3066\u306e\u4e88\u6e2c\u3092\u610f\u5473\u3059\u308b\u3002","title":"RL \u306f\u8a66\u884c\u932f\u8aa4\u5b66\u7fd2\u3060\u3051\u306a\u306e\u304b \u305d\u308c\u3068\u3082\u8a08\u753b\u3092\u542b\u3080\u306e\u304b\uff1f"},{"location":"RL-FAQ/#rl_1","text":"\u6700\u521d\u306e\u6982\u7b97\u3067\u306f\u3001\u5f37\u5316\u5b66\u7fd2\u3068\u30cb\u30e5\u30fc\u30ed\u30fb\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u540c\u8abf\u3057\u3066\u3044\u308b\u3002 \u5f37\u5316\u5b66\u7fd2\u3068\u3044\u3046\u540d\u524d\u306f\u3001\u5fc3\u7406\u5b66\u304b\u3089\u6765\u3066\u304a\u308a\uff08\u5fc3\u7406\u5b66\u8005\u304c\u3053\u306e\u7528\u8a9e\u3092\u6b63\u78ba\u306b\u4f7f\u3046\u3053\u3068\u306f\u307b\u3068\u3093\u3069\u306a\u3044\uff09\u3001\u30b5\u30a4\u30d0\u30cd\u30c6\u30a3\u30c3\u30af\u30b9\u306e\u4e00\u6614\u524d\u307e\u3067\u3055\u304b\u306e\u307c\u308b\u3002 \u4f8b\u3048\u3070 \u30de\u30fc\u30d3\u30f3\u30fb\u30df\u30f3\u30b9\u30ad\u30fc \u306f 1954 \u5e74\u306e\u8ad6\u6587\u3067\u3053\u306e\u8a00\u8449\u3092\u4f7f\u3063\u3066\u3044\u305f\u3002\u30d0\u30eb\u30c8\u3068\u30b5\u30c3\u30c8\u30f3\u306f 1980 \u5e74\u4ee3\u521d\u982d\u306b\u3053\u306e\u8a00\u8449\u3092\u5fa9\u6d3b\u3055\u305b\u305f\u3002 Neuro-dynamic programming \u3068\u3044\u3046\u540d\u524d\u306f 1996 \u5e74\u306b Bertsekas \u3068 Tsitsiklis \u306b\u3088\u3063\u3066 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u3068 \u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 \u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u3082\u306e\u3068\u3057\u3066\u3001\u3053\u306e\u5206\u91ce\u306e\u6982\u5ff5\u3092\u6355\u3089\u3048\u308b\u305f\u3081\u306b\u4f5c\u3089\u308c\u305f\u3002 \u5b9f\u969b\u306b\u306f \u3069\u3061\u3089\u306e\u540d\u524d\u3082\u3053\u306e\u5206\u91ce\u306e\u3053\u3068\u3092\u3042\u307e\u308a\u8aac\u660e\u3057\u3066\u3044\u306a\u3044\u3002\u6280\u8853\u7684\u306b\u6b63\u78ba\u306b\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3069\u3061\u3089\u306e\u540d\u524d\u3082\u4f7f\u308f\u306a\u3044\u3053\u3068\u3092\u304a\u52e7\u3081\u3059\u308b\u3002 \u3053\u306e\u3088\u3046\u306a\u540d\u524d\u306f \u4e00\u822c\u7684\u306a\u7814\u7a76\u3092\u53c2\u7167\u3059\u308b\u3068\u304d\u306b\u306f\u4fbf\u5229\u3067\u3042\u308b\u3002\u3060\u304c \u30a2\u30a4\u30c7\u30a2\u3092\u6ce8\u610f\u6df1\u304f\u533a\u5225\u3059\u308b\u305f\u3081\u306b\u306f\u4f7f\u308f\u306a\u3044\u3002 \u305d\u306e\u610f\u5473\u3067\u306f \u3053\u306e 2 \u3064\u306e\u540d\u524d\u306e\u53c2\u7167\u5148\u3092\u6ce8\u610f\u6df1\u304f\u533a\u5225\u3057\u3088\u3046\u3068\u3057\u3066\u3082\u610f\u5473\u304c\u306a\u3044\u3002 \u5f37\u5316\u5b66\u7fd2\u306e\u554f\u984c\u306f \u305d\u308c\u304c\u65e5\u4ed8\u3067\u3042\u308b\u3053\u3068\u3067\u3042\u308b\u3002 \u3053\u306e\u5206\u91ce\u306e\u591a\u304f\u306f\u3001\u5b66\u7fd2\u3068\u306f\u5168\u304f\u95a2\u4fc2\u306a\u304f\u3001\u554f\u984c\u306e\u5b8c\u5168\u306a\u77e5\u8b58(\u74b0\u5883\u306e\u30e2\u30c7\u30eb)\u304b\u3089\u306e\u8a08\u753b\u306b\u904e\u304e\u307e\u305b\u3093\u3002 \u8a08\u753b\u3068\u5b66\u7fd2\u306e\u65b9\u6cd5\u306f\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3001\u5b66\u7fd2\u3092\u5f37\u8abf\u3059\u308b\u306e\u306f\u7684\u5916\u308c\u306a\u6c17\u304c\u3057\u307e\u3059\u3002 Reinforcement \u3082\u7279\u306b\u610f\u5473\u304c\u3042\u308b\u3088\u3046\u306b\u306f\u601d\u3048\u307e\u305b\u3093\u3002 neuro-dynamic programming \u306e\u554f\u984c\u3082 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u3082 \u52d5\u7684\u8a08\u753b\u6cd5\u3082\u3001\u3053\u306e\u5206\u91ce\u3067\u306f\u91cd\u8981\u3067\u306f\u306a\u3044\u3068\u3044\u3046\u70b9\u3067\u306f\u4f3c\u3066\u3044\u307e\u3059\u3002 \u30e2\u30f3\u30c6\u30ab\u30eb\u30ed\u6cd5 \u3084\u30ed\u30fc\u30eb\u30a2\u30a6\u30c8\u6cd5 \u306a\u3069 \u52d5\u7684\u8a08\u753b\u6cd5\u3068\u306f\u5168\u304f\u7121\u95a2\u4fc2\u306a\u3082\u306e\u304c\u591a\u304f \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u306f\u95a2\u6570\u8fd1\u4f3c\u6cd5\u306e\u4e00\u3064\u306e\u9078\u629e\u80a2\u306b\u904e\u304e\u306a\u3044\u3002 \u307e\u305f \"neural networks\" \u3068 \"dynamic programming\" \u3068\u3044\u3046\u69cb\u6210\u8981\u7d20\u306e\u540d\u524d\u306f\uff0c\u305d\u308c\u305e\u308c\u306e\u624b\u6cd5\u306e\u8aac\u660e\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u3068\u3082\u8a00\u3048\u307e\u3059\uff0e","title":"RL \u3068 \u30cb\u30e5\u30fc\u30ed\u30fb\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u95a2\u4fc2"},{"location":"RL-FAQ/#what-advantages-does-rl-offer-in-operations-research-problems","text":"Using function approximation, RL can apply to much larger state spaces than classical sequential optimization techniques such as dynamic programming. In addition, using simulations (sampling), RL can apply to systems that are too large or complicated to explicitly enumerate the next-state transition probabilities.","title":"What advantages does RL offer in Operations Research problems?"},{"location":"RL-FAQ/#how-does-rl-relate-to-neuroscience","text":"Ideally, the ideas of reinforcement learning could constitute part of a computational theory of what the brain is doing and why. A number of links have been drawn between reinforcement learning and neuroscience, beginning with early models of classical conditioning based on temporal-difference learning (see Barto and Sutton, 1982 ; Sutton and Barto, 1981 , 1990 ; Moore et al., 1986 ), and continuing through work on foraging and prediction learning (see Montague et al., 1995 , 1996 ), and on dopamine neurons in monkeys as a temporal-difference-error distribution system. A good survey paper is available. See also Suri, submitted . A book collects a number of relevant papers. Doya has extensively developed RL models of the basal ganglia . Many of these areas are very active at present and changing rapidly.","title":"How does RL relate to Neuroscience?"},{"location":"RL-FAQ/#how-does-rl-relate-to-the-psychology-of-animal-behavior","text":"Broadly speaking, RL works as a pretty good model of instrumental learning, though a detailed argument for this has never been publically made (the closest to this is probably Barto, Sutton and Watkins, 1990 ). On the other hand, the links between classical (or Pavlovian) conditioning and temporal-difference (TD) learning (one of the central elements of RL) are close and widely acknowledged (see Sutton and Barto, 1990 ). Ron Sun has developed hybrid models combining high-level and low-level skill learning, based in part on RL, which make contact with psychological data (see Sun, Merrill, and Peterson, 2001 ).","title":"How does RL relate to the psychology of animal behavior?"},{"location":"RL-FAQ/#how-does-rl-relate-to-behaviorism","text":"Formally, RL is unrelated to behaviorism, or at least to the aspects of behaviorism that are widely viewed as undesireable. Behaviorism has been disparaged for focusing exclusively on behavior, refusing to consider what was going on inside the head of the subject. RL of course is all about the algorithms and processes going on inside the agent. For example, we often consider the construction of internal models of the environment within the agent, which is far outside the scope of behaviorism. Nevertheless, RL shares with behaviorism its origins in animal learning theory, and in its focus on the interface with the environment. RL's states and actions are essentially animal learning theory's stimuli and responses. Part of RL's point is that these are the essential common final path for all that goes on in the agent's head. In the end it all comes down to the actions taken and the states perceived.","title":"How does RL relate to behaviorism?"},{"location":"RL-FAQ/#how-does-rl-relate-to-genetic-algorithms","text":"Most work with genetic algorithms simulates evolution, not learning during an individual\\'s life, and because of this is very different from work in RL. That having been said, there are two provisos. First, there is a large body of work on classifier systems that uses or is closely related to genetic algorithms. This work is concerned with learning during a single agent's lifetime (using GAs to organize the components of the agent's mind) and is in fact RL research. The second proviso is that GA work is often related to RL by virtue of being applied to the same problems . For example, GA methods can be applied to evolve a backgammon player and that player can be compared with a player learned by RL methods. In fact, a large portion of systems evolved by GAs are controllers that could alternatively be learned by RL methods. It is tempting here to make a blanket statement about which class of methods is more appropriate or performs better. A crucial distinction is that between problems in which state information is available and those in which it is not. In backgammon, for example, the state of the board is available. In problems like these RL methods seem to have a distinct advantage over evolutionary methods such as GAs. On other problems there is little state information. Suppose you wish to learn a golf swing, or some other ballistic motion that is generally over before useful sensory feedback is available. Then the system is far from Markov and there is little or no advantage provided by addressing the state information during a single swing. In these cases RL methods would not be expected to have an advantage over evolutionary methods. In fact, if they insisted on trying to treat sensory information as state, as in using temporal-difference methods, they may well do worse.","title":"How does RL relate to genetic algorithms?"},{"location":"RL-FAQ/#who-invented-rl","text":"There is plenty of blame here to go around. Minsky, Bellman, Howard, Andreae, Werbos, Barto, Sutton, Watkins... All played important or early roles. See the history from the Sutton and Barto text .","title":"Who invented RL?"},{"location":"RL-FAQ/#questions-about-studying-and-teaching-rl","text":"","title":"Questions about studying and teaching RL"},{"location":"RL-FAQ/#what-sources-do-you-recommend-for-an-introduction-to-reinforcement-learning","text":"For a general introduction, I recommend my book with Prof. Barto: Reinforcement Learning: An Introduction, by Richard S. Sutton and Andrew G. Barto. MIT Press 1998. Online version . There is also a Japanese translation available. For a more formal treatment, including rigorous proofs, I recommend the text by Bertsekas and Tsitsiklis: Neuro-dynamic Programming , by Dimitri P. Bersekas and John N. Tsitsiklis. Athena Press, 1996. If you don\\'t have time for a textbook-length treatment, your best bet is one or both of these two papers: Reinforcement learning: A survey , by Kaelbling, L.P., Littman, M.L., and Moore, A.W., in the Journal of Artificial Intelligence Research , 4:237--285, 1996. Learning and sequential decision making , by Barto, A.G., Sutton, R.S., & Watkins, C.J.C.H., in Learning and Computational Neuroscience , M. Gabriel and J.W. Moore (Eds.), pp. 539--602, 1990, MIT Press.","title":"What sources do you recommend for an introduction to reinforcement learning?"},{"location":"RL-FAQ/#nuts-and-bolts-of-rl","text":"","title":"Nuts and Bolts of RL"},{"location":"RL-FAQ/#my-state-andor-action-space-is-huge-can-i-still-apply-rl","text":"Yes, but you can\\'t get by with simple tables; you will need some kind of function approximation. \\\"Function approximation\\\" refers to the use of a parameterized functional form to represent the value function (and/or the policy), as opposed to a simple table. A table is able to represent the value of each state separately, without confusion, interaction, or generalization with the value of any other state. In typical problems, however, there are far too many states to learn or represent their values individually; instead we have to generalize from observed to states to new, unobserved ones. In principle, this need not be a problem. There are a host of supervised learning methods that can used to approximate functions. However, there are both theoretical and practical pitfalls, and some care is needed. See Chapter 8 of the Sutton and Barto text. For the most part, the theoretical foundation that RL adopts from dynamic programming is no longer valid in the case of function approximation. For example, Q-learning with linear function approximation is known to be unsound. The strongest positive result is for on-policy prediction with linear function approximators ( Tsitsiklis and Van Roy, 1997 ; Tadic, 2001). This is an area of active current research (e.g., see Gordon, 2001 ; Precup, Sutton & Dasgupta, 2001 ).","title":"My state and/or action space is huge! Can I still apply RL?"},{"location":"RL-FAQ/#most-rl-work-assumes-the-action-space-is-discrete-what-about-continuous-actions","text":"It is true that most RL work has considered discrete action spaces, but this was usually done for convenience, not as an essential limitation of the ideas; and there are exceptions. Nevertheless, it is often not obvious how to extend RL methods to continuous, or even large discrete, action spaces. The key problem is that RL methods typically involve a max or sum over elements of the action space, which is not feasible if the space is large or infinite. The natural approach is to replace the enumeration of actions with a sample of them, and average (just as we replace the enumeration of possible next states with a sample of the, and average). This requires either a very special structure for the action-value function, or else a stored representation of the best known policy. Actor-critic methods are one approach. With no attempt to be exhaustive, some of the earlier RL research with continuous actions includes: Williams, R.J. (1992). Simple statistical gradient-following algorithms for connectionist reinforcement learning. Machine Learning , 8:229-256. Millington, P.J. (1991). Associative Reinforcement Learning for Optimal Control, M.S. Thesis, Massachusetts Institute of Technology, Technical Report CSDL-T-1070. Baird, L. C., & Klopf, A. H. (1993). Reinforcement learning with high-dimensional, continuous actions . Technical Report WL-TR-93-1147. Wright-Patterson Air Force Base Ohio: Wright Laboratory. Santamaria, J.C., Sutton, R.S., Ram, A. (1998). Experiments with reinforcement learning in problems with continuous state and action spaces , Adaptive Behavior 6(2):163-218. Yamada, S., Nakashima, M., and Shiono, S. (1998). Reinforcement learning to train a cooperative network with both discrete and continuous output neurons, IEEE Trans. on Neural Networks 9(6):1502-1508. See also: The papers and thesis of Andrew Smith I would be glad to include new or other work in this list as well. Please send me pointers!","title":"Most RL work assumes the action space is discrete; what about continuous actions?"},{"location":"RL-FAQ/#what-about-continuous-time","text":"Although the ideas of RL extend naturally, in principle, to continuous time, there has been relatively little work here. The best work on this so far is probably that by Kenji Doya .","title":"What about continuous time?"},{"location":"RL-FAQ/#what-is-the-curse-of-dimensionality","text":"The curse of dimensionality refers to the tendency of a state space to grow exponentially in its dimension, that is, in the number of state variables. This is of course a problem for methods such as dynamic programming and other table-based RL methods whose complexity scales linearly with the number of states. Many RL methods are able to partially escape the curse by sampling and by function approximation. Curiously, the key step in the tile-coding approach to function approximation is expanding the original state representation into a vastly higher dimensional space. This makes many complex nonlinear relationships in the original representation simpler and linear in the expanded representation. The more dimensions in the expanded representation, the more functions can be learned easily and quickly. I call this the blessing of dimensionality . It is one of the ideas behind modern support vector machines, but in fact it goes back at least as far as the perceptron.","title":"What is the curse of dimensionality?"},{"location":"RL-FAQ/#isnt-tile-coding-just-grids-and-thus-subject-to-the-curse-of-dimensionality","text":"Basically, no. Tile coding is a quite general idea and many of the ways it can be used avoid the curse of dimensionality. There are at least three common tricks: 1) you can consider subsets of the state variables in separate tilings, 2) you can use overlapping tilings to get vastly higher resolution in high dimensional spaces than would be possible with a simple grid using the same amount of memory, and 3) you can hash down to a smaller space so as only to devote memory to the portions of state space that actually occur.","title":"Isn\\'t tile-coding just grids, and thus subject to the curse of dimensionality?"},{"location":"RL-FAQ/#why-do-you-call-it-tile-coding-instead-of-the-conventional-name-cmacs","text":"The idea of tile coding is essentially the same as that underlying CMACs. Without in any way intending to detract from the credit due the pioneers of CMACs (e.g, Albus, Marr, Miller...), sometimes it is better to switch to a new name. The name CMAC stands for, among other things, \\\"Cerebellar Model Articulatory Controller,\\\" which seems pretty inappropriate for the current usage. The original CMAC also used a slightly different algorithm -- a correlation rule rather than an error correction rule. The use in reinforcement learning steps it even farther away from its original use. What remains is not so much a learning system (much less a cerebellar model), but a way of coding states for use by a learning system. The key features of the coding is that it is based on multiple exhaustive partitions (tilings!) of the state space, and that it is particularly suited for implementation on serial, digital computers.","title":"Why do you call it \\\"tile coding\\\" instead of the conventional name, \\\"CMACs\\\"?"},{"location":"RL-FAQ/#are-rl-methods-stable-with-function-approximation","text":"The situation is a bit complicated and in flux at present. Stability guarantees depend on the specific algorithm and function approximator, and on the way it is used. This is what we knew as of August 2001: For some nonlinear parameterized function approximators (FA), any temporal-difference (TD) learning method (including Q-learning and Sarsa) can become unstable (parameters and estimates going to infinity). Tsitsiklis & Van Roy 1996 TD(lambda) with linear FA converges near the best linear solution when trained on-policy... [Tsitsiklis & Van Roy 1997](http://web.mit.edu/jnt/www/Papers/td.ps) ...but may become unstable when trained off-policy (updating states with a different distribution than that seen when following the policy). [Baird 1995](http://www.leemon.com/papers/residual/res.html#RTFToC1) From which it follows that Q-learning with linear FA can also be unstable. [Baird 1995](http://www.leemon.com/papers/residual/res.html#RTFToC1) Sarsa(lambda), on the other hand, is guaranteed stable, although only the weakest of error bounds has been shown. [Gordon 2001](http://nips.djvuzone.org/djvu/nips13/Gordon.djvu) New linear TD algorithms for the off-policy case have been shown convergent near the best solution. [Precup, Sutton & Dasgupta 2001](sutton_publications.html#offpolicy) Since then, the new Perkins and Precup result from NIPS 2002 has appeared, which may at last have resolved the question positively by proving the convergence of Sarsa(0) with linear function approximation and an appropriate exploration regime.","title":"Are RL methods stable with function approximation?"},{"location":"RL-FAQ/#advice-and-opinions","text":"","title":"Advice and Opinions"},{"location":"RL-FAQ/#i-am-doing-rl-with-a-backpropagation-neural-network-and-it-doesnt-work-what-should-i-do","text":"It is a common error to use a backpropagation neural network as the function approximator in one\\'s first experiments with reinforcement learning, which almost always leads to an unsatisfying failure. The primary reason for the failure is that backpropation is fairly tricky to use effectively, doubly so in an online application like reinforcement learning. It is true that Tesauro used this approach in his strikingly successful backgammon application, but note that at the time of his work with TDgammon, Tesauro was already an expert in applying backprop networks to backgammon. He had already built the world\\'s best computer player of backgammon using backprop networks. He had already learned all the tricks and tweaks and parameter settings to make backprop networks learn well. Unless you have a similarly extensive background of experience, you are likely to be very frustrated using a backprop network as your function approximator in reinforcement learning. The solution is to step back and accept you can only innovate in one area at a time. First make sure you understand RL ideas in the tabular case, and the general principles of function approximation in RL. Then proceed to a better understood function approximator, such as a linear one. In my own work I never go beyond linear function approximators. I just augment them with larger and larger feature vectors, using coarse tile-coding (see e.g., Chapter 8 of the book, Sutton, 1996; Stone and Sutton, 2001). It may be that this approach would always be superior to backpropagation nets, but that remains to be seen. But someone new to learning and RL algorithms certainly should not start with backprop nets. Also see here for some of the details for using TD methods with backprop nets.","title":"I am doing RL with a backpropagation neural network and it doesn\\'t work; what should I do?"},{"location":"RL-FAQ/#what-is-the-best-algorithm-to-use","text":"The true answer, of course, is that we don\\'t know, and that it probably hasn\\'t been invented yet. Each algorithm has strengths and weaknesses, and the current favorite changes every few years. In the 1980s actor-critic methods were very popular, but in the 1990s they were largely superceded by value-function methods such as Q-learning and Sarsa. Q-learning is probably still the most widely used, but its instability with function approximation, discovered in 1995, probably rules it out for the long run. Recently policy-based methods such as actor-critic and value-function-less methods, including some of those from the 1980s, have become popular again. So, it seems we must keep our minds and options open as RL moves forward.","title":"What is the best algorithm to use?"},{"location":"RL-FAQ/#why-do-you-disparage-the-term-q-value","text":"RL researchers often talk about Q-values, Q-tables, and Q-functions, but to me such usage almost always seems like jargon---that is, like apparently precise technical terms that are off-putting to newcomers but really add nothing. In this case the Q- prefix means only that the values, tables, or functions pertain to state-action pairs. There are several pertinent functions that take state-action pairs, for example, that returning the optimal values, that returning the true values for some policy, and those returning the approximation of one of these two values. In most cases, we give these functions different notations, all of which involve the letter Q. That is why I consider the name Q-function to be apparently technical, but in fact imprecise, and thus undesireable, off-putting jargon. If you are just talking in general about the value of an action at a state, then the term I prefer is simply \\\"action value\\\".","title":"Why do you disparage the term Q-value?"},{"location":"Reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python/","text":"TD (\u6642\u9593\u5dee)\u5b66\u7fd2, SARSA, \u671f\u5f85 SARSA, Q \u5b66\u7fd2 \u3068 Python \u5b9f\u88c5 \u00b6 title: Reinforcement learning: Temporal-Difference, SARSA, Q-Learning & Expected SARSA in python author: Vaibhav Kumar Date: May 9, 2019 Original: https://towardsdatascience.com/reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python-9fecfda7467e \u5f37\u5316\u5b66\u7fd2\u306e\u4e2d\u5fc3\u7684\u3067\u65ac\u65b0\u306a\u30a2\u30a4\u30c7\u30a2\u3092\u4e00\u3064\u6319\u3052\u308b\u3068\u3059\u308c\u3070\u3001\u305d\u308c\u306f\u9593\u9055\u3044\u306a\u304f\u6642\u9593\u5dee\uff08TD\uff09\u5b66\u7fd2\u3067\u3042\u308d\u3046\u3002 -- \u30a2\u30f3\u30c9\u30ea\u30e5\u30fc\u30fb\u30d0\u30eb\u30c8\uff0c \u30ea\u30c1\u30e3\u30fc\u30c9\u30fbS\u30fb\u30b5\u30c3\u30c8\u30f3 \u524d\u63d0\u77e5\u8b58 \u00b6 \u5f37\u5316\u5b66\u7fd2\u306e\u57fa\u672c \u30de\u30eb\u30b3\u30d5\u9023\u9396, \u30de\u30eb\u30b3\u30d5\u6c7a\u5b9a\u30d7\u30ed\u30bb\u30b9(MDP) \u30d9\u30eb\u30de\u30f3\u65b9\u7a0b\u5f0f \u4fa1\u5024\uff0c\u65b9\u7b56\u95a2\u6570\uff0c\u53cd\u5fa9 \u5f37\u5316\u5b66\u7fd2\u306b\u304a\u3051\u308b\u30e2\u30c7\u30eb\u4f9d\u5b58\u5b66\u7fd2\u3068\u30e2\u30c7\u30eb\u81ea\u7531\u5b66\u7fd2 \u00b6 \u30e2\u30c7\u30eb\u4f9d\u5b58 RL\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08\u3059\u306a\u308f\u3061\u3001\u5024\u3068\u65b9\u7b56\u53cd\u5fa9\uff09\u306f\uff0c\u9077\u79fb\u8868\u306e\u52a9\u3051\u3092\u501f\u308a\u3066\u52d5\u4f5c\u3057\u307e\u3059\u3002 \u9077\u79fb\u8868\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u5b58\u5728\u3059\u308b\u4e16\u754c\u3067\u6210\u529f\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u3059\u3079\u3066\u306e\u77e5\u8b58\u304c\u66f8\u304b\u308c\u305f\u30e9\u30a4\u30d5\u30cf\u30c3\u30af\u672c\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5f53\u7136\u306e\u3053\u3068\u306a\u304c\u3089\u3001\u305d\u306e\u3088\u3046\u306a\u672c\u3092\u66f8\u304f\u306e\u306f\u975e\u5e38\u306b\u9762\u5012\u3067\u3001\u307b\u3068\u3093\u3069\u306e\u5834\u5408\u4e0d\u53ef\u80fd\u3067\u3059\u3002 Temporal Difference \u306f\u30e2\u30c7\u30eb\u81ea\u7531\u578b\u306e\u5f37\u5316\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3059\u3002 \u3053\u308c\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u3059\u3050\u306b\u5165\u624b\u53ef\u80fd\u306a\u5168\u77e5\u5168\u80fd\u306e\u30cf\u30c3\u30af\u30d6\u30c3\u30af\uff08\u9077\u79fb\u8868\uff09\u3067\u306f\u306a\u304f\u3001\u5b9f\u969b\u306e\u7d4c\u9a13\u3092\u901a\u3057\u3066\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u3053\u308c\u306b\u3088\u308a\u3001\u78ba\u7387\u7684\u306a\u8981\u7d20\u3068\u72b6\u614b-\u884c\u70ba\u30da\u30a2\u306e\u5927\u898f\u6a21\u306a\u7cfb\u5217\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u5831\u916c\u30b7\u30b9\u30c6\u30e0\u3068\u9077\u79fb\u30b7\u30b9\u30c6\u30e0\u306b\u3064\u3044\u3066\u306f\u4f55\u3082\u77e5\u308a\u307e\u305b\u3093\u3002 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u4efb\u610f\u306e\u72b6\u614b\u3067\u4efb\u610f\u306e\u884c\u52d5\u3092\u3068\u3063\u305f\u5834\u5408\u306b\u4f55\u304c\u8d77\u3053\u308b\u304b\u3092\u77e5\u308a\u307e\u305b\u3093\u3002 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u300c\u4e16\u754c\u300d\u3084\u300c\u74b0\u5883\u300d\u3068\u76f8\u4e92\u4f5c\u7528\u3057\u3001\u81ea\u5206\u81ea\u8eab\u3067\u898b\u3064\u3051\u51fa\u3055\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002 TD \u5b66\u7fd2 (\u6642\u5dee\u5b66\u7fd2) \u00b6 TD \u6642\u9593\u5dee\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u53d6\u308b\u4e00\u3064\u4e00\u3064\u306e\u884c\u52d5\u3092\u901a\u3057\u3066\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002 TD \u5b66\u7fd2\u3067\u306f\u3001\u30a8\u30d4\u30bd\u30fc\u30c9\uff08\u30b4\u30fc\u30eb\u3084\u7d42\u4e86\u72b6\u614b\u306b\u5230\u9054\u3059\u308b\uff09\u3054\u3068\u3067\u306f\u306a\u304f\u3001\u30bf\u30a4\u30e0\u30b9\u30c6\u30c3\u30d7\uff08\u884c\u52d5\uff09\u3054\u3068\u306b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u77e5\u8b58\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002 \\text{\u65b0\u3057\u3044\u72b6\u614b\u8a55\u4fa1} \\leftarrow \\text{\u53e4\u3044\u72b6\u614b\u8a55\u4fa1} + \\text{\u30b9\u30c6\u30c3\u30d7\u30b5\u30a4\u30ba}\\left[\\text{\u76ee\u6a19} - \\text{\u53e4\u3044\u72b6\u614b\u8a55\u4fa1}\\right] \u4e0a\u5f0f\u306e \u76ee\u6a19-\u53e4\u3044\u72b6\u614b\u8a55\u4fa1 \u3092\u76ee\u6a19\u8aa4\u5dee\u3068\u547c\u3073\u307e\u3059\u3002 \u30b9\u30c6\u30c3\u30d7\u30b5\u30a4\u30ba \u306f \u901a\u5e38 \\alpha \u3067\u8868\u3055\u308c\u3001\u5b66\u7fd2\u7387\u3068\u547c\u3070\u308c\u307e\u3059\u3002 \\alpha \u306e\u5024\u306f 0 \u304b\u3089 1 \u306e\u9593\u306b\u306a\u308a\u307e\u3059\u3002 \u4e0a\u5f0f\u306f\u3001\u30bf\u30a4\u30e0\u30b9\u30c6\u30c3\u30d7\u3054\u3068\u306b\u66f4\u65b0\u3092\u884c\u3046\u3053\u3068\u3067\u3001 Target \u3092\u9054\u6210\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002 \u76ee\u6a19\u3068\u306f\u72b6\u614b\u306e\u52b9\u7528(\u95a2\u6570)\u3067\u3059\u3002 \u52b9\u7528\u304c\u9ad8\u3051\u308c\u3070\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u79fb\u884c\u3057\u3084\u3059\u3044\u72b6\u614b\u306b\u306a\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u3053\u3053\u3067\u306f Bellman \u65b9\u7a0b\u5f0f \u3092\u77e5\u3063\u3066\u3044\u308b \u3068\u4eee\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 \u30d9\u30eb\u30de\u30f3\u65b9\u7a0b\u5f0f\u304b\u3089\uff0c\u3042\u308b\u72b6\u614b\u306e\u52b9\u7528\u306f\u3001\u4ee5\u4e0b\u306e\u5272\u5f15\u5831\u916c\u306e\u671f\u5f85\u5024\u3067\u3059\u3002 \\text{\u76ee\u6a19}=\\mathbb{E}_{\\pi}\\left[\\sum_{k=0}^{\\infty}\\gamma^k r_{t+k+1}\\right] \u5e73\u305f\u304f\u8a00\u3048\u3070\u3001\u6211\u3005\u306f\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u4e16\u754c\u306b\u81ea\u7531\u306b\u8d70\u3089\u305b\u307e\u3059\u3002 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u72b6\u614b\u3001\u5831\u916c\u3001\u9077\u79fb\u306b\u3064\u3044\u3066\u306e\u77e5\u8b58\u3092\u6301\u3063\u3066\u3044\u307e\u305b\u3093\u3002 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u74b0\u5883\u3068\u76f8\u4e92\u4f5c\u7528\u3057\uff08\u30e9\u30f3\u30c0\u30e0\u306a\u884c\u52d5\u3084\u60c5\u5831\u306b\u57fa\u3065\u3044\u305f\u884c\u52d5\u3092\u3068\u308b\uff09\u3001\u3059\u3079\u3066\u306e\u884c\u52d5\u3092\u3068\u3063\u305f\u5f8c\u306b\u65e2\u5b58\u306e\u77e5\u8b58\u3092\u7d99\u7d9a\u7684\u306b\u66f4\u65b0\u3059\u308b\u3053\u3068\u3067\u3001 \u65b0\u305f\u306a\u63a8\u5b9a\u5024\uff08\u72b6\u614b\u3068\u884c\u52d5\u306e\u30da\u30a2\u306e\u5024\uff09\u3092\u5b66\u7fd2\u3057\u307e\u3059\u3002 \u3053\u308c\u307e\u3067\u306e\u8b70\u8ad6\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u3044\u304f\u3064\u304b\u306e\u7591\u554f\u304c\u51fa\u3066\u304d\u307e\u3059\u3002 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3069\u306e\u3088\u3046\u306b\u74b0\u5883\u3068\u76f8\u4e92\u4f5c\u7528\u3059\u308b\u306e\u304b\uff1f \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3069\u306e\u3088\u3046\u306b\u884c\u52d5\u3092\u9078\u629e\u3059\u308b\u306e\u304b\u3001\u3059\u306a\u308f\u3061 \u7279\u5b9a\u306e\u72b6\u614b\uff08\u30dd\u30ea\u30b7\u30fc\uff09 \u3067\u3069\u306e\u3088\u3046\u306a\u884c\u52d5\u3092\u3068\u308b\u306e\u304b\uff1f \u3053\u308c\u304c SARSA \u3068 Q-\u5b66\u7fd2 \u306e\u51fa\u756a\u3067\u3059\u3002 \u3053\u308c\u3089\u306f\u3001\u74b0\u5883\u306e\u4e2d\u3067\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u8a98\u5c0e\u3057\u3001\u8208\u5473\u6df1\u3044\u3053\u3068\u3092\u5b66\u3076\u3053\u3068\u3092\u53ef\u80fd\u306b\u3059\u308b \uff12 \u3064\u306e \u5236\u5fa1\u30dd\u30ea\u30b7\u30fc\u3067\u3059\u3002 \u3053\u308c\u3089\u3092\u8aac\u660e\u3059\u308b\u524d\u306b\u3001\u74b0\u5883\u3068\u306f\u4f55\u304b\u3092\u8b70\u8ad6\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002 \u74b0\u5883 \u00b6 \u74b0\u5883\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u96e2\u6563\u7684\u306a\u72b6\u614b\u3092\u89b3\u5bdf\u3057\u3001\u884c\u52d5\u3092\u3068\u308a\u3001\u305d\u306e\u884c\u52d5\u3092\u3068\u308b\u3053\u3068\u3067\u5831\u916c\u3092\u89b3\u5bdf\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30df\u30cb\u4e16\u754c\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30d3\u30c7\u30aa\u30b2\u30fc\u30e0\u306f\u74b0\u5883\u3067\u3042\u308a\u3001\u81ea\u5206\u81ea\u8eab\u304c\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3067\u3042\u308b\u3068\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002 \u30b2\u30fc\u30e0\u300c\u30c9\u30a5\u30fc\u30e0\u300d\u3067\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3067\u3042\u308b\u3042\u306a\u305f\u306f\u3001\u72b6\u614b\uff08\u753b\u9762\u306e\u30d5\u30ec\u30fc\u30e0\uff09\u3092\u89b3\u5bdf\u3057\u3001\u30a2\u30af\u30b7\u30e7\u30f3\uff08\u524d\u9032\u3001\u5f8c\u9000\u3001\u30b8\u30e3\u30f3\u30d7\u3001\u30b7\u30e5\u30fc\u30c8\u306a\u3069\u306e\u30ad\u30fc\u3092\u62bc\u3059\uff09\u3092\u884c\u3044\u3001\u5831\u916c\u3092\u89b3\u5bdf\u3057\u307e\u3059\u3002 \u6575\u3092\u6bba\u305b\u3070\u559c\u3073 (\u52b9\u7528) \u304c\u5f97\u3089\u308c\u3001\u524d\u9032\u3057\u3066\u3044\u308b\u9593\u306f\u30d7\u30e9\u30b9\u306e\u5831\u916c\u304c\u5f97\u3089\u308c\u3001\u3042\u307e\u308a\u5831\u916c\u306f\u5f97\u3089\u308c\u307e\u305b\u3093\u304c\u3001\u5c06\u6765\u306e\u5831\u916c(\u6575\u3092\u898b\u3064\u3051\u3066\u6bba\u3059) \u3092\u5f97\u308b\u305f\u3081\u306b \u30b2\u30fc\u30e0\u3092\u3057\u305f\u3044\u3068\u601d\u3046\u3067\u3057\u3087\u3046\u3002 \u3053\u306e\u3088\u3046\u306a\u74b0\u5883\u3092\u4f5c\u308b\u306e\u306f\u9762\u5012\u3067\u5927\u5909\u306a\u4f5c\u696d\u3067\u3059 ( 7\u4eba\u306e\u30c1\u30fc\u30e0\u304c1\u5e74\u4ee5\u4e0a\u304b\u3051\u3066 Doom \u3092\u958b\u767a )\u3002 OpenAI gym \u304c\u767b\u5834\u3057\u305f\u3053\u3068\u306f\u798f\u97f3\u3067\u3059\u3002 gym \u306f \u69d8\u3005\u306a\u5f37\u5316\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u30c6\u30b9\u30c8\u3067\u304d\u308b\u74b0\u5883\u304c\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u308b Python \u30e9\u30a4\u30d6\u30e9\u30ea \u3067\u3059\u3002 \u7d50\u679c\u3092\u5171\u6709\u3057\u305f\u308a\u3001\u5206\u6790\u3057\u305f\u308a\u3001\u6bd4\u8f03\u3057\u305f\u308a\u3059\u308b\u305f\u3081\u306e\u5b66\u8853\u7684\u306a\u6a19\u6e96\u74b0\u5883\u3068\u3057\u3066\u306e\u5730\u4f4d\u3092\u78ba\u7acb\u3057\u3066\u3044\u307e\u3059\u3002 Gym \u306f \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u304c\u6574\u5099\u3055\u308c\u3066\u3044\u3066\u3001\u4f7f\u3044\u3084\u3059\u3044\u3067\u3059\u3002 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3067\u6163\u308c\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u5f37\u5316\u5b66\u7fd2\u306e\u5fdc\u7528\u306e\u305f\u3081\u306b\u306f\u3001\u81ea\u5206\u3067\u74b0\u5883\u3092\u4f5c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u5e38\u306b gym \u4e92\u63db\u306e\u74b0\u5883\u3092\u53c2\u8003\u306b\u3057\u3066\u66f8\u3044\u3066\u3001\u8ab0\u3082\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u516c\u958b\u3057\u3066\u304a\u304f\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 Gym \u306e \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3081\u3070\u3001\u516c\u958b\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u9762\u5012\u3060\u3051\u3069\u697d\u3057\u3044\uff01 \u3068\u601d\u3063\u3066\u3044\u308b\u4eba\u306b\u306f\u304a\u3059\u3059\u3081\u3067\u3059\u3002 SARSA \u00b6 SARSA \u3068\u306f\uff0cState-Action-Reward-State-Action \u306e\u7701\u7565\u5f62\u3067\u3059 SARSA \u3068\u306f\u306f\u30aa\u30f3\u30dd\u30ea\u30b7\u30fc\u306a \u6642\u9593\u5dee\u5236\u5fa1\u65b9\u5f0f \u3067\u3059\u3002 \u30dd\u30ea\u30b7\u30fc (\u65b9\u7b56) \u3068\u306f \u72b6\u614b \u3068 \u52d5\u4f5c(\u884c\u52d5) \u3068\u306e\u30da\u30a2\u306e\u3053\u3068\u3067\u3059\u3002 python \u3067\u306f \u72b6\u614b \u3092 \u30ad\u30fc\u3001\u52d5\u4f5c(\u884c\u52d5) \u3092 \u5024 \u3068\u3059\u308b \u8f9e\u66f8 dict \u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30dd\u30ea\u30b7\u30fc(\u65b9\u7b56) \u306f\u5404\u72b6\u614b \u3067\u53d6\u308b\u3079\u304d \u52d5\u4f5c\uff08\u884c\u52d5\uff09 \u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\u3002 \u30aa\u30f3\u30dd\u30ea\u30b7\u30fc\u5236\u5fa1\u3067\u306f\u3001\u5b66\u7fd2\u4e2d\u306b\u3042\u308b \u30dd\u30ea\u30b7\u30fc (\u5927\u62b5\u306f\u30dd\u30ea\u30b7\u30fc\u53cd\u5fa9 \u306e\u3088\u3046\u306b\u81ea\u5206\u81ea\u8eab\u3067\u8a55\u4fa1\u3057\u3066\u3044\u308b\u3082\u306e) \u306b\u5f93\u3046\u3053\u3068\u3067\u3001 \u72b6\u614b\u3054\u3068\u306b \u52d5\u4f5c (\u884c\u52d5) \u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u6211\u3005\u306e\u76ee\u7684\u306f\u3001\u73fe\u5728\u306e \u65b9\u7b56 pi \u3068\u5168\u3066\u306e \u72b6\u614b\u884c\u52d5 (s-a) \u306e\u30da\u30a2\u306b\u3064\u3044\u3066\u3001 Q \\pi(s,a) \u3092\u63a8\u5b9a\u3059\u308b\u3053\u3068\u3067\u3059\u3002 \u3053\u308c\u306f\u3001\u3042\u308b \u72b6\u614b-\u52d5\u4f5c(\u884c\u52d5) \u306e\u5bfe \u304b\u3089 \u5225\u306e \u72b6\u614b-\u52d5\u4f5c(\u884c\u52d5) \u306e\u30da\u30a2 \u306b \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 \u3092\u9077\u79fb\u3055\u305b\u308b\u3053\u3068\u3067\u3001 \u30bf\u30a4\u30e0\u30b9\u30c6\u30c3\u30d7 \u3054\u3068\u306b \u9069\u7528\u3055\u308c\u308b TD \u66f4\u65b0\u898f\u5247 \u3092\u7528\u3044\u3066\u884c\u3046 (\u72b6\u614b \u304b\u3089 \u5225\u306e \u72b6\u614b\u306b \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u9077\u79fb\u3055\u305b\u308b \u30e2\u30c7\u30eb\u4f9d\u5b58\u578b \u5f37\u5316\u5b66\u7fd2\u6280\u6cd5\u3068\u306f\u7570\u306a\u308a\u307e\u3059)\u3002 Q-\u5024 \u72b6\u614b\u306e\u52b9\u7528\u5024\u306b\u3064\u3044\u3066\u306f\u3059\u3067\u306b\u304a\u99b4\u67d3\u307f\u3067\u3057\u3087\u3046\u304c\u3001Q-\u5024 \u3082\u540c\u3058\u3067\u3059\u3002 Q-\u5024 \u306f\u3001\u72b6\u614b\u3068\u884c\u52d5\u306e\u30da\u30a2\u3068\u305d\u306e\u52b9\u7528\u3092\u8868\u3059\u5b9f\u6570\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3067\u3059\u3002 Q-\u5b66\u7fd2 \u3068 SARSA \u3068\u306f\u3001\u3059\u3079\u3066\u306e \u884c\u52d5-\u72b6\u614b \u306e\u30da\u30a2\u306b\u5bfe\u3057\u3066 \u6700\u9069\u306a Q-\u5024 \u3092\u8a55\u4fa1\u3059\u308b \u65b9\u7b56\u5236\u5fa1\u624b\u6cd5\u3067\u3059\u3002 SARSA \u306e\u66f4\u65b0\u5247\u306f: Q(S_t,A_t) \\leftarrow Q(S_t,A_t) + \\alpha\\left[ R_{t+1}+\\gamma Q(S_{t+1},A_{t+1}-Q(S_t,A_t)\\right] \u3042\u308b\u72b6\u614b S \u304c\u7d42\u4e86\u3057\u305f\u5834\u5408 (\u30b4\u30fc\u30eb\u306b\u9054\u3057\u305f\u308a\uff0c\u7d42\u4e86\u72b6\u614b\u306b\u9665\u3063\u305f\u5834\u5408)\uff0c Q(S,a)=0\\forall a\\in A \u3068\u306a\u308a\u307e\u3059\u3002 \u3053\u3053\u3067\uff0c A \u306f\u5168\u884c\u52d5\u30ec\u30d1\u30fc\u30c8\u30ea\u30fc\u3092\u8868\u3057\u307e\u3059\u3002 - $Q(s,a)$ \u3092\u5168\u72b6\u614b $s$ \u3068 \u5168\u52d5\u4f5c $a$ \u306b\u3064\u3044\u3066\u521d\u671f\u5316\uff0c$Q(\\text{\u7d42\u4e86\u72b6\u614b},\\cdot)=0$ \u3068\u3059\u308b - \u5404\u30a8\u30d4\u30bd\u30fc\u30c9\u3092\u7e70\u308a\u8fd4\u3059: - $S$ \u3092\u521d\u671f\u5316\u3059\u308b - $S$ \u306e\u4e2d\u304b\u3089 Q \u95a2\u6570\u306b\u5f93\u3063\u3066 $A$ \u3092\u9078\u3076 - $Q(S,A)\\leftarrow Q(S,A)+\\alpha\\left[R+\\gamma Q(S',S')-Q(S,A)\\right]$ - $S\\leftarrow S'$, $A\\leftarrow A'$ - $S$ \u304c\u53ce\u675f\u3059\u308b\u307e\u3067\u7e70\u308a\u8fd4\u3059 \u30a4\u30d7\u30b7\u30ed\u30f3 ( \\epsilon ) \u8caa\u6b32(\u6b32\u5f35\u308a) \u65b9\u7b56 \u00b6 \u30a4\u30d7\u30b7\u30ed\u30f3\u8caa\u6b32\u306a\u65b9\u7b56\u3068\u306f\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u8a00\u3044\u307e\u3059: 0 \u304b\u3089 1 \u306e\u7bc4\u56f2 ( r\\in[0,1] ) \u306e\u4e71\u6570 r \u3092\u4e00\u3064\u767a\u751f\u3055\u305b\u307e\u3059 \u3082\u3057 r>\\epsilon \u3067\u3042\u308c\u3042\u3070\uff0c\u30e9\u30f3\u30c0\u30e0\u306b\u3042\u308b\u884c\u52d5\u3092\u9078\u629e\u3057\u307e\u3059 \u305d\u3046\u3067\u306a\u3051\u308c\u3070 (\u3059\u306a\u308f\u3061 r\\le\\epsilon ) Q \u5024 (\u6700\u5927\u52b9\u7528\u3092\u3042\u305f\u3048\u308b) \u884c\u52d5\u3092\u9078\u629e\u3057\u307e\u3059 \u4ee5\u4e0b\u306b Python \u30b3\u30fc\u30c9\u3092\u793a\u3057\u307e\u3059: 1 2 3 4 5 6 7 8 9 10 11 12 def epsilon_greedy (Q, epsilon, n_actions, s, train= False ): \"\"\" @param Q Q values state x action -> value @param epsilon for exploration @param s number of states @param train if true then no random actions selected \"\"\" if train or np.random.rand() < epsilon: action = np.argmax(Q[s, :]) else : action = np.random.randint( 0 , n_actions) return action Source: https://gist.githubusercontent.com/TimeTraveller-San/40a7a2655743bf6230706d45d1201b49/raw/25ddaaf54e946d33576e27e6bab45a40f22864a9/epsilon_greedy.py \\epsilon \u306e\u5024\u306f \u63a2\u7d22 = \u77e5\u8b58\u5229\u7528 \u306e\u30b8\u30ec\u30f3\u30de \u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002\u82f1\u8a9e\u3067\u306f exploration-exploitatoin dilemma \u3068\u547c\u3073\u307e\u3059\u3002\u7db4\u304c\u4f3c\u3066\u3044\u308b\u305f\u3081\u306b\u82f1\u8a9e\u3067\u899a\u3048\u305f\u65b9\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002 \\epsilon \u304c\u5927\u304d\u3051\u308c\u3070\u3001\u4e71\u6570 r \u304c \\epsilon \u3088\u308a\u5927\u304d\u304f\u306a\u308b\u3053\u3068\u306f\u307b\u3068\u3093\u3069\u306a\u304f\u3001 \u30e9\u30f3\u30c0\u30e0\u306a\u884c\u52d5\u306f\u307b\u3068\u3093\u3069\u8d77\u3053\u3089\u306a\u3044 (\u63a2\u7d22\u304c\u5c11\u306a\u304f\u3001\u77e5\u8b58\u5229\u7528 \u304c\u591a\u304f\u306a\u308b)\u3002 \\epsilon \u304c\u5c0f\u3055\u3051\u308c\u3070\u3001\u4e71\u6570 r \u306f \\epsilon \u3088\u308a\u3082\u5927\u304d\u304f\u306a\u308b\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u3001 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 \u306f \u3088\u308a \u591a\u304f \u306e \u30e9\u30f3\u30c0\u30e0 \u306a \u884c\u52d5 \u3092 \u9078\u629e \u3059\u308b \u3053\u3068 \u306b \u306a\u308b\u3002 \u3053\u306e\u3088\u3046\u306a\u78ba\u7387\u7684\u306a\u6027\u8cea\u3092\u5229\u7528\u3057\u3066\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u74b0\u5883\u3092\u3088\u308a\u63a2\u7d22\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u7d4c\u9a13\u5247\u3068\u3057\u3066\u3001 \\epsilon \u306f\u901a\u5e38 0.9 \u306b\u9078\u3070\u308c\u307e\u3059\u3002 \u3067\u3059\u304c \\epsilon \u306f \u74b0\u5883\u30bf\u30a4\u30d7\u306b\u5fdc\u3058\u3066\u5909\u5316\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3044\u304f\u3064\u304b\u306e\u30b1\u30fc\u30b9\u3067\u306f\u3001\u3088\u308a\u9ad8\u3044\u63a2\u7d22\u306b\u7d9a\u3044\u3066\u3088\u308a\u9ad8\u3044\u77e5\u8b58\u5229\u7528 \u3092\u53ef\u80fd\u306b\u3059\u308b\u305f\u3081\u306b\u3001\u6642\u9593\u306e\u7d4c\u904e\u3068\u3068\u3082\u306b \\epsilon \u306f \u7de9\u548c \u6f38\u6e1b \u3055\u308c\u307e\u3059\u3002 \u4ee5\u4e0b2 Taxi-v2 \u306e gym \u74b0\u5883\u306b\u9069\u7528\u3055\u308c\u305f SARSA \u306e\u30b7\u30f3\u30d7\u30eb\u306a Python \u30b3\u30fc\u30c9\u3092\u793a\u3057\u307e\u3059\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 import gym import numpy as np import time \"\"\" SARSA on policy learning python implementation. This is a python implementation of the SARSA algorithm in the Sutton and Barto's book on RL. It's called SARSA because - (state, action, reward, state, action). The only difference between SARSA and Qlearning is that SARSA takes the next action based on the current policy while qlearning takes the action with maximum utility of next state. Using the simplest gym environment for brevity: https://gym.openai.com/envs/FrozenLake-v0/ \"\"\" def init_q (s, a, type = \"ones\" ): \"\"\" @param s the number of states @param a the number of actions @param type random, ones or zeros for the initialization \"\"\" if type == \"ones\" : return np.ones((s, a)) elif type == \"random\" : return np.random.random((s, a)) elif type == \"zeros\" : return np.zeros((s, a)) def epsilon_greedy (Q, epsilon, n_actions, s, train= False ): \"\"\" @param Q Q values state x action -> value @param epsilon for exploration @param s number of states @param train if true then no random actions selected \"\"\" if train or np.random.rand() < epsilon: action = np.argmax(Q[s, :]) else : action = np.random.randint( 0 , n_actions) return action def sarsa (alpha, gamma, epsilon, episodes, max_steps, n_tests, render = False , test= False ): \"\"\" @param alpha learning rate @param gamma decay factor @param epsilon for exploration @param max_steps for max step in each episode @param n_tests number of test episodes \"\"\" env = gym.make( 'Taxi-v2' ) n_states, n_actions = env.observation_space.n, env.action_space.n Q = init_q(n_states, n_actions, type = \"ones\" ) timestep_reward = [] for episode in range (episodes): print ( f\"Episode: { episode }\" ) total_reward = 0 s = env.reset() a = epsilon_greedy(Q, epsilon, n_actions, s) t = 0 done = False while t < max_steps: if render: env.render() t += 1 s_, reward, done, info = env.step(a) total_reward += reward a_ = epsilon_greedy(Q, epsilon, n_actions, s_) if done: Q[s, a] += alpha * ( reward - Q[s, a] ) else : Q[s, a] += alpha * ( reward + (gamma * Q[s_, a_] ) - Q[s, a] ) s, a = s_, a_ if done: if render: print ( f\"This episode took { t } timesteps and reward { total_reward }\" ) timestep_reward.append(total_reward) break if render: print ( f\"Here are the Q values:\\n{ Q }\\nTesting now:\" ) if test: test_agent(Q, env, n_tests, n_actions) return timestep_reward def test_agent (Q, env, n_tests, n_actions, delay= 0.1 ): for test in range (n_tests): print ( f\"Test #{ test }\" ) s = env.reset() done = False epsilon = 0 total_reward = 0 while True : time.sleep(delay) env.render() a = epsilon_greedy(Q, epsilon, n_actions, s, train= True ) print ( f\"Chose action { a } for state { s }\" ) s, reward, done, info = env.step(a) total_reward += reward if done: print ( f\"Episode reward: { total_reward }\" ) time.sleep( 1 ) break if __name__ == \"__main__\" : alpha = 0.4 gamma = 0.999 epsilon = 0.9 episodes = 3000 max_steps = 2500 n_tests = 20 timestep_reward = sarsa(alpha, gamma, epsilon, episodes, max_steps, n_tests) print (timestep_reward) source: https://gist.github.com/TimeTraveller-San/4aa1ed2d0644ad05d84348dd4fb797f3#file-sarsa-py Q \u5b66\u7fd2 \u00b6 Q-\u5b66\u7fd2 \u306f\u3001\u65b9\u7b56\u306b\u3088\u3089\u306a\u3044 TD \u5236\u5fa1\u3067\u3059\u3002 SARSA \u3068\u307b\u307c\u540c\u3058\u3067\u3059\u3002\u552f\u4e00\u306e\u9055\u3044\u306f\u3001\u6b21\u306e \u52d5\u4f5c(\u884c\u52d5) A \u3092\u898b\u3064\u3051\u308b\u305f\u3081\u306e \u65b9\u7b56\u306b\u5f93\u3046\u306e\u3067\u306f\u306a\u304f\u3001 \u8caa\u6b32\u306b \u52d5\u4f5c(\u884c\u52d5) \u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3067\u3059\u3002 SARSA \u3068\u540c\u69d8\u306b Q\u5024 \u3092\u8a55\u4fa1\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u304a\u308a\u3001\u66f4\u65b0\u5247 \u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059: Q(S_t,A_t)\\leftarrow Q(S_t,A_t)+\\alpha\\left[R_{t+1}+\\gamma\\max_{alpha} Q(S_{t+1},a)-Q(S_t,A_t)\\right] SARSA \u3067\u306f\u3001\u3042\u308b\u65b9\u7b56 \u306b\u5f93\u3063\u3066 \u884c\u52d5 A' \u3092\u9078\u629e\u3057\u3066\u3044\u307e\u3057\u305f\u3002 \u3053\u308c\u306b\u5bfe\u3057\u3001\u4e0a\u5f0f Q \u5b66\u7fd2 \u3067\u306f \u884c\u52d5 A' ( a ) \u306f\u3001 Q \u306e\u6700\u5927\u5024\u3092\u53d6\u308b\u3060\u3051\u306e \u6b32\u5f35\u308a(\u8caa\u6b32, \u30b0\u30ea\u30fc\u30c7\u30a3)\u306a \u65b9\u6cd5\u3067\u9078\u629e\u3055\u308c\u307e\u3059\u3002 Q \u5b66\u7fd2\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059: Python \u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 import gym import numpy as np import time \"\"\" Qlearning is an off policy learning python implementation. This is a python implementation of the qlearning algorithm in the Sutton and Barto's book on RL. It's called SARSA because - (state, action, reward, state, action). The only difference between SARSA and Qlearning is that SARSA takes the next action based on the current policy while qlearning takes the action with maximum utility of next state. Using the simplest gym environment for brevity: https://gym.openai.com/envs/FrozenLake-v0/ \"\"\" def init_q (s, a, type = \"ones\" ): \"\"\" @param s the number of states @param a the number of actions @param type random, ones or zeros for the initialization \"\"\" if type == \"ones\" : return np.ones((s, a)) elif type == \"random\" : return np.random.random((s, a)) elif type == \"zeros\" : return np.zeros((s, a)) def epsilon_greedy (Q, epsilon, n_actions, s, train= False ): \"\"\" @param Q Q values state x action -> value @param epsilon for exploration @param s number of states @param train if true then no random actions selected \"\"\" if train or np.random.rand() < epsilon: action = np.argmax(Q[s, :]) else : action = np.random.randint( 0 , n_actions) return action def qlearning (alpha, gamma, epsilon, episodes, max_steps, n_tests, render = False , test= False ): \"\"\" @param alpha learning rate @param gamma decay factor @param epsilon for exploration @param max_steps for max step in each episode @param n_tests number of test episodes \"\"\" env = gym.make( 'Taxi-v2' ) n_states, n_actions = env.observation_space.n, env.action_space.n Q = init_q(n_states, n_actions, type = \"ones\" ) timestep_reward = [] for episode in range (episodes): print ( f\"Episode: { episode }\" ) s = env.reset() a = epsilon_greedy(Q, epsilon, n_actions, s) t = 0 total_reward = 0 done = False while t < max_steps: if render: env.render() t += 1 s_, reward, done, info = env.step(a) total_reward += reward a_ = np.argmax(Q[s_, :]) if done: Q[s, a] += alpha * ( reward - Q[s, a] ) else : Q[s, a] += alpha * ( reward + (gamma * Q[s_, a_]) - Q[s, a] ) s, a = s_, a_ if done: if render: print ( f\"This episode took { t } timesteps and reward: { total_reward }\" ) timestep_reward.append(total_reward) break if render: print ( f\"Here are the Q values:\\n{ Q }\\nTesting now:\" ) if test: test_agent(Q, env, n_tests, n_actions) return timestep_reward def test_agent (Q, env, n_tests, n_actions, delay= 1 ): for test in range (n_tests): print ( f\"Test #{ test }\" ) s = env.reset() done = False epsilon = 0 while True : time.sleep(delay) env.render() a = epsilon_greedy(Q, epsilon, n_actions, s, train= True ) print ( f\"Chose action { a } for state { s }\" ) s, reward, done, info = env.step(a) if done: if reward > 0 : print ( \"Reached goal!\" ) else : print ( \"Shit! dead x_x\" ) time.sleep( 3 ) break if __name__ == \"__main__\" : alpha = 0.4 gamma = 0.999 epsilon = 0.9 episodes = 10000 max_steps = 2500 n_tests = 2 timestep_reward = qlearning(alpha, gamma, epsilon, episodes, max_steps, n_tests, test = True ) print (timestep_reward) source: https://gist.github.com/TimeTraveller-San/9e56f9d09be7d50b795ef2f83be2ba72#file-qlearning-py \u671f\u5f85 SARSA \u00b6 \u671f\u5f85 SARSA \u3068\u306f\u3001\u305d\u306e\u540d\u304c\u793a\u3059\u3088\u3046\u306b\u3001\u73fe\u5728\u306e\u72b6\u614b\u3067\u8d77\u3053\u308a\u3046\u308b\u3059\u3079\u3066\u306e\u884c\u52d5\u306b\u3064\u3044\u3066\u306e Q\u5024 \u306e\u671f\u5f85\u5024(\u5e73\u5747\u5024)\u3092\u53d6\u308a\u307e\u3059\u3002 \u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u66f4\u65b0\u5247\u3092\u4f7f\u3046\u3068\u3001\u3088\u308a\u660e\u78ba\u306b\u306a\u308a\u307e\u3059\u3002 Q(S_t,A_t)\\leftarrow Q(S_t,A_t) + \\alpha\\left[R_{t+1}+\\gamma\\mathbb{E}\\left[Q(S_{t+1},A_{t+1}\\vert S_{t+1}\\right]-Q(S_t,A_t)\\right]\\\\ \\\\ \\hspace{6em}\\leftarrow Q(S_t,A_t)+\\alpha\\left[ R_{t+1}+\\gamma\\sum_{\\alpha}\\pi(a\\vert S_{t+1}) Q(S_{t+1},a) - Q(S_t,A_t) \\right] Python \u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 import gym import numpy as np import time \"\"\" SARSA on policy learning python implementation. This is a python implementation of the SARSA algorithm in the Sutton and Barto's book on RL. It's called SARSA because - (state, action, reward, state, action). The only difference between SARSA and Qlearning is that SARSA takes the next action based on the current policy while qlearning takes the action with maximum utility of next state. Using the simplest gym environment for brevity: https://gym.openai.com/envs/FrozenLake-v0/ \"\"\" def init_q (s, a, type = \"ones\" ): \"\"\" @param s the number of states @param a the number of actions @param type random, ones or zeros for the initialization \"\"\" if type == \"ones\" : return np.ones((s, a)) elif type == \"random\" : return np.random.random((s, a)) elif type == \"zeros\" : return np.zeros((s, a)) def epsilon_greedy (Q, epsilon, n_actions, s, train= False ): \"\"\" @param Q Q values state x action -> value @param epsilon for exploration @param s number of states @param train if true then no random actions selected \"\"\" if train or np.random.rand() < epsilon: action = np.argmax(Q[s, :]) else : action = np.random.randint( 0 , n_actions) return action def expected_sarsa (alpha, gamma, epsilon, episodes, max_steps, n_tests, render = False , test= False ): \"\"\" @param alpha learning rate @param gamma decay factor @param epsilon for exploration @param max_steps for max step in each episode @param n_tests number of test episodes \"\"\" env = gym.make( 'Taxi-v2' ) n_states, n_actions = env.observation_space.n, env.action_space.n Q = init_q(n_states, n_actions, type = \"ones\" ) timestep_reward = [] for episode in range (episodes): print ( f\"Episode: { episode }\" ) total_reward = 0 s = env.reset() t = 0 done = False while t < max_steps: if render: env.render() t += 1 a = epsilon_greedy(Q, epsilon, n_actions, s) s_, reward, done, info = env.step(a) total_reward += reward if done: Q[s, a] += alpha * ( reward - Q[s, a] ) else : expected_value = np.mean(Q[s_,:]) # print(Q[s,:], sum(Q[s,:]), len(Q[s,:]), expected_value) Q[s, a] += alpha * (reward + (gamma * expected_value) - Q[s, a]) s = s_ if done: if True : print ( f\"This episode took { t } timesteps and reward { total_reward }\" ) timestep_reward.append(total_reward) break if render: print ( f\"Here are the Q values:\\n{ Q }\\nTesting now:\" ) if test: test_agent(Q, env, n_tests, n_actions) return timestep_reward def test_agent (Q, env, n_tests, n_actions, delay= 0.1 ): for test in range (n_tests): print ( f\"Test #{ test }\" ) s = env.reset() done = False epsilon = 0 total_reward = 0 while True : time.sleep(delay) env.render() a = epsilon_greedy(Q, epsilon, n_actions, s, train= True ) print ( f\"Chose action { a } for state { s }\" ) s, reward, done, info = env.step(a) total_reward += reward if done: print ( f\"Episode reward: { total_reward }\" ) time.sleep( 1 ) break if __name__ == \"__main__\" : alpha = 0.1 gamma = 0.9 epsilon = 0.9 episodes = 1000 max_steps = 2500 n_tests = 20 timestep_reward = expected_sarsa(alpha, gamma, epsilon, episodes, max_steps, n_tests, render= False , test= True ) print (timestep_reward) source: https://gist.github.com/TimeTraveller-San/5bd93710e118633e0793dc5d0b92b19a#file-expectedsarsa-py \u6bd4\u8f03 \u00b6 \u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067 3 \u3064\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6bd4\u8f03\u3057\u307e\u3057\u305f 1 2 3 4 5 lpha = 0.4 gamma = 0.999 epsilon = 0.9 episodes = 2000 max_steps = 2500 # (max number of time steps possible in a single episode) \u3053\u3053\u3067\u306f\u3001\u4e0a\u8a18\u306e 3 \u3064\u306e\u65b9\u7b56\u5236\u5fa1\u65b9\u6cd5\u306e\u6bd4\u8f03 \u3092\u30d7\u30ed\u30c3\u30c8\u3057\u307e\u3059\u3002 \u53ce\u675f \u00b6 \u4ee5\u4e0b\u306e\u30d7\u30ed\u30c3\u30c8\u304c\u793a\u3059\u3088\u3046\u306b\u3001Q \u5b66\u7fd2 (\u7dd1) \u306f SARSA(\u30aa\u30ec\u30f3\u30b8) \u3068 \u671f\u5f85 SARSA(\u9752) \u306e\u4e21\u8005\u3088\u308a\u5148\u306b\u53ce\u675f\u3057\u307e\u3057\u305f\u3002 \u6210\u7e3e \u00b6 \u5b9f\u88c5\u3057\u305f 3 \u3064\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306f\u3001Q-\u5b66\u7fd2 \u304c\u6700\u3082\u826f\u304f\u3001\u671f\u5f85 SARSA \u304c\u6700\u3082\u60aa\u3044\u6027\u80fd\u306e\u3088\u3046\u3067\u3059\u3002 \u7d50\u8a9e \u00b6 \u6642\u9593\u5dee\u5b66\u7fd2 \u306f \u6700\u3082\u91cd\u8981\u306a\u5f37\u5316\u5b66\u7fd2\u306e\u6982\u5ff5\u3067\u3059\u3002 DQN \u3084 \u30c0\u30d6\u30ebDQN \u306e\u3088\u3046\u306a\u3001\u3055\u3089\u306b\u6d3e\u751f\u3057\u305f\u3082\u306e \u306f\u3001AI \u306e\u5206\u91ce\u3067\u6709\u540d\u306a\u753b\u671f\u7684\u306a\u7d50\u679c\u3092\u9054\u6210\u3057\u3066\u3044\u307e\u3059\u3002 Google \u306e \u30a2\u30eb\u30d5\u30a1\u7881\u306f\u3001\u56f2\u7881\u306e\u4e16\u754c\u30c1\u30e3\u30f3\u30d4\u30aa\u30f3\u3092\u5012\u3059\u305f\u3081\u306b\u3001CNN \u3068 DQN \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002","title":"\u5f37\u5316\u5b66\u7fd2 TD,Q\u5b66\u7fd2, SARSA"},{"location":"Reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python/#td-sarsa-sarsa-q-python","text":"title: Reinforcement learning: Temporal-Difference, SARSA, Q-Learning & Expected SARSA in python author: Vaibhav Kumar Date: May 9, 2019 Original: https://towardsdatascience.com/reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python-9fecfda7467e \u5f37\u5316\u5b66\u7fd2\u306e\u4e2d\u5fc3\u7684\u3067\u65ac\u65b0\u306a\u30a2\u30a4\u30c7\u30a2\u3092\u4e00\u3064\u6319\u3052\u308b\u3068\u3059\u308c\u3070\u3001\u305d\u308c\u306f\u9593\u9055\u3044\u306a\u304f\u6642\u9593\u5dee\uff08TD\uff09\u5b66\u7fd2\u3067\u3042\u308d\u3046\u3002 -- \u30a2\u30f3\u30c9\u30ea\u30e5\u30fc\u30fb\u30d0\u30eb\u30c8\uff0c \u30ea\u30c1\u30e3\u30fc\u30c9\u30fbS\u30fb\u30b5\u30c3\u30c8\u30f3","title":"TD (\u6642\u9593\u5dee)\u5b66\u7fd2, SARSA, \u671f\u5f85 SARSA, Q \u5b66\u7fd2 \u3068 Python \u5b9f\u88c5"},{"location":"Reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python/#_1","text":"\u5f37\u5316\u5b66\u7fd2\u306e\u57fa\u672c \u30de\u30eb\u30b3\u30d5\u9023\u9396, \u30de\u30eb\u30b3\u30d5\u6c7a\u5b9a\u30d7\u30ed\u30bb\u30b9(MDP) \u30d9\u30eb\u30de\u30f3\u65b9\u7a0b\u5f0f \u4fa1\u5024\uff0c\u65b9\u7b56\u95a2\u6570\uff0c\u53cd\u5fa9","title":"\u524d\u63d0\u77e5\u8b58"},{"location":"Reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python/#_2","text":"\u30e2\u30c7\u30eb\u4f9d\u5b58 RL\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08\u3059\u306a\u308f\u3061\u3001\u5024\u3068\u65b9\u7b56\u53cd\u5fa9\uff09\u306f\uff0c\u9077\u79fb\u8868\u306e\u52a9\u3051\u3092\u501f\u308a\u3066\u52d5\u4f5c\u3057\u307e\u3059\u3002 \u9077\u79fb\u8868\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u5b58\u5728\u3059\u308b\u4e16\u754c\u3067\u6210\u529f\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u3059\u3079\u3066\u306e\u77e5\u8b58\u304c\u66f8\u304b\u308c\u305f\u30e9\u30a4\u30d5\u30cf\u30c3\u30af\u672c\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5f53\u7136\u306e\u3053\u3068\u306a\u304c\u3089\u3001\u305d\u306e\u3088\u3046\u306a\u672c\u3092\u66f8\u304f\u306e\u306f\u975e\u5e38\u306b\u9762\u5012\u3067\u3001\u307b\u3068\u3093\u3069\u306e\u5834\u5408\u4e0d\u53ef\u80fd\u3067\u3059\u3002 Temporal Difference \u306f\u30e2\u30c7\u30eb\u81ea\u7531\u578b\u306e\u5f37\u5316\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3059\u3002 \u3053\u308c\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u3059\u3050\u306b\u5165\u624b\u53ef\u80fd\u306a\u5168\u77e5\u5168\u80fd\u306e\u30cf\u30c3\u30af\u30d6\u30c3\u30af\uff08\u9077\u79fb\u8868\uff09\u3067\u306f\u306a\u304f\u3001\u5b9f\u969b\u306e\u7d4c\u9a13\u3092\u901a\u3057\u3066\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u3053\u308c\u306b\u3088\u308a\u3001\u78ba\u7387\u7684\u306a\u8981\u7d20\u3068\u72b6\u614b-\u884c\u70ba\u30da\u30a2\u306e\u5927\u898f\u6a21\u306a\u7cfb\u5217\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u5831\u916c\u30b7\u30b9\u30c6\u30e0\u3068\u9077\u79fb\u30b7\u30b9\u30c6\u30e0\u306b\u3064\u3044\u3066\u306f\u4f55\u3082\u77e5\u308a\u307e\u305b\u3093\u3002 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u4efb\u610f\u306e\u72b6\u614b\u3067\u4efb\u610f\u306e\u884c\u52d5\u3092\u3068\u3063\u305f\u5834\u5408\u306b\u4f55\u304c\u8d77\u3053\u308b\u304b\u3092\u77e5\u308a\u307e\u305b\u3093\u3002 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u300c\u4e16\u754c\u300d\u3084\u300c\u74b0\u5883\u300d\u3068\u76f8\u4e92\u4f5c\u7528\u3057\u3001\u81ea\u5206\u81ea\u8eab\u3067\u898b\u3064\u3051\u51fa\u3055\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002","title":"\u5f37\u5316\u5b66\u7fd2\u306b\u304a\u3051\u308b\u30e2\u30c7\u30eb\u4f9d\u5b58\u5b66\u7fd2\u3068\u30e2\u30c7\u30eb\u81ea\u7531\u5b66\u7fd2"},{"location":"Reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python/#td","text":"TD \u6642\u9593\u5dee\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u53d6\u308b\u4e00\u3064\u4e00\u3064\u306e\u884c\u52d5\u3092\u901a\u3057\u3066\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002 TD \u5b66\u7fd2\u3067\u306f\u3001\u30a8\u30d4\u30bd\u30fc\u30c9\uff08\u30b4\u30fc\u30eb\u3084\u7d42\u4e86\u72b6\u614b\u306b\u5230\u9054\u3059\u308b\uff09\u3054\u3068\u3067\u306f\u306a\u304f\u3001\u30bf\u30a4\u30e0\u30b9\u30c6\u30c3\u30d7\uff08\u884c\u52d5\uff09\u3054\u3068\u306b\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u77e5\u8b58\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002 \\text{\u65b0\u3057\u3044\u72b6\u614b\u8a55\u4fa1} \\leftarrow \\text{\u53e4\u3044\u72b6\u614b\u8a55\u4fa1} + \\text{\u30b9\u30c6\u30c3\u30d7\u30b5\u30a4\u30ba}\\left[\\text{\u76ee\u6a19} - \\text{\u53e4\u3044\u72b6\u614b\u8a55\u4fa1}\\right] \u4e0a\u5f0f\u306e \u76ee\u6a19-\u53e4\u3044\u72b6\u614b\u8a55\u4fa1 \u3092\u76ee\u6a19\u8aa4\u5dee\u3068\u547c\u3073\u307e\u3059\u3002 \u30b9\u30c6\u30c3\u30d7\u30b5\u30a4\u30ba \u306f \u901a\u5e38 \\alpha \u3067\u8868\u3055\u308c\u3001\u5b66\u7fd2\u7387\u3068\u547c\u3070\u308c\u307e\u3059\u3002 \\alpha \u306e\u5024\u306f 0 \u304b\u3089 1 \u306e\u9593\u306b\u306a\u308a\u307e\u3059\u3002 \u4e0a\u5f0f\u306f\u3001\u30bf\u30a4\u30e0\u30b9\u30c6\u30c3\u30d7\u3054\u3068\u306b\u66f4\u65b0\u3092\u884c\u3046\u3053\u3068\u3067\u3001 Target \u3092\u9054\u6210\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002 \u76ee\u6a19\u3068\u306f\u72b6\u614b\u306e\u52b9\u7528(\u95a2\u6570)\u3067\u3059\u3002 \u52b9\u7528\u304c\u9ad8\u3051\u308c\u3070\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u79fb\u884c\u3057\u3084\u3059\u3044\u72b6\u614b\u306b\u306a\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u3053\u3053\u3067\u306f Bellman \u65b9\u7a0b\u5f0f \u3092\u77e5\u3063\u3066\u3044\u308b \u3068\u4eee\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 \u30d9\u30eb\u30de\u30f3\u65b9\u7a0b\u5f0f\u304b\u3089\uff0c\u3042\u308b\u72b6\u614b\u306e\u52b9\u7528\u306f\u3001\u4ee5\u4e0b\u306e\u5272\u5f15\u5831\u916c\u306e\u671f\u5f85\u5024\u3067\u3059\u3002 \\text{\u76ee\u6a19}=\\mathbb{E}_{\\pi}\\left[\\sum_{k=0}^{\\infty}\\gamma^k r_{t+k+1}\\right] \u5e73\u305f\u304f\u8a00\u3048\u3070\u3001\u6211\u3005\u306f\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u4e16\u754c\u306b\u81ea\u7531\u306b\u8d70\u3089\u305b\u307e\u3059\u3002 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u72b6\u614b\u3001\u5831\u916c\u3001\u9077\u79fb\u306b\u3064\u3044\u3066\u306e\u77e5\u8b58\u3092\u6301\u3063\u3066\u3044\u307e\u305b\u3093\u3002 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u74b0\u5883\u3068\u76f8\u4e92\u4f5c\u7528\u3057\uff08\u30e9\u30f3\u30c0\u30e0\u306a\u884c\u52d5\u3084\u60c5\u5831\u306b\u57fa\u3065\u3044\u305f\u884c\u52d5\u3092\u3068\u308b\uff09\u3001\u3059\u3079\u3066\u306e\u884c\u52d5\u3092\u3068\u3063\u305f\u5f8c\u306b\u65e2\u5b58\u306e\u77e5\u8b58\u3092\u7d99\u7d9a\u7684\u306b\u66f4\u65b0\u3059\u308b\u3053\u3068\u3067\u3001 \u65b0\u305f\u306a\u63a8\u5b9a\u5024\uff08\u72b6\u614b\u3068\u884c\u52d5\u306e\u30da\u30a2\u306e\u5024\uff09\u3092\u5b66\u7fd2\u3057\u307e\u3059\u3002 \u3053\u308c\u307e\u3067\u306e\u8b70\u8ad6\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u3044\u304f\u3064\u304b\u306e\u7591\u554f\u304c\u51fa\u3066\u304d\u307e\u3059\u3002 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3069\u306e\u3088\u3046\u306b\u74b0\u5883\u3068\u76f8\u4e92\u4f5c\u7528\u3059\u308b\u306e\u304b\uff1f \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3069\u306e\u3088\u3046\u306b\u884c\u52d5\u3092\u9078\u629e\u3059\u308b\u306e\u304b\u3001\u3059\u306a\u308f\u3061 \u7279\u5b9a\u306e\u72b6\u614b\uff08\u30dd\u30ea\u30b7\u30fc\uff09 \u3067\u3069\u306e\u3088\u3046\u306a\u884c\u52d5\u3092\u3068\u308b\u306e\u304b\uff1f \u3053\u308c\u304c SARSA \u3068 Q-\u5b66\u7fd2 \u306e\u51fa\u756a\u3067\u3059\u3002 \u3053\u308c\u3089\u306f\u3001\u74b0\u5883\u306e\u4e2d\u3067\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u8a98\u5c0e\u3057\u3001\u8208\u5473\u6df1\u3044\u3053\u3068\u3092\u5b66\u3076\u3053\u3068\u3092\u53ef\u80fd\u306b\u3059\u308b \uff12 \u3064\u306e \u5236\u5fa1\u30dd\u30ea\u30b7\u30fc\u3067\u3059\u3002 \u3053\u308c\u3089\u3092\u8aac\u660e\u3059\u308b\u524d\u306b\u3001\u74b0\u5883\u3068\u306f\u4f55\u304b\u3092\u8b70\u8ad6\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002","title":"TD \u5b66\u7fd2 (\u6642\u5dee\u5b66\u7fd2)"},{"location":"Reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python/#_3","text":"\u74b0\u5883\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u96e2\u6563\u7684\u306a\u72b6\u614b\u3092\u89b3\u5bdf\u3057\u3001\u884c\u52d5\u3092\u3068\u308a\u3001\u305d\u306e\u884c\u52d5\u3092\u3068\u308b\u3053\u3068\u3067\u5831\u916c\u3092\u89b3\u5bdf\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30df\u30cb\u4e16\u754c\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30d3\u30c7\u30aa\u30b2\u30fc\u30e0\u306f\u74b0\u5883\u3067\u3042\u308a\u3001\u81ea\u5206\u81ea\u8eab\u304c\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3067\u3042\u308b\u3068\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002 \u30b2\u30fc\u30e0\u300c\u30c9\u30a5\u30fc\u30e0\u300d\u3067\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3067\u3042\u308b\u3042\u306a\u305f\u306f\u3001\u72b6\u614b\uff08\u753b\u9762\u306e\u30d5\u30ec\u30fc\u30e0\uff09\u3092\u89b3\u5bdf\u3057\u3001\u30a2\u30af\u30b7\u30e7\u30f3\uff08\u524d\u9032\u3001\u5f8c\u9000\u3001\u30b8\u30e3\u30f3\u30d7\u3001\u30b7\u30e5\u30fc\u30c8\u306a\u3069\u306e\u30ad\u30fc\u3092\u62bc\u3059\uff09\u3092\u884c\u3044\u3001\u5831\u916c\u3092\u89b3\u5bdf\u3057\u307e\u3059\u3002 \u6575\u3092\u6bba\u305b\u3070\u559c\u3073 (\u52b9\u7528) \u304c\u5f97\u3089\u308c\u3001\u524d\u9032\u3057\u3066\u3044\u308b\u9593\u306f\u30d7\u30e9\u30b9\u306e\u5831\u916c\u304c\u5f97\u3089\u308c\u3001\u3042\u307e\u308a\u5831\u916c\u306f\u5f97\u3089\u308c\u307e\u305b\u3093\u304c\u3001\u5c06\u6765\u306e\u5831\u916c(\u6575\u3092\u898b\u3064\u3051\u3066\u6bba\u3059) \u3092\u5f97\u308b\u305f\u3081\u306b \u30b2\u30fc\u30e0\u3092\u3057\u305f\u3044\u3068\u601d\u3046\u3067\u3057\u3087\u3046\u3002 \u3053\u306e\u3088\u3046\u306a\u74b0\u5883\u3092\u4f5c\u308b\u306e\u306f\u9762\u5012\u3067\u5927\u5909\u306a\u4f5c\u696d\u3067\u3059 ( 7\u4eba\u306e\u30c1\u30fc\u30e0\u304c1\u5e74\u4ee5\u4e0a\u304b\u3051\u3066 Doom \u3092\u958b\u767a )\u3002 OpenAI gym \u304c\u767b\u5834\u3057\u305f\u3053\u3068\u306f\u798f\u97f3\u3067\u3059\u3002 gym \u306f \u69d8\u3005\u306a\u5f37\u5316\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u30c6\u30b9\u30c8\u3067\u304d\u308b\u74b0\u5883\u304c\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u308b Python \u30e9\u30a4\u30d6\u30e9\u30ea \u3067\u3059\u3002 \u7d50\u679c\u3092\u5171\u6709\u3057\u305f\u308a\u3001\u5206\u6790\u3057\u305f\u308a\u3001\u6bd4\u8f03\u3057\u305f\u308a\u3059\u308b\u305f\u3081\u306e\u5b66\u8853\u7684\u306a\u6a19\u6e96\u74b0\u5883\u3068\u3057\u3066\u306e\u5730\u4f4d\u3092\u78ba\u7acb\u3057\u3066\u3044\u307e\u3059\u3002 Gym \u306f \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u304c\u6574\u5099\u3055\u308c\u3066\u3044\u3066\u3001\u4f7f\u3044\u3084\u3059\u3044\u3067\u3059\u3002 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3067\u6163\u308c\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u5f37\u5316\u5b66\u7fd2\u306e\u5fdc\u7528\u306e\u305f\u3081\u306b\u306f\u3001\u81ea\u5206\u3067\u74b0\u5883\u3092\u4f5c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u5e38\u306b gym \u4e92\u63db\u306e\u74b0\u5883\u3092\u53c2\u8003\u306b\u3057\u3066\u66f8\u3044\u3066\u3001\u8ab0\u3082\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u516c\u958b\u3057\u3066\u304a\u304f\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 Gym \u306e \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3081\u3070\u3001\u516c\u958b\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u9762\u5012\u3060\u3051\u3069\u697d\u3057\u3044\uff01 \u3068\u601d\u3063\u3066\u3044\u308b\u4eba\u306b\u306f\u304a\u3059\u3059\u3081\u3067\u3059\u3002","title":"\u74b0\u5883"},{"location":"Reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python/#sarsa","text":"SARSA \u3068\u306f\uff0cState-Action-Reward-State-Action \u306e\u7701\u7565\u5f62\u3067\u3059 SARSA \u3068\u306f\u306f\u30aa\u30f3\u30dd\u30ea\u30b7\u30fc\u306a \u6642\u9593\u5dee\u5236\u5fa1\u65b9\u5f0f \u3067\u3059\u3002 \u30dd\u30ea\u30b7\u30fc (\u65b9\u7b56) \u3068\u306f \u72b6\u614b \u3068 \u52d5\u4f5c(\u884c\u52d5) \u3068\u306e\u30da\u30a2\u306e\u3053\u3068\u3067\u3059\u3002 python \u3067\u306f \u72b6\u614b \u3092 \u30ad\u30fc\u3001\u52d5\u4f5c(\u884c\u52d5) \u3092 \u5024 \u3068\u3059\u308b \u8f9e\u66f8 dict \u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30dd\u30ea\u30b7\u30fc(\u65b9\u7b56) \u306f\u5404\u72b6\u614b \u3067\u53d6\u308b\u3079\u304d \u52d5\u4f5c\uff08\u884c\u52d5\uff09 \u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\u3002 \u30aa\u30f3\u30dd\u30ea\u30b7\u30fc\u5236\u5fa1\u3067\u306f\u3001\u5b66\u7fd2\u4e2d\u306b\u3042\u308b \u30dd\u30ea\u30b7\u30fc (\u5927\u62b5\u306f\u30dd\u30ea\u30b7\u30fc\u53cd\u5fa9 \u306e\u3088\u3046\u306b\u81ea\u5206\u81ea\u8eab\u3067\u8a55\u4fa1\u3057\u3066\u3044\u308b\u3082\u306e) \u306b\u5f93\u3046\u3053\u3068\u3067\u3001 \u72b6\u614b\u3054\u3068\u306b \u52d5\u4f5c (\u884c\u52d5) \u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u6211\u3005\u306e\u76ee\u7684\u306f\u3001\u73fe\u5728\u306e \u65b9\u7b56 pi \u3068\u5168\u3066\u306e \u72b6\u614b\u884c\u52d5 (s-a) \u306e\u30da\u30a2\u306b\u3064\u3044\u3066\u3001 Q \\pi(s,a) \u3092\u63a8\u5b9a\u3059\u308b\u3053\u3068\u3067\u3059\u3002 \u3053\u308c\u306f\u3001\u3042\u308b \u72b6\u614b-\u52d5\u4f5c(\u884c\u52d5) \u306e\u5bfe \u304b\u3089 \u5225\u306e \u72b6\u614b-\u52d5\u4f5c(\u884c\u52d5) \u306e\u30da\u30a2 \u306b \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 \u3092\u9077\u79fb\u3055\u305b\u308b\u3053\u3068\u3067\u3001 \u30bf\u30a4\u30e0\u30b9\u30c6\u30c3\u30d7 \u3054\u3068\u306b \u9069\u7528\u3055\u308c\u308b TD \u66f4\u65b0\u898f\u5247 \u3092\u7528\u3044\u3066\u884c\u3046 (\u72b6\u614b \u304b\u3089 \u5225\u306e \u72b6\u614b\u306b \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u9077\u79fb\u3055\u305b\u308b \u30e2\u30c7\u30eb\u4f9d\u5b58\u578b \u5f37\u5316\u5b66\u7fd2\u6280\u6cd5\u3068\u306f\u7570\u306a\u308a\u307e\u3059)\u3002 Q-\u5024 \u72b6\u614b\u306e\u52b9\u7528\u5024\u306b\u3064\u3044\u3066\u306f\u3059\u3067\u306b\u304a\u99b4\u67d3\u307f\u3067\u3057\u3087\u3046\u304c\u3001Q-\u5024 \u3082\u540c\u3058\u3067\u3059\u3002 Q-\u5024 \u306f\u3001\u72b6\u614b\u3068\u884c\u52d5\u306e\u30da\u30a2\u3068\u305d\u306e\u52b9\u7528\u3092\u8868\u3059\u5b9f\u6570\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3067\u3059\u3002 Q-\u5b66\u7fd2 \u3068 SARSA \u3068\u306f\u3001\u3059\u3079\u3066\u306e \u884c\u52d5-\u72b6\u614b \u306e\u30da\u30a2\u306b\u5bfe\u3057\u3066 \u6700\u9069\u306a Q-\u5024 \u3092\u8a55\u4fa1\u3059\u308b \u65b9\u7b56\u5236\u5fa1\u624b\u6cd5\u3067\u3059\u3002 SARSA \u306e\u66f4\u65b0\u5247\u306f: Q(S_t,A_t) \\leftarrow Q(S_t,A_t) + \\alpha\\left[ R_{t+1}+\\gamma Q(S_{t+1},A_{t+1}-Q(S_t,A_t)\\right] \u3042\u308b\u72b6\u614b S \u304c\u7d42\u4e86\u3057\u305f\u5834\u5408 (\u30b4\u30fc\u30eb\u306b\u9054\u3057\u305f\u308a\uff0c\u7d42\u4e86\u72b6\u614b\u306b\u9665\u3063\u305f\u5834\u5408)\uff0c Q(S,a)=0\\forall a\\in A \u3068\u306a\u308a\u307e\u3059\u3002 \u3053\u3053\u3067\uff0c A \u306f\u5168\u884c\u52d5\u30ec\u30d1\u30fc\u30c8\u30ea\u30fc\u3092\u8868\u3057\u307e\u3059\u3002 - $Q(s,a)$ \u3092\u5168\u72b6\u614b $s$ \u3068 \u5168\u52d5\u4f5c $a$ \u306b\u3064\u3044\u3066\u521d\u671f\u5316\uff0c$Q(\\text{\u7d42\u4e86\u72b6\u614b},\\cdot)=0$ \u3068\u3059\u308b - \u5404\u30a8\u30d4\u30bd\u30fc\u30c9\u3092\u7e70\u308a\u8fd4\u3059: - $S$ \u3092\u521d\u671f\u5316\u3059\u308b - $S$ \u306e\u4e2d\u304b\u3089 Q \u95a2\u6570\u306b\u5f93\u3063\u3066 $A$ \u3092\u9078\u3076 - $Q(S,A)\\leftarrow Q(S,A)+\\alpha\\left[R+\\gamma Q(S',S')-Q(S,A)\\right]$ - $S\\leftarrow S'$, $A\\leftarrow A'$ - $S$ \u304c\u53ce\u675f\u3059\u308b\u307e\u3067\u7e70\u308a\u8fd4\u3059","title":"SARSA"},{"location":"Reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python/#epsilon","text":"\u30a4\u30d7\u30b7\u30ed\u30f3\u8caa\u6b32\u306a\u65b9\u7b56\u3068\u306f\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u8a00\u3044\u307e\u3059: 0 \u304b\u3089 1 \u306e\u7bc4\u56f2 ( r\\in[0,1] ) \u306e\u4e71\u6570 r \u3092\u4e00\u3064\u767a\u751f\u3055\u305b\u307e\u3059 \u3082\u3057 r>\\epsilon \u3067\u3042\u308c\u3042\u3070\uff0c\u30e9\u30f3\u30c0\u30e0\u306b\u3042\u308b\u884c\u52d5\u3092\u9078\u629e\u3057\u307e\u3059 \u305d\u3046\u3067\u306a\u3051\u308c\u3070 (\u3059\u306a\u308f\u3061 r\\le\\epsilon ) Q \u5024 (\u6700\u5927\u52b9\u7528\u3092\u3042\u305f\u3048\u308b) \u884c\u52d5\u3092\u9078\u629e\u3057\u307e\u3059 \u4ee5\u4e0b\u306b Python \u30b3\u30fc\u30c9\u3092\u793a\u3057\u307e\u3059: 1 2 3 4 5 6 7 8 9 10 11 12 def epsilon_greedy (Q, epsilon, n_actions, s, train= False ): \"\"\" @param Q Q values state x action -> value @param epsilon for exploration @param s number of states @param train if true then no random actions selected \"\"\" if train or np.random.rand() < epsilon: action = np.argmax(Q[s, :]) else : action = np.random.randint( 0 , n_actions) return action Source: https://gist.githubusercontent.com/TimeTraveller-San/40a7a2655743bf6230706d45d1201b49/raw/25ddaaf54e946d33576e27e6bab45a40f22864a9/epsilon_greedy.py \\epsilon \u306e\u5024\u306f \u63a2\u7d22 = \u77e5\u8b58\u5229\u7528 \u306e\u30b8\u30ec\u30f3\u30de \u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002\u82f1\u8a9e\u3067\u306f exploration-exploitatoin dilemma \u3068\u547c\u3073\u307e\u3059\u3002\u7db4\u304c\u4f3c\u3066\u3044\u308b\u305f\u3081\u306b\u82f1\u8a9e\u3067\u899a\u3048\u305f\u65b9\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002 \\epsilon \u304c\u5927\u304d\u3051\u308c\u3070\u3001\u4e71\u6570 r \u304c \\epsilon \u3088\u308a\u5927\u304d\u304f\u306a\u308b\u3053\u3068\u306f\u307b\u3068\u3093\u3069\u306a\u304f\u3001 \u30e9\u30f3\u30c0\u30e0\u306a\u884c\u52d5\u306f\u307b\u3068\u3093\u3069\u8d77\u3053\u3089\u306a\u3044 (\u63a2\u7d22\u304c\u5c11\u306a\u304f\u3001\u77e5\u8b58\u5229\u7528 \u304c\u591a\u304f\u306a\u308b)\u3002 \\epsilon \u304c\u5c0f\u3055\u3051\u308c\u3070\u3001\u4e71\u6570 r \u306f \\epsilon \u3088\u308a\u3082\u5927\u304d\u304f\u306a\u308b\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u3001 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 \u306f \u3088\u308a \u591a\u304f \u306e \u30e9\u30f3\u30c0\u30e0 \u306a \u884c\u52d5 \u3092 \u9078\u629e \u3059\u308b \u3053\u3068 \u306b \u306a\u308b\u3002 \u3053\u306e\u3088\u3046\u306a\u78ba\u7387\u7684\u306a\u6027\u8cea\u3092\u5229\u7528\u3057\u3066\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u74b0\u5883\u3092\u3088\u308a\u63a2\u7d22\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u7d4c\u9a13\u5247\u3068\u3057\u3066\u3001 \\epsilon \u306f\u901a\u5e38 0.9 \u306b\u9078\u3070\u308c\u307e\u3059\u3002 \u3067\u3059\u304c \\epsilon \u306f \u74b0\u5883\u30bf\u30a4\u30d7\u306b\u5fdc\u3058\u3066\u5909\u5316\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3044\u304f\u3064\u304b\u306e\u30b1\u30fc\u30b9\u3067\u306f\u3001\u3088\u308a\u9ad8\u3044\u63a2\u7d22\u306b\u7d9a\u3044\u3066\u3088\u308a\u9ad8\u3044\u77e5\u8b58\u5229\u7528 \u3092\u53ef\u80fd\u306b\u3059\u308b\u305f\u3081\u306b\u3001\u6642\u9593\u306e\u7d4c\u904e\u3068\u3068\u3082\u306b \\epsilon \u306f \u7de9\u548c \u6f38\u6e1b \u3055\u308c\u307e\u3059\u3002 \u4ee5\u4e0b2 Taxi-v2 \u306e gym \u74b0\u5883\u306b\u9069\u7528\u3055\u308c\u305f SARSA \u306e\u30b7\u30f3\u30d7\u30eb\u306a Python \u30b3\u30fc\u30c9\u3092\u793a\u3057\u307e\u3059\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 import gym import numpy as np import time \"\"\" SARSA on policy learning python implementation. This is a python implementation of the SARSA algorithm in the Sutton and Barto's book on RL. It's called SARSA because - (state, action, reward, state, action). The only difference between SARSA and Qlearning is that SARSA takes the next action based on the current policy while qlearning takes the action with maximum utility of next state. Using the simplest gym environment for brevity: https://gym.openai.com/envs/FrozenLake-v0/ \"\"\" def init_q (s, a, type = \"ones\" ): \"\"\" @param s the number of states @param a the number of actions @param type random, ones or zeros for the initialization \"\"\" if type == \"ones\" : return np.ones((s, a)) elif type == \"random\" : return np.random.random((s, a)) elif type == \"zeros\" : return np.zeros((s, a)) def epsilon_greedy (Q, epsilon, n_actions, s, train= False ): \"\"\" @param Q Q values state x action -> value @param epsilon for exploration @param s number of states @param train if true then no random actions selected \"\"\" if train or np.random.rand() < epsilon: action = np.argmax(Q[s, :]) else : action = np.random.randint( 0 , n_actions) return action def sarsa (alpha, gamma, epsilon, episodes, max_steps, n_tests, render = False , test= False ): \"\"\" @param alpha learning rate @param gamma decay factor @param epsilon for exploration @param max_steps for max step in each episode @param n_tests number of test episodes \"\"\" env = gym.make( 'Taxi-v2' ) n_states, n_actions = env.observation_space.n, env.action_space.n Q = init_q(n_states, n_actions, type = \"ones\" ) timestep_reward = [] for episode in range (episodes): print ( f\"Episode: { episode }\" ) total_reward = 0 s = env.reset() a = epsilon_greedy(Q, epsilon, n_actions, s) t = 0 done = False while t < max_steps: if render: env.render() t += 1 s_, reward, done, info = env.step(a) total_reward += reward a_ = epsilon_greedy(Q, epsilon, n_actions, s_) if done: Q[s, a] += alpha * ( reward - Q[s, a] ) else : Q[s, a] += alpha * ( reward + (gamma * Q[s_, a_] ) - Q[s, a] ) s, a = s_, a_ if done: if render: print ( f\"This episode took { t } timesteps and reward { total_reward }\" ) timestep_reward.append(total_reward) break if render: print ( f\"Here are the Q values:\\n{ Q }\\nTesting now:\" ) if test: test_agent(Q, env, n_tests, n_actions) return timestep_reward def test_agent (Q, env, n_tests, n_actions, delay= 0.1 ): for test in range (n_tests): print ( f\"Test #{ test }\" ) s = env.reset() done = False epsilon = 0 total_reward = 0 while True : time.sleep(delay) env.render() a = epsilon_greedy(Q, epsilon, n_actions, s, train= True ) print ( f\"Chose action { a } for state { s }\" ) s, reward, done, info = env.step(a) total_reward += reward if done: print ( f\"Episode reward: { total_reward }\" ) time.sleep( 1 ) break if __name__ == \"__main__\" : alpha = 0.4 gamma = 0.999 epsilon = 0.9 episodes = 3000 max_steps = 2500 n_tests = 20 timestep_reward = sarsa(alpha, gamma, epsilon, episodes, max_steps, n_tests) print (timestep_reward) source: https://gist.github.com/TimeTraveller-San/4aa1ed2d0644ad05d84348dd4fb797f3#file-sarsa-py","title":"\u30a4\u30d7\u30b7\u30ed\u30f3 (\\epsilon) \u8caa\u6b32(\u6b32\u5f35\u308a) \u65b9\u7b56"},{"location":"Reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python/#q","text":"Q-\u5b66\u7fd2 \u306f\u3001\u65b9\u7b56\u306b\u3088\u3089\u306a\u3044 TD \u5236\u5fa1\u3067\u3059\u3002 SARSA \u3068\u307b\u307c\u540c\u3058\u3067\u3059\u3002\u552f\u4e00\u306e\u9055\u3044\u306f\u3001\u6b21\u306e \u52d5\u4f5c(\u884c\u52d5) A \u3092\u898b\u3064\u3051\u308b\u305f\u3081\u306e \u65b9\u7b56\u306b\u5f93\u3046\u306e\u3067\u306f\u306a\u304f\u3001 \u8caa\u6b32\u306b \u52d5\u4f5c(\u884c\u52d5) \u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3067\u3059\u3002 SARSA \u3068\u540c\u69d8\u306b Q\u5024 \u3092\u8a55\u4fa1\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u304a\u308a\u3001\u66f4\u65b0\u5247 \u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059: Q(S_t,A_t)\\leftarrow Q(S_t,A_t)+\\alpha\\left[R_{t+1}+\\gamma\\max_{alpha} Q(S_{t+1},a)-Q(S_t,A_t)\\right] SARSA \u3067\u306f\u3001\u3042\u308b\u65b9\u7b56 \u306b\u5f93\u3063\u3066 \u884c\u52d5 A' \u3092\u9078\u629e\u3057\u3066\u3044\u307e\u3057\u305f\u3002 \u3053\u308c\u306b\u5bfe\u3057\u3001\u4e0a\u5f0f Q \u5b66\u7fd2 \u3067\u306f \u884c\u52d5 A' ( a ) \u306f\u3001 Q \u306e\u6700\u5927\u5024\u3092\u53d6\u308b\u3060\u3051\u306e \u6b32\u5f35\u308a(\u8caa\u6b32, \u30b0\u30ea\u30fc\u30c7\u30a3)\u306a \u65b9\u6cd5\u3067\u9078\u629e\u3055\u308c\u307e\u3059\u3002 Q \u5b66\u7fd2\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059: Python \u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 import gym import numpy as np import time \"\"\" Qlearning is an off policy learning python implementation. This is a python implementation of the qlearning algorithm in the Sutton and Barto's book on RL. It's called SARSA because - (state, action, reward, state, action). The only difference between SARSA and Qlearning is that SARSA takes the next action based on the current policy while qlearning takes the action with maximum utility of next state. Using the simplest gym environment for brevity: https://gym.openai.com/envs/FrozenLake-v0/ \"\"\" def init_q (s, a, type = \"ones\" ): \"\"\" @param s the number of states @param a the number of actions @param type random, ones or zeros for the initialization \"\"\" if type == \"ones\" : return np.ones((s, a)) elif type == \"random\" : return np.random.random((s, a)) elif type == \"zeros\" : return np.zeros((s, a)) def epsilon_greedy (Q, epsilon, n_actions, s, train= False ): \"\"\" @param Q Q values state x action -> value @param epsilon for exploration @param s number of states @param train if true then no random actions selected \"\"\" if train or np.random.rand() < epsilon: action = np.argmax(Q[s, :]) else : action = np.random.randint( 0 , n_actions) return action def qlearning (alpha, gamma, epsilon, episodes, max_steps, n_tests, render = False , test= False ): \"\"\" @param alpha learning rate @param gamma decay factor @param epsilon for exploration @param max_steps for max step in each episode @param n_tests number of test episodes \"\"\" env = gym.make( 'Taxi-v2' ) n_states, n_actions = env.observation_space.n, env.action_space.n Q = init_q(n_states, n_actions, type = \"ones\" ) timestep_reward = [] for episode in range (episodes): print ( f\"Episode: { episode }\" ) s = env.reset() a = epsilon_greedy(Q, epsilon, n_actions, s) t = 0 total_reward = 0 done = False while t < max_steps: if render: env.render() t += 1 s_, reward, done, info = env.step(a) total_reward += reward a_ = np.argmax(Q[s_, :]) if done: Q[s, a] += alpha * ( reward - Q[s, a] ) else : Q[s, a] += alpha * ( reward + (gamma * Q[s_, a_]) - Q[s, a] ) s, a = s_, a_ if done: if render: print ( f\"This episode took { t } timesteps and reward: { total_reward }\" ) timestep_reward.append(total_reward) break if render: print ( f\"Here are the Q values:\\n{ Q }\\nTesting now:\" ) if test: test_agent(Q, env, n_tests, n_actions) return timestep_reward def test_agent (Q, env, n_tests, n_actions, delay= 1 ): for test in range (n_tests): print ( f\"Test #{ test }\" ) s = env.reset() done = False epsilon = 0 while True : time.sleep(delay) env.render() a = epsilon_greedy(Q, epsilon, n_actions, s, train= True ) print ( f\"Chose action { a } for state { s }\" ) s, reward, done, info = env.step(a) if done: if reward > 0 : print ( \"Reached goal!\" ) else : print ( \"Shit! dead x_x\" ) time.sleep( 3 ) break if __name__ == \"__main__\" : alpha = 0.4 gamma = 0.999 epsilon = 0.9 episodes = 10000 max_steps = 2500 n_tests = 2 timestep_reward = qlearning(alpha, gamma, epsilon, episodes, max_steps, n_tests, test = True ) print (timestep_reward) source: https://gist.github.com/TimeTraveller-San/9e56f9d09be7d50b795ef2f83be2ba72#file-qlearning-py","title":"Q \u5b66\u7fd2"},{"location":"Reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python/#sarsa_1","text":"\u671f\u5f85 SARSA \u3068\u306f\u3001\u305d\u306e\u540d\u304c\u793a\u3059\u3088\u3046\u306b\u3001\u73fe\u5728\u306e\u72b6\u614b\u3067\u8d77\u3053\u308a\u3046\u308b\u3059\u3079\u3066\u306e\u884c\u52d5\u306b\u3064\u3044\u3066\u306e Q\u5024 \u306e\u671f\u5f85\u5024(\u5e73\u5747\u5024)\u3092\u53d6\u308a\u307e\u3059\u3002 \u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u66f4\u65b0\u5247\u3092\u4f7f\u3046\u3068\u3001\u3088\u308a\u660e\u78ba\u306b\u306a\u308a\u307e\u3059\u3002 Q(S_t,A_t)\\leftarrow Q(S_t,A_t) + \\alpha\\left[R_{t+1}+\\gamma\\mathbb{E}\\left[Q(S_{t+1},A_{t+1}\\vert S_{t+1}\\right]-Q(S_t,A_t)\\right]\\\\ \\\\ \\hspace{6em}\\leftarrow Q(S_t,A_t)+\\alpha\\left[ R_{t+1}+\\gamma\\sum_{\\alpha}\\pi(a\\vert S_{t+1}) Q(S_{t+1},a) - Q(S_t,A_t) \\right] Python \u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 import gym import numpy as np import time \"\"\" SARSA on policy learning python implementation. This is a python implementation of the SARSA algorithm in the Sutton and Barto's book on RL. It's called SARSA because - (state, action, reward, state, action). The only difference between SARSA and Qlearning is that SARSA takes the next action based on the current policy while qlearning takes the action with maximum utility of next state. Using the simplest gym environment for brevity: https://gym.openai.com/envs/FrozenLake-v0/ \"\"\" def init_q (s, a, type = \"ones\" ): \"\"\" @param s the number of states @param a the number of actions @param type random, ones or zeros for the initialization \"\"\" if type == \"ones\" : return np.ones((s, a)) elif type == \"random\" : return np.random.random((s, a)) elif type == \"zeros\" : return np.zeros((s, a)) def epsilon_greedy (Q, epsilon, n_actions, s, train= False ): \"\"\" @param Q Q values state x action -> value @param epsilon for exploration @param s number of states @param train if true then no random actions selected \"\"\" if train or np.random.rand() < epsilon: action = np.argmax(Q[s, :]) else : action = np.random.randint( 0 , n_actions) return action def expected_sarsa (alpha, gamma, epsilon, episodes, max_steps, n_tests, render = False , test= False ): \"\"\" @param alpha learning rate @param gamma decay factor @param epsilon for exploration @param max_steps for max step in each episode @param n_tests number of test episodes \"\"\" env = gym.make( 'Taxi-v2' ) n_states, n_actions = env.observation_space.n, env.action_space.n Q = init_q(n_states, n_actions, type = \"ones\" ) timestep_reward = [] for episode in range (episodes): print ( f\"Episode: { episode }\" ) total_reward = 0 s = env.reset() t = 0 done = False while t < max_steps: if render: env.render() t += 1 a = epsilon_greedy(Q, epsilon, n_actions, s) s_, reward, done, info = env.step(a) total_reward += reward if done: Q[s, a] += alpha * ( reward - Q[s, a] ) else : expected_value = np.mean(Q[s_,:]) # print(Q[s,:], sum(Q[s,:]), len(Q[s,:]), expected_value) Q[s, a] += alpha * (reward + (gamma * expected_value) - Q[s, a]) s = s_ if done: if True : print ( f\"This episode took { t } timesteps and reward { total_reward }\" ) timestep_reward.append(total_reward) break if render: print ( f\"Here are the Q values:\\n{ Q }\\nTesting now:\" ) if test: test_agent(Q, env, n_tests, n_actions) return timestep_reward def test_agent (Q, env, n_tests, n_actions, delay= 0.1 ): for test in range (n_tests): print ( f\"Test #{ test }\" ) s = env.reset() done = False epsilon = 0 total_reward = 0 while True : time.sleep(delay) env.render() a = epsilon_greedy(Q, epsilon, n_actions, s, train= True ) print ( f\"Chose action { a } for state { s }\" ) s, reward, done, info = env.step(a) total_reward += reward if done: print ( f\"Episode reward: { total_reward }\" ) time.sleep( 1 ) break if __name__ == \"__main__\" : alpha = 0.1 gamma = 0.9 epsilon = 0.9 episodes = 1000 max_steps = 2500 n_tests = 20 timestep_reward = expected_sarsa(alpha, gamma, epsilon, episodes, max_steps, n_tests, render= False , test= True ) print (timestep_reward) source: https://gist.github.com/TimeTraveller-San/5bd93710e118633e0793dc5d0b92b19a#file-expectedsarsa-py","title":"\u671f\u5f85 SARSA"},{"location":"Reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python/#_4","text":"\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067 3 \u3064\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6bd4\u8f03\u3057\u307e\u3057\u305f 1 2 3 4 5 lpha = 0.4 gamma = 0.999 epsilon = 0.9 episodes = 2000 max_steps = 2500 # (max number of time steps possible in a single episode) \u3053\u3053\u3067\u306f\u3001\u4e0a\u8a18\u306e 3 \u3064\u306e\u65b9\u7b56\u5236\u5fa1\u65b9\u6cd5\u306e\u6bd4\u8f03 \u3092\u30d7\u30ed\u30c3\u30c8\u3057\u307e\u3059\u3002","title":"\u6bd4\u8f03"},{"location":"Reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python/#_5","text":"\u4ee5\u4e0b\u306e\u30d7\u30ed\u30c3\u30c8\u304c\u793a\u3059\u3088\u3046\u306b\u3001Q \u5b66\u7fd2 (\u7dd1) \u306f SARSA(\u30aa\u30ec\u30f3\u30b8) \u3068 \u671f\u5f85 SARSA(\u9752) \u306e\u4e21\u8005\u3088\u308a\u5148\u306b\u53ce\u675f\u3057\u307e\u3057\u305f\u3002","title":"\u53ce\u675f"},{"location":"Reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python/#_6","text":"\u5b9f\u88c5\u3057\u305f 3 \u3064\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306f\u3001Q-\u5b66\u7fd2 \u304c\u6700\u3082\u826f\u304f\u3001\u671f\u5f85 SARSA \u304c\u6700\u3082\u60aa\u3044\u6027\u80fd\u306e\u3088\u3046\u3067\u3059\u3002","title":"\u6210\u7e3e"},{"location":"Reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python/#_7","text":"\u6642\u9593\u5dee\u5b66\u7fd2 \u306f \u6700\u3082\u91cd\u8981\u306a\u5f37\u5316\u5b66\u7fd2\u306e\u6982\u5ff5\u3067\u3059\u3002 DQN \u3084 \u30c0\u30d6\u30ebDQN \u306e\u3088\u3046\u306a\u3001\u3055\u3089\u306b\u6d3e\u751f\u3057\u305f\u3082\u306e \u306f\u3001AI \u306e\u5206\u91ce\u3067\u6709\u540d\u306a\u753b\u671f\u7684\u306a\u7d50\u679c\u3092\u9054\u6210\u3057\u3066\u3044\u307e\u3059\u3002 Google \u306e \u30a2\u30eb\u30d5\u30a1\u7881\u306f\u3001\u56f2\u7881\u306e\u4e16\u754c\u30c1\u30e3\u30f3\u30d4\u30aa\u30f3\u3092\u5012\u3059\u305f\u3081\u306b\u3001CNN \u3068 DQN \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002","title":"\u7d50\u8a9e"},{"location":"activation_functions/","text":"\u6d3b\u6027\u5316\u95a2\u6570 activation functions \u00b6 \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092 colab \u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 import numpy as np import matplotlib.pyplot as plt %matplotlib inline # Original: https://github.com/alrojo/tensorflow-tutorial/blob/master/lab1_FFN/lab1_FFN.ipynb # PLOT OF DIFFERENT OUTPUT USNITS x = np.linspace(- 3 , 4 , 100 ) relu = lambda x: np.maximum( 0 , x) leaky_relu = lambda x: np.maximum( 0 , x) + 0.1 * np.minimum( 0 , x) elu = lambda x: (x > 0 )*x + ( 1 - (x > 0 )) * (np.exp(x) - 1 ) sigmoid = lambda x: ( 1 +np.exp(-x))**(- 1 ) def softmax (w, t = 1.0 ): e = np.exp(w) dist = e / np.sum(e) return dist x_softmax = softmax(x) plt.figure(figsize=( 8 , 6 )) plt.plot(x, relu(x), label= 'ReLU' , lw= 2 ) plt.plot(x, leaky_relu(x), label= 'Leaky ReLU' ,lw= 2 ) plt.plot(x, elu(x), label= 'Elu' , lw= 2 ) plt.plot(x, sigmoid(x), label= 'Sigmoid' ,lw= 2 ) plt.legend(loc= 2 , fontsize= 16 ) plt.title( 'Non-linearities' , fontsize= 20 ) plt.ylim([- 2 , 4 ]) plt.xlim([- 3 , 3 ]) # softmax # assert that all class probablities sum to one print (np.sum(x_softmax)) assert abs ( 1.0 - x_softmax.sum()) < 1e-8 \u30a2\u30ec\u30c3\u30af\u30b9\u30cd\u30c3\u30c8\u306e\u53ce\u675f\u306e\u69d8\u5b50","title":"\u6d3b\u6027\u5316\u95a2\u6570"},{"location":"activation_functions/#activation-functions","text":"\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092 colab \u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 import numpy as np import matplotlib.pyplot as plt %matplotlib inline # Original: https://github.com/alrojo/tensorflow-tutorial/blob/master/lab1_FFN/lab1_FFN.ipynb # PLOT OF DIFFERENT OUTPUT USNITS x = np.linspace(- 3 , 4 , 100 ) relu = lambda x: np.maximum( 0 , x) leaky_relu = lambda x: np.maximum( 0 , x) + 0.1 * np.minimum( 0 , x) elu = lambda x: (x > 0 )*x + ( 1 - (x > 0 )) * (np.exp(x) - 1 ) sigmoid = lambda x: ( 1 +np.exp(-x))**(- 1 ) def softmax (w, t = 1.0 ): e = np.exp(w) dist = e / np.sum(e) return dist x_softmax = softmax(x) plt.figure(figsize=( 8 , 6 )) plt.plot(x, relu(x), label= 'ReLU' , lw= 2 ) plt.plot(x, leaky_relu(x), label= 'Leaky ReLU' ,lw= 2 ) plt.plot(x, elu(x), label= 'Elu' , lw= 2 ) plt.plot(x, sigmoid(x), label= 'Sigmoid' ,lw= 2 ) plt.legend(loc= 2 , fontsize= 16 ) plt.title( 'Non-linearities' , fontsize= 20 ) plt.ylim([- 2 , 4 ]) plt.xlim([- 3 , 3 ]) # softmax # assert that all class probablities sum to one print (np.sum(x_softmax)) assert abs ( 1.0 - x_softmax.sum()) < 1e-8 \u30a2\u30ec\u30c3\u30af\u30b9\u30cd\u30c3\u30c8\u306e\u53ce\u675f\u306e\u69d8\u5b50","title":"\u6d3b\u6027\u5316\u95a2\u6570 activation functions"},{"location":"ban-of-p-values/","text":"\u30a2\u30e1\u30ea\u30ab\u7d71\u8a08\u5b66\u4f1a(ASA) \u306e P \u5024 \u8b66\u544a\u5ba3\u8a00 \u00b6 p \u5024\u306f\u30c7\u30fc\u30bf\u304c\u3042\u308b\u7279\u5b9a\u306e\u7d71\u8a08\u30e2\u30c7\u30eb\u306b\u9069\u5408\u3057\u3066\u3044\u306a\u3044\u5ea6\u5408\u3044\u3092\u793a\u3057\u3066\u3044\u308b p \u5024\u306f\u7814\u7a76\u3057\u3066\u3044\u308b\u4eee\u8aac\u304c\u6b63\u3057\u3044\u3053\u3068\u3092\u6e2c\u5b9a\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u304f\uff0c\u30c7\u30fc\u30bf\u304c\u5076\u7136\u306b\u751f\u6210\u3055\u308c\u305f\u78ba\u7387\u3092\u793a\u3059\u3082\u306e\u3067\u3042\u308b \u79d1\u5b66\u306e\u7d50\u8ad6\uff0c\u30d3\u30b8\u30cd\u30b9\u3084\u653f\u7b56\u306e\u6c7a\u5b9a\u306f p \u5024\u304c\u7279\u5b9a\u306e\u3057\u3044\u304d\u5024\u3092\u8d8a\u3048\u305f\u3053\u3068\u3060\u3051\u306b\u57fa\u3044\u3066\u884c\u308f\u308c\u308b\u3079\u304d\u3067\u306f\u306a\u3044 \u9069\u5207\u306f\u63a8\u8ad6\u306b\u306f\u5b8c\u5168\u306a\u5831\u544a\u3068\u900f\u660e\u6027\u304c\u5fc5\u8981\u3067\u3042\u308b \u3042\u308b\u7279\u5b9a\u306e p \u5024\uff0c\u3059\u306a\u308f\u3061\u7d71\u8a08\u7684\u6709\u610f\u6027\u306f\uff0c\u52b9\u679c\u91cf\u3084\u7d50\u679c\u306e\u91cd\u8981\u6027\u3092\u6e2c\u5b9a\u3057\u3066\u3044\u306a\u3044 p \u5024\u305d\u308c\u81ea\u4f53\u3067\u306f\uff0c\u3042\u308b\u7279\u5b9a\u306e\u30e2\u30c7\u30eb\u3084\u4eee\u8aac\u306b\u95a2\u3059\u308b\u9069\u5207\u306a\u8a3c\u62e0\u306b\u95a2\u3059\u308b\u6e2c\u5ea6\u3092\u63d0\u4f9b\u3057\u3066\u3044\u306a\u3044 https://amstat.tandfonline.com/doi/pdf/10.1080/00031305.2016.1154108 ASA Statement on Statistical Significance and P-values \u7d71\u8a08\u5b66\u304c\u65b0\u3057\u3044\u6642\u4ee3\u306b... \u00b6 https://xkcd.com/882/","title":"\u30a2\u30e1\u30ea\u30ab\u7d71\u8a08\u5b66\u4f1a(ASA) \u306e P \u5024 \u8b66\u544a\u5ba3\u8a00"},{"location":"ban-of-p-values/#asa-p","text":"p \u5024\u306f\u30c7\u30fc\u30bf\u304c\u3042\u308b\u7279\u5b9a\u306e\u7d71\u8a08\u30e2\u30c7\u30eb\u306b\u9069\u5408\u3057\u3066\u3044\u306a\u3044\u5ea6\u5408\u3044\u3092\u793a\u3057\u3066\u3044\u308b p \u5024\u306f\u7814\u7a76\u3057\u3066\u3044\u308b\u4eee\u8aac\u304c\u6b63\u3057\u3044\u3053\u3068\u3092\u6e2c\u5b9a\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u304f\uff0c\u30c7\u30fc\u30bf\u304c\u5076\u7136\u306b\u751f\u6210\u3055\u308c\u305f\u78ba\u7387\u3092\u793a\u3059\u3082\u306e\u3067\u3042\u308b \u79d1\u5b66\u306e\u7d50\u8ad6\uff0c\u30d3\u30b8\u30cd\u30b9\u3084\u653f\u7b56\u306e\u6c7a\u5b9a\u306f p \u5024\u304c\u7279\u5b9a\u306e\u3057\u3044\u304d\u5024\u3092\u8d8a\u3048\u305f\u3053\u3068\u3060\u3051\u306b\u57fa\u3044\u3066\u884c\u308f\u308c\u308b\u3079\u304d\u3067\u306f\u306a\u3044 \u9069\u5207\u306f\u63a8\u8ad6\u306b\u306f\u5b8c\u5168\u306a\u5831\u544a\u3068\u900f\u660e\u6027\u304c\u5fc5\u8981\u3067\u3042\u308b \u3042\u308b\u7279\u5b9a\u306e p \u5024\uff0c\u3059\u306a\u308f\u3061\u7d71\u8a08\u7684\u6709\u610f\u6027\u306f\uff0c\u52b9\u679c\u91cf\u3084\u7d50\u679c\u306e\u91cd\u8981\u6027\u3092\u6e2c\u5b9a\u3057\u3066\u3044\u306a\u3044 p \u5024\u305d\u308c\u81ea\u4f53\u3067\u306f\uff0c\u3042\u308b\u7279\u5b9a\u306e\u30e2\u30c7\u30eb\u3084\u4eee\u8aac\u306b\u95a2\u3059\u308b\u9069\u5207\u306a\u8a3c\u62e0\u306b\u95a2\u3059\u308b\u6e2c\u5ea6\u3092\u63d0\u4f9b\u3057\u3066\u3044\u306a\u3044 https://amstat.tandfonline.com/doi/pdf/10.1080/00031305.2016.1154108 ASA Statement on Statistical Significance and P-values","title":"\u30a2\u30e1\u30ea\u30ab\u7d71\u8a08\u5b66\u4f1a(ASA) \u306e P \u5024 \u8b66\u544a\u5ba3\u8a00"},{"location":"ban-of-p-values/#_1","text":"https://xkcd.com/882/","title":"\u7d71\u8a08\u5b66\u304c\u65b0\u3057\u3044\u6642\u4ee3\u306b..."},{"location":"chapt_nn/","text":"\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u57fa\u790e \u00b6 \u306f\u3058\u3081\u306e\u4e00\u6b69 \u00b6 Google Playground \u30c7\u30e2 \u3042\u308b\u3044\u306f\u5f53\u65e5\u901a\u4fe1\u72b6\u614b\u304c\u60aa\u304b\u3063\u305f\u3068\u304d\u306e\u305f\u3081\u306e\u4fdd\u967a\u7684\u610f\u5473\u5408\u3044\u3067: 1 2 cd ~/study/2019tensorflow_playground.git npm run serve \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u6982\u89b3 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u57fa\u790e\u77e5\u8b58 \u304a\u305d\u3089\u304f\u6392\u4ed6\u7684\u8ad6\u7406\u548c\u3092\u89e3\u304f\u6700\u77ed\u306e python \u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3057\u305f\u3002 \u30bd\u30fc\u30b9 1 2 3 4 5 6 7 8 9 10 11 12 13 import numpy as np X = np.array([ [ 0 , 0 , 1 ],[ 0 , 1 , 1 ],[ 1 , 0 , 1 ],[ 1 , 1 , 1 ] ]) y = np.array([[ 0 , 1 , 1 , 0 ]]).T w0 = 2 * np.random.random(( 3 , 4 )) - 1 w1 = 2 * np.random.random(( 4 , 1 )) - 1 for i in range ( 500 ): l1 = np.tanh(np.dot(X,w0)) l2 = 1 /( 1 +np.exp(-(np.dot(l1,w1)))) dl2 = (y - l2) * (l2 * ( 1 - l2)) dl1 = dl2.dot(w1.T) * ( 1 - l1 ** 2 ) w1 += np.dot(l1.T, dl2) w0 += np.dot(X.T, dl1) print (l2.T) if i % 100 == 0 else Noneimport numpy as np \u7528\u8a9e\u96c6 \u00b6 \u975e\u7dda\u5f62\u6027 \u00b6 GRU LSTM Relu Sigmoid Tanh \u7d50\u5408\u30d1\u30bf\u30fc\u30f3 \u00b6 Fully connected Convolutional Dilated Recurrent Recursive Skip / Residual Random \u6700\u9069\u5316 \u00b6 SGD Momentum RMSProp Adagrad Adam Second Order (KFac) \u640d\u5931\u95a2\u6570 \u00b6 \u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u6575\u5bfe \u5909\u5206 \u6700\u5927\u5bfe\u6570\u5c24\u5ea6 Sparse L2 Reg REINFORCE \u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf \u00b6 Learning Rate Decay Layer Size Batch Size Dropout Rate Weight init Data augmentation Gradient Clipping Beta Momentum \u5c24\u5ea6\uff0c\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\uff0c\u60c5\u5831\u7406\u8ad6 \u5404\u7a2e\u6700\u9069\u5316\u624b\u6cd5\uff0c\u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5\uff0cAdaGrad\uff0cAdaDelta\uff0cRMSProp\uff0cAdam\uff0c\u81ea\u7136\u52fe\u914d\u6cd5\uff0c\u30cb\u30e5\u30fc\u30c8\u30f3\u6cd5\uff0cL-BGFS \u4e3b\u6210\u5206\u5206\u6790\uff0c\u7279\u7570\u5024\u5206\u89e3\uff0c\u81ea\u5df1\u7d44\u7e54\u5316\uff0c(\u975e\u8ca0)\u884c\u5217\u56e0\u5b50\u5316\u6cd5 \u56fa\u6709\u9854\uff0c\u30d5\u30a3\u30c3\u30b7\u30e3\u30fc\u9854\uff0c\u90e8\u5206\u7a7a\u9593\u6cd5 \u30de\u30c3\u30ab\u30ed\u30c3\u30af\u3068\u30d4\u30c3\u30c4\u306e\u5f62\u5f0f\u30cb\u30e5\u30fc\u30ed\u30f3\u3068\u751f\u7406\u5b66\u7684\u5bfe\u5fdc\u7269 \u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u5b66\u7fd2\u5247\uff0c\u8aa4\u5dee\u9006\u4f1d\u64ad\u5b66\u7fd2\u5247\uff0c\u6b63\u5247\u5316\u9805 (L2\uff0cL1\uff0cL0) \u5404\u7a2e\u6d3b\u6027\u5316\u95a2\u6570\uff0c\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\uff0c\u30cf\u30a4\u30d1\u30fc\u30bf\u30f3\u30b8\u30a7\u30f3\u30c8\uff0c\u6574\u6d41\u7dda\u5f62\u30e6\u30cb\u30c3\u30c8\uff0c\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u95a2\u6570\uff0c\u52a3\u5fae\u5206 \u4ed8\u9332 \u52fe\u914d\u964d\u4e0b\u6cd5\u306e\u57fa\u790e","title":"\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u57fa\u790e"},{"location":"chapt_nn/#_1","text":"","title":"\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u57fa\u790e"},{"location":"chapt_nn/#_2","text":"Google Playground \u30c7\u30e2 \u3042\u308b\u3044\u306f\u5f53\u65e5\u901a\u4fe1\u72b6\u614b\u304c\u60aa\u304b\u3063\u305f\u3068\u304d\u306e\u305f\u3081\u306e\u4fdd\u967a\u7684\u610f\u5473\u5408\u3044\u3067: 1 2 cd ~/study/2019tensorflow_playground.git npm run serve \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u6982\u89b3 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u57fa\u790e\u77e5\u8b58 \u304a\u305d\u3089\u304f\u6392\u4ed6\u7684\u8ad6\u7406\u548c\u3092\u89e3\u304f\u6700\u77ed\u306e python \u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3057\u305f\u3002 \u30bd\u30fc\u30b9 1 2 3 4 5 6 7 8 9 10 11 12 13 import numpy as np X = np.array([ [ 0 , 0 , 1 ],[ 0 , 1 , 1 ],[ 1 , 0 , 1 ],[ 1 , 1 , 1 ] ]) y = np.array([[ 0 , 1 , 1 , 0 ]]).T w0 = 2 * np.random.random(( 3 , 4 )) - 1 w1 = 2 * np.random.random(( 4 , 1 )) - 1 for i in range ( 500 ): l1 = np.tanh(np.dot(X,w0)) l2 = 1 /( 1 +np.exp(-(np.dot(l1,w1)))) dl2 = (y - l2) * (l2 * ( 1 - l2)) dl1 = dl2.dot(w1.T) * ( 1 - l1 ** 2 ) w1 += np.dot(l1.T, dl2) w0 += np.dot(X.T, dl1) print (l2.T) if i % 100 == 0 else Noneimport numpy as np","title":"\u306f\u3058\u3081\u306e\u4e00\u6b69"},{"location":"chapt_nn/#_3","text":"","title":"\u7528\u8a9e\u96c6"},{"location":"chapt_nn/#_4","text":"GRU LSTM Relu Sigmoid Tanh","title":"\u975e\u7dda\u5f62\u6027"},{"location":"chapt_nn/#_5","text":"Fully connected Convolutional Dilated Recurrent Recursive Skip / Residual Random","title":"\u7d50\u5408\u30d1\u30bf\u30fc\u30f3"},{"location":"chapt_nn/#_6","text":"SGD Momentum RMSProp Adagrad Adam Second Order (KFac)","title":"\u6700\u9069\u5316"},{"location":"chapt_nn/#_7","text":"\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u6575\u5bfe \u5909\u5206 \u6700\u5927\u5bfe\u6570\u5c24\u5ea6 Sparse L2 Reg REINFORCE","title":"\u640d\u5931\u95a2\u6570"},{"location":"chapt_nn/#_8","text":"Learning Rate Decay Layer Size Batch Size Dropout Rate Weight init Data augmentation Gradient Clipping Beta Momentum \u5c24\u5ea6\uff0c\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\uff0c\u60c5\u5831\u7406\u8ad6 \u5404\u7a2e\u6700\u9069\u5316\u624b\u6cd5\uff0c\u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5\uff0cAdaGrad\uff0cAdaDelta\uff0cRMSProp\uff0cAdam\uff0c\u81ea\u7136\u52fe\u914d\u6cd5\uff0c\u30cb\u30e5\u30fc\u30c8\u30f3\u6cd5\uff0cL-BGFS \u4e3b\u6210\u5206\u5206\u6790\uff0c\u7279\u7570\u5024\u5206\u89e3\uff0c\u81ea\u5df1\u7d44\u7e54\u5316\uff0c(\u975e\u8ca0)\u884c\u5217\u56e0\u5b50\u5316\u6cd5 \u56fa\u6709\u9854\uff0c\u30d5\u30a3\u30c3\u30b7\u30e3\u30fc\u9854\uff0c\u90e8\u5206\u7a7a\u9593\u6cd5 \u30de\u30c3\u30ab\u30ed\u30c3\u30af\u3068\u30d4\u30c3\u30c4\u306e\u5f62\u5f0f\u30cb\u30e5\u30fc\u30ed\u30f3\u3068\u751f\u7406\u5b66\u7684\u5bfe\u5fdc\u7269 \u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u5b66\u7fd2\u5247\uff0c\u8aa4\u5dee\u9006\u4f1d\u64ad\u5b66\u7fd2\u5247\uff0c\u6b63\u5247\u5316\u9805 (L2\uff0cL1\uff0cL0) \u5404\u7a2e\u6d3b\u6027\u5316\u95a2\u6570\uff0c\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\uff0c\u30cf\u30a4\u30d1\u30fc\u30bf\u30f3\u30b8\u30a7\u30f3\u30c8\uff0c\u6574\u6d41\u7dda\u5f62\u30e6\u30cb\u30c3\u30c8\uff0c\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u95a2\u6570\uff0c\u52a3\u5fae\u5206 \u4ed8\u9332 \u52fe\u914d\u964d\u4e0b\u6cd5\u306e\u57fa\u790e","title":"\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf"},{"location":"colaboratory_faq/","text":"\u30aa\u30ea\u30b8\u30ca\u30eb URL: https://research.google.com/colaboratory/faq.html Colaroboratory \u3068\u306f\u4f55\u3067\u3059\u304b (What is Colaboratory?) Google codelaboratory \u306f\u68b0\u5b66\u7fd2\u6559\u80b2\u7814\u7a76\u7528\u30c4\u30fc\u30eb\u3067\u3059\u3002\u74b0\u5883\u69cb\u7bc9\u306b\u5fc5\u8981\u306a\u4e8b\u524d\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u4e0d\u8981\u306ajuypter notebook \u74b0\u5883\u3067\u3059\u3002 \u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u30d6\u30e9\u30a6\u30b6\u306f\u4f55\u3067\u3059\u304b (What browsers are supported?) Google Colaboratory \u306f\u5927\u62b5\u306e\u30d6\u30e9\u30a6\u30b6\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002\u52d5\u4f5c\u30c6\u30b9\u30c8\u6e08\u30d6\u30e9\u30a6\u30b6\u306f\uff0c Chrome \u3068 Firefox \u3067\u3059\u3002 \u7121\u6599\u3067\u4f7f\u3048\u307e\u3059\u304b (Is it free to use?) \u7121\u6599\u3067\u3059\u3002 \u30b8\u30e5\u30d4\u30bf\u30fc(jupyter)\u3068 colaboratory \u306e\u9055\u3044\u306f\u4f55\u3067\u3059\u304b (What is the difference between Jupyter and Colaboratory?) Colaboratory \u306f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e \u30b8\u30e5\u30d4\u30bf\u30fc(Jupyter) \u3092\u5143\u306b\u3057\u3066\u3044\u307e\u3059\u3002 \u30b8\u30e5\u30d4\u30bf\u30fc\u30ce\u30fc\u30c8\u30d6\u30c3\u30af(Juypter notebook)\u3092\u4ed6\u306e\u30e6\u30fc\u30b6\u3068\u5171\u6709\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30ed\u30fc\u30ab\u30eb\u306a\u74b0\u5883\u306b\u5bfe\u3059\u308b\uff0c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\uff0c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff0c\u5b9f\u884c\uff0c\u306a\u3069\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002 colaboratory.jupyter.org \u3068\u306e\u95a2\u4fc2\u3042\u308a\u307e\u3059\u304b (How is this related to colaboratory.jupyter.org?) 2014 \u5e74\u306b jupyter \u958b\u767a\u30c1\u30fc\u30e0\u3068\u6211\u3005\u306f\u672c\u30c4\u30fc\u30eb\u306e\u521d\u671f\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5171\u540c\u3067\u958b\u767a\u3057\u3066\u3044\u307e\u3057\u305f\u3002 \u4ee5\u6765 colaboratory \u306f\u767a\u5c55\u3057\u7d9a\u3051\uff0c\u30b0\u30fc\u30b0\u30eb\u5185\u90e8\u7528\u9014\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002 Notebook \u306f\u3069\u3053\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u304b\uff0c\u307e\u305f\uff0c\u30b7\u30a7\u30a2\u3067\u304d\u307e\u3059\u304b ( Where are my notebooks stored, and can I share them?) Colaboratory \u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306f Google Drive \u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002 Google Docs \u3084 sheets \u3068\u540c\u69d8\u306b\u30b7\u30a7\u30a2\u53ef\u80fd\u3067\u3059\u3002\u53f3\u4e0a\u306e\u30b7\u30a7\u30a2\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Google Drive \u306e \u30d5\u30a1\u30a4\u30eb\u5171\u6709\u306e\u624b\u5f15\u304d \u306b\u5f93\u3063\u3066\u304f\u3060\u3055\u3044\u3002 Notebook \u3092\u30b7\u30a7\u30a2\u3059\u308b\u5834\u5408\uff0c\u4f55\u304c\u30b7\u30a7\u30a2\u3055\u308c\u307e\u3059\u304b (If I share my notebook, what will be shared?) Notebook \u306e\u30b7\u30a7\u30a2\u3092\u9078\u629e\u3059\u308b\u3068\uff0c\u30c6\u30ad\u30b9\u30c8\uff0c\u30b3\u30fc\u30c9\uff0c\u51fa\u529b\u3068\u3044\u3046 noteobook \u306e\u5168\u5185\u5bb9\u304c\u5171\u6709\u3055\u308c\u307e\u3059\u3002 \u30b3\u30fc\u30c9\u30bb\u30eb\u306e\u51fa\u529b\u3092\u6291\u5236\u3055\u305b\u308b\u3053\u3068\u306f\u53ef\u80fd\u3067\u3059\u3002\u51fa\u529b\u3092\u30b7\u30a7\u30a2\u3059\u308b\u306b\u306f\uff0c\u4fdd\u5b58\u6642\u306b \u7de8\u96c6 > \u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u8a2d\u5b9a > \u30b3\u30fc\u30c9\u30bb\u30eb\u51fa\u529b\u306e\u6291\u5236 \u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4eee\u60f3\u74b0\u5883\u306e\u4f7f\u7528\u6642\u306f\uff0c\u4f7f\u7528\u6642\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u30b7\u30a7\u30a2\u3055\u308c\u307e\u305b\u3093\u3002\u3067\u3059\u306e\u3067\uff0c\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3084\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3092\u30bb\u30eb\u5185\u306b\u542b\u3081\u3066\u304a\u304f\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002 libraries \u3084 files \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4e8c\u4eba\u306e\u30e6\u30fc\u30b6\u304c\u540c\u6642\u306b\u540c\u3058 notebook \u3092\u7de8\u96c6\u3057\u305f\u3089\u3069\u3046\u306a\u308a\u307e\u3059\u304b (What happens if two users edit the same notebook at the same time?) \u5909\u66f4\u306e\u53cd\u6620\u306f\u5373\u6642\u306b\u5168\u54e1\u3078\u306a\u3055\u308c\u307e\u3059\u3002\u30b0\u30fc\u30b0\u30eb Docs \u306e\u7de8\u96c6\u7d50\u679c\u304c\u7de8\u96c6\u4e2d\u5168\u30e6\u30fc\u30b6\u306b\u8996\u8a8d\u53ef\u80fd\u306a\u306e\u3068\u540c\u69d8\u3067\u3059\u3002 \u4ee5\u524d\u4f5c\u6210\u3057\u305f\u30b8\u30e5\u30d4\u30bf\u30fc(IPython)\u30d5\u30a1\u30a4\u30eb\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u304b (Can I import an existing Jupyter/IPython notebook into Colaboratory?) \u3067\u304d\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3092\u9078\u3093\u3067\u304f\u3060\u3055\u3044 Python3 (R, Scale)\u3063\u3066\u4f55\u3067\u3059\u304b (What about Python3? (or R, Scala, ...) Colaboratory \u306f\uff0cPython \u30d0\u30fc\u30b8\u30e7\u30f3 2.7 \u3068 Python \u30d0\u30fc\u30b8\u30e7\u30f3 3.6 \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u3089\u4ee5\u5916\u306e R \u3084 Scale \u3068\u3044\u3063\u305f\u30b8\u30e5\u30d4\u30bf\u30fc\u30ab\u30fc\u30cd\u30eb\u306e\u4f7f\u7528\u3092\u5e0c\u671b\u3059\u308b\u30e6\u30fc\u30b6\u304c\u3044\u308b\u3053\u3068\u306f\u627f\u77e5\u3057\u3066\u3044\u307e\u3059\u3002 \u5c06\u6765\u7684\u306b\u306f\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u3064\u3082\u308a\u3067\u3059\u304c\uff0c\u6642\u9593\u306e\u5236\u7d04\u304c\u5b9f\u73fe\u3057\u3066\u3044\u307e\u305b\u3093\u3002 Colaboratory \u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u3092\u691c\u7d22\u3059\u308b\u306b\u306f\uff1f(How can I search Colaboratory notebooks?) \u691c\u7d22\u30dc\u30c3\u30af\u30b9\u306e \u30c9\u30e9\u30a4\u30d6 \u3092\u9078\u3093\u3067\u304f\u3060\u3055\u3044\u3002 \u5de6\u4e0a\u306b\u3042\u308b colaboratory \u306e\u30ed\u30b4\u3092\u30af\u30ea\u30c3\u30af\u3059\u308c\u3070\u30b0\u30fc\u30b0\u30eb\u30c9\u30e9\u30a4\u30d6\u4e0a\u306e\u5168\u3066\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u95b2\u89a7\u3067\u304d\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30eb->\u6700\u65b0\u306e\u30d5\u30a1\u30a4\u30eb \u3092\u958b\u3051\u3070\uff0c\u6700\u8fd1\u95b2\u89a7\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30b3\u30fc\u30c9\u306f\u3069\u3053\u3067\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067\u3059\u304b\u3002\u30d6\u30e9\u30a6\u30b6\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u3066\u3057\u307e\u3063\u305f\u3089\u5b9f\u884c\u4e2d\u306e\u30b3\u30fc\u30c9\u306f\u3069\u3046\u306a\u308a\u307e\u3059\u304b (Where is my code executed? What happens to my execution state if I close the browser window?) \u30b3\u30fc\u30c9\u306f\u4eee\u60f3\u30de\u30b7\u30f3\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u4eee\u60f3\u30de\u30b7\u30f3\u306f\u3057\u3070\u3089\u304f\u653e\u7f6e\u3059\u308b\u3068\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002 \u4eee\u60f3\u30de\u30b7\u30f3\u304c\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3055\u308c\u308b\u307e\u3067\u306e\u6700\u9577\u5bff\u547d\u306f\u30b7\u30b9\u30c6\u30e0\u306b\u5bc4\u308a\u307e\u3059 ^2 \u3002 \u81ea\u5206\u306e\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u3067\u304d\u307e\u3059\u304b (How can I get my data out?) colaboratory \u4e0a\u3067\u4f5c\u6210\u3057\u305f\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u3092\u30b0\u30fc\u30b0\u30eb\u30c9\u30e9\u30a4\u30d6\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002 instructions \u3084 colaboratory \u306e\u30d5\u30a1\u30a4\u30eb\u30e1\u30cb\u30e5\u30fc\u306e\u4e2d\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002 colaboratory \u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306f\uff0c\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30b8\u30e5\u30d4\u30bf\u30fc\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u5f62\u5f0f(\u62e1\u5f35\u5b50 .ipynb)\u3067\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002 GPU \u306f\u5229\u7528\u3067\u304d\u307e\u3059\u304b\u3002\u3069\u3046\u3057\u3066 GPU \u304c\u4f7f\u3048\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u3059\u304b (How may I use GPUs and why are they sometimes unavailable?) colaboratory \u306f\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u5229\u7528\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067 GPU \u3092\u9577\u6642\u9593\u5b9f\u884c\u3059\u308b\u3068\u505c\u6b62\u3055\u305b\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 colaboratory \u3092\u4eee\u60f3\u901a\u8ca8\u306e\u30de\u30a4\u30cb\u30f3\u30b0\u306b\u4f7f\u308f\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u4eee\u60f3\u901a\u8ca8\u30de\u30a4\u30cb\u30f3\u30b0\u306f\u30b5\u30dd\u30fc\u30c8\u5bfe\u8c61\u5916\u3067\u3059\u3002 \u9577\u6642\u9593\u306e\u7d99\u7d9a\u5229\u7528\u306b\u969b\u306f \u30ed\u30fc\u30ab\u30eb\u30e9\u30f3\u30bf\u30a4\u30e0e \u3092\u63a8\u5968\u3057\u3066\u3044\u307e\u3059\u3002 \u4eee\u60f3\u30de\u30b7\u30f3\u306e\u5b9f\u884c\u3092\u30ea\u30bb\u30c3\u30c8\u3067\u304d\u307e\u3059\u304b\u3002\u3069\u3046\u3057\u3066\u30ea\u30bb\u30c3\u30c8\u3067\u304d\u306a\u3044\u6642\u304c\u3042\u308b\u306e\u3067\u3059\u304b (How can I reset the virtual machine(s) my code runs on, and why is this sometimes unavailable?) \"\u30e9\u30f3\u30bf\u30a4\u30e0\" \u30e1\u30cb\u30e5\u30fc\u5185\u306e \"\u5168\u3066\u306e\u30e9\u30f3\u30bf\u30a4\u30e0\u3092\u30ea\u30bb\u30c3\u30c8\" \u306f\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u7ba1\u7406\u4e0b\u306e\u5168\u4eee\u60f3\u30de\u30b7\u30f3 \u306b\u5bfe\u3057\u3066\u5b9f\u65bd\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u4eee\u60f3\u30de\u30b7\u30f3\u306b\u4e0d\u90fd\u5408\u304c\u3042\u3063\u305f\u5834\u5408\uff0c\u305f\u3068\u3048\u3070\u30b7\u30b9\u30c6\u30e0\u30d5\u30a1\u30a4\u30eb\u3092\u8aa4\u3063\u3066\u4e0a\u66f8\u304d\u3057\u3066\u3057\u307e\u3063\u305f\u5834\u5408\u306a\u3069\uff0c\u306b\u6709\u52b9\u3067\u3059\u3002 colaboratory \u306f\u8a08\u7b97\u8cc7\u6e90\u3092\u6d88\u8cbb\u3059\u308b\u3053\u306e\u3088\u3046\u306a\u4e8b\u614b\u306b\u5236\u7d04\u3092\u8ab2\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u4e8b\u614b\u304c\u767a\u751f\u3057\u305f\u3089\uff0c\u3057\u3070\u3089\u304f\u5f85\u3063\u3066\u304b\u3089\u518d\u8a66\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30d0\u30b0\u3092\u307f\u3064\u3051\u307e\u3057\u305f/\u8cea\u554f\u304c\u3042\u308a\u307e\u3059\u3002\u554f\u3044\u5408\u308f\u305b\u5148\u3092\u6559\u3048\u3066\u304f\u3060\u3055\u3044 (I found a bug or have a question, who do I contact?) colaboratory \u3092\u958b\u3044\u3066\uff0c\u300c\u30d8\u30eb\u30d7\u300d\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u300c\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u9001\u308b\u300d\u3092\u9078\u3093\u3067\u304f\u3060\u3055\u3044 [^1]: \u65e5\u672c\u8a9e\u8a33:\u6d45\u5ddd\u4f38\u4e00 asakawa@ieee.org","title":"Colaboratory FAQ"},{"location":"colaboratory_intro/","text":"Python \u3063\u3066\u4f55\uff1f AI \u3084 \u6a5f\u68b0\u5b66\u7fd2 \u5206\u91ce\u306e\u5171\u540c\u4f53\u3067\u4f7f\u308f\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u8a00\u8a9e\u306e\u3053\u3068\u3067\u3059\u3002\u4e0b\u8a18\u306b\u793a\u3059\u3088\u3046\u306b\u9ad8\u7b49\u5b66\u6821\u306e\u60c5\u5831\u3067\u63a1\u629e\u3055\u308c\u307e\u3059\u3002 StackOverFlow \u306b\u304a\u3051\u308b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u8a00\u8a9e\u306e\u30c8\u30ec\u30f3\u30c9 Jupyter notebook \u3063\u3066\u4f55\uff1f Python \u3092\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u52d5\u304b\u3059\u30b7\u30b9\u30c6\u30e0\uff0c\u3042\u308b\u3044\u306f\u305d\u306e\u74b0\u5883\u3092\u6307\u3057\u307e\u3059\u3002 \u6728\u661f\u3092\u8868\u3059 \u30b8\u30e5\u30d4\u30bf\u30fc jupiter \u3068\u306f\u7db4\u308a\u304c\u7570\u306a\u308a\u307e\u3059\u3002\u3067\u3059\u304c\u7531\u6765\u306f \u6728\u661f \u304b\u3089\u6765\u3066\u8a00\u3044\u307e\u3059\u3002 Google Colab \u3063\u3066\u4f55\uff1f Jupyter notebook \u3092\u30af\u30e9\u30a6\u30c9\u4e0a\u3067\u5b9f\u884c\u3059\u308b\u74b0\u5883\u3067\u3059 \u30d6\u30e9\u30a6\u30b6\u3092\u7acb\u3061\u4e0a\u3052\u3066 https://colab.research.google.com/notebooks/welcome.ipynb?hl=ja \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Colaboratory \u3078\u3088\u3046\u3053\u305d Google Colaboratory \u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30d3\u30c7\u30aa \u3082\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044 \u5916\u90e8\u30c7\u30fc\u30bf\u3068\u306e\u3084\u308a\u3068\u308a\uff0c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\uff0c\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306a\u3069 \u7c21\u5358\u306a\u8aac\u660e \u00b6 Colab \u3068\u306f\u30d6\u30e9\u30a6\u30b6\u4e0a jupyter notebook ( jupyter lab ) \u3092\u5b9f\u884c\u3059\u308b\u30af\u30e9\u30a6\u30c9\u8a08\u7b97\u74b0\u5883\u3067\u3059\u3002 \u5f93\u3063\u3066\uff0c\u30d6\u30e9\u30a6\u30b6\u3055\u3048\u3042\u308c\u3070\uff0c\u7279\u5225\u306a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u4f5c\u696d\u3092\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002 jupyter notebook \u3068\u306f ipython \u3092\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u5b9f\u884c\u3059\u308b\u74b0\u5883\u3067\u3059\u3002 ipython \u3068\u306f python \u3092\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u5b9f\u884c\u3059\u308b\u74b0\u5883\u3067\u3059\u3002 python \u3068\u306f\u6a5f\u68b0\u5b66\u7fd2\u3084\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3067\u4f7f\u308f\u308c\u308b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u8a00\u8a9e\u3067\u3059\u3002 \u3057\u305f\u304c\u3063\u3066 colab \u306e\u4f7f\u3044\u65b9\u306f jupyeter notebook \u3092\u3054\u5b58\u77e5\u3067\u3042\u308c\u3070\uff0c\u307b\u307c\u540c\u3058\u3067\u3059\u3002 \u30af\u30e9\u30a6\u30c9\u30d9\u30fc\u30b9\u306e\u5b9f\u884c\u7cfb\u3067\u3059\u306e\u3067\uff0c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u624b\u9593\u306f\u4e0d\u8981\u3067\u3059\u3002 \u7c21\u5358\u306a\u64cd\u4f5c\u65b9\u6cd5 \u00b6 notebook \u306f \u30bb\u30eb \u3068\u547c\u3070\u308c\u308b\u5358\u4f4d\u304b\u3089\u6210\u308a\u7acb\u3063\u3066\u3044\u307e\u3059\u3002 \u30bb\u30eb\u306f \u30b3\u30fc\u30c9\uff0c\u30c6\u30ad\u30b9\u30c8\uff0c\u753b\u50cf\u3067\u69cb\u6210\u3055\u308c\u307e\u3059\u3002 Google Doc \u306b\u4fdd\u5b58\u53ef\u80fd\u3067 Google Drvie \u7d4c\u7531\u30b7\u30a7\u30a2\u3067\u304d\u307e\u3059 \u30c6\u30ad\u30b9\u30c8\u306f\u30de\u30fc\u30af\u30c0\u30a6\u30f3\u5f62\u5f0f\u3067\u66f8\u304d\u307e\u3059 \u5c11\u3057\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u304c Keras \u306b\u3088\u308b\u30cb\u30e5\u30fc\u30e9\u30eb\u753b\u50cf\u5909\u63db\u3092\u5b9f\u884c \u3057\u3066\u307f\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059 https://research.google.com/seedbank/seeds How to Train Your Models in the Cloud https://colab.research.google.com/notebooks/basic_features_overview.ipynb http://colab.research.google.com/","title":"Colab \u4e8b\u59cb\u3081"},{"location":"colaboratory_intro/#_1","text":"Colab \u3068\u306f\u30d6\u30e9\u30a6\u30b6\u4e0a jupyter notebook ( jupyter lab ) \u3092\u5b9f\u884c\u3059\u308b\u30af\u30e9\u30a6\u30c9\u8a08\u7b97\u74b0\u5883\u3067\u3059\u3002 \u5f93\u3063\u3066\uff0c\u30d6\u30e9\u30a6\u30b6\u3055\u3048\u3042\u308c\u3070\uff0c\u7279\u5225\u306a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u4f5c\u696d\u3092\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002 jupyter notebook \u3068\u306f ipython \u3092\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u5b9f\u884c\u3059\u308b\u74b0\u5883\u3067\u3059\u3002 ipython \u3068\u306f python \u3092\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u5b9f\u884c\u3059\u308b\u74b0\u5883\u3067\u3059\u3002 python \u3068\u306f\u6a5f\u68b0\u5b66\u7fd2\u3084\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3067\u4f7f\u308f\u308c\u308b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u8a00\u8a9e\u3067\u3059\u3002 \u3057\u305f\u304c\u3063\u3066 colab \u306e\u4f7f\u3044\u65b9\u306f jupyeter notebook \u3092\u3054\u5b58\u77e5\u3067\u3042\u308c\u3070\uff0c\u307b\u307c\u540c\u3058\u3067\u3059\u3002 \u30af\u30e9\u30a6\u30c9\u30d9\u30fc\u30b9\u306e\u5b9f\u884c\u7cfb\u3067\u3059\u306e\u3067\uff0c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u624b\u9593\u306f\u4e0d\u8981\u3067\u3059\u3002","title":"\u7c21\u5358\u306a\u8aac\u660e"},{"location":"colaboratory_intro/#_2","text":"notebook \u306f \u30bb\u30eb \u3068\u547c\u3070\u308c\u308b\u5358\u4f4d\u304b\u3089\u6210\u308a\u7acb\u3063\u3066\u3044\u307e\u3059\u3002 \u30bb\u30eb\u306f \u30b3\u30fc\u30c9\uff0c\u30c6\u30ad\u30b9\u30c8\uff0c\u753b\u50cf\u3067\u69cb\u6210\u3055\u308c\u307e\u3059\u3002 Google Doc \u306b\u4fdd\u5b58\u53ef\u80fd\u3067 Google Drvie \u7d4c\u7531\u30b7\u30a7\u30a2\u3067\u304d\u307e\u3059 \u30c6\u30ad\u30b9\u30c8\u306f\u30de\u30fc\u30af\u30c0\u30a6\u30f3\u5f62\u5f0f\u3067\u66f8\u304d\u307e\u3059 \u5c11\u3057\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u304c Keras \u306b\u3088\u308b\u30cb\u30e5\u30fc\u30e9\u30eb\u753b\u50cf\u5909\u63db\u3092\u5b9f\u884c \u3057\u3066\u307f\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059 https://research.google.com/seedbank/seeds How to Train Your Models in the Cloud https://colab.research.google.com/notebooks/basic_features_overview.ipynb http://colab.research.google.com/","title":"\u7c21\u5358\u306a\u64cd\u4f5c\u65b9\u6cd5"},{"location":"data_science/","text":"\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u5c0f\u53f2 \u00b6 https://enterprisetechnologyconsultant.wordpress.com/2013/03/10/data-science-and-the-definition-and-role-of-a-data-scientist/ \u30a6\u30a3\u30ea\u30a2\u30e0\u30fb\u30af\u30ea\u30fc\u30d6\u30e9\u30f3\u30c9\u306e\u300c\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9:\u7d71\u8a08\u5b66\u306e\u6280\u8853\u9818\u91ce\u3092\u62e1\u5f35\u3059\u308b\u305f\u3081\u306e\u884c\u52d5\u8a08\u753b\u300d\u304c\u516c\u520a\u3055\u308c\u3066\u4ee5\u6765\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u3068\u3044\u3046\u8a00\u8449\u304c\u666e\u53ca\u3057\u305f\u3002 W. S. Cleveland. Data Science: An Action Plan for Expanding the Technical Areas of the Field of Statistics. ISI Review, 69:21\u201326, 2001. https://www.forbes.com/sites/gilpress/2013/05/28/a-very-short-history-of-data-science/#123e7cc355cf Gil Press, CONTRIBUTOR I write about technology, entrepreneurs and innovation. 1962 John W. Tukey writes in \u201cThe Future of Data Analysis\u201d: 1974 Peter Naur publishes ``Concise Survey of Computer Methods'' in Sweden and the United States. 1977 The International Association for Statistical Computing (IASC) is established as a Section of the ISI. \u201cIt is the mission of the IASC to link traditional statistical methodology, modern computer technology, and the knowledge of domain experts in order to convert data into information and knowledge.\u201d 1994 BusinessWeek publishes a cover story on \u201cDatabase Marketing\u201d: 1996 Members of the International Federation of Classification Societies (IFCS) meet in Kobe, Japan, for their biennial conference. For the first time, the term \u201cdata science\u201d is included in the title of the conference 1996 Usama Fayyad, Gregory Piatetsky-Shapiro, and Padhraic Smyth publish \u201cFrom Data Mining to Knowledge Discovery in Databases.\u201d 2001 William S. Cleveland publishes \u201cData Science: An Action Plan for Expanding the Technical Areas of the Field of Statistics.\u201d","title":"\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u5c0f\u53f2"},{"location":"data_science/#_1","text":"https://enterprisetechnologyconsultant.wordpress.com/2013/03/10/data-science-and-the-definition-and-role-of-a-data-scientist/ \u30a6\u30a3\u30ea\u30a2\u30e0\u30fb\u30af\u30ea\u30fc\u30d6\u30e9\u30f3\u30c9\u306e\u300c\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9:\u7d71\u8a08\u5b66\u306e\u6280\u8853\u9818\u91ce\u3092\u62e1\u5f35\u3059\u308b\u305f\u3081\u306e\u884c\u52d5\u8a08\u753b\u300d\u304c\u516c\u520a\u3055\u308c\u3066\u4ee5\u6765\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u3068\u3044\u3046\u8a00\u8449\u304c\u666e\u53ca\u3057\u305f\u3002 W. S. Cleveland. Data Science: An Action Plan for Expanding the Technical Areas of the Field of Statistics. ISI Review, 69:21\u201326, 2001. https://www.forbes.com/sites/gilpress/2013/05/28/a-very-short-history-of-data-science/#123e7cc355cf Gil Press, CONTRIBUTOR I write about technology, entrepreneurs and innovation. 1962 John W. Tukey writes in \u201cThe Future of Data Analysis\u201d: 1974 Peter Naur publishes ``Concise Survey of Computer Methods'' in Sweden and the United States. 1977 The International Association for Statistical Computing (IASC) is established as a Section of the ISI. \u201cIt is the mission of the IASC to link traditional statistical methodology, modern computer technology, and the knowledge of domain experts in order to convert data into information and knowledge.\u201d 1994 BusinessWeek publishes a cover story on \u201cDatabase Marketing\u201d: 1996 Members of the International Federation of Classification Societies (IFCS) meet in Kobe, Japan, for their biennial conference. For the first time, the term \u201cdata science\u201d is included in the title of the conference 1996 Usama Fayyad, Gregory Piatetsky-Shapiro, and Padhraic Smyth publish \u201cFrom Data Mining to Knowledge Discovery in Databases.\u201d 2001 William S. Cleveland publishes \u201cData Science: An Action Plan for Expanding the Technical Areas of the Field of Statistics.\u201d","title":"\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u5c0f\u53f2"},{"location":"eco/","text":"\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306e\u666e\u53ca\u306b\u3088\u308a\u77e5\u8b58\u5171\u6709\u304c\u52a0\u901f\u3057\u307e\u3057\u305f\u3002\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3084\u30bd\u30fc\u30b7\u30e3\u30eb\u30e1\u30c7\u30a3\u30a2 \u306e\u307f\u306a\u3089\u305a\uff0c\u4ee5\u4e0b\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u542b\u3080\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u304c\u6628\u4eca\u306e\u9032\u6b69\u306e\u6e90\u6cc9\u3067\u3042\u308d\u3046\u3068\u8003\u3048\u307e\u3059\u3002 AMT ArXiv GitHub Google Kaggle Linux Medium Python Reddit, stackoverflow, stackexchange, \u5404\u7a2e SNS \u7279\u306b\u6700\u65b0\u306e\u8ad6\u6587\u304c arXiv \u306b\u6295\u7a3f\u3055\u308c\uff0c\u305d\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c GitHub \u3067\u516c\u958b\u3055\u308c\u308b\u3053\u3068\u306f\u3053\u306e\u5206\u91ce\u306e\u9032\u6b69\u306e\u5927\u304d\u306a\u8981\u56e0\u306e\u4e00\u3064\u3068\u8a00\u3048\u307e\u3059\u3002 \u304a\u306a\u3058\u304f\uff0c Kaggle \u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u5171\u6709\u306b\u3088\u308a\u77e5\u8b58\u306f\u4e00\u5c64\u62e1\u5927\u3057\u52a0\u901f\u3057\u3066\u3044\u307e\u3059\u3002 \u81ea\u5206\u306e Windows \u3067\u74b0\u5883\u69cb\u7bc9\u3059\u308b\u306b\u306f \u00b6 \u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u306f Chocolatey , Mac \u306a\u3089 homebrew Python \u74b0\u5883\u306f anaconda , \u3082\u3057\u304f\u306f miniconda Python \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f 2.7 \u7cfb\u3068 3 \u7cfb\u3068\u3042\u308a\u307e\u3059\u304c\uff0c3 \u7cfb\u3067\u826f\u3044\u3067\u3057\u3087\u3046 Python \u3092\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u52d5\u4f5c\u3055\u305b\u308b\u305f\u3081\u306b\u306f jupyter notebook anaconda \u3082\u3057\u304f\u306f chocolatory, homebrew \u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002ananconda \u306a\u3069\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u8907\u96d1\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u9593\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u5438\u53ce\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Jupyter notebook \u306e\u30af\u30e9\u30a6\u30c9\u74b0\u5883\u306f Google Colaboartory Python \u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0(\u6df1\u5c64\u5b66\u7fd2)\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u306f\uff0c Tensorflow , keras , PyTorch \u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002 \u8cc7\u6599 \u00b6 \u5b66\u7fd2\u6e08\u307f\u306e\u30e2\u30c7\u30eb\u3092\u518d\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u306f TensorFlow Hub \u53c2\u8003\u8cc7\u6599: Stackoverflow \u306e\u8a00\u8a9e\u30c8\u30ec\u30f3\u30c9 Python \u306e\u521d\u6b69 PCA \u3068 tSNE \u3068\u306e\u6bd4\u8f03 kmninst \u3092\u7528\u3044\u3066","title":"\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0"},{"location":"eco/#windows","text":"\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u306f Chocolatey , Mac \u306a\u3089 homebrew Python \u74b0\u5883\u306f anaconda , \u3082\u3057\u304f\u306f miniconda Python \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f 2.7 \u7cfb\u3068 3 \u7cfb\u3068\u3042\u308a\u307e\u3059\u304c\uff0c3 \u7cfb\u3067\u826f\u3044\u3067\u3057\u3087\u3046 Python \u3092\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u52d5\u4f5c\u3055\u305b\u308b\u305f\u3081\u306b\u306f jupyter notebook anaconda \u3082\u3057\u304f\u306f chocolatory, homebrew \u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002ananconda \u306a\u3069\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u8907\u96d1\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u9593\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u5438\u53ce\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Jupyter notebook \u306e\u30af\u30e9\u30a6\u30c9\u74b0\u5883\u306f Google Colaboartory Python \u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0(\u6df1\u5c64\u5b66\u7fd2)\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u306f\uff0c Tensorflow , keras , PyTorch \u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u81ea\u5206\u306e Windows \u3067\u74b0\u5883\u69cb\u7bc9\u3059\u308b\u306b\u306f"},{"location":"eco/#_1","text":"\u5b66\u7fd2\u6e08\u307f\u306e\u30e2\u30c7\u30eb\u3092\u518d\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u306f TensorFlow Hub \u53c2\u8003\u8cc7\u6599: Stackoverflow \u306e\u8a00\u8a9e\u30c8\u30ec\u30f3\u30c9 Python \u306e\u521d\u6b69 PCA \u3068 tSNE \u3068\u306e\u6bd4\u8f03 kmninst \u3092\u7528\u3044\u3066","title":"\u8cc7\u6599"},{"location":"gabor_filter/","text":"\u30ac\u30dc\u30fc\u30eb\u30d5\u30a3\u30eb\u30bf\uff0c\u3042\u308b\u3044\u306f\uff0c\u30ac\u30dc\u30fc\u30eb\u30d1\u30c3\u30c1 \u00b6 XOR \u7573\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3088\u308b\u65e5\u672c\u8a9e\u53e4\u5178\u7c4d\u304f\u305a\u3057\u5b57 kminst \u306e\u8a8d\u8b58\u5b9f\u7fd2","title":"\u30ac\u30dc\u30fc\u30eb\u30d5\u30a3\u30eb\u30bf\uff0c\u3042\u308b\u3044\u306f\uff0c\u30ac\u30dc\u30fc\u30eb\u30d1\u30c3\u30c1"},{"location":"gabor_filter/#_1","text":"XOR \u7573\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3088\u308b\u65e5\u672c\u8a9e\u53e4\u5178\u7c4d\u304f\u305a\u3057\u5b57 kminst \u306e\u8a8d\u8b58\u5b9f\u7fd2","title":"\u30ac\u30dc\u30fc\u30eb\u30d5\u30a3\u30eb\u30bf\uff0c\u3042\u308b\u3044\u306f\uff0c\u30ac\u30dc\u30fc\u30eb\u30d1\u30c3\u30c1"},{"location":"how_to_read_math/","text":"\\(f(x)\\) \u306e\u8aad\u307f\u65b9\uff0c\u67d0\u6709\u540d\u6559\u80b2\u7cfb\u30e6\u30fc\u30c1\u30e5\u30fc\u30d0\u30fc\u3067\u3082\u9593\u9055\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u6b63\u3057\u304f\u899a\u3048\u307e\u3057\u3087\u3046 \u30a8\u30d5\u30aa\u30d6\u30a8\u30c3\u30af\u30b9 \u3068\u767a\u97f3\u3057\u307e\u3059\u3002 \u30a8\u30d5\u30a8\u30c3\u30af\u30b9 \u3068\u547c\u3076\u306e\u306f\uff0c\u30ce\u30f3\u30cd\u30a4\u30c6\u30a3\u30d6\u306a\uff0c\u4e00\u822c\u5e38\u8b58\u3092\u77e5\u3089\u306a\u3044\uff0c\u30ca\u30a4\u30fc\u30d6 \uff08\u672c\u6765\u306e\u610f\u5473\u3067\u3059\u3002\u5e38\u8b58\u3092\u77e5\u3089\u306a\u3044\uff0c\u7d4c\u9a13\u306e\u306a\u3044\u30c9\u7d20\u4eba\u306a\u3068\u3044\u3046\u610f\u5473\uff09\u306a\u4eba\u3060\u3051\u3067\u3059\u3002 \u6d77\u5916\u306e\u5b66\u4f1a\u3067\u53c2\u52a0\u8005\u3068\u4f1a\u8a71\u3059\u308b\u3068\uff0c\u82f1\u8a9e\u304c\u6bcd\u56fd\u8a9e\u3067\u3042\u308b\u7814\u7a76\u8005\u306f\uff0c\u307b\u307c 100 \u30d1\u30fc\u30bb\u30f3\u30c8\uff0c \u30a8\u30d5\u30aa\u30d6\u30a8\u30c3\u30af\u30b9 \u3068\u767a\u97f3\u3057\u307e\u3059\u3002 \u8abf\u3079\u3066\u307f\u308b\u3068\uff0c\u97d3\u6d41\u30a2\u30a4\u30c9\u30eb\u30b0\u30eb\u30fc\u30d7\u306b f(x) \u306a\u308b\u30b0\u30eb\u30fc\u30d7\u304c\u3042\u308b\u3089\u3057\u3044\u3067\u3059\u3002\u3053\u306e\u767a\u97f3\u306f \u30a8\u30d5\u30a8\u30c3\u30af\u30b9 \u306a\u306e\u3060\u305d\u3046\u3067\uff0c\u7121\u77e5\u3092\u66dd\u3051\u51fa\u3057\u3066\u3044\u307e\u3059\u3002 \u3082\u3046\u5c11\u3057\u8131\u7dda\u3057\u3066\u3053\u306e\u6388\u696d\u306b\u5373\u3057\u3066\u8a00\u3044\u307e\u3059\u3002\\(f(x\\vert y)\\) \u306f\uff0c\\(y\\) \u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306e x \u306e\u95a2\u6570 f \u3092\u610f\u5473\u3057\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u306f \u30a8\u30d5 \u30aa\u30d6 \u30a8\u30c3\u30af\u30b9 \u30ae\u30d6\u30f3 \u30ef\u30a4 (f of x given y) \u3068\u767a\u97f3\u3057\u307e\u3059\u3002 p(x,y) \u306f \u30d4\u30fc \u30aa\u30d6 \u30a8\u30c3\u30af\u30b9 \u30a2\u30f3\u30c9 \u30ef\u30a4 \u3067\u3059\u3002 \u3042\u308b\u30c7\u30fc\u30bf X \u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306b\uff0c\u4eee\u8aac H \u304c\u6b63\u3057\u3044\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3059\u308b\u305f\u3081\u306b\u306f\uff0c p(H\\vert X)=\\frac{P(H, X)}{P(X)} = \\frac{P(X\\vert H) P(H)}{\\int P(X\\vert H)P(H)\\;dH} \u4e0a\u5f0f\u3092\u767a\u97f3\u3067\u304d\u307e\u3059\u304b\uff1f","title":"How to read math"},{"location":"information_theory/","text":"\u60c5\u5831\u7406\u8ad6 \u00b6 \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc entropy \u6700\u5927\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u6761\u4ef6\u4ed8\u304d\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u30ab\u30eb\u30d0\u30c3\u30af=\u30e9\u30a4\u30d6\u30e9\u30fc\u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9 \u76f8\u4e92\u60c5\u5831\u91cf \u60c5\u5831\u91cf Information Measure \u00b6 \u60c5\u5831\u91cf: \u78ba\u7387\u5909\u6570 x \u306e\u30b5\u30d7\u30e9\u30a4\u30ba\u91cf \u307e\u308c\u306b\u3057\u304b\u8d77\u3053\u3089\u306a\u3044\u4e8b\u8c61\u304c\u8d77\u3053\u3063\u305f\u5834\u5408\u306b\u306f\u60c5\u5831\u91cf\u306f\u5927\u304d\u3044\u3002 \u30cb\u30e5\u30fc\u30b9\u306b\u306a\u308b \u5fc5\u305a\u8d77\u3053\u308b\u3053\u3068\u304c\u8d77\u3053\u3063\u3066\u3082\u60c5\u5831\u91cf\u306f\u5c0f\u3055\u3044\u3002 \u30cb\u30e5\u30fc\u30b9\u306b\u306a\u3089\u306a\u3044 \\begin{equation} H\\left(x\\right)=-\\sum_x p\\left(x\\right)\\log_2p\\left(x\\right) \\end{equation} - \u30de\u30a4\u30ca\u30b9\u3092\u3064\u3051\u308b\u306e\u306f\u6b63\u306e\u5024\u306b\u3059\u308b\u305f\u3081 \u71b1\u529b\u5b66\u3068\u60c5\u5831\u7406\u8ad6 \u00b6 \u30dc\u30eb\u30c4\u30de\u30f3(\u5de6)\u3068\u30b7\u30e3\u30ce\u30f3(\u53f3) \u51fa\u5178:\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2 \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc: \u78ba\u7387\u5909\u6570\u306e\u5e73\u5747\u60c5\u5831\u91cf \u7269\u7406\u5b66\u8d77\u6e90 \u71b1\u529b\u5b66\u306e\u5e73\u8861\u306e\u6982\u5ff5 \u7d71\u8a08\u529b\u5b66 \u30dc\u30eb\u30c4\u30de\u30f3 Ludwig Eduard Boltzmann (1844-1906) \u00b6 \u7d71\u8a08\u529b\u5b66 \u7b2c\u4e00\u6cd5\u5247: \u30a8\u30cd\u30eb\u30ae\u30fc\u4fdd\u5b58 \u7b2c\u4e8c\u6cd5\u5247: \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u5897\u5927 \u30de\u30af\u30ed\u3068\u30df\u30af\u30ed\u3092\u3064\u306a\u3050 \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u00b6 \u4e71\u96d1\u3055\u306e\u5ea6\u5408\u3044\u3002\u51fa\u5178: \u7269\u7406\u5b66\u306b\u304a\u3051\u308b\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u00b6 N \u500b\u306e\u7269\u8cea\u304c i \u500b\u306e\u72b6\u614b\uff0c\u5404\u72b6\u614b\u306b\u306f n_i \u500b\u306e\u7269\u8cea N \u500b\u306e\u7269\u8cea\u3092\u5168\u3066\u4e26\u3079\u308b: N\\cdot(N-1)\\cdots2\\cdot1=N! \u5404\u72b6\u614b\u306e\u4e2d\u3067\u306f\u7269\u8cea\u306e\u9806\u5e8f\u306f\u554f\u308f\u306a\u3044\u3053\u3068\u306b\u3059\u308b \u7dcf\u6570 N \u500b\u306e\u7269\u8cea\u3092 n_i \u306b\u5206\u3051\u308b\u5834\u5408\u306e\u7d44\u307f\u5408\u308f\u305b: W=\\frac{N!}{\\prod_{i}n_{i}!} \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306e\u5b9a\u7fa9 \\begin{equation} H=\\frac{1}{N}\\ln W=\\frac{1}{N}\\ln N!-\\frac{1}{N}\\sum_i\\ln n_i! \\end{equation} \u30b9\u30bf\u30fc\u30ea\u30f3\u30b0\u306e\u516c\u5f0f N! \\approx N\\log N-N \u3092\u7528\u3044\u3066 \\begin{equation} H=-\\lim_{N\\rightarrow\\infty} \\sum_i\\left[\\frac{n_i}{N}\\ln\\left(\\frac{n_!}{N}\\right)\\right] =-\\sum_ip_i\\ln p_i \\end{equation} \u5168\u4f53\u306e\u5206\u5e03 \\displaystyle\\frac{n_i}{N} \u3092\u30de\u30af\u30ed\u30b9\u30c6\u30fc\u30c8 \u5404 i \u306e\u30df\u30af\u30ed\u306e\u72b6\u614b n_i \u3092 \u9023\u7d9a\u7cfb\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u00b6 \u96e2\u6563\u91cf p\\left(x_i\\right)\\Delta \u3092\u8003\u3048\u3066 \\Delta\\rightarrow0 \u3092\u8003\u3048\u308b: \\begin{equation} \\int_{i\\Delta}^{\\left(i+1\\right)\\Delta} p\\left(x\\right)d\\left(x\\right) =p\\left(x_i\\right)\\Delta \\end{equation} \u9023\u7d9a\u7cfb\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \\begin{equation} H_{\\Delta}=-\\sum_ip\\left(x_i\\right)\\Delta\\log\\left(p\\left(x_i\\right)\\Delta\\right)=-\\sum_ip\\left(x_i\\right)\\Delta\\log\\left(x_i\\right)-\\Delta\\log\\Delta \\end{equation} \\Delta\\rightarrow0 \u306e\u6975\u9650\u3092\u8003\u3048\u308c\u3070: \\begin{equation} H_\\Delta=-\\int p\\left(x\\right)\\log p\\left(x\\right)\\text{d}x \\end{equation} \u9023\u7d9a\u7cfb\u3068\u96e2\u6563\u7cfb\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306f \\Delta\\log\\Delta \u3060\u3051\u7570\u306a\u308b \u9023\u7d9a\u7cfb\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3092\u6700\u5927\u5316\u3059\u308b\u5206\u5e03 \u00b6 \u3069\u306e\u3088\u3046\u306a\u5206\u5e03\u304c\u9023\u7d9a\u7cfb\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3092\u6700\u5927\u5316\u3059\u308b\u304b\uff1f \u96e2\u6563\u7cfb\u3067\u306f\u4e00\u69d8\u5206\u5e03 \u9023\u7d9a\u7cfb\u3067\u306f? H\\left(x\\right)=-\\int p\\left(x\\right)\\log p\\left(x\\right)\\;\\text{d}x \u6c4e\u95a2\u6570\u3068\u3057\u3066\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u00b6 \u901a\u5e38\u306e\u95a2\u6570: \u5fae\u5206 := \u30b9\u30ab\u30e9\u3092\u5165\u529b\u3068\u3057\u3066\uff0c\u30b9\u30ab\u30e9\u3092\u8fd4\u3059\u95a2\u6570(\u6f14\u7b97\u5b50) \u6c4e\u95a2\u6570: \u95a2\u6570\u3092\u5165\u529b\u3068\u3057\u3066\u30b9\u30ab\u30e9\u3092\u8fd4\u3059\u95a2\u6570(\u6f14\u7b97\u5b50) \u6a5f\u68b0\u5b66\u7fd2\u306b\u304a\u3051\u308b\u6c4e\u95a2\u6570\u306e\u4f8b: \u30b9\u30ab\u30e9\u5024\u3092\u8fd4\u3059\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc H\\left[p\\left(x\\right)\\right] \u3092\u6700\u5927\u5316 \u5909\u5206\u539f\u7406 \u3042\u308b\u3044\u306f \u5909\u5206\u63a8\u8ad6 Maximizing a Functional \u00b6 \u6c4e\u95a2\u6570: \u95a2\u6570\u304b\u3089\u30b9\u30ab\u30e9\u3078\u306e\u5199\u50cf \u6700\u5927\u5024\u3092\u4e0e\u3048\u308b\u95a2\u6570\u3092\u63a2\u3059 \u5236\u7d04\u4ed8\u306e\u6700\u5927\u5316(\u6700\u5c0f\u5316) \u30e9\u30b0\u30e9\u30f3\u30b8\u30a2\u30f3 Lagrangean \u306e\u5229\u7528 \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306e\u6700\u5927\u5316 \u00b6 \u78ba\u7387\u306e\u5236\u7d04\uff0c\u53ca\u3073\uff0c\u5e73\u5747\u3068\u5206\u6563\u306b\u95a2\u3059\u308b\u5236\u7d04\u6761\u4ef6\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0: \\displaystyle\\int p\\left(x\\right)\\;\\text{d}x =1 : \u78ba\u7387 \\displaystyle\\int xp\\left(x\\right)\\;\\text{d}x =\\mu : \u5e73\u5747 \\displaystyle\\int \\left\\{x-\\mu\\right\\}^2p\\left(x\\right)\\;\\text{d}x=\\sigma^2 : \u5206\u6563 \u30e9\u30b0\u30e9\u30f3\u30b8\u30a7\u4e57\u6570\u3092\u4f7f\u3063\u3066\u5236\u7d04\u6761\u4ef6\u4e0b\u3067\u306e\u6700\u5927\u5316< \\begin{equation} -\\int p\\left(x\\right)\\log p\\left(x\\right)\\;\\text{d}x + \\lambda_1\\left\\{\\int p\\left(x\\right)\\;\\text{d}x-1\\right\\} + \\lambda_2\\left\\{\\int xp\\left(x\\right)\\;\\text{d}x-\\mu\\right\\}+\\lambda_3\\left\\{\\int\\left\\{x-\\mu\\right\\}^2p\\left(x\\right)\\;\\text{d}x-\\sigma^2\\right\\} \\end{equation} \u5404\u5909\u6570\u3067\u5fae\u5206\u3057\u30660\u3068\u7f6e\u304d\uff0c\u6574\u7406: \\begin{equation} p\\left(x\\right)=\\exp\\left(-1+\\lambda_1+\\lambda_2x+\\lambda_3\\left(x-\\mu\\right)^2\\right) \\end{equation} \u4ee5\u4e0a\u3088\u308a\u9023\u7d9a\u91cf\u306e\u6700\u5927\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3092\u4e0e\u3048\u308b\u78ba\u7387\u5206\u5e03\u306f\u30ac\u30a6\u30b9\u5206\u5e03\u3068\u306a\u308b \u6b63\u898f\u5206\u5e03\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306e\u5fae\u5206 \u00b6 \\begin{equation} p\\left(x\\right)=\\frac{1}{\\sqrt{2\\pi\\sigma^2}} e^{-\\left\\{\\frac{x-\\mu}{\\sigma}\\right\\}^2} \\end{equation} \u3053\u306e\u3068\u304d\u6700\u5927\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306f\u4ee5\u4e0b: \\begin{equation} H\\left(x\\right)=\\frac{1}{2}\\left[1+\\log\\left(2\\pi\\sigma^2\\right)\\right] \\end{equation} \u5206\u6563\u304c\u5927\u304d\u304f\u306a\u308c\u3070\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306f\u5897\u5927\u3059\u308b \u96e2\u6563\u7cfb\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3068\u306f\u7570\u306a\u308a\uff0c\u9023\u7d9a\u7cfb\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306f \\sigma^2<\\frac{1}{2}\\pi e \u306e\u3068\u304d\uff0c \u8ca0 \u3068\u306a\u308b \u6761\u4ef6\u4ed8\u304d\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc Conditional Entropy \u00b6 \u540c\u6642\u78ba\u7387 p\\left(x,y\\right) \u306b\u5bfe\u3057\u3066 \\begin{equation} H\\left(x,y\\right)=-\\int\\int p\\left(x,y\\right)\\log p\\left(x,y\\right)\\;\\text{d}x\\;\\text{d}y \\end{equation} x \u304c\u6240\u4e0e\u306e\u3068\u304d \u6761\u4ef6\u4ed8\u304d\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \\begin{equation} H\\left(y\\left|\\,x\\right.\\right) =-\\int p\\left(y\\left|\\,x\\right.\\right)\\log p\\left(y\\left|\\,x\\right.\\right)\\;dy \\end{equation} \u3055\u3089\u306b\u4ee5\u4e0b\u306e\u95a2\u4fc2\u304c\u3042\u308b \\begin{equation} H\\left(x,y\\right) = H\\left(y\\left|x\\right.\\right) + H\\left(x\\right) \\end{equation} \u76f8\u5bfe\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u00b6 \u672a\u77e5\u306e\u5206\u5e03(\u771f\u306b\u77e5\u3089\u3093\u3068\u6b32\u3059\u308b\u5206\u5e03) p\\left(x\\right) \u3092\uff0c(\u4f8b\u3048\u3070\u30cb\u30e5\u30fc\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306a\u3069\u306b\u3088\u308a) q\\left(x\\right) \u3067\u8fd1\u4f3c\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u308b\u3002 \u76f8\u5bfe\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc(KL\u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9)\u3092\u7528\u3044\u3066\u771f\u306e\u5206\u5e03 p(x) \u306e\u4ee3\u308f\u308a\u306b q(x) \u3092\u7528\u3044\u305f\u7d50\u679c x \u306e\u5024\u3092\u7279\u5b9a\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u5e73\u5747\u60c5\u5831\u91cf \u30d9\u30a4\u30ba\u63a8\u8ad6: \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc: \u60c5\u5831\u8ad6\u304b\u3089 KL \u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9(\u76f8\u5bfe\u60c5\u5831\u91cf): \u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u304b\u3089 \u76f8\u5bfe\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3068 KL \u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9 \u00b6 \u76f8\u5bfe\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306e\u5f0f\u306b q\\left(x\\right) \u3092\u4ee3\u5165 \\begin{align} \\mathop{KL}\\left(p\\left\\|\\,q\\right.\\right) &=-\\int p(x)\\log q(x)\\;dx -\\left[\\int p(x)\\log p(x)\\;dx\\right]\\\\ &=-\\int p(x)\\log\\left(\\frac{p(x)}{q(x)}\\right)\\,dx \\end{align} KL \u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9\u306f\u975e\u5bfe\u79f0\u6027: \\begin{equation} \\mathop{KL}\\left(p\\left\\|\\,q\\right.\\right)\\ne \\mathop{KL}\\left(q\\left\\|\\,p\\right.\\right) \\end{equation} K-L \u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9\u306f\u5e38\u306b\u6b63\u304b 0 \u3002 \u7b49\u53f7\u304c\u6210\u308a\u7acb\u3064\u306e\u306f p(x)=q(x) \u306e\u3068\u304d\u306e\u307f \u76f8\u4e92\u60c5\u5831\u91cf Mutual Information \u00b6 2 \u5909\u91cf x , y \u304c\u4e0e\u3048\u3089\u5f97\u305f\u6642\u540c\u6642\u78ba\u7387 p\\left(x,y\\right) \u306b\u3064\u3044\u3066: \u4e21\u5909\u91cf\u304c\u72ec\u7acb\u306a\u5834\u5408: p\\left(x,y\\right)=p\\left(x\\right)p\\left(y\\right) \u72ec\u7acb\u3067\u306a\u3044\u3051\u308c\u3070: \u540c\u6642\u78ba\u7387\u3068\u306e KL \u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9 \\begin{align} I(x,y) &=\\mathop{KL}\\left(p(x,y)\\left\\|p(x)p(y)\\right.\\right)\\\\ &=\\int\\int p(x,y)\\ln\\left[\\frac{p(x)\\,p(y)}{p(x,y)}\\right]\\,\\text{d}x\\,\\text{d}y \\end{align} \\begin{align} \\mathop{pmi}(x,y)&\\equiv\\log\\left(\\frac{p(x,y)}{p(x)\\,p(y)}\\right)\\\\ &=\\log\\left(\\frac{p\\left(x\\left|\\,y\\right.\\right)}{p(x)}\\right)\\\\ &=\\log\\left(\\frac{p\\left(y\\left|\\,x\\right.\\right)}{p(y)}\\right) \\end{align} https://en.wikipedia.org/wiki/Pointwise_mutual_information","title":"\u60c5\u5831\u7406\u8ad6"},{"location":"information_theory/#_1","text":"\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc entropy \u6700\u5927\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u6761\u4ef6\u4ed8\u304d\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u30ab\u30eb\u30d0\u30c3\u30af=\u30e9\u30a4\u30d6\u30e9\u30fc\u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9 \u76f8\u4e92\u60c5\u5831\u91cf","title":"\u60c5\u5831\u7406\u8ad6"},{"location":"information_theory/#information-measure","text":"\u60c5\u5831\u91cf: \u78ba\u7387\u5909\u6570 x \u306e\u30b5\u30d7\u30e9\u30a4\u30ba\u91cf \u307e\u308c\u306b\u3057\u304b\u8d77\u3053\u3089\u306a\u3044\u4e8b\u8c61\u304c\u8d77\u3053\u3063\u305f\u5834\u5408\u306b\u306f\u60c5\u5831\u91cf\u306f\u5927\u304d\u3044\u3002 \u30cb\u30e5\u30fc\u30b9\u306b\u306a\u308b \u5fc5\u305a\u8d77\u3053\u308b\u3053\u3068\u304c\u8d77\u3053\u3063\u3066\u3082\u60c5\u5831\u91cf\u306f\u5c0f\u3055\u3044\u3002 \u30cb\u30e5\u30fc\u30b9\u306b\u306a\u3089\u306a\u3044 \\begin{equation} H\\left(x\\right)=-\\sum_x p\\left(x\\right)\\log_2p\\left(x\\right) \\end{equation} - \u30de\u30a4\u30ca\u30b9\u3092\u3064\u3051\u308b\u306e\u306f\u6b63\u306e\u5024\u306b\u3059\u308b\u305f\u3081","title":"\u60c5\u5831\u91cf Information Measure"},{"location":"information_theory/#_2","text":"\u30dc\u30eb\u30c4\u30de\u30f3(\u5de6)\u3068\u30b7\u30e3\u30ce\u30f3(\u53f3) \u51fa\u5178:\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2 \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc: \u78ba\u7387\u5909\u6570\u306e\u5e73\u5747\u60c5\u5831\u91cf \u7269\u7406\u5b66\u8d77\u6e90 \u71b1\u529b\u5b66\u306e\u5e73\u8861\u306e\u6982\u5ff5 \u7d71\u8a08\u529b\u5b66","title":"\u71b1\u529b\u5b66\u3068\u60c5\u5831\u7406\u8ad6"},{"location":"information_theory/#ludwig-eduard-boltzmann-1844-1906","text":"\u7d71\u8a08\u529b\u5b66 \u7b2c\u4e00\u6cd5\u5247: \u30a8\u30cd\u30eb\u30ae\u30fc\u4fdd\u5b58 \u7b2c\u4e8c\u6cd5\u5247: \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u5897\u5927 \u30de\u30af\u30ed\u3068\u30df\u30af\u30ed\u3092\u3064\u306a\u3050","title":"\u30dc\u30eb\u30c4\u30de\u30f3 Ludwig Eduard Boltzmann (1844-1906)"},{"location":"information_theory/#_3","text":"\u4e71\u96d1\u3055\u306e\u5ea6\u5408\u3044\u3002\u51fa\u5178:","title":"\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc"},{"location":"information_theory/#_4","text":"N \u500b\u306e\u7269\u8cea\u304c i \u500b\u306e\u72b6\u614b\uff0c\u5404\u72b6\u614b\u306b\u306f n_i \u500b\u306e\u7269\u8cea N \u500b\u306e\u7269\u8cea\u3092\u5168\u3066\u4e26\u3079\u308b: N\\cdot(N-1)\\cdots2\\cdot1=N! \u5404\u72b6\u614b\u306e\u4e2d\u3067\u306f\u7269\u8cea\u306e\u9806\u5e8f\u306f\u554f\u308f\u306a\u3044\u3053\u3068\u306b\u3059\u308b \u7dcf\u6570 N \u500b\u306e\u7269\u8cea\u3092 n_i \u306b\u5206\u3051\u308b\u5834\u5408\u306e\u7d44\u307f\u5408\u308f\u305b: W=\\frac{N!}{\\prod_{i}n_{i}!} \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306e\u5b9a\u7fa9 \\begin{equation} H=\\frac{1}{N}\\ln W=\\frac{1}{N}\\ln N!-\\frac{1}{N}\\sum_i\\ln n_i! \\end{equation} \u30b9\u30bf\u30fc\u30ea\u30f3\u30b0\u306e\u516c\u5f0f N! \\approx N\\log N-N \u3092\u7528\u3044\u3066 \\begin{equation} H=-\\lim_{N\\rightarrow\\infty} \\sum_i\\left[\\frac{n_i}{N}\\ln\\left(\\frac{n_!}{N}\\right)\\right] =-\\sum_ip_i\\ln p_i \\end{equation} \u5168\u4f53\u306e\u5206\u5e03 \\displaystyle\\frac{n_i}{N} \u3092\u30de\u30af\u30ed\u30b9\u30c6\u30fc\u30c8 \u5404 i \u306e\u30df\u30af\u30ed\u306e\u72b6\u614b n_i \u3092","title":"\u7269\u7406\u5b66\u306b\u304a\u3051\u308b\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc "},{"location":"information_theory/#_5","text":"\u96e2\u6563\u91cf p\\left(x_i\\right)\\Delta \u3092\u8003\u3048\u3066 \\Delta\\rightarrow0 \u3092\u8003\u3048\u308b: \\begin{equation} \\int_{i\\Delta}^{\\left(i+1\\right)\\Delta} p\\left(x\\right)d\\left(x\\right) =p\\left(x_i\\right)\\Delta \\end{equation} \u9023\u7d9a\u7cfb\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \\begin{equation} H_{\\Delta}=-\\sum_ip\\left(x_i\\right)\\Delta\\log\\left(p\\left(x_i\\right)\\Delta\\right)=-\\sum_ip\\left(x_i\\right)\\Delta\\log\\left(x_i\\right)-\\Delta\\log\\Delta \\end{equation} \\Delta\\rightarrow0 \u306e\u6975\u9650\u3092\u8003\u3048\u308c\u3070: \\begin{equation} H_\\Delta=-\\int p\\left(x\\right)\\log p\\left(x\\right)\\text{d}x \\end{equation} \u9023\u7d9a\u7cfb\u3068\u96e2\u6563\u7cfb\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306f \\Delta\\log\\Delta \u3060\u3051\u7570\u306a\u308b","title":"\u9023\u7d9a\u7cfb\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc "},{"location":"information_theory/#_6","text":"\u3069\u306e\u3088\u3046\u306a\u5206\u5e03\u304c\u9023\u7d9a\u7cfb\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3092\u6700\u5927\u5316\u3059\u308b\u304b\uff1f \u96e2\u6563\u7cfb\u3067\u306f\u4e00\u69d8\u5206\u5e03 \u9023\u7d9a\u7cfb\u3067\u306f? H\\left(x\\right)=-\\int p\\left(x\\right)\\log p\\left(x\\right)\\;\\text{d}x","title":"\u9023\u7d9a\u7cfb\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3092\u6700\u5927\u5316\u3059\u308b\u5206\u5e03"},{"location":"information_theory/#_7","text":"\u901a\u5e38\u306e\u95a2\u6570: \u5fae\u5206 := \u30b9\u30ab\u30e9\u3092\u5165\u529b\u3068\u3057\u3066\uff0c\u30b9\u30ab\u30e9\u3092\u8fd4\u3059\u95a2\u6570(\u6f14\u7b97\u5b50) \u6c4e\u95a2\u6570: \u95a2\u6570\u3092\u5165\u529b\u3068\u3057\u3066\u30b9\u30ab\u30e9\u3092\u8fd4\u3059\u95a2\u6570(\u6f14\u7b97\u5b50) \u6a5f\u68b0\u5b66\u7fd2\u306b\u304a\u3051\u308b\u6c4e\u95a2\u6570\u306e\u4f8b: \u30b9\u30ab\u30e9\u5024\u3092\u8fd4\u3059\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc H\\left[p\\left(x\\right)\\right] \u3092\u6700\u5927\u5316 \u5909\u5206\u539f\u7406 \u3042\u308b\u3044\u306f \u5909\u5206\u63a8\u8ad6","title":"\u6c4e\u95a2\u6570\u3068\u3057\u3066\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc "},{"location":"information_theory/#maximizing-a-functional","text":"\u6c4e\u95a2\u6570: \u95a2\u6570\u304b\u3089\u30b9\u30ab\u30e9\u3078\u306e\u5199\u50cf \u6700\u5927\u5024\u3092\u4e0e\u3048\u308b\u95a2\u6570\u3092\u63a2\u3059 \u5236\u7d04\u4ed8\u306e\u6700\u5927\u5316(\u6700\u5c0f\u5316) \u30e9\u30b0\u30e9\u30f3\u30b8\u30a2\u30f3 Lagrangean \u306e\u5229\u7528","title":"Maximizing a Functional"},{"location":"information_theory/#_8","text":"\u78ba\u7387\u306e\u5236\u7d04\uff0c\u53ca\u3073\uff0c\u5e73\u5747\u3068\u5206\u6563\u306b\u95a2\u3059\u308b\u5236\u7d04\u6761\u4ef6\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0: \\displaystyle\\int p\\left(x\\right)\\;\\text{d}x =1 : \u78ba\u7387 \\displaystyle\\int xp\\left(x\\right)\\;\\text{d}x =\\mu : \u5e73\u5747 \\displaystyle\\int \\left\\{x-\\mu\\right\\}^2p\\left(x\\right)\\;\\text{d}x=\\sigma^2 : \u5206\u6563 \u30e9\u30b0\u30e9\u30f3\u30b8\u30a7\u4e57\u6570\u3092\u4f7f\u3063\u3066\u5236\u7d04\u6761\u4ef6\u4e0b\u3067\u306e\u6700\u5927\u5316< \\begin{equation} -\\int p\\left(x\\right)\\log p\\left(x\\right)\\;\\text{d}x + \\lambda_1\\left\\{\\int p\\left(x\\right)\\;\\text{d}x-1\\right\\} + \\lambda_2\\left\\{\\int xp\\left(x\\right)\\;\\text{d}x-\\mu\\right\\}+\\lambda_3\\left\\{\\int\\left\\{x-\\mu\\right\\}^2p\\left(x\\right)\\;\\text{d}x-\\sigma^2\\right\\} \\end{equation} \u5404\u5909\u6570\u3067\u5fae\u5206\u3057\u30660\u3068\u7f6e\u304d\uff0c\u6574\u7406: \\begin{equation} p\\left(x\\right)=\\exp\\left(-1+\\lambda_1+\\lambda_2x+\\lambda_3\\left(x-\\mu\\right)^2\\right) \\end{equation} \u4ee5\u4e0a\u3088\u308a\u9023\u7d9a\u91cf\u306e\u6700\u5927\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3092\u4e0e\u3048\u308b\u78ba\u7387\u5206\u5e03\u306f\u30ac\u30a6\u30b9\u5206\u5e03\u3068\u306a\u308b","title":"\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306e\u6700\u5927\u5316"},{"location":"information_theory/#_9","text":"\\begin{equation} p\\left(x\\right)=\\frac{1}{\\sqrt{2\\pi\\sigma^2}} e^{-\\left\\{\\frac{x-\\mu}{\\sigma}\\right\\}^2} \\end{equation} \u3053\u306e\u3068\u304d\u6700\u5927\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306f\u4ee5\u4e0b: \\begin{equation} H\\left(x\\right)=\\frac{1}{2}\\left[1+\\log\\left(2\\pi\\sigma^2\\right)\\right] \\end{equation} \u5206\u6563\u304c\u5927\u304d\u304f\u306a\u308c\u3070\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306f\u5897\u5927\u3059\u308b \u96e2\u6563\u7cfb\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3068\u306f\u7570\u306a\u308a\uff0c\u9023\u7d9a\u7cfb\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306f \\sigma^2<\\frac{1}{2}\\pi e \u306e\u3068\u304d\uff0c \u8ca0 \u3068\u306a\u308b","title":"\u6b63\u898f\u5206\u5e03\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306e\u5fae\u5206"},{"location":"information_theory/#conditional-entropy","text":"\u540c\u6642\u78ba\u7387 p\\left(x,y\\right) \u306b\u5bfe\u3057\u3066 \\begin{equation} H\\left(x,y\\right)=-\\int\\int p\\left(x,y\\right)\\log p\\left(x,y\\right)\\;\\text{d}x\\;\\text{d}y \\end{equation} x \u304c\u6240\u4e0e\u306e\u3068\u304d \u6761\u4ef6\u4ed8\u304d\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \\begin{equation} H\\left(y\\left|\\,x\\right.\\right) =-\\int p\\left(y\\left|\\,x\\right.\\right)\\log p\\left(y\\left|\\,x\\right.\\right)\\;dy \\end{equation} \u3055\u3089\u306b\u4ee5\u4e0b\u306e\u95a2\u4fc2\u304c\u3042\u308b \\begin{equation} H\\left(x,y\\right) = H\\left(y\\left|x\\right.\\right) + H\\left(x\\right) \\end{equation}","title":"\u6761\u4ef6\u4ed8\u304d\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc Conditional Entropy"},{"location":"information_theory/#_10","text":"\u672a\u77e5\u306e\u5206\u5e03(\u771f\u306b\u77e5\u3089\u3093\u3068\u6b32\u3059\u308b\u5206\u5e03) p\\left(x\\right) \u3092\uff0c(\u4f8b\u3048\u3070\u30cb\u30e5\u30fc\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306a\u3069\u306b\u3088\u308a) q\\left(x\\right) \u3067\u8fd1\u4f3c\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u308b\u3002 \u76f8\u5bfe\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc(KL\u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9)\u3092\u7528\u3044\u3066\u771f\u306e\u5206\u5e03 p(x) \u306e\u4ee3\u308f\u308a\u306b q(x) \u3092\u7528\u3044\u305f\u7d50\u679c x \u306e\u5024\u3092\u7279\u5b9a\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u5e73\u5747\u60c5\u5831\u91cf \u30d9\u30a4\u30ba\u63a8\u8ad6: \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc: \u60c5\u5831\u8ad6\u304b\u3089 KL \u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9(\u76f8\u5bfe\u60c5\u5831\u91cf): \u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u304b\u3089","title":"\u76f8\u5bfe\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc "},{"location":"information_theory/#kl","text":"\u76f8\u5bfe\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306e\u5f0f\u306b q\\left(x\\right) \u3092\u4ee3\u5165 \\begin{align} \\mathop{KL}\\left(p\\left\\|\\,q\\right.\\right) &=-\\int p(x)\\log q(x)\\;dx -\\left[\\int p(x)\\log p(x)\\;dx\\right]\\\\ &=-\\int p(x)\\log\\left(\\frac{p(x)}{q(x)}\\right)\\,dx \\end{align} KL \u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9\u306f\u975e\u5bfe\u79f0\u6027: \\begin{equation} \\mathop{KL}\\left(p\\left\\|\\,q\\right.\\right)\\ne \\mathop{KL}\\left(q\\left\\|\\,p\\right.\\right) \\end{equation} K-L \u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9\u306f\u5e38\u306b\u6b63\u304b 0 \u3002 \u7b49\u53f7\u304c\u6210\u308a\u7acb\u3064\u306e\u306f p(x)=q(x) \u306e\u3068\u304d\u306e\u307f","title":"\u76f8\u5bfe\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3068 KL \u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9 "},{"location":"information_theory/#mutual-information","text":"2 \u5909\u91cf x , y \u304c\u4e0e\u3048\u3089\u5f97\u305f\u6642\u540c\u6642\u78ba\u7387 p\\left(x,y\\right) \u306b\u3064\u3044\u3066: \u4e21\u5909\u91cf\u304c\u72ec\u7acb\u306a\u5834\u5408: p\\left(x,y\\right)=p\\left(x\\right)p\\left(y\\right) \u72ec\u7acb\u3067\u306a\u3044\u3051\u308c\u3070: \u540c\u6642\u78ba\u7387\u3068\u306e KL \u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9 \\begin{align} I(x,y) &=\\mathop{KL}\\left(p(x,y)\\left\\|p(x)p(y)\\right.\\right)\\\\ &=\\int\\int p(x,y)\\ln\\left[\\frac{p(x)\\,p(y)}{p(x,y)}\\right]\\,\\text{d}x\\,\\text{d}y \\end{align} \\begin{align} \\mathop{pmi}(x,y)&\\equiv\\log\\left(\\frac{p(x,y)}{p(x)\\,p(y)}\\right)\\\\ &=\\log\\left(\\frac{p\\left(x\\left|\\,y\\right.\\right)}{p(x)}\\right)\\\\ &=\\log\\left(\\frac{p\\left(y\\left|\\,x\\right.\\right)}{p(y)}\\right) \\end{align} https://en.wikipedia.org/wiki/Pointwise_mutual_information","title":"\u76f8\u4e92\u60c5\u5831\u91cf Mutual Information"},{"location":"lect00check_meet/","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA) \u00b6 Shin Aasakawa , all rights reserved. Date: 08/May/2020 Appache 2.0 license \u4e8b\u524d\u30a2\u30f3\u30b1\u30fc\u30c8 Google Meet \u306e\u4e8b\u524d\u78ba\u8a8d\u30c6\u30b9\u30c8\u6848\u5185 \u00b6 \u4ee5\u4e0b\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3067\u63a5\u7d9a\u78ba\u8a8d\u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002\u90fd\u5408\u306e\u826f\u3044\u6642\u9593\u306b\u53c2\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u52d5\u4f5c\u78ba\u8a8d\u3067\u3059\u306e\u3067\uff0c\u3044\u305a\u308c\u304b\u306e\u6a5f\u4f1a\u306b\u4e00\u5ea6\u3060\u3051\u53c2\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4e8b\u524d\u30c6\u30b9\u30c8\u65e5\u7a0b \u00b6 2020\u5e74 4\u670827\u65e5\u6708\u66dc\u65e5 10:30-11:00 2020\u5e74 4\u670828\u65e5\u706b\u66dc\u65e5 10:30-11:00 2020\u5e74 5\u670807\u65e5\u6728\u66dc\u65e5 10:30-11:00 2020\u5e74 5\u670807\u65e5\u6728\u66dc\u65e5 16:30-17:00 \u4e8b\u524d\u30c6\u30b9\u30c8\u5185\u5bb9 \u00b6 \u6b63\u3057\u304f\u5165\u5ba4\u3057\uff0c\u9000\u51fa\u3067\u304d\u308b\u304b\uff1f \u97f3\u58f0\u914d\u4fe1\uff0c\u3053\u3061\u3089\u306e\u97f3\u58f0\u304c\u805e\u304d\u53d6\u308c\u308b\u304b\uff1f \u52d5\u753b\u914d\u4fe1\uff0c\u3053\u3061\u3089\u306e\u6620\u50cf\u304c\u8996\u8074\u3067\u304d\u308b\u304b\uff1f \u97f3\u58f0\u9001\u4fe1\uff0c\u30de\u30a4\u30af\u5165\u529b\u3067\u304d\u308b\u304b\uff1f \u52d5\u753b\u9001\u4fe1\uff0c\u753b\u9762\u5171\u6709\u3067\u304d\u308b\u304b\uff1f \u30c1\u30e3\u30c3\u30c8\u6a5f\u80fd\u3092\u5229\u7528\u3067\u304d\u308b\u304b Meet \u306b\u3088\u308b\u30aa\u30f3\u30e9\u30a4\u30f3\u6388\u696d\u53c2\u52a0\u65b9\u6cd5 \u00b6 \u8aac\u660e\u52d5\u753b \u74b0\u5883 \u00b6 PC \u307e\u305f\u306f Mac \u306e\u4f7f\u7528\u3092\u5f37\u304f\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002 \u30aa\u30f3\u30e9\u30a4\u30f3\u6388\u696d\u3092\u95b2\u89a7\u3059\u308b\u3060\u3051\u306a\u3089\u3070\uff0c\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\uff0ciPhone\uff0c\u307e\u305f\u306f\u30bf\u30d6\u30ec\u30c3\u30c8\u7aef\u672b\u3067\u53ef\u80fd\u3067\u3059\u3002 \u3067\u3059\u304c\uff0c\u5b9f\u7fd2\u3092\u8003\u3048\u305f\u5834\u5408\uff0cPC \u304b Mac \u3067\u3042\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002 \u3069\u3046\u3057\u3066\u3082 PC \u3042\u308b\u3044\u306f Mac \u3092\u7528\u610f\u3067\u304d\u306a\u3044\u5834\u5408\u306b\u306f\u4e8b\u524d\u306b\u7533\u3057\u51fa\u3066\u304f\u3060\u3055\u3044\u3002 Google Meet \u306b\u3064\u3044\u3066 \u00b6 \u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u306f MacOS, Windows, Chrome OS, Ubuntu \u306a\u3069 Linux \u7cfb\u306e\u3044\u305a\u308c\u304b\u3067\u3059 \u30d6\u30e9\u30a6\u30b6 Google Chrome \u3092\u524d\u63d0\u3068\u3057\u307e\u3059\u3002Safari, Edge, FireFox \u3067\u3082\u52d5\u4f5c\u3057\u307e\u3059\u304c\uff0ccolab \u304c\u52d5\u4f5c\u3057\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 PC \u304b\u3089\u30aa\u30f3\u30e9\u30a4\u30f3\u6388\u696d\u306b\u51fa\u5e2d\u3059\u308b\u5834\u5408\u306b\u306f\uff0cChrome \u304c\u52d5\u4f5c\u3057\u3066\u3044\u308c\u3070\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002 \u3084\u3080\u3092\u5f97\u305a Android \u3084 iOS \u304b\u3089\u51fa\u5e2d\u3059\u308b\u5834\u5408\u306b\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u304b\u3089\u30a2\u30d7\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002 Android \u7248 iOS \u7248 \u521d\u3081\u3066 Meet \u3092\u8d77\u52d5\u3057\u305f\u3068\u304d\u306b\uff0c\u30d1\u30bd\u30b3\u30f3\u306e\u30ab\u30e1\u30e9\u3068\u30de\u30a4\u30af\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3092\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u624b\u9806\u3067\uff0c\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u306e\u8a2d\u5b9a\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002 Meet \u3092\u521d\u3081\u3066\u4f7f\u7528\u3059\u308b\u3068\u304d\u306b\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b \u00b6 \u30a6\u30a7\u30d6\u30d6\u30e9\u30a6\u30b6\u3067 Meet \u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8 \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002 [\u65b0\u3057\u3044\u30df\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u958b\u59cb] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 [\u8a31\u53ef] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 \u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b \u00b6 \u30a2\u30af\u30bb\u30b9\u306e\u8a31\u53ef\u3092\u6c42\u3081\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u3084\u3001\u4ee5\u524d\u306b\u30a2\u30af\u30bb\u30b9\u3092\u30d6\u30ed\u30c3\u30af\u3057\u305f\u5834\u5408\u3067\u3082\u3001\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u3068\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3067\u304d\u307e\u3059\u3002 \u30a6\u30a7\u30d6\u30d6\u30e9\u30a6\u30b6\u3067 Meet \u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8 \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002 [\u65b0\u3057\u3044\u30df\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u958b\u59cb] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 \u753b\u9762\u53f3\u4e0a\u306e\u30ab\u30e1\u30e9\u30a8\u30e9\u30fc \u30a2\u30a4\u30b3\u30f3 [https://meet.google.com \u306b\u3088\u308b\u30ab\u30e1\u30e9\u3068\u30de\u30a4\u30af\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u5e38\u306b\u8a31\u53ef\u3059\u308b] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 [\u5b8c\u4e86] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\u30d3\u30c7\u30aa\u4f1a\u8b70\u304c\u81ea\u52d5\u7684\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\u4f1a\u8b70\u304c\u518d\u8aad\u307f\u8fbc\u307f\u3055\u308c\u306a\u3044\u5834\u5408\u306f\u3001\u3044\u3063\u305f\u3093\u7d42\u4e86\u3057\u3066\u518d\u5ea6\u4f1a\u8b70\u3092\u958b\u59cb\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Google \u306e \u30d8\u30eb\u30d7 \u30ab\u30e1\u30e9\u3068\u30de\u30a4\u30af\u3092\u4f7f\u7528\u3059\u308b \u3082\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044 Google Chrome \u306e Windows \u3078\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u00b6 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u30d5\u30a1\u30a4\u30eb \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 \u78ba\u8a8d\u306e\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u305f\u5834\u5408\u306f\u3001[\u5b9f\u884c] \u307e\u305f\u306f [\u4fdd\u5b58] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 [\u4fdd\u5b58] \u3092\u9078\u629e\u3057\u305f\u5834\u5408\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u958b\u59cb\u3059\u308b\u306b\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 Chrome \u3092\u8d77\u52d5\u3057\u307e\u3059\u3002 Windows 7: \u3059\u3079\u3066\u306e\u51e6\u7406\u304c\u5b8c\u4e86\u3059\u308b\u3068 Chrome \u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u958b\u304d\u307e\u3059\u3002 Windows 8\u30018.1: [\u3088\u3046\u3053\u305d] \u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001[\u6b21\u3078] \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u65e2\u5b9a\u306e\u30d6\u30e9\u30a6\u30b6\u3092\u9078\u629e\u3057\u307e\u3059\u3002 Windows 10: \u3059\u3079\u3066\u306e\u51e6\u7406\u304c\u5b8c\u4e86\u3059\u308b\u3068 Chrome \u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u958b\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u3001Chrome \u3092\u65e2\u5b9a\u306e\u30d6\u30e9\u30a6\u30b6\u306b\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 Google Chrome \u306e Mac \u3078\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u00b6 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 \u300cgooglechrome.dmg\u300d\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304d\u307e\u3059\u3002 \u958b\u3044\u305f\u30a6\u30a3\u30f3\u30c9\u30a6\u3067 Chrome Chrome \u3092\u63a2\u3057\u307e\u3059\u3002 Chrome \u3092 [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3] \u30d5\u30a9\u30eb\u30c0\u306b\u30c9\u30e9\u30c3\u30b0\u3057\u307e\u3059\u3002 \u3053\u306e\u3068\u304d\u3001\u7ba1\u7406\u8005\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u5165\u529b\u3092\u6c42\u3081\u3089\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u7ba1\u7406\u8005\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306f\u3001\u30d1\u30bd\u30b3\u30f3\u4e0a\u3067\u81ea\u5206\u304c\u7de8\u96c6\u6a29\u9650\u3092\u6301\u3063\u3066\u3044\u308b\u5834\u6240\uff08\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306a\u3069\uff09\u306b Chrome \u3092\u30c9\u30e9\u30c3\u30b0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Chrome \u3092\u958b\u304d\u307e\u3059\u3002 Finder \u3092\u958b\u304d\u307e\u3059\u3002 \u30b5\u30a4\u30c9\u30d0\u30fc\u3067\u3001Google Chrome \u306e\u53f3\u306b\u3042\u308b\u53d6\u308a\u51fa\u3057 \u53d6\u308a\u51fa\u3057 \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 iOS \u3084 Adroid \u3078\u306e Meet \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \uff08\u975e\u63a8\u5968\uff09 \u00b6 iOS \u7248 Android \u7248 Google Chrome \u306e Android \u3078\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u00b6 Android \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3068\u30bf\u30d6\u30ec\u30c3\u30c8\u5411\u3051\u306e Chrome \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 \u306f Android 5.0\uff08Lollipop\uff09\u4ee5\u4e0a\u3092\u642d\u8f09\u3057\u305f\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3084\u30bf\u30d6\u30ec\u30c3\u30c8\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059: Android \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u307e\u305f\u306f\u30bf\u30d6\u30ec\u30c3\u30c8\u3067 Google Play \u306e Chrome \u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002 [\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb] \u3092\u30bf\u30c3\u30d7\u3057\u307e\u3059\u3002 [\u540c\u610f\u3059\u308b] \u3092\u30bf\u30c3\u30d7\u3057\u307e\u3059\u3002 \u4f7f\u7528\u3092\u958b\u59cb\u3059\u308b\u306b\u306f\u3001\u30db\u30fc\u30e0\u307e\u305f\u306f \uff3b\u3059\u3079\u3066\u306e\u30a2\u30d7\u30ea] \u30da\u30fc\u30b8\u306b\u79fb\u52d5\u3057\u3066 Chrome \u30a2\u30d7\u30ea \u3092\u30bf\u30c3\u30d7\u3057\u307e\u3059\u3002 \u691c\u7d22\u30a8\u30f3\u30b8\u30f3 Flash \u30dd\u30c3\u30d7\u30a2\u30c3\u30d7 Chrome \u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306b\u95a2\u3059\u308b\u554f\u984c\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306f Chrome \u3092\u3044\u3063\u305f\u3093\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u3057 \u518d\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u7b2c 0 \u56de \u4e8b\u524d\u78ba\u8a8d"},{"location":"lect00check_meet/#iiia","text":"Shin Aasakawa , all rights reserved. Date: 08/May/2020 Appache 2.0 license \u4e8b\u524d\u30a2\u30f3\u30b1\u30fc\u30c8","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA)"},{"location":"lect00check_meet/#google-meet","text":"\u4ee5\u4e0b\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3067\u63a5\u7d9a\u78ba\u8a8d\u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002\u90fd\u5408\u306e\u826f\u3044\u6642\u9593\u306b\u53c2\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u52d5\u4f5c\u78ba\u8a8d\u3067\u3059\u306e\u3067\uff0c\u3044\u305a\u308c\u304b\u306e\u6a5f\u4f1a\u306b\u4e00\u5ea6\u3060\u3051\u53c2\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Google Meet \u306e\u4e8b\u524d\u78ba\u8a8d\u30c6\u30b9\u30c8\u6848\u5185"},{"location":"lect00check_meet/#_1","text":"2020\u5e74 4\u670827\u65e5\u6708\u66dc\u65e5 10:30-11:00 2020\u5e74 4\u670828\u65e5\u706b\u66dc\u65e5 10:30-11:00 2020\u5e74 5\u670807\u65e5\u6728\u66dc\u65e5 10:30-11:00 2020\u5e74 5\u670807\u65e5\u6728\u66dc\u65e5 16:30-17:00","title":"\u4e8b\u524d\u30c6\u30b9\u30c8\u65e5\u7a0b"},{"location":"lect00check_meet/#_2","text":"\u6b63\u3057\u304f\u5165\u5ba4\u3057\uff0c\u9000\u51fa\u3067\u304d\u308b\u304b\uff1f \u97f3\u58f0\u914d\u4fe1\uff0c\u3053\u3061\u3089\u306e\u97f3\u58f0\u304c\u805e\u304d\u53d6\u308c\u308b\u304b\uff1f \u52d5\u753b\u914d\u4fe1\uff0c\u3053\u3061\u3089\u306e\u6620\u50cf\u304c\u8996\u8074\u3067\u304d\u308b\u304b\uff1f \u97f3\u58f0\u9001\u4fe1\uff0c\u30de\u30a4\u30af\u5165\u529b\u3067\u304d\u308b\u304b\uff1f \u52d5\u753b\u9001\u4fe1\uff0c\u753b\u9762\u5171\u6709\u3067\u304d\u308b\u304b\uff1f \u30c1\u30e3\u30c3\u30c8\u6a5f\u80fd\u3092\u5229\u7528\u3067\u304d\u308b\u304b","title":"\u4e8b\u524d\u30c6\u30b9\u30c8\u5185\u5bb9"},{"location":"lect00check_meet/#meet","text":"\u8aac\u660e\u52d5\u753b","title":"Meet \u306b\u3088\u308b\u30aa\u30f3\u30e9\u30a4\u30f3\u6388\u696d\u53c2\u52a0\u65b9\u6cd5"},{"location":"lect00check_meet/#_3","text":"PC \u307e\u305f\u306f Mac \u306e\u4f7f\u7528\u3092\u5f37\u304f\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002 \u30aa\u30f3\u30e9\u30a4\u30f3\u6388\u696d\u3092\u95b2\u89a7\u3059\u308b\u3060\u3051\u306a\u3089\u3070\uff0c\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\uff0ciPhone\uff0c\u307e\u305f\u306f\u30bf\u30d6\u30ec\u30c3\u30c8\u7aef\u672b\u3067\u53ef\u80fd\u3067\u3059\u3002 \u3067\u3059\u304c\uff0c\u5b9f\u7fd2\u3092\u8003\u3048\u305f\u5834\u5408\uff0cPC \u304b Mac \u3067\u3042\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002 \u3069\u3046\u3057\u3066\u3082 PC \u3042\u308b\u3044\u306f Mac \u3092\u7528\u610f\u3067\u304d\u306a\u3044\u5834\u5408\u306b\u306f\u4e8b\u524d\u306b\u7533\u3057\u51fa\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u74b0\u5883"},{"location":"lect00check_meet/#google-meet_1","text":"\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u306f MacOS, Windows, Chrome OS, Ubuntu \u306a\u3069 Linux \u7cfb\u306e\u3044\u305a\u308c\u304b\u3067\u3059 \u30d6\u30e9\u30a6\u30b6 Google Chrome \u3092\u524d\u63d0\u3068\u3057\u307e\u3059\u3002Safari, Edge, FireFox \u3067\u3082\u52d5\u4f5c\u3057\u307e\u3059\u304c\uff0ccolab \u304c\u52d5\u4f5c\u3057\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 PC \u304b\u3089\u30aa\u30f3\u30e9\u30a4\u30f3\u6388\u696d\u306b\u51fa\u5e2d\u3059\u308b\u5834\u5408\u306b\u306f\uff0cChrome \u304c\u52d5\u4f5c\u3057\u3066\u3044\u308c\u3070\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002 \u3084\u3080\u3092\u5f97\u305a Android \u3084 iOS \u304b\u3089\u51fa\u5e2d\u3059\u308b\u5834\u5408\u306b\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u304b\u3089\u30a2\u30d7\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002 Android \u7248 iOS \u7248 \u521d\u3081\u3066 Meet \u3092\u8d77\u52d5\u3057\u305f\u3068\u304d\u306b\uff0c\u30d1\u30bd\u30b3\u30f3\u306e\u30ab\u30e1\u30e9\u3068\u30de\u30a4\u30af\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3092\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u624b\u9806\u3067\uff0c\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u306e\u8a2d\u5b9a\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002","title":"Google Meet \u306b\u3064\u3044\u3066"},{"location":"lect00check_meet/#meet_1","text":"\u30a6\u30a7\u30d6\u30d6\u30e9\u30a6\u30b6\u3067 Meet \u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8 \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002 [\u65b0\u3057\u3044\u30df\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u958b\u59cb] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 [\u8a31\u53ef] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002","title":"Meet \u3092\u521d\u3081\u3066\u4f7f\u7528\u3059\u308b\u3068\u304d\u306b\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b"},{"location":"lect00check_meet/#_4","text":"\u30a2\u30af\u30bb\u30b9\u306e\u8a31\u53ef\u3092\u6c42\u3081\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u3084\u3001\u4ee5\u524d\u306b\u30a2\u30af\u30bb\u30b9\u3092\u30d6\u30ed\u30c3\u30af\u3057\u305f\u5834\u5408\u3067\u3082\u3001\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u3068\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3067\u304d\u307e\u3059\u3002 \u30a6\u30a7\u30d6\u30d6\u30e9\u30a6\u30b6\u3067 Meet \u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8 \u306b\u79fb\u52d5\u3057\u307e\u3059\u3002 [\u65b0\u3057\u3044\u30df\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u958b\u59cb] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 \u753b\u9762\u53f3\u4e0a\u306e\u30ab\u30e1\u30e9\u30a8\u30e9\u30fc \u30a2\u30a4\u30b3\u30f3 [https://meet.google.com \u306b\u3088\u308b\u30ab\u30e1\u30e9\u3068\u30de\u30a4\u30af\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u5e38\u306b\u8a31\u53ef\u3059\u308b] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 [\u5b8c\u4e86] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\u30d3\u30c7\u30aa\u4f1a\u8b70\u304c\u81ea\u52d5\u7684\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\u4f1a\u8b70\u304c\u518d\u8aad\u307f\u8fbc\u307f\u3055\u308c\u306a\u3044\u5834\u5408\u306f\u3001\u3044\u3063\u305f\u3093\u7d42\u4e86\u3057\u3066\u518d\u5ea6\u4f1a\u8b70\u3092\u958b\u59cb\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Google \u306e \u30d8\u30eb\u30d7 \u30ab\u30e1\u30e9\u3068\u30de\u30a4\u30af\u3092\u4f7f\u7528\u3059\u308b \u3082\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044","title":"\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b"},{"location":"lect00check_meet/#google-chrome-windows","text":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u30d5\u30a1\u30a4\u30eb \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 \u78ba\u8a8d\u306e\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u305f\u5834\u5408\u306f\u3001[\u5b9f\u884c] \u307e\u305f\u306f [\u4fdd\u5b58] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 [\u4fdd\u5b58] \u3092\u9078\u629e\u3057\u305f\u5834\u5408\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u958b\u59cb\u3059\u308b\u306b\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002 Chrome \u3092\u8d77\u52d5\u3057\u307e\u3059\u3002 Windows 7: \u3059\u3079\u3066\u306e\u51e6\u7406\u304c\u5b8c\u4e86\u3059\u308b\u3068 Chrome \u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u958b\u304d\u307e\u3059\u3002 Windows 8\u30018.1: [\u3088\u3046\u3053\u305d] \u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001[\u6b21\u3078] \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u65e2\u5b9a\u306e\u30d6\u30e9\u30a6\u30b6\u3092\u9078\u629e\u3057\u307e\u3059\u3002 Windows 10: \u3059\u3079\u3066\u306e\u51e6\u7406\u304c\u5b8c\u4e86\u3059\u308b\u3068 Chrome \u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u958b\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u3001Chrome \u3092\u65e2\u5b9a\u306e\u30d6\u30e9\u30a6\u30b6\u306b\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002","title":"Google Chrome \u306e Windows \u3078\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"lect00check_meet/#google-chrome-mac","text":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 \u300cgooglechrome.dmg\u300d\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304d\u307e\u3059\u3002 \u958b\u3044\u305f\u30a6\u30a3\u30f3\u30c9\u30a6\u3067 Chrome Chrome \u3092\u63a2\u3057\u307e\u3059\u3002 Chrome \u3092 [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3] \u30d5\u30a9\u30eb\u30c0\u306b\u30c9\u30e9\u30c3\u30b0\u3057\u307e\u3059\u3002 \u3053\u306e\u3068\u304d\u3001\u7ba1\u7406\u8005\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u5165\u529b\u3092\u6c42\u3081\u3089\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u7ba1\u7406\u8005\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306f\u3001\u30d1\u30bd\u30b3\u30f3\u4e0a\u3067\u81ea\u5206\u304c\u7de8\u96c6\u6a29\u9650\u3092\u6301\u3063\u3066\u3044\u308b\u5834\u6240\uff08\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306a\u3069\uff09\u306b Chrome \u3092\u30c9\u30e9\u30c3\u30b0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Chrome \u3092\u958b\u304d\u307e\u3059\u3002 Finder \u3092\u958b\u304d\u307e\u3059\u3002 \u30b5\u30a4\u30c9\u30d0\u30fc\u3067\u3001Google Chrome \u306e\u53f3\u306b\u3042\u308b\u53d6\u308a\u51fa\u3057 \u53d6\u308a\u51fa\u3057 \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002","title":"Google Chrome \u306e Mac \u3078\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"lect00check_meet/#ios-adroid-meet","text":"iOS \u7248 Android \u7248","title":"iOS \u3084 Adroid \u3078\u306e Meet \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \uff08\u975e\u63a8\u5968\uff09"},{"location":"lect00check_meet/#google-chrome-android","text":"Android \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3068\u30bf\u30d6\u30ec\u30c3\u30c8\u5411\u3051\u306e Chrome \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 \u306f Android 5.0\uff08Lollipop\uff09\u4ee5\u4e0a\u3092\u642d\u8f09\u3057\u305f\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3084\u30bf\u30d6\u30ec\u30c3\u30c8\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059: Android \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u307e\u305f\u306f\u30bf\u30d6\u30ec\u30c3\u30c8\u3067 Google Play \u306e Chrome \u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002 [\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb] \u3092\u30bf\u30c3\u30d7\u3057\u307e\u3059\u3002 [\u540c\u610f\u3059\u308b] \u3092\u30bf\u30c3\u30d7\u3057\u307e\u3059\u3002 \u4f7f\u7528\u3092\u958b\u59cb\u3059\u308b\u306b\u306f\u3001\u30db\u30fc\u30e0\u307e\u305f\u306f \uff3b\u3059\u3079\u3066\u306e\u30a2\u30d7\u30ea] \u30da\u30fc\u30b8\u306b\u79fb\u52d5\u3057\u3066 Chrome \u30a2\u30d7\u30ea \u3092\u30bf\u30c3\u30d7\u3057\u307e\u3059\u3002 \u691c\u7d22\u30a8\u30f3\u30b8\u30f3 Flash \u30dd\u30c3\u30d7\u30a2\u30c3\u30d7 Chrome \u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306b\u95a2\u3059\u308b\u554f\u984c\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306f Chrome \u3092\u3044\u3063\u305f\u3093\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u3057 \u518d\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Google Chrome \u306e Android \u3078\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"lect00guidance/","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA) \u00b6 Shin Aasakawa , all rights reserved. Date: 08/May/2020 Appache 2.0 license \u6388\u696d\u6982\u8981 \u00b6 \u672c\u6388\u696d\u3067\u306f\u4eba\u5de5\u77e5\u80fd\u306b\u7528\u3044\u3089\u308c\u308b\u6280\u8853\u306e\u8a73\u7d30\u3092\u691c\u8a0e\u3057\u306a\u304c\u3089\uff0c\u305d\u306e\u5fc3\u7406\u5b66\u7684\u610f\u5473\u3092\u8003\u3048\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\u6700\u7d42\u7684\u306a\u76ee\u6a19\u3068\u3057\u3066\u306f\u4eba\u9593\u3068\u6a5f\u68b0\u306e\uff12\u3064\u77e5\u6027\u306f\u3069\u3046\u3059\u308c\u3070\u69cb\u6210\u53ef\u80fd\u3067\u3042\u308b\u304b\u3092\u8b70\u8ad6\u3059\u308b\u305f\u3081\u306e\u7d20\u5730\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\u81ea\u52d5\u904b\u8ee2\u304c\u53ef\u80fd\u3068\u306a\u308a\uff0c \u56f2\u7881\u306e\u4e16\u754c\u30c1\u30e3\u30f3\u30d4\u30aa\u30f3\u3092\u7834\u308a \uff0c\u81ea\u52d5\u7ffb\u8a33\u306e\u7cbe\u5ea6\u304c\u5411\u4e0a\u3057\uff0c\u30b9\u30de\u30fc\u30c8\u30b9\u30d4\u30fc\u30ab\u30fc\u304c\u666e\u53ca\u3059\u308b\u306a\u3069 AI \u6280\u8853\u306f\u6bce\u65e5\u306e\u3088\u3046\u306b\u5831\u9053\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u3089\u306e\u6280\u8853\u306f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002\u3068\u308a\u308f\u3051\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0(\u6df1\u5c64\u5b66\u7fd2)\u6280\u8853\u306f\u73fe\u5728\u306e\u4eba\u5de5\u77e5\u80fd\u306e\u6839\u5e79\u3092\u306a\u3057\u3066\u3044\u307e\u3059\u3002\u73fe\u5728\u306f\u7b2c 3 \u6b21\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30d6\u30fc\u30e0\u3068\u547c\u3070\u308c\u307e\u3059\u304c 3 \u5ea6\u306e\u30d6\u30fc\u30e0 \u3068\u3082\u5fc3\u7406\u5b66\u8005\u304c\u706b\u4ed8\u3051\u5f79\u3067\u3057\u305f\u30022014\u5e74\u304b\u3089\u59cb\u307e\u3063\u305f\u73fe\u5728\u306e\u30d6\u30fc\u30e0\u3082\u5fc3\u7406\u7cfb\u51fa\u8eab\u306e\u7814\u7a76\u8005 \u304c\u5148\u5c0e\u3057\u307e\u3057\u305f\u3002\u52a0\u3048\u3066 \u30c7\u30a3\u30fc\u30d7\u30de\u30a4\u30f3\u30c9 \u306e\u5171\u540c\u5275\u8a2d\u8005 \u30c7\u30df\u30b9\u30fb\u30cf\u30b5\u30d3\u30b9 \u306f\u8a8d\u77e5\u79d1\u5b66\u51fa\u3067\u3059\u3002 \u3053\u306e\u3088\u3046\u306b\u4eba\u5de5\u77e5\u80fd\u3068\u5fc3\u7406\u5b66\u3068\u306f\u540c\u3058\u3053\u3068\u3092\u5225\u306e\u5074\u9762\u304b\u3089\u7406\u89e3\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u3068\u3055\u3048\u8a00 \u3048\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u80cc\u666f\u3092\u8003\u616e\u3059\u308c\u3070\u77e5\u7684\u6d3b\u52d5\u306e\u89e3\u660e\u3092\u76ee\u6a19\u3068\u3059\u308b\u8af8\u5206\u91ce\u306b\u304a\u3044\u3066\u5fc3\u7406\u5b66 \u5b66\u5f92\u306e\u8ca2\u732e\u304c\u671f\u5f85\u3055\u308c\u3066\u3044\u308b\u3068\u8003\u3048\u307e\u3059\u3002 \u6388\u696d\u306e\u5230\u9054\u76ee\u6a19 \u00b6 \u6df1\u5c64\u5b66\u7fd2(\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0)\u306b\u3064\u3044\u3066\u306e\u57fa\u790e\u7684\u4e8b\u9805\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u3092\u76ee\u6a19\u3068\u3057\u307e\u3059\u3002 \u8b1b\u5e2b\u7d39\u4ecb \u00b6 \u5e2b\u5320\u30a8\u30eb\u30de\u30f3\u3068UCSD\u306e\u30ad\u30e3\u30f3\u30d1\u30b9\u306b\u3066 \u6771\u4eac\u5973\u5b50\u5927\u5b66\u60c5\u5831\u51e6\u7406\u30bb\u30f3\u30bf\u30fc\u52e4\u52d9\u3002 \u65e9\u7a32\u7530\u5927\u5b66\u5728\u5b66\u6642\u306f\u30d4\u30a2\u30b8\u30a7\u306e\u767a\u751f\u8ad6\u7684\u8a8d\u8b58\u8ad6\u306b\u5fc3\u9154\u3059\u308b\u3002 \u5352\u696d\u5f8c\u30a8\u30eb\u30de\u30f3\u30cd\u30c3\u30c8\u306e\u8003\u6848\u8005\u30b8\u30a7\u30d5\u30fb\u30a8\u30eb\u30de\u30f3\u306b\u5e2b\u4e8b\uff0c\u85ab\u9676\u3092\u53d7\u3051\u308b\u3002 \u4ee5\u6765\u4eba\u9593\u306e\u9ad8\u6b21\u8a8d\u77e5\u6a5f\u80fd\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u3053\u3068\u3092\u901a\u3057\u3066\u77e5\u7684\u3067\u3042\u308b\u3068\u306f\u3069\u3046\u3044\u3046\u3053\u3068\u304b\u3092\u8003\u3048\u3066\u3044\u308b\u3068\u601d\u3063\u3066\u3044\u305f\u3002 \u8457\u66f8\u306b Python\u3067\u4f53\u9a13\u3059\u308b\u6df1\u5c64\u5b66\u7fd2 ( \u30b3\u30ed\u30ca\u793e , 2016)\uff0c \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\uff0c\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\uff0c\u6a5f\u68b0\u5b66\u7fd2\u3042\u308b\u3044\u306f\u305d\u306e\u5fc3\u7406\u5b66 ( \u65b0\u66dc\u793e , 2015)\uff0c \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6570\u7406\u7684\u57fa\u790e , \u8133\u640d\u50b7\u3068\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\uff0c\u795e\u7d4c\u5fc3\u7406\u5b66\u3078\u306e\u9069\u7528\u4f8b \u3044\u305a\u308c\u3082\u5b88\u4e00\u96c4\u4ed6\u7de8, \u30b3\u30cd\u30af\u30b7\u30e7\u30cb\u30b9\u30c8\u30e2\u30c7\u30eb\u3068\u5fc3\u7406\u5b66 (2001) \u5317\u5927\u8def\u66f8\u623f \u306a\u3069 \u500b\u4eba\u7684\u95a2\u5fc3\u4e8b \u00b6 \u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u767a\u9054 \u795e\u7d4c\u5fc3\u7406\u5b66 \u610f\u5473 \u30de\u30eb\u30c1\u30e2\u30fc\u30c0\u30eb\u5b66\u7fd2 \u8ee2\u79fb\u5b66\u7fd2\uff0c\u30ef\u30f3\u30b7\u30e7\u30c3\u30c8\u5b66\u7fd2\uff0c\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd2\uff0c\u30e1\u30bf\u5b66\u7fd2 \u5ba3\u4f1d \u00b6 \u7b2c9\u56deCPU\u5927\u8cde\u3010\u66f8\u7c4d\u90e8\u9580\u3011\uff082018\u5e74\u5ea6\uff09\u767a\u8868\uff01 \u6e96\u5099\u5b66\u7fd2 \u00b6 \u4eba\u9593\u3084\u6a5f\u68b0\u306e\u77e5\u6027\u306b\u8208\u5473\u304c\u3042\u308b\u3053\u3068\u304c\u6c42\u3081\u3089\u308c\u307e\u3059\u3002 \u4e8b\u524d\u77e5\u8b58\u306f\u5fc5\u8981\u3068\u3057\u307e\u305b\u3093\u3002 \u5fc3\u7406\u5b66\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u7d71\u8a08\u7684\u63a8\u8ad6\u306e\u6982\u8981\u3092\u77e5\u3063\u3066\u3044\u308b\u3068\u826f\u3044\u3068\u306f\u601d\u308f\u308c\u307e\u3059\u304c\uff0c\u5fc5\u8981\u306a\u77e5\u8b58\u3067\u306f \u3042\u308a\u307e\u305b\u3093\u3002 \u5c65\u4fee\u4e0a\u306e\u7559\u610f\u70b9\u7b49 \u00b6 \u5c65\u4fee\u5236\u9650\u306f\u8a2d\u3051\u307e\u305b\u3093\u3002 \u3069\u306a\u305f\u3067\u3082\u5c65\u4fee\u3067\u304d\u307e\u3059\u3002 \u6388\u696d\u4e2d\u306b\u691c\u7d22\u3057\u305f\u308a\u8cc7\u6599\u3092\u95b2\u89a7\u3059\u308b\u305f\u3081\u306b\uff0c\u53ef\u80fd\u306a\u9650\u308a PC \u3092\u6301\u53c2\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3067\u306f\u4ee3\u7528\u304c\u96e3\u3057\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 Q and A \u00b6 \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0(\u6df1\u5c64\u5b66\u7fd2)\u3063\u3066\u4f55\u3067\u3059\u304b\uff1f \u73fe\u4ee3\u7684\u306a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u624b\u6cd5\u3067\u5927\u6d41\u884c\u3057\u3066\u3044\u307e\u3059\u3002\u307b\u3068\u3093\u3069\u306e AI \u306f\u3053\u306e\u6280\u8853\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002 \u697d\u52dd\u79d1\u76ee\u3067\u3059\u304b\uff1f\u305d\u308c\u3068\u3082\u30ac\u30c1\u79d1\u76ee\u3067\u3059\u304b\uff1f \u3053\u308c\u304b\u3089\u6c7a\u3081\u307e\u3059\u3002\u7406\u60f3\u306f\u9762\u767d\u3044\u79d1\u76ee\u3067\u3059\u3002 \u6570\u5b66\u30aa\u30f3\u30c1\u306a\u306e\u3067\u3059\u304c \u6570\u5b66\u3092\u6c42\u3081\u3066\u306f\u3044\u307e\u305b\u3093 \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3067\u304d\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304b\uff1f \u3067\u304d\u305f\u65b9\u304c\u826f\u3044\u3067\u3059\u304c\uff0c\u5fc5\u8981\u8981\u4ef6\u3068\u306f\u3057\u307e\u305b\u3093\u3002 \u30ce\u30fc\u30c8\u30d1\u30bd\u30b3\u30f3\u3092\u6301\u3063\u3066\u304d\u305f\u65b9\u304c\u826f\u3044\u3067\u3059\u304b\uff1f \u3067\u304d\u308c\u308c\u3070\u305d\u3046\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3067\u3082\u306a\u304f\u3066\u3082\u69cb\u3044\u307e\u305b\u3093 \u5c65\u4fee\u767b\u9332\u3057\u306a\u3044\u3067\u30e2\u30b0\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u304b\uff1f \u306f\u3044\u3002\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\u6b53\u8fce\u3057\u307e\u3059\u3002 \u5c31\u8077\u306e\u5f79\u306b\u7acb\u3061\u307e\u3059\u304b\uff1f \u7d76\u5bfe\u306b\u5f79\u7acb\u3061\u307e\u3059\uff01 \u305f\u3068\u3048\u3070 \u3053\u308c\u306f\u5fc3\u7406\u5b66\u306a\u306e\u3067\u3057\u3087\u3046\u304b\uff1f \u3053\u308c\u304c\u5fc3\u7406\u5b66\u3067\u3042\u308a\uff0c\u8a8d\u77e5\u79d1\u5b66\u3067\u3082\u3042\u308a\uff0c\u4eba\u5de5\u77e5\u80fd\u3067\u3082\u3042\u308a\u307e\u3059\u3002\u73fe\u4ee3\u7684\u306a\u8a8d\u8b58\u8ad6\u306e\u5f62\u3067\u3059 \u6559\u79d1\u66f8/\u30c6\u30ad\u30b9\u30c8 \u00b6 Web \u4e0a\u3067\u516c\u958b\u4e88\u5b9a\u3067\u3059\u3002\u5404\u81ea\u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u306a\u3069\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u53c2\u8003\u66f8 \u00b6 \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3001\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u3001\u6a5f\u68b0\u5b66\u7fd2 \u3042\u308b\u3044\u306f\u305d\u306e\u5fc3\u7406\u5b66 (\u65b0\u66dc\u793e, 2014) Python \u3067\u4f53\u9a13\u3059\u308b\u6df1\u5c64\u5b66\u7fd2 (\u30b3\u30ed\u30ca\u793e, 2016) \u4eba\u5de5\u77e5\u80fd\u5b66\u5927\u4e8b\u5178 \uff08\u4eba\u5de5\u77e5\u80fd\u5b66\u4f1a\u7de8\u3001\u5171\u7acb\u51fa\u7248 2017) \u6df1\u5c64\u5b66\u7fd2\u6559\u79d1\u66f8 \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0 G \u691c\u5b9a(\u30b8\u30a7\u30cd\u30e9\u30ea\u30b9\u30c8) \u516c\u5f0f\u30c6\u30ad\u30b9\u30c8 \uff08\u76e3\u4fee\uff1a\u65e5\u672c\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u5354\u4f1a, \u5171\u8457, \u7fd4\u6cf3\u793e, 2018\uff09 \u95a2\u9023\u4f01\u696d \u00b6 \u65e5\u672c\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u5354\u4f1a GAUSS Exawizards Starndard = = = \u95a2\u4fc2\u3059\u308b(\u304b\u3082\u77e5\u308c\u306a\u3044)\u79d1\u76ee \u00b6 072001 / \u5b66\u7fd2\u30fb\u8a00\u8a9e\u5fc3\u7406\u5b66\uff08\u5b66\u7fd2\uff09\u4e45\u4fdd \u5c1a\u4e5f\u5148\u751f \u706b\u66dc4\u6642\u9650\u524d\u671f 072051 / \u5b66\u7fd2\u30fb\u8a00\u8a9e\u5fc3\u7406\u5b66\uff08\u8a00\u8a9e\uff09\u4e45\u4fdd \u5c1a\u4e5f\u5148\u751f \u706b\u66dc4\u6642\u9650\u5f8c\u671f 071501, 071601 / \u5fc3\u7406\u5b66\u5b9f\u9a13\u2160 \u706b\u66dc\u65e5 2 \u6642\u9650\u524d\u671f 071551, 071651 / \u5fc3\u7406\u5b66\u5b9f\u9a13\u2161 \u706b\u66dc\u65e5 2 \u6642\u9650\u5f8c\u671f 074901 / \u60c5\u5831\u51e6\u7406\u2161\uff21 \u706b\u66dc\u65e5 2 \u6642\u9650\u524d\u671f \u5800\u5185\u6b63\u5f66\u5148\u751f 074951 / \u60c5\u5831\u51e6\u7406\u2161\uff22 \u706b\u66dc\u65e5 2 \u6642\u9650\u5f8c\u671f \u5800\u5185\u6b63\u5f66\u5148\u751f 072301 / \u795e\u7d4c\u30fb\u751f\u7406\u5fc3\u7406\u5b66 \u6c34\u66dc\u65e5 3 \u6642\u9650 \u5ca9\u57ce\u9054\u4e5f\u5148\u751f 072401 / \u77e5\u899a\u30fb\u8a8d\u77e5\u5fc3\u7406\u5b66\uff08\u77e5\u899a\uff09\u6c34\u66dc\u65e5 4\u6642\u9650 \u4f50\u85e4\u7406\u6674\u5148\u751f 072451 / \u77e5\u899a\u30fb\u8a8d\u77e5\u5fc3\u7406\u5b66\uff08\u8a8d\u77e5\uff09\u6c34\u66dc\u65e5 4\u6642\u9650 \u4f50\u85e4\u7406\u6674\u5148\u751f 070901 / \u5fc3\u7406\u5b66\u6982\u8ad6\u2160 \u524d\u671f \u6728\u66dc\u65e5 1\u6642\u9650 \u5ca9\u57ce\u9054\u4e5f\u5148\u751f 072601 / \u5fc3\u7406\u5b66\u5b9f\u9a13\u6f14\u7fd2\u2160\uff21 \u524d\u671f \u6728\u66dc\u65e5 1\u6642\u9650 \u767d\u9593\u7dbe\u5148\u751f 072651 / \u5fc3\u7406\u5b66\u5b9f\u9a13\u6f14\u7fd2\u2160\uff22 \u5f8c\u671f \u6728\u66dc\u65e5 1\u6642\u9650 \u767d\u9593\u7dbe\u5148\u751f 072801 / \u5fc3\u7406\u5b66\u5b9f\u9a13\u6f14\u7fd2\u2162\uff21\u524d\u671f \u6728\u66dc\u65e5 3\u6642\u9650 \u5800\u76f4\u4eba\u5148\u751f 072851 / \u5fc3\u7406\u5b66\u5b9f\u9a13\u6f14\u7fd2\u2162\uff22 \u524d\u671f \u6728\u66dc\u65e5 3\u6642\u9650 \u5800\u76f4\u4eba\u5148\u751f \u8a55\u4fa1 \u00b6 \u99d2\u6fa4\u5927\u5b66\u306b\u63d0\u51fa\u3057\u305f\u30b7\u30e9\u30d0\u30b9\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3057\u305f 60% \u8a66\u9a13 20% \u30ec\u30dd\u30fc\u30c8 20% \u5c0f\u30c6\u30b9\u30c8 \u30eb\u30fc\u30eb \u00b6 \u6388\u696d\u59a8\u5bb3\u30fb\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u4fb5\u5bb3\u3092\u62db\u304f\u6050\u308c\u306e\u3042\u308b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u884c\u70ba\u3092\u7981\u6b62\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306f \u4e0d\u6b63\u884c\u70ba \u3067\u3042\u308a\uff0c\u7f70\u305b\u3089\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u53d7\u8b1b\u8005\u76f8\u4e92\u306e ID \u3084\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53d7\u8b1b\u3057\u3066\u3044\u306a\u3044\u4ed6\u8005\u3068\u5171\u6709\u3059\u308b\u3053\u3068 \u62c5\u5f53\u6559\u54e1\u3068\u51fa\u5e2d\u8005\u306e\u8a31\u53ef\u306a\u304f\u5199\u771f\u3084\u52d5\u753b\u7b49\u3067\u64ae\u5f71\u30fb\u9332\u753b\u30fb\u9332\u97f3\u3057\u3066\uff0cSNS \u306a\u3069\u3067\u5171\u6709\u3059\u308b\u3053\u3068 \u914d\u5e03\u3055\u308c\u305f\u8cc7\u6599\u7b49\u3092\u62c5\u5f53\u6559\u54e1\u306e\u8a31\u53ef\u306a\u304f\uff0c\u5c65\u4fee\u8005\u4ee5\u5916\u306b\u518d\u914d\u5e03\u30fb\u5171\u6709\u3059\u308b\u3053\u3068 \u30aa\u30f3\u30e9\u30a4\u30f3\u6388\u696d\u4e2d\u306f\uff0c\u30de\u30a4\u30af\u306e\u30aa\u30f3\uff0c\u30aa\u30d5\u3092\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002 \u6388\u696d\u62c5\u5f53\u8005\u304b\u3089\u306e\u8cea\u554f\u306b\u3044\u3064\u3067\u3082\u7b54\u3048\u3089\u308c\u308b\u3088\u3046\u6e96\u5099\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4e8b\u524d\u30a2\u30f3\u30b1\u30fc\u30c8\u96c6\u8a08 \u00b6","title":"\u7b2c 0 \u56de \u30ac\u30a4\u30c0\u30f3\u30b9"},{"location":"lect00guidance/#iiia","text":"Shin Aasakawa , all rights reserved. Date: 08/May/2020 Appache 2.0 license","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA)"},{"location":"lect00guidance/#_1","text":"\u672c\u6388\u696d\u3067\u306f\u4eba\u5de5\u77e5\u80fd\u306b\u7528\u3044\u3089\u308c\u308b\u6280\u8853\u306e\u8a73\u7d30\u3092\u691c\u8a0e\u3057\u306a\u304c\u3089\uff0c\u305d\u306e\u5fc3\u7406\u5b66\u7684\u610f\u5473\u3092\u8003\u3048\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\u6700\u7d42\u7684\u306a\u76ee\u6a19\u3068\u3057\u3066\u306f\u4eba\u9593\u3068\u6a5f\u68b0\u306e\uff12\u3064\u77e5\u6027\u306f\u3069\u3046\u3059\u308c\u3070\u69cb\u6210\u53ef\u80fd\u3067\u3042\u308b\u304b\u3092\u8b70\u8ad6\u3059\u308b\u305f\u3081\u306e\u7d20\u5730\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\u81ea\u52d5\u904b\u8ee2\u304c\u53ef\u80fd\u3068\u306a\u308a\uff0c \u56f2\u7881\u306e\u4e16\u754c\u30c1\u30e3\u30f3\u30d4\u30aa\u30f3\u3092\u7834\u308a \uff0c\u81ea\u52d5\u7ffb\u8a33\u306e\u7cbe\u5ea6\u304c\u5411\u4e0a\u3057\uff0c\u30b9\u30de\u30fc\u30c8\u30b9\u30d4\u30fc\u30ab\u30fc\u304c\u666e\u53ca\u3059\u308b\u306a\u3069 AI \u6280\u8853\u306f\u6bce\u65e5\u306e\u3088\u3046\u306b\u5831\u9053\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u3089\u306e\u6280\u8853\u306f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002\u3068\u308a\u308f\u3051\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0(\u6df1\u5c64\u5b66\u7fd2)\u6280\u8853\u306f\u73fe\u5728\u306e\u4eba\u5de5\u77e5\u80fd\u306e\u6839\u5e79\u3092\u306a\u3057\u3066\u3044\u307e\u3059\u3002\u73fe\u5728\u306f\u7b2c 3 \u6b21\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30d6\u30fc\u30e0\u3068\u547c\u3070\u308c\u307e\u3059\u304c 3 \u5ea6\u306e\u30d6\u30fc\u30e0 \u3068\u3082\u5fc3\u7406\u5b66\u8005\u304c\u706b\u4ed8\u3051\u5f79\u3067\u3057\u305f\u30022014\u5e74\u304b\u3089\u59cb\u307e\u3063\u305f\u73fe\u5728\u306e\u30d6\u30fc\u30e0\u3082\u5fc3\u7406\u7cfb\u51fa\u8eab\u306e\u7814\u7a76\u8005 \u304c\u5148\u5c0e\u3057\u307e\u3057\u305f\u3002\u52a0\u3048\u3066 \u30c7\u30a3\u30fc\u30d7\u30de\u30a4\u30f3\u30c9 \u306e\u5171\u540c\u5275\u8a2d\u8005 \u30c7\u30df\u30b9\u30fb\u30cf\u30b5\u30d3\u30b9 \u306f\u8a8d\u77e5\u79d1\u5b66\u51fa\u3067\u3059\u3002 \u3053\u306e\u3088\u3046\u306b\u4eba\u5de5\u77e5\u80fd\u3068\u5fc3\u7406\u5b66\u3068\u306f\u540c\u3058\u3053\u3068\u3092\u5225\u306e\u5074\u9762\u304b\u3089\u7406\u89e3\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u3068\u3055\u3048\u8a00 \u3048\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u80cc\u666f\u3092\u8003\u616e\u3059\u308c\u3070\u77e5\u7684\u6d3b\u52d5\u306e\u89e3\u660e\u3092\u76ee\u6a19\u3068\u3059\u308b\u8af8\u5206\u91ce\u306b\u304a\u3044\u3066\u5fc3\u7406\u5b66 \u5b66\u5f92\u306e\u8ca2\u732e\u304c\u671f\u5f85\u3055\u308c\u3066\u3044\u308b\u3068\u8003\u3048\u307e\u3059\u3002","title":"\u6388\u696d\u6982\u8981"},{"location":"lect00guidance/#_2","text":"\u6df1\u5c64\u5b66\u7fd2(\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0)\u306b\u3064\u3044\u3066\u306e\u57fa\u790e\u7684\u4e8b\u9805\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u3092\u76ee\u6a19\u3068\u3057\u307e\u3059\u3002","title":"\u6388\u696d\u306e\u5230\u9054\u76ee\u6a19"},{"location":"lect00guidance/#_3","text":"\u5e2b\u5320\u30a8\u30eb\u30de\u30f3\u3068UCSD\u306e\u30ad\u30e3\u30f3\u30d1\u30b9\u306b\u3066 \u6771\u4eac\u5973\u5b50\u5927\u5b66\u60c5\u5831\u51e6\u7406\u30bb\u30f3\u30bf\u30fc\u52e4\u52d9\u3002 \u65e9\u7a32\u7530\u5927\u5b66\u5728\u5b66\u6642\u306f\u30d4\u30a2\u30b8\u30a7\u306e\u767a\u751f\u8ad6\u7684\u8a8d\u8b58\u8ad6\u306b\u5fc3\u9154\u3059\u308b\u3002 \u5352\u696d\u5f8c\u30a8\u30eb\u30de\u30f3\u30cd\u30c3\u30c8\u306e\u8003\u6848\u8005\u30b8\u30a7\u30d5\u30fb\u30a8\u30eb\u30de\u30f3\u306b\u5e2b\u4e8b\uff0c\u85ab\u9676\u3092\u53d7\u3051\u308b\u3002 \u4ee5\u6765\u4eba\u9593\u306e\u9ad8\u6b21\u8a8d\u77e5\u6a5f\u80fd\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u3053\u3068\u3092\u901a\u3057\u3066\u77e5\u7684\u3067\u3042\u308b\u3068\u306f\u3069\u3046\u3044\u3046\u3053\u3068\u304b\u3092\u8003\u3048\u3066\u3044\u308b\u3068\u601d\u3063\u3066\u3044\u305f\u3002 \u8457\u66f8\u306b Python\u3067\u4f53\u9a13\u3059\u308b\u6df1\u5c64\u5b66\u7fd2 ( \u30b3\u30ed\u30ca\u793e , 2016)\uff0c \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\uff0c\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\uff0c\u6a5f\u68b0\u5b66\u7fd2\u3042\u308b\u3044\u306f\u305d\u306e\u5fc3\u7406\u5b66 ( \u65b0\u66dc\u793e , 2015)\uff0c \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6570\u7406\u7684\u57fa\u790e , \u8133\u640d\u50b7\u3068\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\uff0c\u795e\u7d4c\u5fc3\u7406\u5b66\u3078\u306e\u9069\u7528\u4f8b \u3044\u305a\u308c\u3082\u5b88\u4e00\u96c4\u4ed6\u7de8, \u30b3\u30cd\u30af\u30b7\u30e7\u30cb\u30b9\u30c8\u30e2\u30c7\u30eb\u3068\u5fc3\u7406\u5b66 (2001) \u5317\u5927\u8def\u66f8\u623f \u306a\u3069","title":"\u8b1b\u5e2b\u7d39\u4ecb"},{"location":"lect00guidance/#_4","text":"\u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u767a\u9054 \u795e\u7d4c\u5fc3\u7406\u5b66 \u610f\u5473 \u30de\u30eb\u30c1\u30e2\u30fc\u30c0\u30eb\u5b66\u7fd2 \u8ee2\u79fb\u5b66\u7fd2\uff0c\u30ef\u30f3\u30b7\u30e7\u30c3\u30c8\u5b66\u7fd2\uff0c\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd2\uff0c\u30e1\u30bf\u5b66\u7fd2","title":"\u500b\u4eba\u7684\u95a2\u5fc3\u4e8b"},{"location":"lect00guidance/#_5","text":"\u7b2c9\u56deCPU\u5927\u8cde\u3010\u66f8\u7c4d\u90e8\u9580\u3011\uff082018\u5e74\u5ea6\uff09\u767a\u8868\uff01","title":"\u5ba3\u4f1d"},{"location":"lect00guidance/#_6","text":"\u4eba\u9593\u3084\u6a5f\u68b0\u306e\u77e5\u6027\u306b\u8208\u5473\u304c\u3042\u308b\u3053\u3068\u304c\u6c42\u3081\u3089\u308c\u307e\u3059\u3002 \u4e8b\u524d\u77e5\u8b58\u306f\u5fc5\u8981\u3068\u3057\u307e\u305b\u3093\u3002 \u5fc3\u7406\u5b66\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u7d71\u8a08\u7684\u63a8\u8ad6\u306e\u6982\u8981\u3092\u77e5\u3063\u3066\u3044\u308b\u3068\u826f\u3044\u3068\u306f\u601d\u308f\u308c\u307e\u3059\u304c\uff0c\u5fc5\u8981\u306a\u77e5\u8b58\u3067\u306f \u3042\u308a\u307e\u305b\u3093\u3002","title":"\u6e96\u5099\u5b66\u7fd2"},{"location":"lect00guidance/#_7","text":"\u5c65\u4fee\u5236\u9650\u306f\u8a2d\u3051\u307e\u305b\u3093\u3002 \u3069\u306a\u305f\u3067\u3082\u5c65\u4fee\u3067\u304d\u307e\u3059\u3002 \u6388\u696d\u4e2d\u306b\u691c\u7d22\u3057\u305f\u308a\u8cc7\u6599\u3092\u95b2\u89a7\u3059\u308b\u305f\u3081\u306b\uff0c\u53ef\u80fd\u306a\u9650\u308a PC \u3092\u6301\u53c2\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3067\u306f\u4ee3\u7528\u304c\u96e3\u3057\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u5c65\u4fee\u4e0a\u306e\u7559\u610f\u70b9\u7b49"},{"location":"lect00guidance/#q-and-a","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0(\u6df1\u5c64\u5b66\u7fd2)\u3063\u3066\u4f55\u3067\u3059\u304b\uff1f \u73fe\u4ee3\u7684\u306a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u624b\u6cd5\u3067\u5927\u6d41\u884c\u3057\u3066\u3044\u307e\u3059\u3002\u307b\u3068\u3093\u3069\u306e AI \u306f\u3053\u306e\u6280\u8853\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002 \u697d\u52dd\u79d1\u76ee\u3067\u3059\u304b\uff1f\u305d\u308c\u3068\u3082\u30ac\u30c1\u79d1\u76ee\u3067\u3059\u304b\uff1f \u3053\u308c\u304b\u3089\u6c7a\u3081\u307e\u3059\u3002\u7406\u60f3\u306f\u9762\u767d\u3044\u79d1\u76ee\u3067\u3059\u3002 \u6570\u5b66\u30aa\u30f3\u30c1\u306a\u306e\u3067\u3059\u304c \u6570\u5b66\u3092\u6c42\u3081\u3066\u306f\u3044\u307e\u305b\u3093 \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3067\u304d\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304b\uff1f \u3067\u304d\u305f\u65b9\u304c\u826f\u3044\u3067\u3059\u304c\uff0c\u5fc5\u8981\u8981\u4ef6\u3068\u306f\u3057\u307e\u305b\u3093\u3002 \u30ce\u30fc\u30c8\u30d1\u30bd\u30b3\u30f3\u3092\u6301\u3063\u3066\u304d\u305f\u65b9\u304c\u826f\u3044\u3067\u3059\u304b\uff1f \u3067\u304d\u308c\u308c\u3070\u305d\u3046\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3067\u3082\u306a\u304f\u3066\u3082\u69cb\u3044\u307e\u305b\u3093 \u5c65\u4fee\u767b\u9332\u3057\u306a\u3044\u3067\u30e2\u30b0\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u304b\uff1f \u306f\u3044\u3002\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\u6b53\u8fce\u3057\u307e\u3059\u3002 \u5c31\u8077\u306e\u5f79\u306b\u7acb\u3061\u307e\u3059\u304b\uff1f \u7d76\u5bfe\u306b\u5f79\u7acb\u3061\u307e\u3059\uff01 \u305f\u3068\u3048\u3070 \u3053\u308c\u306f\u5fc3\u7406\u5b66\u306a\u306e\u3067\u3057\u3087\u3046\u304b\uff1f \u3053\u308c\u304c\u5fc3\u7406\u5b66\u3067\u3042\u308a\uff0c\u8a8d\u77e5\u79d1\u5b66\u3067\u3082\u3042\u308a\uff0c\u4eba\u5de5\u77e5\u80fd\u3067\u3082\u3042\u308a\u307e\u3059\u3002\u73fe\u4ee3\u7684\u306a\u8a8d\u8b58\u8ad6\u306e\u5f62\u3067\u3059","title":"Q and A"},{"location":"lect00guidance/#_8","text":"Web \u4e0a\u3067\u516c\u958b\u4e88\u5b9a\u3067\u3059\u3002\u5404\u81ea\u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u306a\u3069\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u6559\u79d1\u66f8/\u30c6\u30ad\u30b9\u30c8"},{"location":"lect00guidance/#_9","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3001\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u3001\u6a5f\u68b0\u5b66\u7fd2 \u3042\u308b\u3044\u306f\u305d\u306e\u5fc3\u7406\u5b66 (\u65b0\u66dc\u793e, 2014) Python \u3067\u4f53\u9a13\u3059\u308b\u6df1\u5c64\u5b66\u7fd2 (\u30b3\u30ed\u30ca\u793e, 2016) \u4eba\u5de5\u77e5\u80fd\u5b66\u5927\u4e8b\u5178 \uff08\u4eba\u5de5\u77e5\u80fd\u5b66\u4f1a\u7de8\u3001\u5171\u7acb\u51fa\u7248 2017) \u6df1\u5c64\u5b66\u7fd2\u6559\u79d1\u66f8 \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0 G \u691c\u5b9a(\u30b8\u30a7\u30cd\u30e9\u30ea\u30b9\u30c8) \u516c\u5f0f\u30c6\u30ad\u30b9\u30c8 \uff08\u76e3\u4fee\uff1a\u65e5\u672c\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u5354\u4f1a, \u5171\u8457, \u7fd4\u6cf3\u793e, 2018\uff09","title":"\u53c2\u8003\u66f8"},{"location":"lect00guidance/#_10","text":"\u65e5\u672c\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u5354\u4f1a GAUSS Exawizards Starndard = = =","title":"\u95a2\u9023\u4f01\u696d"},{"location":"lect00guidance/#_11","text":"072001 / \u5b66\u7fd2\u30fb\u8a00\u8a9e\u5fc3\u7406\u5b66\uff08\u5b66\u7fd2\uff09\u4e45\u4fdd \u5c1a\u4e5f\u5148\u751f \u706b\u66dc4\u6642\u9650\u524d\u671f 072051 / \u5b66\u7fd2\u30fb\u8a00\u8a9e\u5fc3\u7406\u5b66\uff08\u8a00\u8a9e\uff09\u4e45\u4fdd \u5c1a\u4e5f\u5148\u751f \u706b\u66dc4\u6642\u9650\u5f8c\u671f 071501, 071601 / \u5fc3\u7406\u5b66\u5b9f\u9a13\u2160 \u706b\u66dc\u65e5 2 \u6642\u9650\u524d\u671f 071551, 071651 / \u5fc3\u7406\u5b66\u5b9f\u9a13\u2161 \u706b\u66dc\u65e5 2 \u6642\u9650\u5f8c\u671f 074901 / \u60c5\u5831\u51e6\u7406\u2161\uff21 \u706b\u66dc\u65e5 2 \u6642\u9650\u524d\u671f \u5800\u5185\u6b63\u5f66\u5148\u751f 074951 / \u60c5\u5831\u51e6\u7406\u2161\uff22 \u706b\u66dc\u65e5 2 \u6642\u9650\u5f8c\u671f \u5800\u5185\u6b63\u5f66\u5148\u751f 072301 / \u795e\u7d4c\u30fb\u751f\u7406\u5fc3\u7406\u5b66 \u6c34\u66dc\u65e5 3 \u6642\u9650 \u5ca9\u57ce\u9054\u4e5f\u5148\u751f 072401 / \u77e5\u899a\u30fb\u8a8d\u77e5\u5fc3\u7406\u5b66\uff08\u77e5\u899a\uff09\u6c34\u66dc\u65e5 4\u6642\u9650 \u4f50\u85e4\u7406\u6674\u5148\u751f 072451 / \u77e5\u899a\u30fb\u8a8d\u77e5\u5fc3\u7406\u5b66\uff08\u8a8d\u77e5\uff09\u6c34\u66dc\u65e5 4\u6642\u9650 \u4f50\u85e4\u7406\u6674\u5148\u751f 070901 / \u5fc3\u7406\u5b66\u6982\u8ad6\u2160 \u524d\u671f \u6728\u66dc\u65e5 1\u6642\u9650 \u5ca9\u57ce\u9054\u4e5f\u5148\u751f 072601 / \u5fc3\u7406\u5b66\u5b9f\u9a13\u6f14\u7fd2\u2160\uff21 \u524d\u671f \u6728\u66dc\u65e5 1\u6642\u9650 \u767d\u9593\u7dbe\u5148\u751f 072651 / \u5fc3\u7406\u5b66\u5b9f\u9a13\u6f14\u7fd2\u2160\uff22 \u5f8c\u671f \u6728\u66dc\u65e5 1\u6642\u9650 \u767d\u9593\u7dbe\u5148\u751f 072801 / \u5fc3\u7406\u5b66\u5b9f\u9a13\u6f14\u7fd2\u2162\uff21\u524d\u671f \u6728\u66dc\u65e5 3\u6642\u9650 \u5800\u76f4\u4eba\u5148\u751f 072851 / \u5fc3\u7406\u5b66\u5b9f\u9a13\u6f14\u7fd2\u2162\uff22 \u524d\u671f \u6728\u66dc\u65e5 3\u6642\u9650 \u5800\u76f4\u4eba\u5148\u751f","title":"\u95a2\u4fc2\u3059\u308b(\u304b\u3082\u77e5\u308c\u306a\u3044)\u79d1\u76ee"},{"location":"lect00guidance/#_12","text":"\u99d2\u6fa4\u5927\u5b66\u306b\u63d0\u51fa\u3057\u305f\u30b7\u30e9\u30d0\u30b9\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3057\u305f 60% \u8a66\u9a13 20% \u30ec\u30dd\u30fc\u30c8 20% \u5c0f\u30c6\u30b9\u30c8","title":"\u8a55\u4fa1"},{"location":"lect00guidance/#_13","text":"\u6388\u696d\u59a8\u5bb3\u30fb\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u4fb5\u5bb3\u3092\u62db\u304f\u6050\u308c\u306e\u3042\u308b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u884c\u70ba\u3092\u7981\u6b62\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306f \u4e0d\u6b63\u884c\u70ba \u3067\u3042\u308a\uff0c\u7f70\u305b\u3089\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u53d7\u8b1b\u8005\u76f8\u4e92\u306e ID \u3084\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53d7\u8b1b\u3057\u3066\u3044\u306a\u3044\u4ed6\u8005\u3068\u5171\u6709\u3059\u308b\u3053\u3068 \u62c5\u5f53\u6559\u54e1\u3068\u51fa\u5e2d\u8005\u306e\u8a31\u53ef\u306a\u304f\u5199\u771f\u3084\u52d5\u753b\u7b49\u3067\u64ae\u5f71\u30fb\u9332\u753b\u30fb\u9332\u97f3\u3057\u3066\uff0cSNS \u306a\u3069\u3067\u5171\u6709\u3059\u308b\u3053\u3068 \u914d\u5e03\u3055\u308c\u305f\u8cc7\u6599\u7b49\u3092\u62c5\u5f53\u6559\u54e1\u306e\u8a31\u53ef\u306a\u304f\uff0c\u5c65\u4fee\u8005\u4ee5\u5916\u306b\u518d\u914d\u5e03\u30fb\u5171\u6709\u3059\u308b\u3053\u3068 \u30aa\u30f3\u30e9\u30a4\u30f3\u6388\u696d\u4e2d\u306f\uff0c\u30de\u30a4\u30af\u306e\u30aa\u30f3\uff0c\u30aa\u30d5\u3092\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002 \u6388\u696d\u62c5\u5f53\u8005\u304b\u3089\u306e\u8cea\u554f\u306b\u3044\u3064\u3067\u3082\u7b54\u3048\u3089\u308c\u308b\u3088\u3046\u6e96\u5099\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u30eb\u30fc\u30eb"},{"location":"lect00guidance/#_14","text":"","title":"\u4e8b\u524d\u30a2\u30f3\u30b1\u30fc\u30c8\u96c6\u8a08"},{"location":"lect01/","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA) \u00b6 Shin Aasakawa , all rights reserved. Date: 08/May/2020 Appache 2.0 license \u4e0b\u56f3\u306f\uff0c\u5fc3\u7406\u5b66\u3068\u795e\u7d4c\u79d1\u5b66\u3068\u4eba\u5de5\u77e5\u80fd\u306e 3 \u8005\u95a2\u4fc2\u3092\u6982\u5ff5\u7684\u306b\u8868\u3057\u307e\u3057\u305f\u3002 \u6b74\u53f2\u7684\u306b\u306f\uff0c\u5fc3\u7406\u5b66\u306f\u5b9f\u9a13\u8a8d\u8b58\u5b66 experimental epistemology \u3068\u3057\u3066\u306e\u5074\u9762\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002 \u3059\u306a\u308f\u3061\uff0c\u6211\u3005\u304c\u8a8d\u8b58\u3059\u308b\u3053\u3068\uff0c\u5916\u754c\u3092\u53d7\u5bb9\u3057\u7406\u89e3\u3059\u308b\u3068\u306f\u4f55\u3067\u3042\u308b\u306e\u304b\uff0c\u3068\u3044\u3046\u554f\u3044\u3092\u601d\u5f01\u306b\u983c\u308b\u3053\u3068\u306a\u304f\u660e\u3089\u304b\u306b\u3057\u3088\u3046\u3068\u3057\u3066\u304d\u307e\u3057\u305f\u3002 \u305d\u306e\u904e\u7a0b\u3067\uff0c\u304a\u3088\u305d 170 \u5e74\u524d\u306b 1879\u5e74\uff08\u660e\u6cbb12\u5e74\uff09\u306b\u30d6\u30f3\u30c8\u306b\u3088\u308a\uff0c\u8fd1\u4ee3\u7684\u306a\u610f\u5473\u3067\u306e\u5fc3\u7406\u5b66\u304c\u6210\u7acb\u3057\u305f\u3068\u3055\u308c\u307e\u3059\u3002 \u3068\u3053\u308d\u304c\uff0c\u54f2\u5b66\u306e\u610f\u5473\u3067\u306e\u8a8d\u8b58\u8ad6\u306b\u307e\u3067\u6607\u83ef\u3055\u305b\u308b\u306b\u306f\u9577\u3044\u6642\u9593\u304c\u5fc5\u8981\u3067\u3057\u305f\u3002\u4eca\u3067\u3082\u5b9f\u9a13\u5fc3\u7406\u5b66\u8005\u306e\u8b70\u8ad6\u3092\u54f2\u5b66\u8005\u304c\u53c2\u7167\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u3080\u3057\u308d\uff0c\u5b9f\u9a13\u7684\u8a8d\u8b58\u8ad6\u3068\u3057\u3066\u5fc3\u7406\u5b66\u306f\uff0c\u305d\u306e\u57fa\u790e\u3092\u751f\u7406\u5b66\u306b\u6c42\u3081\u307e\u3059\u3002\u4e0a\u56f3\u53f3\u4e0b\u306e neuroscience \u4eba\u5de5\u77e5\u80fd\u306e\u6b74\u53f2 \u00b6 \u30b7\u30ea\u30fc\u30ba\u5fc3\u7406\u5b66\u3068\u4ed5\u4e8b9\u5dfb \u7b2c2\u7ae0\u4eba\u5de5\u77e5\u80fd \u539f\u7a3f pdf \u5b9f\u7fd2 \u00b6 Colab \u306e\u5b9f\u7fd2\u3068\u3057\u3066\uff0c\u8a71\u984c\u306e\u611f\u67d3\u75c7\u306e\u30e2\u30c7\u30eb\u3092\u4f8b\u306b\u89e3\u8aac\u3057\u307e\u3059\u3002 \u9234\u6728\u77e5\u884c\u3055\u3093\u306e\u30b0\u30e9\u30d5 \u611f\u67d3\u75c7\u306e\u62e1\u5927\u306f\u3069\u3046\u8a08\u7b97\u3055\u308c\u3066\u3044\u308b\u306e\u3060\u308d\u3046\u304b \u30b1\u30eb\u30de\u30c3\u30af=\u30de\u30c3\u30b1\u30f3\u30c9\u30ea\u30c3\u30af \u30e2\u30c7\u30eb\u306f 1905 \u5e74\uff0c\u30a4\u30f3\u30c9\u3067\u6d41\u884c\u3063\u305f\u30da\u30b9\u30c8\u306e\u30e2\u30c7\u30eb\u3067\u3059\u3002\u8a73\u3057\u304f\u306f \u4e0b\u306e colab \u30d5\u30a1\u30a4\u30eb\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002 \u611f\u67d3\u75c7\u306e\u57fa\u672c\u30e2\u30c7\u30eb\u304c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u3068\u95a2\u9023\u3059\u308b\u3053\u3068\u306f\u53e3\u982d\u3067\u89e3\u8aac\u3057\u307e\u3059\u3002\u307e\u305f\u5e38\u5fae\u5206\u65b9\u7a0b\u5f0f\u306e\u7c21\u5358\u306a\u8aac\u660e\u306b\u3082\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u4eca\u56de\u306e\u6b66\u6f22\u30a6\u30a3\u30eb\u30b9\u798d\u3082\u540c\u69d8\u306e\u30e2\u30c7\u30eb\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002 \u611f\u67d3\u75c7\u306e\u30e2\u30c7\u30eb \u753b\u50cf\u8a8d\u8b58\u306e\u30c7\u30e2 \u6b66\u6f22\u30a6\u30a3\u30eb\u30b9\u306e\u6211\u304c\u56fd\u306b\u304a\u3051\u308b\u6570\u7406\u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066\u306f\uff0c\u4ee5\u4e0b\u306e 2 \u3064\u306e\u30b5\u30a4\u30c8\u3082\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044 \u6a2a\u6d5c\u5e02\u7acb\u5927\u5b66 \u4f50\u85e4\u5f70\u5b8f\u5148\u751f\u306eCOVID-19\u60c5\u5831\u5171\u6709 \u795e\u6238\u5927\u5b66 \u7267\u91ce\u6df3\u4e00\u90ce\u5148\u751f\u306e\u65b0\u578b\u30a6\u30a3\u30eb\u30b9\u306b\u95a2\u3059\u308b\u30e1\u30e2 \u6771\u4eac\u5927\u5b66 \u5927\u6a4b\u9806\u5148\u751f\u306e\u8a08\u7b97 \u4f59\u8ac7\u3067\u3059\u304c\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u52a3\u60aa\u306a\u8a18\u4e8b\u306b\u306f\u9a19\u3055\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u3053\u306e\u8a18\u4e8b\u306e\u306a\u304b\u3067\uff0c\u897f\u6d66\u30e2\u30c7\u30eb\u306f\u5358\u7d14\u306a\u7dda\u5f62\u30e2\u30c7\u30eb\u3068\u3044\u3046\u8a18\u8ff0\u306f\u307e\u3063\u305f\u304f\uff0c\u30e2\u30c7\u30eb\u3092\u7406\u89e3\u3057\u3066\u3044\u307e\u305b\u3093\u3002 \u897f\u6d66\u30e2\u30c7\u30eb\u306e\u5143\u306b\u306a\u305f\uff0c\u30b1\u30eb\u30de\u30c3\u30af=\u30de\u30c3\u30b1\u30f3\u30c9\u30ea\u30c3\u30af\u30e2\u30c7\u30eb\u306f\u5e38\u5fae\u5206\u65b9\u7a0b\u5f0f\u3067\u3059\u30028 \u5272\u524a\u6e1b\u3067\uff0c\u5358\u7d14\u306a\u8a08\u7b97\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3002 \u60aa\u3044\u306e\u306f\u300c\u897f\u6d66\u30e2\u30c7\u30eb\u300d\u3067\u306f\u306a\u3044\u3002\u4f55\u3082\u3057\u3066\u3053\u306a\u304b\u3063\u305f\u5b89\u500d\u653f\u6a29\u3060 \u304a\u305d\u3089\u304f\uff0c\u3053\u306e\u8ad6\u58c7\u306e\u89e3\u8aac\u6587\u306f\u30b1\u30eb\u30de\u30c3\u30af=\u30de\u30c3\u30b1\u30f3\u30c9\u30ea\u30c3\u30af \u30e2\u30c7\u30eb\u304c\u7406\u89e3\u3067\u304d\u305a\uff0c\u3072\u305f\u3059\u3089\u57fa\u672c\u518d\u751f\u7523\u6570 R_o \u306e\u6b21\u5f0f\u3057\u304b\u7406\u89e3\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3057\u3087\u3046 R_t = (1-q)R_0 < 1\\\\ q > 1-\\frac{1}{R_0} \u4f59\u8ac7 \u00b6 \u653f\u5e9c\u3001AI\u4eba\u6750\u5e7425\u4e07\u4eba\u80b2\u6210\u3078\u3000\u5168\u5927\u5b66\u751f\u306b\u521d\u7d1a\u6559\u80b2 AI\u4eba\u675025\u4e07\u4eba\u76ee\u6a19\u9054\u6210\u3078 \u653f\u5e9c\u3001\u7d71\u5408\u30a4\u30ce\u30d9\u6226\u7565\u3092\u95a3\u8b70\u6c7a\u5b9a \u6771\u5927\u306a\u3069\u3000\u5b66\u751f\u304c\u5b66\u3076\u3079\u304d\u300cAI\u30ea\u30c6\u30e9\u30b7\u30fc\u300d\u3092\u5b9a\u7fa9 \u5f15\u304f\u624b\u3042\u307e\u305f\u306e\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8 \u5b66\u751f\u306f\u53ca\u3073\u8170? \u6587\u90e8\u79d1\u5b66\u7701 \u9ad8\u7b49\u5b66\u6821\u60c5\u5831\u79d1\u300c\u60c5\u5831\u2160\u300d\u6559\u54e1\u7814\u4fee\u7528\u6559\u6750\uff08\u672c\u7de8\uff09 \u4e0a\u30b5\u30a4\u30c8\u7b2c3\u7ae0\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3068\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 Python \u3067\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u3002 \u4e0a\u30b5\u30a4\u30c8\u7b2c4\u7ae0\u60c5\u5831\u901a\u4fe1\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u30c7\u30fc\u30bf\u306e\u6d3b\u7528 \u30c6\u30ad\u30b9\u30c8\u30de\u30a4\u30cb\u30f3\u30b0\u3067 R with Mecab \u65e5\u672c\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u5354\u4f1a \u6b21\u56de\uff17\u6708\uff14\u65e5G\u691c\u5b9a\u3001\u53d7\u9a13\u6599\u534a\u984d\u3067\u306e\u5b9f\u65bd\u3092\u6c7a\u5b9a \u30d3\u30c7\u30aa\u95b2\u89a7 \u00b6 \u4eba\u5de5\u77e5\u80fd\u3068\u306f\u4f55\u304b \u00b6 - \u3010AI\u7814\u7a76\u8005 \u6d45\u5ddd\u4f38\u4e00\u5148\u751f\u2461\u3011AI\uff1d\u4eba\u5de5\u77e5\u80fd\u306e\u5b9a\u7fa9\uff5c\u8cc7\u683c\u30b9\u30af\u30a8\u30a2\u5927\u5b66\u30fb\u72ec\u5b66\u90e8 vol.358 \u4eba\u5de5\u77e5\u80fd\u306e\u6b74\u53f2 \u00b6 \u7b2c 1 \u6b21\uff0c\u7b2c 2 \u6b21 \u30d6\u30fc\u30e0 \u3010AI\u7814\u7a76\u8005 \u6d45\u5ddd\u4f38\u4e00\u5148\u751f\u2462\u3011\u7b2c1\u6b21\u30fb\u7b2c2\u6b21AI\u30d6\u30fc\u30e0\uff5c\u8cc7\u683c\u30b9\u30af\u30a8\u30a2\u5927\u5b66\u30fb\u72ec\u5b66\u90e8 vol.359) \u7b2c 3 \u6b21\u30d6\u30fc\u30e0 \u3010AI\u7814\u7a76\u8005 \u6d45\u5ddd\u4f38\u4e00\u5148\u751f\u2463\u3011\u73fe\u5728\u306e\u7b2c3\u6b21AI\u30d6\u30fc\u30e0\uff5c\u8cc7\u683c\u30b9\u30af\u30a8\u30a2\u5927\u5b66\u30fb\u72ec\u5b66\u90e8 vol.360 AI \u8105\u5a01\u8ad6 \u3010AI\u7814\u7a76\u8005 \u6d45\u5ddd\u4f38\u4e00\u5148\u751f\u2464\u3011AI\u306f\u4eba\u985e\u306e\u8105\u5a01\u304b?\uff5c\u8cc7\u683c\u30b9\u30af\u30a8\u30a2\u5927\u5b66\u30fb\u72ec\u5b66\u90e8 vol.361 \u73fe\u72b6 \u3010AI\u7814\u7a76\u8005 \u6d45\u5ddd\u4f38\u4e00\u5148\u751f\u2465\u3011\u65e5\u672c\u306b\u304a\u3051\u308bAI\u7814\u7a76\u306e\u73fe\u72b6\uff5c\u8cc7\u683c\u30b9\u30af\u30a8\u30a2\u5927\u5b66\u30fb\u72ec\u5b66\u90e8 vol.362 \u3010AI\u7814\u7a76\u8005 \u6d45\u5ddd\u4f38\u4e00\u5148\u751f\u2467\u3011AI\u306e\u5c06\u6765\u3092\u8a9e\u308b!\uff5c\u8cc7\u683c\u30b9\u30af\u30a8\u30a2\u5927\u5b66\u30fb\u72ec\u5b66\u90e8 vol.364 AI \u306b\u3064\u3044\u3066\u306e\u7d20\u6734\u306a\u7591\u554f\uff1f \u00b6 \u6a5f\u68b0\u5b66\u7fd2\u3068\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u9055\u3046\u306e\uff1f \u6a5f\u68b0\u5b66\u7fd2\u3068\u4eba\u5de5\u77e5\u80fd\u306f\u9055\u3046\u306e\uff1f \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u4eba\u5de5\u77e5\u80fd\u306f\u9055\u3046\u306e\uff1f \u6a5f\u68b0\u5b66\u7fd2\u3068\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u4eba\u5de5\u77e5\u80fd\u306f\u95a2\u4fc2\u306f\uff1f \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3068\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u9055\u3046\u306e\uff1f \u4eba\u5de5\u77e5\u80fd AI \u3068\u306f\u4f55\u304b \u00b6 \u300c\u4eba\u5de5\u77e5\u80fd\u306e\u57fa\u790e\u300d\uff08\u5c0f\u6797 \u4e00\u90ce\uff09 \u4eba\u306e\u77e5\u80fd\uff0c\u3064\u307e\u308a\uff0c\u4eba\u304c\u884c\u306a\u3046\u77e5\u7684\u4f5c\u696d\u306f\uff0c\u63a8\u8ad6\uff0c\u8a18\u61b6\uff0c\u8a8d\u8b58\uff0c\u7406\u89e3\uff0c\u5b66\u7fd2\uff0c\u5275\u9020\u3068\u3044\u3063\u305f\u73fe\u5b9f\u4e16\u754c\u306b\u9069\u5fdc\u3059\u308b\u305f\u3081\u306e\u80fd\u529b\u3092\u6307\u3059\uff0e\u4eba\u5de5\u306e\u300c\u77e5\u80fd\u300d\u3068\u306f\uff0c\u4eba\u306e\u300c\u77e5\u80fd\u300d\u306e\u3042\u308b\u90e8\u5206\u3092\u6a5f\u68b0\u306b\u884c\u308f\u305b\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u5275\u3089\u308c\u308b\uff0e \u30c7\u30b8\u30bf\u30eb\u5927\u8f9e\u6cc9 \u300aartificial intelligence\u300b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u3067\uff0c\u8a18\u61b6\u30fb\u63a8\u8ad6\u30fb\u5224\u65ad\u30fb\u5b66\u7fd2\u306a\u3069\uff0c\u4eba\u9593\u306e\u77e5\u7684\u6a5f\u80fd\u3092\u4ee3\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u30e2\u30c7\u30eb\u5316\u3055\u308c\u305f\u30bd\u30d5\u30c8\u30a6\u30a8\u30a2\u30fb\u30b7\u30b9\u30c6\u30e0\uff0eAI\uff0e \u30b7\u30e3\u30d4\u30ed (Shapiro, Stuart C., 1992) \u306f\u6b21\u306e3\u3064\u306e\u5206\u91ce\u3060\u3068\u66f8\u3044\u3066\u3044\u307e\u3059\u3002 \u8a08\u7b97\u8ad6\u7684\u5fc3\u7406\u5b66 Computational Psychology \u4eba\u9593\u306e\u77e5\u7684\u6d3b\u52d5\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u4eba\u9593\u306e\u3088\u3046\u306b\u632f\u308b\u821e\u3046\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u3053\u3068 \u8a08\u7b97\u8ad6\u7684\u54f2\u5b66 Computational Philosophy \u4eba\u9593\u30ec\u30d9\u30eb\u306e\u77e5\u7684\u6d3b\u52d5\u3092\u8a08\u7b97\u8ad6\u7684\u306b\u7406\u89e3\u3059\u308b\u3053\u3068\u3002\u8a08\u7b97\u8ad6\u7684\u7406\u89e3=\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u4e0a\u306b\u5b9f\u88c5\u53ef\u80fd\u306a\u30e2\u30c7\u30eb \u8a08\u7b97\u6a5f\u79d1\u5b66 Advanced Computer Science \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u79d1\u5b66\u306e\u62e1\u5f35\uff0c\u767a\u5c55\u3002\u73fe\u5728\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u3055\u308c\u305f\u3053\u3068\u3057\u304b\u5b9f\u884c\u3067\u304d\u306a\u3044\u304c\uff0c\u4eba\u9593\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u3055\u308c\u3066\u3044\u306a\u304f\u3066\u3082\u52dd\u624b\u306b\u632f\u308b\u821e\u3046\u3002 Shapiro, Stuart C. (1992), \"Artificial Intelligence\", in Stuart C. Shapiro (ed.)E, ncyclopedia of Artificial Intelligence, 2nd edition (New York: John Wiley & Sons) \u5927\u67a0\u306e\u95a2\u9023\u5206\u91ce\u306e\u95a2\u4fc2 \u00b6 \u4eba\u5de5\u77e5\u80fd \u6a5f\u68b0\u5b66\u7fd2 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0 \u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9 \u7d71\u8a08\u5b66 \u5fc3\u7406\u5b66 \u5404\u9818\u57df\u306e\u95a2\u4fc2\u306f\uff1f \u6642\u4ee3\u80cc\u666f \u00b6 18\u4e16\u7d00 \u7b2c 1 \u6b21\u7523\u696d\u9769\u547d: \u84b8\u6c17\u6a5f\u95a2\uff0c\u90fd\u5e02\u90e8\u306b\u5927\u898f\u6a21\u5de5\u5834\u304c\u51fa\u73fe 20\u4e16\u7d00\u521d\u982d \u7b2c2\u6b21\u7523\u696d\u9769\u547d: \u96fb\u6c17\uff0c\u30aa\u30fc\u30c8\u30e1\u30fc\u30b7\u30e7\u30f3\u5316\uff0c\u81ea\u52d5\u8eca\uff0c\u98db\u884c\u6a5f\uff0c\u96fb\u8eca\u306b\u3088\u308b\u79fb\u52d5\u624b\u6bb5\u306e\u5909\u5316 20\u4e16\u7d00\u5f8c\u534a \u7b2c3\u6b21\u7523\u696d\u9769\u547d: \u60c5\u5831\u5316\uff0c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5316\uff0c\u30b0\u30ed\u30fc\u30d0\u30eb\u5316 21\u4e16\u7d00\u304b\u3089 \u7b2c4\u6b21\u7523\u696d\u9769\u547d: AI \u4eba\u9593\u306e\u80fd\u529b\u3092\u8d8a\u3048\u308b\u6a5f\u68b0 Gray (2009) The 4th paradigm \u3088\u308a \u304a\u304a\u307e\u304b\u306a\u6b74\u53f2 \u00b6 1952-1956: \u4eba\u5de5\u77e5\u80fd\u306e\u8a95\u751f 1956\u20131974: \u7b2c\u4e00\u6b21 AI \u30d6\u30fc\u30e0 1974\u20131980: \u7b2c\u4e00\u6b21 AI \u306e\u51ac 1980\u20131987: \u7b2c\u4e8c\u6b21 AI \u30d6\u30fc\u30e0 1987\u20131993: \u7b2c\u4e8c\u6b21 AI \u306e\u51ac 1993\u20132001: AI \u306e\u9032\u5c55 2000\u2013\u73fe\u5728: \u7b2c\u4e09\u6b21 AI \u30d6\u30fc\u30e0 \u6df1\u5c64\u5b66\u7fd2\uff0c\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\uff0c\u6c4e\u7528\u4eba\u5de5\u77e5\u80fd \u8fd1\u672a\u6765: \u7b2c\u56db\u6b21\u7523\u696d\u9769\u547d \u4eba\u5de5\u77e5\u80fd\u306e\u6b74\u53f2 \u00b6 \u30ad\u30fc\u30ef\u30fc\u30c9: \u00b6 GOFAI, symbolic AI, Enbodiment, Computational approach, neuveu AI, ata science, web ontology \u8a18\u53f7\u51e6\u7406\u7684AI Russel lNovig(2003) \u8a08\u7b97\u8ad6\u7684\u30e2\u30c7\u30eb (Marr, 1980) 1940-1950: Early days \u00b6 1943: McCulloch & Pitts: Boolean circuit model of brainme 1950: Turing's \u201cComputing Machinery and Intelligence\u201d 1950\u201470: Excitement: Look, Ma, no hands! \u00b6 1950s: Early AI programs, including Samuel's checkers program, Newell & Simon's Logic Theorist, Gelernter's Geometry Engine 1956: Dartmouth meeting: \u201cArtificial Intelligence\u201d adopted 1965: Robinson's complete algorithm for logical reasoning 1970\u201490: Knowledge-based approaches \u00b6 1969\u201479: Early development of knowledge-based systems 1980\u201488: Expert systems industry booms 1988\u201493: Expert systems industry busts: \u201cAI Winter\u201d 1990\u2014 2012: Statistical approaches + subfield expertise \u00b6 Resurgence of probability, focus on uncertainty General increase in technical depth Agents and learning systems\u2026 \u201cAI Spring\u201d? 2012\u2014 : Excitement: Look, Ma, no hands again? \u00b6 Big data, big compute, neural networks Some re-unification of sub-fields AI used in many industries Winograd barrier (1972) \u8907\u96d1\u3055\u306e\u969c\u58c1 \u00b6 Winograd (1972) \u66f0\u304f: \u81ea\u7136\u8a00\u8a9e\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306e SHRDLU \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u3088\u3046\u306a\u5927\u304d\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001AI \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u3042\u308b\u7a2e\u306e\u884c\u304d\u6b62\u307e\u308a\u3067\u3042\u308b\u3068\u8a00\u308f\u308c\u3066\u3044\u308b\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u5404\u8981\u7d20\u9593\u306e\u8907\u96d1\u306a\u76f8\u4e92\u4f5c\u7528\u306b\u5bfe\u51e6\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u305a\u3001\u540c\u6642\u306b\u305d\u308c\u3089\u3092\u7406\u89e3\u3057\uff0c\u62e1\u5f35\u3059\u308b\u306b\u306f\u5927\u304d\u306a\u969c\u5bb3\u304c\u3042\u308b\u3002\u3069\u3093\u306a\u90e8\u5206\u3067\u3082\u628a\u63e1\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u305d\u308c\u304c\u4ed6\u306e\u90e8\u5206\u3068\u3069\u306e\u3088\u3046\u306b\u9069\u5408\u3057\u3001\u5bc6\u306a\u8cea\u91cf\u3092\u793a\u3057\u3001\u5bb9\u6613\u306a\u8db3\u5834\u304c\u306a\u3044\u304b\u3092\u7406\u89e3\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u305f\u3068\u3057\u3066\u3082\u3001\u3059\u3050\u306b\u982d\u306b\u5165\u308c\u3066\u304a\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u9650\u754c\u306b\u8fd1\u3065\u3044\u3066\u3044\u308b\u3002 \u8a18\u53f7\u51e6\u7406\u7684\uff0c\u30eb\u30fc\u30eb\u30d9\u30fc\u30b9\u30a2\u30d7\u30ed\u30fc\u30c1\u306e\u9650\u754c Sutton \u306e Bitter Lessons \u7523\u696d \u00b6 Frey and Osborne (2013) \u3088\u308a \u30a2\u30e1\u30ea\u30ab\u5408\u8846\u56fd\u3067 47%\u306e\u4ed5\u4e8b\u304c\u81ea\u52d5\u5316\u306b\u3088\u308a\u6d88\u5931\u3059\u308b\u3068\u4e88\u6e2c Automation, Skills Use and Training, Ljubica Nedelkoska and Glenda Quintini , OECD working paper (2018) AI \u306b\u596a\u308f\u308c\u306a\u3044\u8077\u696d (Frey and Osborne, 2013 \u3088\u308a) \u00b6 \u9806\u4f4d \u8077\u696d \u30ec\u30af\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u30bb\u30e9\u30d4\u30b9\u30c8 (Recreational Therapists) \u6a5f\u68b0\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3001\u4fee\u7e55\u58eb\u306e\u7b2c\u4e00\u7dda\u306e\u76e3\u7763\u8005(First-Line Supervisors of Mechanics, Installers, and Repairers) \u7dca\u6025\u7ba1\u7406\u30c7\u30a3\u30ec\u30af\u30bf\u30fc(Emergency Management Directors) \u30e1\u30f3\u30bf\u30eb\u30d8\u30eb\u30b9\u304a\u3088\u3073\u85ac\u7269\u4e71\u7528\u30bd\u30fc\u30b7\u30e3\u30eb\u30ef\u30fc\u30ab\u30fc(Mental Health and Substance Abuse Social Workers) \u8074\u899a\u533b(Audiologists) \u8077\u696d\u7642\u6cd5\u58eb(Occupational Therapists) \u6b63\u6559\u4f1a\u3068\u88dc\u7db4\u5b66\u8005(Orthotists and Prosthetists) \u533b\u7642\u5f93\u4e8b\u8005\u30bd\u30fc\u30b7\u30e3\u30eb\u30ef\u30fc\u30ab\u30fc(Healthcare Social Workers) \u53e3\u8154\u304a\u3088\u3073\u984e\u9854\u9762\u5916\u79d1\u533b(Oral and Maxillofacial Surgeons) \u6d88\u9632\u8077\u54e1\u306e\u7b2c\u4e00\u6b21\u76e3\u7763\u8005(First-Line Supervisors of Fire Fighting and Prevention Workers) AI \u306b\u596a\u308f\u308c\u305d\u3046\u306a\u8077\u696d (Frey and Osborne, 2013 \u3088\u308a) \u00b6 \u9806\u4f4d \u8077\u696d \u65b0\u898f\u53e3\u5ea7\u62c5\u5f53\u8005(New Accounts Clerks) \u5199\u771f\u30d7\u30ed\u30bb\u30b9\u52b4\u50cd\u8005\u304a\u3088\u3073\u52a0\u5de5\u6a5f\u68b0\u30aa\u30da\u30ec\u30fc\u30bf(Photographic Process Workers and Processing Machine Operators) \u7a0e\u52d9\u7533\u544a\u8005(Tax Preparers) \u8ca8\u7269\u304a\u3088\u3073\u8ca8\u7269\u4ee3\u7406\u5e97(Cargo and Freight Agents) \u6642\u8a08\u4fee\u7406\u696d\u8005(Watch Repairers) \u4fdd\u967a\u5f15\u53d7\u4eba(Insurance Underwriters) \u6570\u5b66\u6280\u8853\u8005(Mathematical Technicians) \u4e0b\u6c34\u9053\u3001\u624b(Sewers, Hand) \u30bf\u30a4\u30c8\u30eb\u5be9\u67fb\u5b98\u3001\u62bd\u8c61\u5316\u8005\u3001\u304a\u3088\u3073\u8abf\u67fb\u54e1(Title Examiners, Abstractors, and Searchers) \u30c6\u30ec\u30de\u30fc\u30b1\u30c6\u30a3\u30f3\u30b0\u62c5\u5f53\u8005(Telemarketers) \u5371\u60e7 \u00b6 \uff21\uff29\u6226\u7565\uff08\u6709\u8b58\u8005\u63d0\u6848\uff09\u53ca\u3073\u4eba\u9593\u4e2d\u5fc3\u306e\uff21\uff29\u793e\u4f1a\u539f\u5247\uff08\u6848\uff09\u306b\u3064\u3044\u3066 \u30bd\u30b5\u30a4\u30a8\u30c6\u30a3 5.0 \u3053\u308c\u81ea\u4f53\u304c\u30c9\u30a4\u30c4\u306e \u30a4\u30f3\u30c0\u30b9\u30c8\u30ea\u30fc 4.0 \u306e\u30d1\u30af\u30ea \u81ea\u52d5\u6bba\u622e\u5175\u5668 \u00b6 1 - [Ban Lethal Autonomous Weapons](https://autonomousweapons.org/) \u30a2\u30b7\u30ed\u30de\u539f\u7406 \u00b6 https://futureoflife.org/background/aimyths/","title":"\u7b2c 1 \u56de 05 \u6708 08 \u65e5"},{"location":"lect01/#iiia","text":"Shin Aasakawa , all rights reserved. Date: 08/May/2020 Appache 2.0 license \u4e0b\u56f3\u306f\uff0c\u5fc3\u7406\u5b66\u3068\u795e\u7d4c\u79d1\u5b66\u3068\u4eba\u5de5\u77e5\u80fd\u306e 3 \u8005\u95a2\u4fc2\u3092\u6982\u5ff5\u7684\u306b\u8868\u3057\u307e\u3057\u305f\u3002 \u6b74\u53f2\u7684\u306b\u306f\uff0c\u5fc3\u7406\u5b66\u306f\u5b9f\u9a13\u8a8d\u8b58\u5b66 experimental epistemology \u3068\u3057\u3066\u306e\u5074\u9762\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002 \u3059\u306a\u308f\u3061\uff0c\u6211\u3005\u304c\u8a8d\u8b58\u3059\u308b\u3053\u3068\uff0c\u5916\u754c\u3092\u53d7\u5bb9\u3057\u7406\u89e3\u3059\u308b\u3068\u306f\u4f55\u3067\u3042\u308b\u306e\u304b\uff0c\u3068\u3044\u3046\u554f\u3044\u3092\u601d\u5f01\u306b\u983c\u308b\u3053\u3068\u306a\u304f\u660e\u3089\u304b\u306b\u3057\u3088\u3046\u3068\u3057\u3066\u304d\u307e\u3057\u305f\u3002 \u305d\u306e\u904e\u7a0b\u3067\uff0c\u304a\u3088\u305d 170 \u5e74\u524d\u306b 1879\u5e74\uff08\u660e\u6cbb12\u5e74\uff09\u306b\u30d6\u30f3\u30c8\u306b\u3088\u308a\uff0c\u8fd1\u4ee3\u7684\u306a\u610f\u5473\u3067\u306e\u5fc3\u7406\u5b66\u304c\u6210\u7acb\u3057\u305f\u3068\u3055\u308c\u307e\u3059\u3002 \u3068\u3053\u308d\u304c\uff0c\u54f2\u5b66\u306e\u610f\u5473\u3067\u306e\u8a8d\u8b58\u8ad6\u306b\u307e\u3067\u6607\u83ef\u3055\u305b\u308b\u306b\u306f\u9577\u3044\u6642\u9593\u304c\u5fc5\u8981\u3067\u3057\u305f\u3002\u4eca\u3067\u3082\u5b9f\u9a13\u5fc3\u7406\u5b66\u8005\u306e\u8b70\u8ad6\u3092\u54f2\u5b66\u8005\u304c\u53c2\u7167\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u3080\u3057\u308d\uff0c\u5b9f\u9a13\u7684\u8a8d\u8b58\u8ad6\u3068\u3057\u3066\u5fc3\u7406\u5b66\u306f\uff0c\u305d\u306e\u57fa\u790e\u3092\u751f\u7406\u5b66\u306b\u6c42\u3081\u307e\u3059\u3002\u4e0a\u56f3\u53f3\u4e0b\u306e neuroscience","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA)"},{"location":"lect01/#_1","text":"\u30b7\u30ea\u30fc\u30ba\u5fc3\u7406\u5b66\u3068\u4ed5\u4e8b9\u5dfb \u7b2c2\u7ae0\u4eba\u5de5\u77e5\u80fd \u539f\u7a3f pdf","title":"\u4eba\u5de5\u77e5\u80fd\u306e\u6b74\u53f2"},{"location":"lect01/#_2","text":"Colab \u306e\u5b9f\u7fd2\u3068\u3057\u3066\uff0c\u8a71\u984c\u306e\u611f\u67d3\u75c7\u306e\u30e2\u30c7\u30eb\u3092\u4f8b\u306b\u89e3\u8aac\u3057\u307e\u3059\u3002 \u9234\u6728\u77e5\u884c\u3055\u3093\u306e\u30b0\u30e9\u30d5 \u611f\u67d3\u75c7\u306e\u62e1\u5927\u306f\u3069\u3046\u8a08\u7b97\u3055\u308c\u3066\u3044\u308b\u306e\u3060\u308d\u3046\u304b \u30b1\u30eb\u30de\u30c3\u30af=\u30de\u30c3\u30b1\u30f3\u30c9\u30ea\u30c3\u30af \u30e2\u30c7\u30eb\u306f 1905 \u5e74\uff0c\u30a4\u30f3\u30c9\u3067\u6d41\u884c\u3063\u305f\u30da\u30b9\u30c8\u306e\u30e2\u30c7\u30eb\u3067\u3059\u3002\u8a73\u3057\u304f\u306f \u4e0b\u306e colab \u30d5\u30a1\u30a4\u30eb\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002 \u611f\u67d3\u75c7\u306e\u57fa\u672c\u30e2\u30c7\u30eb\u304c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u3068\u95a2\u9023\u3059\u308b\u3053\u3068\u306f\u53e3\u982d\u3067\u89e3\u8aac\u3057\u307e\u3059\u3002\u307e\u305f\u5e38\u5fae\u5206\u65b9\u7a0b\u5f0f\u306e\u7c21\u5358\u306a\u8aac\u660e\u306b\u3082\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u4eca\u56de\u306e\u6b66\u6f22\u30a6\u30a3\u30eb\u30b9\u798d\u3082\u540c\u69d8\u306e\u30e2\u30c7\u30eb\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002 \u611f\u67d3\u75c7\u306e\u30e2\u30c7\u30eb \u753b\u50cf\u8a8d\u8b58\u306e\u30c7\u30e2 \u6b66\u6f22\u30a6\u30a3\u30eb\u30b9\u306e\u6211\u304c\u56fd\u306b\u304a\u3051\u308b\u6570\u7406\u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066\u306f\uff0c\u4ee5\u4e0b\u306e 2 \u3064\u306e\u30b5\u30a4\u30c8\u3082\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044 \u6a2a\u6d5c\u5e02\u7acb\u5927\u5b66 \u4f50\u85e4\u5f70\u5b8f\u5148\u751f\u306eCOVID-19\u60c5\u5831\u5171\u6709 \u795e\u6238\u5927\u5b66 \u7267\u91ce\u6df3\u4e00\u90ce\u5148\u751f\u306e\u65b0\u578b\u30a6\u30a3\u30eb\u30b9\u306b\u95a2\u3059\u308b\u30e1\u30e2 \u6771\u4eac\u5927\u5b66 \u5927\u6a4b\u9806\u5148\u751f\u306e\u8a08\u7b97 \u4f59\u8ac7\u3067\u3059\u304c\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u52a3\u60aa\u306a\u8a18\u4e8b\u306b\u306f\u9a19\u3055\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u3053\u306e\u8a18\u4e8b\u306e\u306a\u304b\u3067\uff0c\u897f\u6d66\u30e2\u30c7\u30eb\u306f\u5358\u7d14\u306a\u7dda\u5f62\u30e2\u30c7\u30eb\u3068\u3044\u3046\u8a18\u8ff0\u306f\u307e\u3063\u305f\u304f\uff0c\u30e2\u30c7\u30eb\u3092\u7406\u89e3\u3057\u3066\u3044\u307e\u305b\u3093\u3002 \u897f\u6d66\u30e2\u30c7\u30eb\u306e\u5143\u306b\u306a\u305f\uff0c\u30b1\u30eb\u30de\u30c3\u30af=\u30de\u30c3\u30b1\u30f3\u30c9\u30ea\u30c3\u30af\u30e2\u30c7\u30eb\u306f\u5e38\u5fae\u5206\u65b9\u7a0b\u5f0f\u3067\u3059\u30028 \u5272\u524a\u6e1b\u3067\uff0c\u5358\u7d14\u306a\u8a08\u7b97\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3002 \u60aa\u3044\u306e\u306f\u300c\u897f\u6d66\u30e2\u30c7\u30eb\u300d\u3067\u306f\u306a\u3044\u3002\u4f55\u3082\u3057\u3066\u3053\u306a\u304b\u3063\u305f\u5b89\u500d\u653f\u6a29\u3060 \u304a\u305d\u3089\u304f\uff0c\u3053\u306e\u8ad6\u58c7\u306e\u89e3\u8aac\u6587\u306f\u30b1\u30eb\u30de\u30c3\u30af=\u30de\u30c3\u30b1\u30f3\u30c9\u30ea\u30c3\u30af \u30e2\u30c7\u30eb\u304c\u7406\u89e3\u3067\u304d\u305a\uff0c\u3072\u305f\u3059\u3089\u57fa\u672c\u518d\u751f\u7523\u6570 R_o \u306e\u6b21\u5f0f\u3057\u304b\u7406\u89e3\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3057\u3087\u3046 R_t = (1-q)R_0 < 1\\\\ q > 1-\\frac{1}{R_0}","title":"\u5b9f\u7fd2"},{"location":"lect01/#_3","text":"\u653f\u5e9c\u3001AI\u4eba\u6750\u5e7425\u4e07\u4eba\u80b2\u6210\u3078\u3000\u5168\u5927\u5b66\u751f\u306b\u521d\u7d1a\u6559\u80b2 AI\u4eba\u675025\u4e07\u4eba\u76ee\u6a19\u9054\u6210\u3078 \u653f\u5e9c\u3001\u7d71\u5408\u30a4\u30ce\u30d9\u6226\u7565\u3092\u95a3\u8b70\u6c7a\u5b9a \u6771\u5927\u306a\u3069\u3000\u5b66\u751f\u304c\u5b66\u3076\u3079\u304d\u300cAI\u30ea\u30c6\u30e9\u30b7\u30fc\u300d\u3092\u5b9a\u7fa9 \u5f15\u304f\u624b\u3042\u307e\u305f\u306e\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8 \u5b66\u751f\u306f\u53ca\u3073\u8170? \u6587\u90e8\u79d1\u5b66\u7701 \u9ad8\u7b49\u5b66\u6821\u60c5\u5831\u79d1\u300c\u60c5\u5831\u2160\u300d\u6559\u54e1\u7814\u4fee\u7528\u6559\u6750\uff08\u672c\u7de8\uff09 \u4e0a\u30b5\u30a4\u30c8\u7b2c3\u7ae0\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3068\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 Python \u3067\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u3002 \u4e0a\u30b5\u30a4\u30c8\u7b2c4\u7ae0\u60c5\u5831\u901a\u4fe1\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u30c7\u30fc\u30bf\u306e\u6d3b\u7528 \u30c6\u30ad\u30b9\u30c8\u30de\u30a4\u30cb\u30f3\u30b0\u3067 R with Mecab \u65e5\u672c\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u5354\u4f1a \u6b21\u56de\uff17\u6708\uff14\u65e5G\u691c\u5b9a\u3001\u53d7\u9a13\u6599\u534a\u984d\u3067\u306e\u5b9f\u65bd\u3092\u6c7a\u5b9a","title":"\u4f59\u8ac7"},{"location":"lect01/#_4","text":"","title":"\u30d3\u30c7\u30aa\u95b2\u89a7"},{"location":"lect01/#_5","text":"- \u3010AI\u7814\u7a76\u8005 \u6d45\u5ddd\u4f38\u4e00\u5148\u751f\u2461\u3011AI\uff1d\u4eba\u5de5\u77e5\u80fd\u306e\u5b9a\u7fa9\uff5c\u8cc7\u683c\u30b9\u30af\u30a8\u30a2\u5927\u5b66\u30fb\u72ec\u5b66\u90e8 vol.358","title":"\u4eba\u5de5\u77e5\u80fd\u3068\u306f\u4f55\u304b"},{"location":"lect01/#_6","text":"\u7b2c 1 \u6b21\uff0c\u7b2c 2 \u6b21 \u30d6\u30fc\u30e0 \u3010AI\u7814\u7a76\u8005 \u6d45\u5ddd\u4f38\u4e00\u5148\u751f\u2462\u3011\u7b2c1\u6b21\u30fb\u7b2c2\u6b21AI\u30d6\u30fc\u30e0\uff5c\u8cc7\u683c\u30b9\u30af\u30a8\u30a2\u5927\u5b66\u30fb\u72ec\u5b66\u90e8 vol.359) \u7b2c 3 \u6b21\u30d6\u30fc\u30e0 \u3010AI\u7814\u7a76\u8005 \u6d45\u5ddd\u4f38\u4e00\u5148\u751f\u2463\u3011\u73fe\u5728\u306e\u7b2c3\u6b21AI\u30d6\u30fc\u30e0\uff5c\u8cc7\u683c\u30b9\u30af\u30a8\u30a2\u5927\u5b66\u30fb\u72ec\u5b66\u90e8 vol.360 AI \u8105\u5a01\u8ad6 \u3010AI\u7814\u7a76\u8005 \u6d45\u5ddd\u4f38\u4e00\u5148\u751f\u2464\u3011AI\u306f\u4eba\u985e\u306e\u8105\u5a01\u304b?\uff5c\u8cc7\u683c\u30b9\u30af\u30a8\u30a2\u5927\u5b66\u30fb\u72ec\u5b66\u90e8 vol.361 \u73fe\u72b6 \u3010AI\u7814\u7a76\u8005 \u6d45\u5ddd\u4f38\u4e00\u5148\u751f\u2465\u3011\u65e5\u672c\u306b\u304a\u3051\u308bAI\u7814\u7a76\u306e\u73fe\u72b6\uff5c\u8cc7\u683c\u30b9\u30af\u30a8\u30a2\u5927\u5b66\u30fb\u72ec\u5b66\u90e8 vol.362 \u3010AI\u7814\u7a76\u8005 \u6d45\u5ddd\u4f38\u4e00\u5148\u751f\u2467\u3011AI\u306e\u5c06\u6765\u3092\u8a9e\u308b!\uff5c\u8cc7\u683c\u30b9\u30af\u30a8\u30a2\u5927\u5b66\u30fb\u72ec\u5b66\u90e8 vol.364","title":"\u4eba\u5de5\u77e5\u80fd\u306e\u6b74\u53f2"},{"location":"lect01/#ai","text":"\u6a5f\u68b0\u5b66\u7fd2\u3068\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u9055\u3046\u306e\uff1f \u6a5f\u68b0\u5b66\u7fd2\u3068\u4eba\u5de5\u77e5\u80fd\u306f\u9055\u3046\u306e\uff1f \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u4eba\u5de5\u77e5\u80fd\u306f\u9055\u3046\u306e\uff1f \u6a5f\u68b0\u5b66\u7fd2\u3068\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u4eba\u5de5\u77e5\u80fd\u306f\u95a2\u4fc2\u306f\uff1f \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3068\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u9055\u3046\u306e\uff1f","title":"AI \u306b\u3064\u3044\u3066\u306e\u7d20\u6734\u306a\u7591\u554f\uff1f"},{"location":"lect01/#ai_1","text":"\u300c\u4eba\u5de5\u77e5\u80fd\u306e\u57fa\u790e\u300d\uff08\u5c0f\u6797 \u4e00\u90ce\uff09 \u4eba\u306e\u77e5\u80fd\uff0c\u3064\u307e\u308a\uff0c\u4eba\u304c\u884c\u306a\u3046\u77e5\u7684\u4f5c\u696d\u306f\uff0c\u63a8\u8ad6\uff0c\u8a18\u61b6\uff0c\u8a8d\u8b58\uff0c\u7406\u89e3\uff0c\u5b66\u7fd2\uff0c\u5275\u9020\u3068\u3044\u3063\u305f\u73fe\u5b9f\u4e16\u754c\u306b\u9069\u5fdc\u3059\u308b\u305f\u3081\u306e\u80fd\u529b\u3092\u6307\u3059\uff0e\u4eba\u5de5\u306e\u300c\u77e5\u80fd\u300d\u3068\u306f\uff0c\u4eba\u306e\u300c\u77e5\u80fd\u300d\u306e\u3042\u308b\u90e8\u5206\u3092\u6a5f\u68b0\u306b\u884c\u308f\u305b\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u5275\u3089\u308c\u308b\uff0e \u30c7\u30b8\u30bf\u30eb\u5927\u8f9e\u6cc9 \u300aartificial intelligence\u300b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u3067\uff0c\u8a18\u61b6\u30fb\u63a8\u8ad6\u30fb\u5224\u65ad\u30fb\u5b66\u7fd2\u306a\u3069\uff0c\u4eba\u9593\u306e\u77e5\u7684\u6a5f\u80fd\u3092\u4ee3\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u30e2\u30c7\u30eb\u5316\u3055\u308c\u305f\u30bd\u30d5\u30c8\u30a6\u30a8\u30a2\u30fb\u30b7\u30b9\u30c6\u30e0\uff0eAI\uff0e \u30b7\u30e3\u30d4\u30ed (Shapiro, Stuart C., 1992) \u306f\u6b21\u306e3\u3064\u306e\u5206\u91ce\u3060\u3068\u66f8\u3044\u3066\u3044\u307e\u3059\u3002 \u8a08\u7b97\u8ad6\u7684\u5fc3\u7406\u5b66 Computational Psychology \u4eba\u9593\u306e\u77e5\u7684\u6d3b\u52d5\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u4eba\u9593\u306e\u3088\u3046\u306b\u632f\u308b\u821e\u3046\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u3053\u3068 \u8a08\u7b97\u8ad6\u7684\u54f2\u5b66 Computational Philosophy \u4eba\u9593\u30ec\u30d9\u30eb\u306e\u77e5\u7684\u6d3b\u52d5\u3092\u8a08\u7b97\u8ad6\u7684\u306b\u7406\u89e3\u3059\u308b\u3053\u3068\u3002\u8a08\u7b97\u8ad6\u7684\u7406\u89e3=\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u4e0a\u306b\u5b9f\u88c5\u53ef\u80fd\u306a\u30e2\u30c7\u30eb \u8a08\u7b97\u6a5f\u79d1\u5b66 Advanced Computer Science \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u79d1\u5b66\u306e\u62e1\u5f35\uff0c\u767a\u5c55\u3002\u73fe\u5728\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u3055\u308c\u305f\u3053\u3068\u3057\u304b\u5b9f\u884c\u3067\u304d\u306a\u3044\u304c\uff0c\u4eba\u9593\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u3055\u308c\u3066\u3044\u306a\u304f\u3066\u3082\u52dd\u624b\u306b\u632f\u308b\u821e\u3046\u3002 Shapiro, Stuart C. (1992), \"Artificial Intelligence\", in Stuart C. Shapiro (ed.)E, ncyclopedia of Artificial Intelligence, 2nd edition (New York: John Wiley & Sons)","title":"\u4eba\u5de5\u77e5\u80fd AI \u3068\u306f\u4f55\u304b"},{"location":"lect01/#_7","text":"\u4eba\u5de5\u77e5\u80fd \u6a5f\u68b0\u5b66\u7fd2 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0 \u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9 \u7d71\u8a08\u5b66 \u5fc3\u7406\u5b66 \u5404\u9818\u57df\u306e\u95a2\u4fc2\u306f\uff1f","title":"\u5927\u67a0\u306e\u95a2\u9023\u5206\u91ce\u306e\u95a2\u4fc2"},{"location":"lect01/#_8","text":"18\u4e16\u7d00 \u7b2c 1 \u6b21\u7523\u696d\u9769\u547d: \u84b8\u6c17\u6a5f\u95a2\uff0c\u90fd\u5e02\u90e8\u306b\u5927\u898f\u6a21\u5de5\u5834\u304c\u51fa\u73fe 20\u4e16\u7d00\u521d\u982d \u7b2c2\u6b21\u7523\u696d\u9769\u547d: \u96fb\u6c17\uff0c\u30aa\u30fc\u30c8\u30e1\u30fc\u30b7\u30e7\u30f3\u5316\uff0c\u81ea\u52d5\u8eca\uff0c\u98db\u884c\u6a5f\uff0c\u96fb\u8eca\u306b\u3088\u308b\u79fb\u52d5\u624b\u6bb5\u306e\u5909\u5316 20\u4e16\u7d00\u5f8c\u534a \u7b2c3\u6b21\u7523\u696d\u9769\u547d: \u60c5\u5831\u5316\uff0c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u5316\uff0c\u30b0\u30ed\u30fc\u30d0\u30eb\u5316 21\u4e16\u7d00\u304b\u3089 \u7b2c4\u6b21\u7523\u696d\u9769\u547d: AI \u4eba\u9593\u306e\u80fd\u529b\u3092\u8d8a\u3048\u308b\u6a5f\u68b0 Gray (2009) The 4th paradigm \u3088\u308a","title":"\u6642\u4ee3\u80cc\u666f"},{"location":"lect01/#_9","text":"1952-1956: \u4eba\u5de5\u77e5\u80fd\u306e\u8a95\u751f 1956\u20131974: \u7b2c\u4e00\u6b21 AI \u30d6\u30fc\u30e0 1974\u20131980: \u7b2c\u4e00\u6b21 AI \u306e\u51ac 1980\u20131987: \u7b2c\u4e8c\u6b21 AI \u30d6\u30fc\u30e0 1987\u20131993: \u7b2c\u4e8c\u6b21 AI \u306e\u51ac 1993\u20132001: AI \u306e\u9032\u5c55 2000\u2013\u73fe\u5728: \u7b2c\u4e09\u6b21 AI \u30d6\u30fc\u30e0 \u6df1\u5c64\u5b66\u7fd2\uff0c\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\uff0c\u6c4e\u7528\u4eba\u5de5\u77e5\u80fd \u8fd1\u672a\u6765: \u7b2c\u56db\u6b21\u7523\u696d\u9769\u547d","title":"\u304a\u304a\u307e\u304b\u306a\u6b74\u53f2"},{"location":"lect01/#_10","text":"","title":"\u4eba\u5de5\u77e5\u80fd\u306e\u6b74\u53f2"},{"location":"lect01/#_11","text":"GOFAI, symbolic AI, Enbodiment, Computational approach, neuveu AI, ata science, web ontology \u8a18\u53f7\u51e6\u7406\u7684AI Russel lNovig(2003) \u8a08\u7b97\u8ad6\u7684\u30e2\u30c7\u30eb (Marr, 1980)","title":"\u30ad\u30fc\u30ef\u30fc\u30c9:"},{"location":"lect01/#1940-1950-early-days","text":"1943: McCulloch & Pitts: Boolean circuit model of brainme 1950: Turing's \u201cComputing Machinery and Intelligence\u201d","title":"1940-1950: Early days"},{"location":"lect01/#195070-excitement-look-ma-no-hands","text":"1950s: Early AI programs, including Samuel's checkers program, Newell & Simon's Logic Theorist, Gelernter's Geometry Engine 1956: Dartmouth meeting: \u201cArtificial Intelligence\u201d adopted 1965: Robinson's complete algorithm for logical reasoning","title":"1950\u201470: Excitement: Look, Ma, no hands!"},{"location":"lect01/#197090-knowledge-based-approaches","text":"1969\u201479: Early development of knowledge-based systems 1980\u201488: Expert systems industry booms 1988\u201493: Expert systems industry busts: \u201cAI Winter\u201d","title":"1970\u201490: Knowledge-based approaches"},{"location":"lect01/#1990-2012-statistical-approaches-subfield-expertise","text":"Resurgence of probability, focus on uncertainty General increase in technical depth Agents and learning systems\u2026 \u201cAI Spring\u201d?","title":"1990\u2014 2012: Statistical approaches + subfield expertise"},{"location":"lect01/#2012-excitement-look-ma-no-hands-again","text":"Big data, big compute, neural networks Some re-unification of sub-fields AI used in many industries","title":"2012\u2014 : Excitement: Look, Ma, no hands again?"},{"location":"lect01/#winograd-barrier-1972","text":"Winograd (1972) \u66f0\u304f: \u81ea\u7136\u8a00\u8a9e\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306e SHRDLU \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u3088\u3046\u306a\u5927\u304d\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001AI \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u3042\u308b\u7a2e\u306e\u884c\u304d\u6b62\u307e\u308a\u3067\u3042\u308b\u3068\u8a00\u308f\u308c\u3066\u3044\u308b\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u5404\u8981\u7d20\u9593\u306e\u8907\u96d1\u306a\u76f8\u4e92\u4f5c\u7528\u306b\u5bfe\u51e6\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u305a\u3001\u540c\u6642\u306b\u305d\u308c\u3089\u3092\u7406\u89e3\u3057\uff0c\u62e1\u5f35\u3059\u308b\u306b\u306f\u5927\u304d\u306a\u969c\u5bb3\u304c\u3042\u308b\u3002\u3069\u3093\u306a\u90e8\u5206\u3067\u3082\u628a\u63e1\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u305d\u308c\u304c\u4ed6\u306e\u90e8\u5206\u3068\u3069\u306e\u3088\u3046\u306b\u9069\u5408\u3057\u3001\u5bc6\u306a\u8cea\u91cf\u3092\u793a\u3057\u3001\u5bb9\u6613\u306a\u8db3\u5834\u304c\u306a\u3044\u304b\u3092\u7406\u89e3\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u305f\u3068\u3057\u3066\u3082\u3001\u3059\u3050\u306b\u982d\u306b\u5165\u308c\u3066\u304a\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u9650\u754c\u306b\u8fd1\u3065\u3044\u3066\u3044\u308b\u3002 \u8a18\u53f7\u51e6\u7406\u7684\uff0c\u30eb\u30fc\u30eb\u30d9\u30fc\u30b9\u30a2\u30d7\u30ed\u30fc\u30c1\u306e\u9650\u754c Sutton \u306e Bitter Lessons","title":"Winograd barrier (1972) \u8907\u96d1\u3055\u306e\u969c\u58c1"},{"location":"lect01/#_12","text":"Frey and Osborne (2013) \u3088\u308a \u30a2\u30e1\u30ea\u30ab\u5408\u8846\u56fd\u3067 47%\u306e\u4ed5\u4e8b\u304c\u81ea\u52d5\u5316\u306b\u3088\u308a\u6d88\u5931\u3059\u308b\u3068\u4e88\u6e2c Automation, Skills Use and Training, Ljubica Nedelkoska and Glenda Quintini , OECD working paper (2018)","title":"\u7523\u696d"},{"location":"lect01/#ai-frey-and-osborne-2013","text":"\u9806\u4f4d \u8077\u696d \u30ec\u30af\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u30bb\u30e9\u30d4\u30b9\u30c8 (Recreational Therapists) \u6a5f\u68b0\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3001\u4fee\u7e55\u58eb\u306e\u7b2c\u4e00\u7dda\u306e\u76e3\u7763\u8005(First-Line Supervisors of Mechanics, Installers, and Repairers) \u7dca\u6025\u7ba1\u7406\u30c7\u30a3\u30ec\u30af\u30bf\u30fc(Emergency Management Directors) \u30e1\u30f3\u30bf\u30eb\u30d8\u30eb\u30b9\u304a\u3088\u3073\u85ac\u7269\u4e71\u7528\u30bd\u30fc\u30b7\u30e3\u30eb\u30ef\u30fc\u30ab\u30fc(Mental Health and Substance Abuse Social Workers) \u8074\u899a\u533b(Audiologists) \u8077\u696d\u7642\u6cd5\u58eb(Occupational Therapists) \u6b63\u6559\u4f1a\u3068\u88dc\u7db4\u5b66\u8005(Orthotists and Prosthetists) \u533b\u7642\u5f93\u4e8b\u8005\u30bd\u30fc\u30b7\u30e3\u30eb\u30ef\u30fc\u30ab\u30fc(Healthcare Social Workers) \u53e3\u8154\u304a\u3088\u3073\u984e\u9854\u9762\u5916\u79d1\u533b(Oral and Maxillofacial Surgeons) \u6d88\u9632\u8077\u54e1\u306e\u7b2c\u4e00\u6b21\u76e3\u7763\u8005(First-Line Supervisors of Fire Fighting and Prevention Workers)","title":"AI \u306b\u596a\u308f\u308c\u306a\u3044\u8077\u696d (Frey and Osborne, 2013 \u3088\u308a)"},{"location":"lect01/#ai-frey-and-osborne-2013_1","text":"\u9806\u4f4d \u8077\u696d \u65b0\u898f\u53e3\u5ea7\u62c5\u5f53\u8005(New Accounts Clerks) \u5199\u771f\u30d7\u30ed\u30bb\u30b9\u52b4\u50cd\u8005\u304a\u3088\u3073\u52a0\u5de5\u6a5f\u68b0\u30aa\u30da\u30ec\u30fc\u30bf(Photographic Process Workers and Processing Machine Operators) \u7a0e\u52d9\u7533\u544a\u8005(Tax Preparers) \u8ca8\u7269\u304a\u3088\u3073\u8ca8\u7269\u4ee3\u7406\u5e97(Cargo and Freight Agents) \u6642\u8a08\u4fee\u7406\u696d\u8005(Watch Repairers) \u4fdd\u967a\u5f15\u53d7\u4eba(Insurance Underwriters) \u6570\u5b66\u6280\u8853\u8005(Mathematical Technicians) \u4e0b\u6c34\u9053\u3001\u624b(Sewers, Hand) \u30bf\u30a4\u30c8\u30eb\u5be9\u67fb\u5b98\u3001\u62bd\u8c61\u5316\u8005\u3001\u304a\u3088\u3073\u8abf\u67fb\u54e1(Title Examiners, Abstractors, and Searchers) \u30c6\u30ec\u30de\u30fc\u30b1\u30c6\u30a3\u30f3\u30b0\u62c5\u5f53\u8005(Telemarketers)","title":"AI \u306b\u596a\u308f\u308c\u305d\u3046\u306a\u8077\u696d (Frey and Osborne, 2013 \u3088\u308a)"},{"location":"lect01/#_13","text":"\uff21\uff29\u6226\u7565\uff08\u6709\u8b58\u8005\u63d0\u6848\uff09\u53ca\u3073\u4eba\u9593\u4e2d\u5fc3\u306e\uff21\uff29\u793e\u4f1a\u539f\u5247\uff08\u6848\uff09\u306b\u3064\u3044\u3066 \u30bd\u30b5\u30a4\u30a8\u30c6\u30a3 5.0 \u3053\u308c\u81ea\u4f53\u304c\u30c9\u30a4\u30c4\u306e \u30a4\u30f3\u30c0\u30b9\u30c8\u30ea\u30fc 4.0 \u306e\u30d1\u30af\u30ea","title":"\u5371\u60e7"},{"location":"lect01/#_14","text":"1 - [Ban Lethal Autonomous Weapons](https://autonomousweapons.org/)","title":"\u81ea\u52d5\u6bba\u622e\u5175\u5668"},{"location":"lect01/#_15","text":"https://futureoflife.org/background/aimyths/","title":"\u30a2\u30b7\u30ed\u30de\u539f\u7406"},{"location":"lect02/","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA) \u00b6 Shin Aasakawa , all rights reserved. Date: 15/May/2020 Appache 2.0 license \u672c\u65e5\u306e\u5b66\u7fd2\u76ee\u6a19 \u00b6 \u8ab2\u984c\u7dcf\u8a55\u3068\u5148\u9031\u306e\u88dc\u8db3 \u5148\u9031\u306e\u5fa9\u7fd2 colab \u7528\u8a9e\u306e\u7406\u89e3\u3068\u533a\u5225: \u5b9f\u7fd2 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6b74\u53f2 \u8ab2\u984c \u00b6 \u672c\u65e5\u306e\u8ab2\u984c \u8ab2\u984c\u7dcf\u8a55\u3068\u5148\u9031\u306e\u88dc\u8db3 \u00b6 \u5148\u9031 \u7b2c\u4e00\u56de\u8b1b\u7fa9\u3067\u306e\u8a71 AI \u4eba\u6750 25 \u4e07\u4eba\u5fc5\u8981 \u306f\uff0c\u5927\u5b66\u751f\u306b\u3068\u3063\u3066\u7d76\u597d\u306e\u30c1\u30e3\u30f3\u30b9\u3060\u308d\u3046\u3002 \u306a\u305c\u306a\u3089\u30a6\u30a3\u30eb\u30b9\u798d\u3067\uff0c\u7523\u696d\u69cb\u9020\u304c\u5909\u5316\u3059\u308b\u3053\u3068\u304c\u4e88\u60f3\u3055\u308c\u308b\u304b\u3089\u3067\u3042\u308b\u3002 \u4eca\u5f8c\u5fc5\u8981\u3068\u3055\u308c\u308b\u77e5\u8b58\uff0c\u6280\u80fd\u3092\u3044\u3061\u65e9\u304f\u8eab\u306b\u3064\u3051\u308b\u3053\u3068\u304c\u6c42\u3081\u3089\u308c\u308b\u3002 \u4eca\u5e74\u304b\u3089\u9ad8\u7b49\u5b66\u6821\u306e\u60c5\u5831\u79d1\u76ee\u3067\u306f Python \u304c\u63a1\u7528\u3055\u308c\u308b\u3002\u3044\u308f\u3070\u5e38\u8b58\uff0c\u30ea\u30c6\u30e9\u30b7\u30fc\u306e\u4e00\u90e8\u3068\u306a\u308b\u3002 \u3053\u306e\u3088\u3046\u306a\u77e5\u8b58\u306e\u7fd2\u5f97\u306b\u56f0\u96e3\u3092\u899a\u3048\u308b\u4e16\u4ee3\u3084\u96c6\u56e3\u306f\u56f0\u96e3\u304c\u4e88\u60f3\u3055\u308c\u308b You cannot teach an old dog new tricks. \u5f15\u7528\u3068\u81ea\u5206\u306e\u610f\u898b\u3068\u3092\u5206\u3051\u3066\u8a18\u8ff0\u3057\u3066\u304f\u3060\u3055\u3044 \u7d71\u8a08\u5b66\u306b\u3064\u3044\u3066\uff0c\u5fc3\u7406\u7d71\u8a08\uff08\u63a8\u6e2c\u7d71\u8a08\u5b66\uff09\u3060\u3051\u304c\u7d71\u8a08\u5b66\u3067\u306f\u306a\u3044\u3002\u3080\u3057\u308d\u7d71\u8a08\u5b66\u306f 19 \u4e16\u7d00\u306b\u82b1\u958b\u3044\u305f\uff0c\u7d71\u8a08\u529b\u5b66\uff0c\u71b1\u529b\u5b66\u3092\u790e\u306b\u3057\u3066\u3044\u308b\u3002 \u4e00\u65b9\u3067\uff0c \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u7d20\u4eba\u306e\u975e\u7dda\u5f62\u7d71\u8a08\u5b66\u3067\u3042\u308b \u3068\u306e\u6279\u5224\u3082\u3042\u3063\u305f(Anderson, 1990)\u3002 \u7269\u7406\u5b66\u7528\u8a9e\u306e \u71b1\u529b\u5b66\u306e\u7b2c2\u6cd5\u5247 \u3059\u306a\u308f\u3061 \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u3084 \u30a8\u30cd\u30eb\u30ae\u30fc \u306f \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u983b\u7528\u3055\u308c\u308b\u6982\u5ff5\u3067\u3042\u308b\u3002 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u306f \u30dc\u30eb\u30c4\u30de\u30f3 , \u30e9\u30d7\u30e9\u30b9 , \u30d8\u30eb\u30e0\u30db\u30eb\u30c4 , \u30ac\u30a6\u30b9 , \u30e9\u30d7\u30e9\u30b9 , \u30e9\u30b0\u30e9\u30f3\u30b8\u30a7 \u306a\u3069\u306e\u7269\u7406\u5b66\u8005\u306e\u540d\u524d\u3092\u51a0\u3057\u305f\u30e2\u30c7\u30eb\u3084\u624b\u6cd5\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u3002 \u5b9f\u969b\u306b\uff0c\u6211\u3005\u306e\u6d3b\u52d5\u306f\u9808\u304f\u795e\u7d4c\u6d3b\u52d5\u306b\u8d77\u56e0\u3059\u308b\u3002\u3053\u308c\u306f\u3042\u308b\u7cfb\u306b\u304a\u3051\u308b\u5206\u5b50\u306e\u904b\u52d5\u6e2c\u5ea6\u304c\u7570\u306a\u308b\u306b\u3082\u304b\u304b\u308f\u3089\u305a\uff0c\u3053\u306e\u7cfb\u306e\u6e29\u5ea6\u306f\u4e00\u3064\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u3053\u3068\u3068\u985e\u4f3c\u3059\u308b\u3002 \u500b\u3005\u306e\u5206\u5b50\u306f\u901f\u5ea6\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u904b\u52d5\u30a8\u30cd\u30eb\u30ae\u30fc\u3092\u6301\u3064\u304c\uff0c\u904b\u52d5\u30a8\u30cd\u30eb\u30ae\u30fc\u306f\u6e29\u5ea6\u3060\u3051\u3067\u306a\u304f\uff0c\u5727\u529b\uff0c\u96fb\u6c17\uff0c\u305d\u306e\u4ed6\u3078\u3068\u5909\u63db\u3067\u304d\u308b\u3002 \u3053\u306e\u3053\u3068\u3068\u540c\u69d8\u306b\u3057\u3066\uff0c\u8133\u5185\u306e\u795e\u7d4c\u6d3b\u52d5\u306e\u8868\u73fe\u3067\u3042\u308b\u6211\u3005\u306e\u6d3b\u52d5\u3082\u69d8\u3005\u306a\u8868\u51fa\u5f62\u614b\u3092\u63a1\u308b\u3002 \u7528\u8a9e\u306e\u7406\u89e3\u3068\u533a\u5225: \u00b6 \u4eba\u5de5\u77e5\u80fd \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0 (\u6df1\u5c64\u5b66\u7fd2) \u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9: \u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8\u306f 21 \u4e16\u7d00\u3067\u6700\u3082\u30ab\u30c3\u30b3\u3044\u3044 (the sexist) \u8077\u696d\u3060 \u3068\u3044\u3046\u30cf\u30fc\u30d0\u30fc\u30c9\u30d3\u30b8\u30cd\u30b9\u30ec\u30d3\u30e5\u30fc\u306e \u30dd\u30b8\u30b7\u30e7\u30f3\u30c8\u30fc\u30af\u8a18\u4e8b (2012\u5e74) \u304c\u8a71\u984c\u306b\u306a\u3063\u3066\u4e45\u3057\u3044\u3002 \u30d3\u30c3\u30b0\u30c7\u30fc\u30bf: \u3053\u3061\u3089\u3082 \u30dd\u30b8\u30b7\u30e7\u30f3\u30c8\u30fc\u30af\u3089\u3057\u304f\u5b66\u8853\u8ad6\u6587\u306f\u5b58\u5728\u3057\u306a\u3044 \u3002 \u30c7\u30fc\u30bf\u304c\u5897\u3048\u7d9a\u3051\u3066\u3044\u308b \u3053\u3068\u306f\u4e8b\u5b9f\u306a\u306e\u3067\u793e\u4f1a\u7684\u306a\u50be\u5411\u3068\u3082\u8a00\u3048\u308b\u3002 Goodfellow et al. (2017) Fig.1 \u3092\u6539\u5909 \u79c1\u898b\u3060\u304c\uff0c\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u306e\u898f\u6a21\u306f\uff0c\u307e\u3060\u307e\u3060\u8db3\u308a\u306a\u3044\u3068\u8003\u3048\u308b\u3002 \u4f8b\u3048\u3070\uff0c\u6211\u3005\u306e\u7db2\u819c\u304b\u3089\u5165\u529b\u3055\u308c\u308b\u8996\u899a\u4fe1\u53f7\u306f\u4e00\u79d2\u9593\u306b 60 \u56de\u4ee5\u4e0b\u3067\u3042\u308d\u3046\u3002 \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u5929\u4e95\u306b\u3042\u308b\u86cd\u5149\u706f\u306f\u70b9\u6ec5\u3057\u3066\u77e5\u899a\u3055\u308c\u308b\u306f\u305a\u3067\u3042\u308b\u3002 \u6211\u3005\u304c\u86cd\u5149\u706f\u3092\u5e38\u706f\u5149\u3068\u3057\u3066\u8a8d\u8b58\u3067\u304d\u308b\u3053\u3068\u304b\u3089\u8996\u899a\u60c5\u5831\u51e6\u7406\u904e\u7a0b\u306f 1 \u79d2\u9593\u306b 60 \u56de\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u304b\u884c\u3063\u3066\u3044\u306a\u3044\u3068\u307f\u306a\u305b\u308b\u3002 \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3067\u306f \u6bce\u79d2 30 \u56de\u7a0b\u5ea6\u306e\u5834\u5408\u3082\u3042\u308b\u3002 \u4e00\u65e5 18 \u6642\u9593\u899a\u9192\u3057\u3066\u3044\u3066\uff0c\u305d\u306e\u9593\u306b\u6bce\u79d2 60 \u679a\u306e\u753b\u50cf\u304c\u8996\u899a\u7cfb\u306b\u5165\u529b\u3055\u308c\u3066\u3044\u308b\u3068\u8003\u3048\u308b\u3068\u4e00\u65e5\u3042\u305f\u308a\u306e\u5165\u529b\u753b\u50cf\u6570\u306f\uff0c60 (\u679a/\u79d2) * 60 (\u79d2/\u5206) * 60 (\u5206/\u6642\u9593) * 18 (\u6642\u9593) = 388,8000 \u3067\u3042\u308b\u3002 \u4e00\u65e5\u3042\u305f\u308a 388 \u4e07\u679a\u4ee5\u4e0a\u306e\u753b\u50cf\u3092\u898b\u3066\u4e73\u5150\u306f\u8996\u899a\u60c5\u5831\u51e6\u7406\u3092\u767a\u9054\u3055\u305b\u308b\u3068\u8003\u3048\u308b\u3068\uff0c\u5165\u529b\u30c7\u30fc\u30bf\u6570\u304c 388 \u4e07\u4ee5\u4e0b\u306e\u30c7\u30fc\u30bf\u89e3\u6790\u3067\u306f\uff0c\u65b0\u751f\u5150\u304c\u3055\u3089\u3055\u308c\u3066\u3044\u308b\u8996\u899a\u74b0\u5883\u306b\u63db\u7b97\u3059\u308b\u3068\u4e00\u65e5\u4ee5\u4e0b\u3067\u3042\u308b\u3068\u8a00\u3048\u308b\u3002 \u3053\u306e\u6388\u696d\u3067\u306f\uff0c \u5358\u7d14\u5316\uff0c\u7c21\u7d20\u5316\u3057\u305f\u884c\u52d5\u30e2\u30c7\u30eb\u3068\u3057\u3066\u73fe\u5728\u306e\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0 (\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af) \u30e2\u30c7\u30eb\u3092\u6349\u3048\uff0c\u5fc3\u7406\u5b66\u30e2\u30c7\u30eb\u3068\u3057\u3066\u89e3\u91c8\u3067\u304d\u308b\u304b\u8003\u3048\u308b \u3002 \u30af\u30a4\u30ba: \u6b21\u306e\u7701\u7565\u5f62\u3092\u8abf\u3079\u3088 \u00b6 ANN: \u4eba\u5de5\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Artificial Neural Networks BNN: \u751f\u7269\u5b66\u7684\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Biological Neural Networks CNN: \u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Convolutional Neural Networks DNN: \u6df1\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Deep Neural Networks \u6b21\u306e\u8a9e\u306e\u793a\u3059\u30b5\u30a4\u30c8\u3092\u8a2a\u308c\uff0c\u305d\u308c\u305e\u308c\u3069\u306e\u3088\u3046\u306a\u30b5\u30a4\u30c8\u304b\u3092\u8abf\u3079\u3088\u3002 \u00b6 \u3044\u305a\u308c\u3082\u73fe\u5728\u306e\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u306e\u5f79\u5272\u3092\u679c\u305f\u3057\u3066\u3044\u308b\u3002 arXiv: \u8ad6\u6587\u7f6e\u304d\u5834 Colab: Github: \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u7f6e\u304d\u5834 Stack Oerflow: \u63b2\u793a\u677f\uff0c\u30ce\u30a6\u30cf\u30a6\u96c6 Reddit: \u63b2\u793a\u677f\uff0c\u305f\u3060\u3057\u30d3\u30c3\u30b0\u30cd\u30fc\u30e0\u672c\u4eba\u304c\u964d\u81e8\u3059\u308b\u3053\u3068\u304c\u3042\u308b \u6587\u732e \u00b6 \u52b4\u50cd\u65b0\u805e\u5e73\u621031\u5e742\u670825\u65e5\u53f7 \u77e5\u8b58\u3092\u62e1\u5f35\u3059\u308b\u9053\u5177 \u4eba\u985e\u306e\u6b74\u53f2\u306e\u5ef6\u9577\u7dda\u4e0a\u306b \u30a4\u30e9\u30b9\u30c8\u3067\u5b66\u3076 \u4eba\u5de5\u77e5\u80fd\u6982\u8ad6 (KS\u60c5\u5831\u79d1\u5b66\u5c02\u9580\u66f8) ( \u8c37\u53e3 ,2014) 3 \u3064\u306e\u5206\u91ce\u306e\u7565\u53f2 \u00b6 \u4eba\u5de5\u77e5\u80fd \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u5fc3\u7406\u5b66 \u7b2c\u4e00\u6b21 1950- \u8a18\u53f7\u51e6\u7406 \u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3 \u8a8d\u77e5\u9769\u547d \u30aa\u30e2\u30c1\u30e3\u554f\u984c ADALINE \u30cd\u30aa\u30b3\u30b0\u30cb\u30c8\u30ed\u30f3 \u30a2\u30bd\u30b7\u30a2\u30c8\u30ed\u30f3 \u7b2c\u4e8c\u6b21 1980- Expert systems \u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5 \u30b3\u30cd\u30af\u30b7\u30e7\u30cb\u30b9\u30c8 Brooks \u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u8133\u753b\u50cf\u7814\u7a76 \u5f37\u5316\u5b66\u7fd2 \u8a08\u7b97\u8ad6\u7684\u30a2\u30d7\u30ed\u30fc\u30c1 \u7b2c\u4e09\u6b21 2010- \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0 \u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af AI \u306e\u5206\u91ce \u00b6 \u63a8\u8ad6\uff0c\u554f\u984c\u89e3\u6c7a Reasoning, problem solving \u77e5\u8b58\u8868\u8c61 Knowledge representation \u8a08\u753b Planning \u5b66\u7fd2 Learning \u81ea\u7136\u8a00\u8a9e\u51e6\u7406 Natural language processing \u8a8d\u8b58 Perception \u30ed\u30dc\u30c6\u30a3\u30af\u30b9 Motion and manipulation \u793e\u4f1a\u77e5\u80fd Social intelligence \u5275\u9020\u6027 Creativity \u4e00\u822c\u77e5\u80fd General intelligence AI\u306e\u9032\u6b69\u306e \uff15 \u3064\u306e\u8981\u56e0 \u00b6 \u8a08\u7b97\u80fd\u529b\u306e\u5411\u4e0a (\u30e0\u30fc\u30a2\u306e\u6cd5\u5247\uff0cGPU, ASIC) \u30c7\u30fc\u30bf\u7206\u767a (e.g. ImageNet, AMT), \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6539\u5584 (e.g. \u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5, CNN, LSTM) \u57fa\u76e4\u306e\u6574\u5099 (Linux, TCP/IP, Git, ROS, PR2, AWS, TensorFlow) \u30a8\u30b3\u30b7\u30b9\u30c6\u30e0 \u60c5\u5831\u5171\u6709 (arXiv, Git, Reddit, Quora, Stackoverflow, ...) from Karpathy's blog \"Deep Reinforcement Learning: Pong from Pixels\" \u8003\u3048\u65b9\uff0c\u80cc\u666f\uff0c\u30ad\u30fc\u30ef\u30fc\u30c9 \u00b6 \u69cb\u6210\u8ad6\u7684\u30a2\u30d7\u30ed\u30fc\u30c1 vs \u5206\u6790\u7684\u30a2\u30d7\u30ed\u30fc\u30c1 \uff08\u4eba\u5de5\u77e5\u80fd\u3068\u5fc3\u7406\u5b66\u3068\u306e\u95a2\u4fc2\uff09 \u795e\u306f\u7d30\u90e8\u306b\u5bbf\u308b God is in the detail. \u3042\u308b\u3044\u306f \u60aa\u9b54\u306f\u7d30\u90e8\u306b\u5bbf\u308b (The devil is in the detail) Carbon chauvinism \u65e5\u672c\u8a9e\u3067\u70ad\u7d20\u6392\u5916\u4e3b\u7fa9\u3068\u8a33\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u672c\u5f53\u3060\u308d\u3046\u304b\uff1f p-\u5024\u5ec3\u6b62\u306e\u5f71\u97ff \u8a08\u7b97\u8ad6\u30e2\u30c7\u30eb \u6570\u5b66\u3068\u30e2\u30c7\u30eb \u00b6 \u6570\u5b66\u7684\u77e5\u8b58\u306e\u8a73\u7d30\u306f\u4e0d\u8981\u3060\u304c\uff0c\u305d\u306e\u7cbe\u795e\u306f\u7406\u89e3\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002 \u4e07\u7269\u306f\u6570\u306a\u308a --- \u30d4\u30bf\u30b4\u30e9\u30b9 \u5b87\u5b99\u306f\u6570\u5b66\u8a9e\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u3002\u6570\u5b66\u306a\u3057\u3067\u306f\u8ff7\u5bae\u3092\u7406\u89e3\u3067\u304d\u306a\u3044 --- \u30ac\u30ea\u30ec\u30a4 \u4f5c\u308c\u306a\u3051\u308c\u3070\u7406\u89e3\u3067\u304d\u305f\u3068\u8a00\u3048\u306a\u3044 --- \u30d5\u30a1\u30a4\u30f3\u30de\u30f3 \u4eca\u969b\u306e\u969b\u306b\u9ed2\u677f\u306b\u66f8\u3044\u3066\u3042\u3063\u305f\u30d5\u30a1\u30a4\u30f3\u30de\u30f3\u306e\u8a00\u8449\uff0c \u30ab\u30ea\u30d5\u30a9\u30eb\u30cb\u30a2\u5de5\u79d1\u5927\u5b66\u30a2\u30fc\u30ab\u30a4\u30d6\u5199\u771f \u82e5\u8005\u3088\uff0c\u6570\u5b66\u306f\u7406\u89e3\u3059\u308b\u3082\u306e\u3067\u306f\u306a\u3044\uff0c\u305f\u3060\u6163\u308c\u308b\u3060\u3051\u3060 --- \u30d5\u30a9\u30f3\u30fb\u30ce\u30a4\u30de\u30f3 \u79d1\u5b66\u306f\u8aac\u660e\u3057\u306a\u3044\u3057\uff0c\u89e3\u91c8\u3082\u3057\u306a\u3044\u3002\u305f\u3060\u30e2\u30c7\u30eb\u3092\u4f5c\u308b\u3060\u3051\u3067\u3042\u308b\u3002\u3053\u306e\u5834\u5408\u30e2\u30c7\u30eb\u3068\u306f\u89b3\u5bdf\u3055\u308c\u305f\u73fe\u8c61\u3092\u8aac\u660e\u3059\u308b\u6570\u5b66(\u7684\u69cb\u6210\u7269)\u3067\u3042\u308b\u3002\u305d\u306e\u30e2\u30c7\u30eb\u306f\uff0c\u3072\u3068\u3048\u306b\u671f\u5f85\u3069\u304a\u308a\u6b63\u78ba\u3067\u3042\u308b\u3053\u3068\u3067\u6b63\u5f53\u5316\u3055\u308c\u308b\u3002 --- \u30d5\u30a9\u30f3\u30fb\u30ce\u30a4\u30de\u30f3 \u308f\u308c\u308f\u308c\u306e\u5b87\u5b99\u306f\u305f\u3060\u5358\u306b\u6570\u5b66\u3067\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3060\u3051\u3067\u306f\u306a\u3044\u3002\u5b87\u5b99\u306f\u6570\u5b66\u3067\u3042\u308b\uff0c\u6211\u3005\u306f\u7686\uff0c\u5927\u304d\u306a\u6570\u5b66\u7684\u5b9f\u614b\u306e\u4e00\u90e8\u306a\u306e\u3060\u3002--- \u30c6\u30b0\u30de\u30fc\u30af \u5b9f\u7fd2 \u00b6 \u756a\u7d44 nothotdog \u306b\u3064\u3044\u3066 \u521d\u3081\u3066\u306e\u753b\u50cf\u8a8d\u8b58 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6b74\u53f2 \u00b6 \u753b\u50cf\u8a8d\u8b58\u306e\u9032\u6b69 \u7b2c 1 \u6b21\u30cb\u30e5\u30fc\u30ed\u30d6\u30fc\u30e0 \u00b6 1950\u5e74\u4ee3: \u00b6 \u30a6\u30a9\u30fc\u30ec\u30f3\u30fb\u30de\u30c3\u30ab\u30ed\u30c3\u30af\u3068\u30ef\u30a4\u30eb\u30c0\u30fc\u30fb\u30d4\u30c3\u30c4\u306b\u3088\u308b \u5f62\u5f0f\u30cb\u30e5\u30fc\u30ed\u30f3 \u306e\u63d0\u6848 (\u30b5\u30a4\u30d0\u30cd\u30c6\u30a3\u30af\u30b9\u306e\u5275\u59cb\u8005\u30ce\u30fc\u30d0\u30fc\u30c8\u30fb\u30a6\u30a3\u30fc\u30ca\u30fc\u306e\u96c6\u3081\u305f\u7814\u7a76\u8005\u96c6\u56e3) \u30a6\u30a9\u30fc\u30ec\u30f3\u30fb\u30de\u30c3\u30ab\u30ed\u30c3\u30af \u3068 \u30ef\u30a4\u30eb\u30c0\u30fc\u30fb\u30d4\u30c3\u30c4 \u5f62\u5f0f\u30cb\u30e5\u30fc\u30ed\u30f3\u306f\uff0c\u30b7\u30ca\u30d7\u30b9\u7d50\u5408\u8377\u91cd\u30d9\u30af\u30c8\u30eb\u3068\u51fa\u529b\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u306e\u4f1d\u9054\u95a2\u6570\u3068\u3067\u69cb\u6210\u3055\u308c\u308b(\u6b21\u5f0f) y_i=\\phi\\left(\\sum_jw_{ij}x_j\\right),\\label{eq:formal_neuron} \u3053\u3053\u3067 y_i \u306f i \u756a\u76ee\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u51fa\u529b\uff0c x_j \u306f j \u756a\u76ee\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u51fa\u529b\uff0c w_{ij} \u306f\u30cb\u30e5\u30fc\u30ed\u30f3 i \u3068 j \u3068\u306e\u9593\u306e \u30b7\u30ca\u30d7\u30b9\u7d50\u5408\u8377\u91cd \u3002 \\phi \u306f\u6d3b\u6027\u5316\u95a2\u6570\u3002 \u5f62\u5f0f\u30cb\u30e5\u30fc\u30ed\u30f3 \u30ed\u30fc\u30bc\u30f3\u30d6\u30e9\u30c3\u30c8 Rosenblatt \u306e\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3 \u00b6 \u30d5\u30e9\u30f3\u30af\u30fb\u30ed\u30fc\u30bc\u30f3\u30d6\u30e9\u30c3\u30c8 \u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u306e\u6a21\u5f0f\u56f3 \u30df\u30f3\u30b9\u30ad\u30fc\u3068\u30d1\u30d1\u30fc\u30c8\u300c\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u300d\u3088\u308a \u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u6a21\u5f0f\u56f3 wikipedia \u3088\u308a 1960 \u5e74\uff0c\u30df\u30f3\u30b9\u30ad\u30fc\u3068\u30d1\u30d1\u30fc\u30c8\u306e\u6279\u5224 \u7b2c\u4e00\u6b21\u6c37\u6cb3\u671f\u306e\u5230\u6765 \u7b2c 2 \u6b21\u30cb\u30e5\u30fc\u30ed\u30d6\u30fc\u30e0 \u00b6 1986 \u5e74\uff0cPDP \u30d6\u30c3\u30af\uff0c\u4fd7\u306b\u8a00\u3046\u30d0\u30a4\u30d6\u30eb\uff0c\u767a\u8868 1989 \u5e74\uff0c\u30d0\u30d7\u30cb\u30c3\u30af\uff0c\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u767a\u8868 \u7b2c\u4e8c\u6b21\u6c37\u6cb3\u671f\u306e\u5230\u6765 \u7b2c 3 \u6b21\u30cb\u30e5\u30fc\u30ed\u30d6\u30fc\u30e0 \u00b6 2013 ICLR \u30b9\u30bf\u30fc\u30c8 arXiv.org \u306b\u4e88\u3081\u8ad6\u6587\u3092\u6295\u7a3f\uff0c\u8ab0\u3067\u3082\u8aad\u3081\u308b\uff0c\u8ab0\u3067\u3082\u6279\u5224\u3067\u304d\u308b\u3002\u8457\u8005\u306f\u305d\u308c\u306b\u7b54\u3048\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\u3042\u3063\u3068\u3044\u3046\u9593\u306b\u30c8\u30c3\u30d7\u30ab\u30f3\u30d5\u30a1\u30ec\u30f3\u30b9\u3068\u306a\u308b 2013 Mikolov word2vec \u3092\u767a\u8868 Mikolov\u306e\u985e\u63a8\u8ab2\u984c 2013 DeepMind DQN \u3092\u767a\u8868 DQN\u306e\u7d50\u679c \u30ae\u30e3\u30e9\u30ac\u306e\u30c7\u30e2 2014 Neural Image Captioning \u304c\u6ce8\u76ee\u3092\u96c6\u3081\u308b\u3002 Human: A group of men playing Frisbee in the park. Machine: A group of young people playing a game of Frisbee. 2015 \u753b\u50cf\u751f\u6210\u6280\u8853\u304c\u6ce8\u76ee\u3092\u6d74\u3073\u308b 2015 \u4eba\u5de5\u77e5\u80fd\u5b66\u4f1a\u304c\u65e5\u672c\u3067\u306f\u300c \u6df1\u5c64\u5b66\u7fd2 \u300d\u3068\u547c\u3076\u3053\u3068\u306b\u6c7a\u5b9a\u3059\u308b 2016 GAN \u304c\u6ce8\u76ee\u3092\u6d74\u3073\u308b Generative Adversarial Text to Image Synthesis Generative Adversarial Text to Image Synthesis arXiv:1605.05396v2 2016 \u30a2\u30e1\u30ea\u30ab\u5408\u5dde\u56fd\u5927\u7d71\u9818\u5019\u88dc\u306e\u4e00\u4eba\u306e\u767a\u8a00\u3092\u6a21\u5023\u3059\u308b\u300c\u30c7\u30a3\u30fc\u30d7\u30c8\u30e9\u30f3\u30d7\u300d\u304c\u30c4\u30a3\u30c3\u30bf\u30fc\u4e0a\u3067\u6ce8\u76ee\u3092\u96c6\u3081\u308b 2016 \u30a2\u30eb\u30d5\u30a1\u7881\u304c\u30a4\u30fb\u30bb\u30c9\u30eb\u3092\u7834\u308b \u30a2\u30eb\u30d5\u30a1\u7881 Nature\u3088\u308a \u30dc\u30b9\u30c8\u30f3\u30fb\u30c0\u30a4\u30ca\u30df\u30af\u30b9\u793e\u30d3\u30c7\u30aa \u00b6 source: frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen> source: \u30d5\u30a7\u30a4\u30af\u753b\u50cf\u306e\u751f\u6210 \u00b6 source:","title":"\u7b2c 2 \u56de 05 \u6708 15 \u65e5"},{"location":"lect02/#iiia","text":"Shin Aasakawa , all rights reserved. Date: 15/May/2020 Appache 2.0 license","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA)"},{"location":"lect02/#_1","text":"\u8ab2\u984c\u7dcf\u8a55\u3068\u5148\u9031\u306e\u88dc\u8db3 \u5148\u9031\u306e\u5fa9\u7fd2 colab \u7528\u8a9e\u306e\u7406\u89e3\u3068\u533a\u5225: \u5b9f\u7fd2 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6b74\u53f2","title":"\u672c\u65e5\u306e\u5b66\u7fd2\u76ee\u6a19"},{"location":"lect02/#_2","text":"\u672c\u65e5\u306e\u8ab2\u984c","title":"\u8ab2\u984c"},{"location":"lect02/#_3","text":"\u5148\u9031 \u7b2c\u4e00\u56de\u8b1b\u7fa9\u3067\u306e\u8a71 AI \u4eba\u6750 25 \u4e07\u4eba\u5fc5\u8981 \u306f\uff0c\u5927\u5b66\u751f\u306b\u3068\u3063\u3066\u7d76\u597d\u306e\u30c1\u30e3\u30f3\u30b9\u3060\u308d\u3046\u3002 \u306a\u305c\u306a\u3089\u30a6\u30a3\u30eb\u30b9\u798d\u3067\uff0c\u7523\u696d\u69cb\u9020\u304c\u5909\u5316\u3059\u308b\u3053\u3068\u304c\u4e88\u60f3\u3055\u308c\u308b\u304b\u3089\u3067\u3042\u308b\u3002 \u4eca\u5f8c\u5fc5\u8981\u3068\u3055\u308c\u308b\u77e5\u8b58\uff0c\u6280\u80fd\u3092\u3044\u3061\u65e9\u304f\u8eab\u306b\u3064\u3051\u308b\u3053\u3068\u304c\u6c42\u3081\u3089\u308c\u308b\u3002 \u4eca\u5e74\u304b\u3089\u9ad8\u7b49\u5b66\u6821\u306e\u60c5\u5831\u79d1\u76ee\u3067\u306f Python \u304c\u63a1\u7528\u3055\u308c\u308b\u3002\u3044\u308f\u3070\u5e38\u8b58\uff0c\u30ea\u30c6\u30e9\u30b7\u30fc\u306e\u4e00\u90e8\u3068\u306a\u308b\u3002 \u3053\u306e\u3088\u3046\u306a\u77e5\u8b58\u306e\u7fd2\u5f97\u306b\u56f0\u96e3\u3092\u899a\u3048\u308b\u4e16\u4ee3\u3084\u96c6\u56e3\u306f\u56f0\u96e3\u304c\u4e88\u60f3\u3055\u308c\u308b You cannot teach an old dog new tricks. \u5f15\u7528\u3068\u81ea\u5206\u306e\u610f\u898b\u3068\u3092\u5206\u3051\u3066\u8a18\u8ff0\u3057\u3066\u304f\u3060\u3055\u3044 \u7d71\u8a08\u5b66\u306b\u3064\u3044\u3066\uff0c\u5fc3\u7406\u7d71\u8a08\uff08\u63a8\u6e2c\u7d71\u8a08\u5b66\uff09\u3060\u3051\u304c\u7d71\u8a08\u5b66\u3067\u306f\u306a\u3044\u3002\u3080\u3057\u308d\u7d71\u8a08\u5b66\u306f 19 \u4e16\u7d00\u306b\u82b1\u958b\u3044\u305f\uff0c\u7d71\u8a08\u529b\u5b66\uff0c\u71b1\u529b\u5b66\u3092\u790e\u306b\u3057\u3066\u3044\u308b\u3002 \u4e00\u65b9\u3067\uff0c \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u7d20\u4eba\u306e\u975e\u7dda\u5f62\u7d71\u8a08\u5b66\u3067\u3042\u308b \u3068\u306e\u6279\u5224\u3082\u3042\u3063\u305f(Anderson, 1990)\u3002 \u7269\u7406\u5b66\u7528\u8a9e\u306e \u71b1\u529b\u5b66\u306e\u7b2c2\u6cd5\u5247 \u3059\u306a\u308f\u3061 \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u3084 \u30a8\u30cd\u30eb\u30ae\u30fc \u306f \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u983b\u7528\u3055\u308c\u308b\u6982\u5ff5\u3067\u3042\u308b\u3002 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u306f \u30dc\u30eb\u30c4\u30de\u30f3 , \u30e9\u30d7\u30e9\u30b9 , \u30d8\u30eb\u30e0\u30db\u30eb\u30c4 , \u30ac\u30a6\u30b9 , \u30e9\u30d7\u30e9\u30b9 , \u30e9\u30b0\u30e9\u30f3\u30b8\u30a7 \u306a\u3069\u306e\u7269\u7406\u5b66\u8005\u306e\u540d\u524d\u3092\u51a0\u3057\u305f\u30e2\u30c7\u30eb\u3084\u624b\u6cd5\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u3002 \u5b9f\u969b\u306b\uff0c\u6211\u3005\u306e\u6d3b\u52d5\u306f\u9808\u304f\u795e\u7d4c\u6d3b\u52d5\u306b\u8d77\u56e0\u3059\u308b\u3002\u3053\u308c\u306f\u3042\u308b\u7cfb\u306b\u304a\u3051\u308b\u5206\u5b50\u306e\u904b\u52d5\u6e2c\u5ea6\u304c\u7570\u306a\u308b\u306b\u3082\u304b\u304b\u308f\u3089\u305a\uff0c\u3053\u306e\u7cfb\u306e\u6e29\u5ea6\u306f\u4e00\u3064\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u3053\u3068\u3068\u985e\u4f3c\u3059\u308b\u3002 \u500b\u3005\u306e\u5206\u5b50\u306f\u901f\u5ea6\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u904b\u52d5\u30a8\u30cd\u30eb\u30ae\u30fc\u3092\u6301\u3064\u304c\uff0c\u904b\u52d5\u30a8\u30cd\u30eb\u30ae\u30fc\u306f\u6e29\u5ea6\u3060\u3051\u3067\u306a\u304f\uff0c\u5727\u529b\uff0c\u96fb\u6c17\uff0c\u305d\u306e\u4ed6\u3078\u3068\u5909\u63db\u3067\u304d\u308b\u3002 \u3053\u306e\u3053\u3068\u3068\u540c\u69d8\u306b\u3057\u3066\uff0c\u8133\u5185\u306e\u795e\u7d4c\u6d3b\u52d5\u306e\u8868\u73fe\u3067\u3042\u308b\u6211\u3005\u306e\u6d3b\u52d5\u3082\u69d8\u3005\u306a\u8868\u51fa\u5f62\u614b\u3092\u63a1\u308b\u3002","title":"\u8ab2\u984c\u7dcf\u8a55\u3068\u5148\u9031\u306e\u88dc\u8db3"},{"location":"lect02/#_4","text":"\u4eba\u5de5\u77e5\u80fd \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0 (\u6df1\u5c64\u5b66\u7fd2) \u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9: \u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8\u306f 21 \u4e16\u7d00\u3067\u6700\u3082\u30ab\u30c3\u30b3\u3044\u3044 (the sexist) \u8077\u696d\u3060 \u3068\u3044\u3046\u30cf\u30fc\u30d0\u30fc\u30c9\u30d3\u30b8\u30cd\u30b9\u30ec\u30d3\u30e5\u30fc\u306e \u30dd\u30b8\u30b7\u30e7\u30f3\u30c8\u30fc\u30af\u8a18\u4e8b (2012\u5e74) \u304c\u8a71\u984c\u306b\u306a\u3063\u3066\u4e45\u3057\u3044\u3002 \u30d3\u30c3\u30b0\u30c7\u30fc\u30bf: \u3053\u3061\u3089\u3082 \u30dd\u30b8\u30b7\u30e7\u30f3\u30c8\u30fc\u30af\u3089\u3057\u304f\u5b66\u8853\u8ad6\u6587\u306f\u5b58\u5728\u3057\u306a\u3044 \u3002 \u30c7\u30fc\u30bf\u304c\u5897\u3048\u7d9a\u3051\u3066\u3044\u308b \u3053\u3068\u306f\u4e8b\u5b9f\u306a\u306e\u3067\u793e\u4f1a\u7684\u306a\u50be\u5411\u3068\u3082\u8a00\u3048\u308b\u3002 Goodfellow et al. (2017) Fig.1 \u3092\u6539\u5909 \u79c1\u898b\u3060\u304c\uff0c\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u306e\u898f\u6a21\u306f\uff0c\u307e\u3060\u307e\u3060\u8db3\u308a\u306a\u3044\u3068\u8003\u3048\u308b\u3002 \u4f8b\u3048\u3070\uff0c\u6211\u3005\u306e\u7db2\u819c\u304b\u3089\u5165\u529b\u3055\u308c\u308b\u8996\u899a\u4fe1\u53f7\u306f\u4e00\u79d2\u9593\u306b 60 \u56de\u4ee5\u4e0b\u3067\u3042\u308d\u3046\u3002 \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u5929\u4e95\u306b\u3042\u308b\u86cd\u5149\u706f\u306f\u70b9\u6ec5\u3057\u3066\u77e5\u899a\u3055\u308c\u308b\u306f\u305a\u3067\u3042\u308b\u3002 \u6211\u3005\u304c\u86cd\u5149\u706f\u3092\u5e38\u706f\u5149\u3068\u3057\u3066\u8a8d\u8b58\u3067\u304d\u308b\u3053\u3068\u304b\u3089\u8996\u899a\u60c5\u5831\u51e6\u7406\u904e\u7a0b\u306f 1 \u79d2\u9593\u306b 60 \u56de\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u304b\u884c\u3063\u3066\u3044\u306a\u3044\u3068\u307f\u306a\u305b\u308b\u3002 \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3067\u306f \u6bce\u79d2 30 \u56de\u7a0b\u5ea6\u306e\u5834\u5408\u3082\u3042\u308b\u3002 \u4e00\u65e5 18 \u6642\u9593\u899a\u9192\u3057\u3066\u3044\u3066\uff0c\u305d\u306e\u9593\u306b\u6bce\u79d2 60 \u679a\u306e\u753b\u50cf\u304c\u8996\u899a\u7cfb\u306b\u5165\u529b\u3055\u308c\u3066\u3044\u308b\u3068\u8003\u3048\u308b\u3068\u4e00\u65e5\u3042\u305f\u308a\u306e\u5165\u529b\u753b\u50cf\u6570\u306f\uff0c60 (\u679a/\u79d2) * 60 (\u79d2/\u5206) * 60 (\u5206/\u6642\u9593) * 18 (\u6642\u9593) = 388,8000 \u3067\u3042\u308b\u3002 \u4e00\u65e5\u3042\u305f\u308a 388 \u4e07\u679a\u4ee5\u4e0a\u306e\u753b\u50cf\u3092\u898b\u3066\u4e73\u5150\u306f\u8996\u899a\u60c5\u5831\u51e6\u7406\u3092\u767a\u9054\u3055\u305b\u308b\u3068\u8003\u3048\u308b\u3068\uff0c\u5165\u529b\u30c7\u30fc\u30bf\u6570\u304c 388 \u4e07\u4ee5\u4e0b\u306e\u30c7\u30fc\u30bf\u89e3\u6790\u3067\u306f\uff0c\u65b0\u751f\u5150\u304c\u3055\u3089\u3055\u308c\u3066\u3044\u308b\u8996\u899a\u74b0\u5883\u306b\u63db\u7b97\u3059\u308b\u3068\u4e00\u65e5\u4ee5\u4e0b\u3067\u3042\u308b\u3068\u8a00\u3048\u308b\u3002 \u3053\u306e\u6388\u696d\u3067\u306f\uff0c \u5358\u7d14\u5316\uff0c\u7c21\u7d20\u5316\u3057\u305f\u884c\u52d5\u30e2\u30c7\u30eb\u3068\u3057\u3066\u73fe\u5728\u306e\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0 (\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af) \u30e2\u30c7\u30eb\u3092\u6349\u3048\uff0c\u5fc3\u7406\u5b66\u30e2\u30c7\u30eb\u3068\u3057\u3066\u89e3\u91c8\u3067\u304d\u308b\u304b\u8003\u3048\u308b \u3002","title":"\u7528\u8a9e\u306e\u7406\u89e3\u3068\u533a\u5225:"},{"location":"lect02/#_5","text":"ANN: \u4eba\u5de5\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Artificial Neural Networks BNN: \u751f\u7269\u5b66\u7684\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Biological Neural Networks CNN: \u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Convolutional Neural Networks DNN: \u6df1\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Deep Neural Networks","title":"\u30af\u30a4\u30ba: \u6b21\u306e\u7701\u7565\u5f62\u3092\u8abf\u3079\u3088"},{"location":"lect02/#_6","text":"\u3044\u305a\u308c\u3082\u73fe\u5728\u306e\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u306e\u5f79\u5272\u3092\u679c\u305f\u3057\u3066\u3044\u308b\u3002 arXiv: \u8ad6\u6587\u7f6e\u304d\u5834 Colab: Github: \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u7f6e\u304d\u5834 Stack Oerflow: \u63b2\u793a\u677f\uff0c\u30ce\u30a6\u30cf\u30a6\u96c6 Reddit: \u63b2\u793a\u677f\uff0c\u305f\u3060\u3057\u30d3\u30c3\u30b0\u30cd\u30fc\u30e0\u672c\u4eba\u304c\u964d\u81e8\u3059\u308b\u3053\u3068\u304c\u3042\u308b","title":"\u6b21\u306e\u8a9e\u306e\u793a\u3059\u30b5\u30a4\u30c8\u3092\u8a2a\u308c\uff0c\u305d\u308c\u305e\u308c\u3069\u306e\u3088\u3046\u306a\u30b5\u30a4\u30c8\u304b\u3092\u8abf\u3079\u3088\u3002"},{"location":"lect02/#_7","text":"\u52b4\u50cd\u65b0\u805e\u5e73\u621031\u5e742\u670825\u65e5\u53f7 \u77e5\u8b58\u3092\u62e1\u5f35\u3059\u308b\u9053\u5177 \u4eba\u985e\u306e\u6b74\u53f2\u306e\u5ef6\u9577\u7dda\u4e0a\u306b \u30a4\u30e9\u30b9\u30c8\u3067\u5b66\u3076 \u4eba\u5de5\u77e5\u80fd\u6982\u8ad6 (KS\u60c5\u5831\u79d1\u5b66\u5c02\u9580\u66f8) ( \u8c37\u53e3 ,2014)","title":"\u6587\u732e"},{"location":"lect02/#3","text":"\u4eba\u5de5\u77e5\u80fd \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u5fc3\u7406\u5b66 \u7b2c\u4e00\u6b21 1950- \u8a18\u53f7\u51e6\u7406 \u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3 \u8a8d\u77e5\u9769\u547d \u30aa\u30e2\u30c1\u30e3\u554f\u984c ADALINE \u30cd\u30aa\u30b3\u30b0\u30cb\u30c8\u30ed\u30f3 \u30a2\u30bd\u30b7\u30a2\u30c8\u30ed\u30f3 \u7b2c\u4e8c\u6b21 1980- Expert systems \u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5 \u30b3\u30cd\u30af\u30b7\u30e7\u30cb\u30b9\u30c8 Brooks \u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u8133\u753b\u50cf\u7814\u7a76 \u5f37\u5316\u5b66\u7fd2 \u8a08\u7b97\u8ad6\u7684\u30a2\u30d7\u30ed\u30fc\u30c1 \u7b2c\u4e09\u6b21 2010- \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0 \u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af","title":"3 \u3064\u306e\u5206\u91ce\u306e\u7565\u53f2"},{"location":"lect02/#ai","text":"\u63a8\u8ad6\uff0c\u554f\u984c\u89e3\u6c7a Reasoning, problem solving \u77e5\u8b58\u8868\u8c61 Knowledge representation \u8a08\u753b Planning \u5b66\u7fd2 Learning \u81ea\u7136\u8a00\u8a9e\u51e6\u7406 Natural language processing \u8a8d\u8b58 Perception \u30ed\u30dc\u30c6\u30a3\u30af\u30b9 Motion and manipulation \u793e\u4f1a\u77e5\u80fd Social intelligence \u5275\u9020\u6027 Creativity \u4e00\u822c\u77e5\u80fd General intelligence","title":"AI \u306e\u5206\u91ce"},{"location":"lect02/#ai-5","text":"\u8a08\u7b97\u80fd\u529b\u306e\u5411\u4e0a (\u30e0\u30fc\u30a2\u306e\u6cd5\u5247\uff0cGPU, ASIC) \u30c7\u30fc\u30bf\u7206\u767a (e.g. ImageNet, AMT), \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6539\u5584 (e.g. \u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5, CNN, LSTM) \u57fa\u76e4\u306e\u6574\u5099 (Linux, TCP/IP, Git, ROS, PR2, AWS, TensorFlow) \u30a8\u30b3\u30b7\u30b9\u30c6\u30e0 \u60c5\u5831\u5171\u6709 (arXiv, Git, Reddit, Quora, Stackoverflow, ...) from Karpathy's blog \"Deep Reinforcement Learning: Pong from Pixels\"","title":"AI\u306e\u9032\u6b69\u306e \uff15 \u3064\u306e\u8981\u56e0"},{"location":"lect02/#_8","text":"\u69cb\u6210\u8ad6\u7684\u30a2\u30d7\u30ed\u30fc\u30c1 vs \u5206\u6790\u7684\u30a2\u30d7\u30ed\u30fc\u30c1 \uff08\u4eba\u5de5\u77e5\u80fd\u3068\u5fc3\u7406\u5b66\u3068\u306e\u95a2\u4fc2\uff09 \u795e\u306f\u7d30\u90e8\u306b\u5bbf\u308b God is in the detail. \u3042\u308b\u3044\u306f \u60aa\u9b54\u306f\u7d30\u90e8\u306b\u5bbf\u308b (The devil is in the detail) Carbon chauvinism \u65e5\u672c\u8a9e\u3067\u70ad\u7d20\u6392\u5916\u4e3b\u7fa9\u3068\u8a33\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u672c\u5f53\u3060\u308d\u3046\u304b\uff1f p-\u5024\u5ec3\u6b62\u306e\u5f71\u97ff \u8a08\u7b97\u8ad6\u30e2\u30c7\u30eb","title":"\u8003\u3048\u65b9\uff0c\u80cc\u666f\uff0c\u30ad\u30fc\u30ef\u30fc\u30c9"},{"location":"lect02/#_9","text":"\u6570\u5b66\u7684\u77e5\u8b58\u306e\u8a73\u7d30\u306f\u4e0d\u8981\u3060\u304c\uff0c\u305d\u306e\u7cbe\u795e\u306f\u7406\u89e3\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002 \u4e07\u7269\u306f\u6570\u306a\u308a --- \u30d4\u30bf\u30b4\u30e9\u30b9 \u5b87\u5b99\u306f\u6570\u5b66\u8a9e\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u3002\u6570\u5b66\u306a\u3057\u3067\u306f\u8ff7\u5bae\u3092\u7406\u89e3\u3067\u304d\u306a\u3044 --- \u30ac\u30ea\u30ec\u30a4 \u4f5c\u308c\u306a\u3051\u308c\u3070\u7406\u89e3\u3067\u304d\u305f\u3068\u8a00\u3048\u306a\u3044 --- \u30d5\u30a1\u30a4\u30f3\u30de\u30f3 \u4eca\u969b\u306e\u969b\u306b\u9ed2\u677f\u306b\u66f8\u3044\u3066\u3042\u3063\u305f\u30d5\u30a1\u30a4\u30f3\u30de\u30f3\u306e\u8a00\u8449\uff0c \u30ab\u30ea\u30d5\u30a9\u30eb\u30cb\u30a2\u5de5\u79d1\u5927\u5b66\u30a2\u30fc\u30ab\u30a4\u30d6\u5199\u771f \u82e5\u8005\u3088\uff0c\u6570\u5b66\u306f\u7406\u89e3\u3059\u308b\u3082\u306e\u3067\u306f\u306a\u3044\uff0c\u305f\u3060\u6163\u308c\u308b\u3060\u3051\u3060 --- \u30d5\u30a9\u30f3\u30fb\u30ce\u30a4\u30de\u30f3 \u79d1\u5b66\u306f\u8aac\u660e\u3057\u306a\u3044\u3057\uff0c\u89e3\u91c8\u3082\u3057\u306a\u3044\u3002\u305f\u3060\u30e2\u30c7\u30eb\u3092\u4f5c\u308b\u3060\u3051\u3067\u3042\u308b\u3002\u3053\u306e\u5834\u5408\u30e2\u30c7\u30eb\u3068\u306f\u89b3\u5bdf\u3055\u308c\u305f\u73fe\u8c61\u3092\u8aac\u660e\u3059\u308b\u6570\u5b66(\u7684\u69cb\u6210\u7269)\u3067\u3042\u308b\u3002\u305d\u306e\u30e2\u30c7\u30eb\u306f\uff0c\u3072\u3068\u3048\u306b\u671f\u5f85\u3069\u304a\u308a\u6b63\u78ba\u3067\u3042\u308b\u3053\u3068\u3067\u6b63\u5f53\u5316\u3055\u308c\u308b\u3002 --- \u30d5\u30a9\u30f3\u30fb\u30ce\u30a4\u30de\u30f3 \u308f\u308c\u308f\u308c\u306e\u5b87\u5b99\u306f\u305f\u3060\u5358\u306b\u6570\u5b66\u3067\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3060\u3051\u3067\u306f\u306a\u3044\u3002\u5b87\u5b99\u306f\u6570\u5b66\u3067\u3042\u308b\uff0c\u6211\u3005\u306f\u7686\uff0c\u5927\u304d\u306a\u6570\u5b66\u7684\u5b9f\u614b\u306e\u4e00\u90e8\u306a\u306e\u3060\u3002--- \u30c6\u30b0\u30de\u30fc\u30af","title":"\u6570\u5b66\u3068\u30e2\u30c7\u30eb"},{"location":"lect02/#_10","text":"\u756a\u7d44 nothotdog \u306b\u3064\u3044\u3066 \u521d\u3081\u3066\u306e\u753b\u50cf\u8a8d\u8b58","title":"\u5b9f\u7fd2"},{"location":"lect02/#_11","text":"\u753b\u50cf\u8a8d\u8b58\u306e\u9032\u6b69","title":"\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6b74\u53f2"},{"location":"lect02/#1","text":"","title":"\u7b2c 1 \u6b21\u30cb\u30e5\u30fc\u30ed\u30d6\u30fc\u30e0"},{"location":"lect02/#1950","text":"\u30a6\u30a9\u30fc\u30ec\u30f3\u30fb\u30de\u30c3\u30ab\u30ed\u30c3\u30af\u3068\u30ef\u30a4\u30eb\u30c0\u30fc\u30fb\u30d4\u30c3\u30c4\u306b\u3088\u308b \u5f62\u5f0f\u30cb\u30e5\u30fc\u30ed\u30f3 \u306e\u63d0\u6848 (\u30b5\u30a4\u30d0\u30cd\u30c6\u30a3\u30af\u30b9\u306e\u5275\u59cb\u8005\u30ce\u30fc\u30d0\u30fc\u30c8\u30fb\u30a6\u30a3\u30fc\u30ca\u30fc\u306e\u96c6\u3081\u305f\u7814\u7a76\u8005\u96c6\u56e3) \u30a6\u30a9\u30fc\u30ec\u30f3\u30fb\u30de\u30c3\u30ab\u30ed\u30c3\u30af \u3068 \u30ef\u30a4\u30eb\u30c0\u30fc\u30fb\u30d4\u30c3\u30c4 \u5f62\u5f0f\u30cb\u30e5\u30fc\u30ed\u30f3\u306f\uff0c\u30b7\u30ca\u30d7\u30b9\u7d50\u5408\u8377\u91cd\u30d9\u30af\u30c8\u30eb\u3068\u51fa\u529b\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u306e\u4f1d\u9054\u95a2\u6570\u3068\u3067\u69cb\u6210\u3055\u308c\u308b(\u6b21\u5f0f) y_i=\\phi\\left(\\sum_jw_{ij}x_j\\right),\\label{eq:formal_neuron} \u3053\u3053\u3067 y_i \u306f i \u756a\u76ee\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u51fa\u529b\uff0c x_j \u306f j \u756a\u76ee\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u51fa\u529b\uff0c w_{ij} \u306f\u30cb\u30e5\u30fc\u30ed\u30f3 i \u3068 j \u3068\u306e\u9593\u306e \u30b7\u30ca\u30d7\u30b9\u7d50\u5408\u8377\u91cd \u3002 \\phi \u306f\u6d3b\u6027\u5316\u95a2\u6570\u3002 \u5f62\u5f0f\u30cb\u30e5\u30fc\u30ed\u30f3","title":"1950\u5e74\u4ee3:"},{"location":"lect02/#rosenblatt","text":"\u30d5\u30e9\u30f3\u30af\u30fb\u30ed\u30fc\u30bc\u30f3\u30d6\u30e9\u30c3\u30c8 \u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u306e\u6a21\u5f0f\u56f3 \u30df\u30f3\u30b9\u30ad\u30fc\u3068\u30d1\u30d1\u30fc\u30c8\u300c\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u300d\u3088\u308a \u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u6a21\u5f0f\u56f3 wikipedia \u3088\u308a 1960 \u5e74\uff0c\u30df\u30f3\u30b9\u30ad\u30fc\u3068\u30d1\u30d1\u30fc\u30c8\u306e\u6279\u5224 \u7b2c\u4e00\u6b21\u6c37\u6cb3\u671f\u306e\u5230\u6765","title":"\u30ed\u30fc\u30bc\u30f3\u30d6\u30e9\u30c3\u30c8 Rosenblatt \u306e\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3"},{"location":"lect02/#2","text":"1986 \u5e74\uff0cPDP \u30d6\u30c3\u30af\uff0c\u4fd7\u306b\u8a00\u3046\u30d0\u30a4\u30d6\u30eb\uff0c\u767a\u8868 1989 \u5e74\uff0c\u30d0\u30d7\u30cb\u30c3\u30af\uff0c\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u767a\u8868 \u7b2c\u4e8c\u6b21\u6c37\u6cb3\u671f\u306e\u5230\u6765","title":"\u7b2c 2 \u6b21\u30cb\u30e5\u30fc\u30ed\u30d6\u30fc\u30e0"},{"location":"lect02/#3_1","text":"2013 ICLR \u30b9\u30bf\u30fc\u30c8 arXiv.org \u306b\u4e88\u3081\u8ad6\u6587\u3092\u6295\u7a3f\uff0c\u8ab0\u3067\u3082\u8aad\u3081\u308b\uff0c\u8ab0\u3067\u3082\u6279\u5224\u3067\u304d\u308b\u3002\u8457\u8005\u306f\u305d\u308c\u306b\u7b54\u3048\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\u3042\u3063\u3068\u3044\u3046\u9593\u306b\u30c8\u30c3\u30d7\u30ab\u30f3\u30d5\u30a1\u30ec\u30f3\u30b9\u3068\u306a\u308b 2013 Mikolov word2vec \u3092\u767a\u8868 Mikolov\u306e\u985e\u63a8\u8ab2\u984c 2013 DeepMind DQN \u3092\u767a\u8868 DQN\u306e\u7d50\u679c \u30ae\u30e3\u30e9\u30ac\u306e\u30c7\u30e2 2014 Neural Image Captioning \u304c\u6ce8\u76ee\u3092\u96c6\u3081\u308b\u3002 Human: A group of men playing Frisbee in the park. Machine: A group of young people playing a game of Frisbee. 2015 \u753b\u50cf\u751f\u6210\u6280\u8853\u304c\u6ce8\u76ee\u3092\u6d74\u3073\u308b 2015 \u4eba\u5de5\u77e5\u80fd\u5b66\u4f1a\u304c\u65e5\u672c\u3067\u306f\u300c \u6df1\u5c64\u5b66\u7fd2 \u300d\u3068\u547c\u3076\u3053\u3068\u306b\u6c7a\u5b9a\u3059\u308b 2016 GAN \u304c\u6ce8\u76ee\u3092\u6d74\u3073\u308b Generative Adversarial Text to Image Synthesis Generative Adversarial Text to Image Synthesis arXiv:1605.05396v2 2016 \u30a2\u30e1\u30ea\u30ab\u5408\u5dde\u56fd\u5927\u7d71\u9818\u5019\u88dc\u306e\u4e00\u4eba\u306e\u767a\u8a00\u3092\u6a21\u5023\u3059\u308b\u300c\u30c7\u30a3\u30fc\u30d7\u30c8\u30e9\u30f3\u30d7\u300d\u304c\u30c4\u30a3\u30c3\u30bf\u30fc\u4e0a\u3067\u6ce8\u76ee\u3092\u96c6\u3081\u308b 2016 \u30a2\u30eb\u30d5\u30a1\u7881\u304c\u30a4\u30fb\u30bb\u30c9\u30eb\u3092\u7834\u308b \u30a2\u30eb\u30d5\u30a1\u7881 Nature\u3088\u308a","title":"\u7b2c 3 \u6b21\u30cb\u30e5\u30fc\u30ed\u30d6\u30fc\u30e0"},{"location":"lect02/#_12","text":"source: frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen> source:","title":"\u30dc\u30b9\u30c8\u30f3\u30fb\u30c0\u30a4\u30ca\u30df\u30af\u30b9\u793e\u30d3\u30c7\u30aa"},{"location":"lect02/#_13","text":"source:","title":"\u30d5\u30a7\u30a4\u30af\u753b\u50cf\u306e\u751f\u6210"},{"location":"lect03/","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA) \u00b6 Shin Aasakawa , all rights reserved. Date: 22/May/2020 Appache 2.0 license \u672c\u65e5\u306e\u30ad\u30fc\u30ef\u30fc\u30c9 \u00b6 \u8a13\u7df4\u30c7\u30fc\u30bf\uff0c\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\uff0c\u691c\u8a3c\u30c7\u30fc\u30bf \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af neural networks \u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3 perceptron \u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af convolutional neural netoworks \u30ec\u30c6\u30a3\u30ce\u30c8\u30d4\u30fc retinotopy, \u30c8\u30ce\u30c8\u30d4\u30fc tonotopy, \u30bd\u30de\u30c8\u30d4\u30fc somatopy, \u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5 error back propagation \u640d\u5931\u95a2\u6570 loss functions, \u8aa4\u5dee\u95a2\u6570 error functions, \u76ee\u7684\u95a2\u6570 objective functions, \u76ee\u6a19\u95a2\u6570 target functions \u52fe\u914d\u964d\u4e0b\u6cd5 gradient descent methods \u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u95a2\u6570 softmax function \u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc cross entropy \u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5 stochastic gradient descent methods \u8272\u3092\u8584\u304f\u3057\u3066\u3042\u308b\u306e\u306f\uff0c\u3053\u3053\u307e\u3067\u9032\u307e\u306a\u3044\u3060\u308d\u3046\u3068\u3044\u3046\u4e88\u60f3\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002 \u672c\u65e5\u306e\u8ab2\u984c \u30af\u30a4\u30ba\u306e\u7b54\u3048: \u00b6 ANN: \u4eba\u5de5\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Artificial Neural Networks BNN: \u751f\u7269\u5b66\u7684\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Biological Neural Networks CNN: \u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Convolutional Neural Networks DNN: \u6df1\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Deep Neural Networks \u5c0f\u30cd\u30bf \u00b6 ANN, BNN, CNN, DNN \u306f\u5197\u8ac7\u3067\u3059\u3002 \u3053\u306e\u5206\u91ce\u4ee5\u5916\u3067\u306f\uff0c\u3082\u3061\u308d\u3093 ANN \u306f \u30aa\u30fc\u30eb\u30ca\u30a4\u30c8\u30cb\u30c3\u30dd\u30f3\u3067\u3042\u3063\u305f\u308a\uff0cBNN \u306f\u30d6\u30eb\u30fc\u30e0\u30d0\u30fc\u30b0\u30cb\u30e5\u30fc\u30b9\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3060\u3063\u305f\u308a\uff0c CNN \u306f\u30b1\u30fc\u30d6\u30eb\u30cb\u30e5\u30fc\u30b9\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3060\u3063\u305f\u308a\u3057\u307e\u3059\u3002 DNN \u306f\u5e02\u6c11\u6a29\u3092\u5f97\u3066\u304d\u305f\u611f\u304c\u3042\u308b\u306e\u3067 \u30c7\u30a3\u30fc\u30d7\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u826f\u3044\u3067\u3057\u3087\u3046 colab \u306b\u81ea\u5206\u306e\u305f\u3081\u306e\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u66f8\u304f\u305f\u3081\u306b markdown \u306e\u66f8\u5f0f\u3092\u899a\u3048\u3066\u304a\u3044\u305f\u65b9\u304c\u826f\u3044\u3067\u3059\u3002(\u88dc\u8b1b\u3067\u5c11\u3057\u53d6\u308a\u4e0a\u3052\u307e\u3057\u305f) \u6700\u5148\u7aef\u306e\u8a71\u3092\u3057\u3066\u3044\u307e\u3059\u3002\u753b\u50cf\u51e6\u7406\u304c\u4eba\u9593\u3092\u8d85\u3048\u308b\u6027\u80fd\u3092\u793a\u3059\u3088\u3046\u306b\u306a\u3063\u305f\u304b\u3089\uff0c\u6700\u8fd1\u306e AI \u30d6\u30fc\u30e0\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u308c\u306f\uff0c\u7b2c\u4e8c\u56de\u306e\u6388\u696d\u3067\u3082\u53d6\u308a\u4e0a\u3052\u307e\u3057\u305f\u3002\u3060\u304b\u3089\u3053\u305d\uff0c\u3053\u306e\u6388\u696d\u304c\u3042\u308a\u307e\u3059\u3002\u5e72\u304b\u3089\u3073\u305f\u5316\u77f3\u306e\u3088\u3046\u306a\u77e5\u8b58\u3092\u6559\u3048\u308b\u3064\u3082\u308a\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30b8\u30a7\u30d5\u30a7\u30ea\u30fc\u30fb\u30d2\u30f3\u30c8\u30f3\u306e\u30de\u30af\u30bb\u30eb\u8cde\u53d7\u8cde\u8a18\u5ff5\u8b1b\u6f14(2016) \u6b21\u5143\u5727\u7e2e t-SNE \u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u5c0f\u53f2 \u6570\u5f0f\u306e\u8aad\u307f\u65b9 \u82e6\u3044\u6559\u8a13 Sutton \u306e\u30d6\u30ed\u30b0\uff0c\u82e6\u3044\u6559\u8a13 \u30aa\u30ea\u30b8\u30ca\u30eb Sutton's blog bitter lesson \u3068\u3053\u308d\u3067\u77e5\u80fd\u3068\u306f\u4f55\u3060\u308d\u3046\u304b\uff1f \u5fc3\u7406\u5b66\u8005\u306e\u8003\u3048\u305f\u77e5\u80fd \u5b9f\u7fd2 \u00b6 \u3082\u3046\u5c11\u3057\u8a73\u3057\u304f\u30b9\u30c6\u30c3\u30d7\u30d0\u30a4\u30b9\u30c6\u30c3\u30d7\u3067\u753b\u50cf\u8a8d\u8b58 \u7b2c\u4e00\u5c64\u76ee\u306e\u8996\u899a\u5316 - \u8996\u899a\u7279\u5fb4\u306e\u8996\u899a\u5316\u3002 \u30ac\u30dc\u30fc\u30eb\u30d1\u30c3\u30c1 \u3042\u308b\u3044\u306f \u30ac\u30dc\u30fc\u30eb\u30d5\u30a3\u30eb\u30bf \u3068\u304b\uff0c\u8272\u30d6\u30ed\u30c3\u30d6\u3002 from Difference between AlexNet, VGGNet, ResNet, and Inception CNN \u306e\u7279\u5fb4 \u00b6 \u6b21\u306e 7 \u3064\u3092\u4e0a\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059 \u3002 \u975e\u7dda\u5f62\u6d3b\u6027\u5316\u95a2\u6570 (nonlinear activation functions) \u7573\u8fbc\u307f\u6f14\u7b97 (convolutional operation) \u30d7\u30fc\u30ea\u30f3\u30b0\u51e6\u7406 (pooling) \u30c7\u30fc\u30bf\u62e1\u5f35 (data augmentation) \u30d0\u30c3\u30c1\u6b63\u898f\u5316 (batch normalization) \u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8(shortcut) GPU \u306e\u4f7f\u7528 \u4e0a\u8a18 7 \u3064\u306e\u7279\u5fb4\u3092\u8aac\u660e\u3059\u308b\u306e\u306f\u5c02\u9580\u7684\u306b\u306a\u308a\u3059\u304e\u308b\u306e\u3067\u7701\u7565\u3057\u307e\u3059\u3002\u4e00\u3064\u3060\u3051\u8aac\u660e\u3059\u308b\u3068\u3059\u308c\u3070\u6700\u5f8c\u306e GPU \u3068\u306f\u9ad8\u89e3\u50cf\u5ea6\u3067\u3057\u304b\u3082\u51e6\u7406\u901f\u5ea6\u3092\u5fc5\u8981\u3068\u3059\u308b\u30d1\u30bd\u30b3\u30f3\u30b2\u30fc\u30e0\u3067\u7528\u3044\u3089\u308c\u308b\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30dc\u30fc\u30c9\u306e\u3053\u3068\u3067\u3059\u3002 \u8a73\u7d30\u306a\u753b\u50cf\u3092\u9ad8\u901f\u306b\u753b\u9762\u306b\u8868\u793a\u3059\u308b\u5fc5\u8981\u304b\u3089\u958b\u767a\u3055\u308c\u305f\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30dc\u30fc\u30c9\u3067\u3059\u304c\uff0c\u5927\u898f\u6a21\u306a\u30cb\u30e5\u30fc\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u8a08\u7b97\u3067\u3082\u7528\u3044\u3089\u308c\u308b\u6570\u5b66\u304c\u540c\u3058\u3067\u3059\u3002 \u305d\u306e\u305f\u3081\uff0c\u30b2\u30fc\u30e0\u7528\u306b\u958b\u767a\u3055\u308c\u305f\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30dc\u30fc\u30c9\u304c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3082\u7528\u3044\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u7279\u5fb4 \u00b6 from Democratize AI slides \u30c7\u30fc\u30bf\u30cf\u30f3\u30b0\u30ea\u30fc data hungry \u8a08\u7b97\u8cc7\u6e90\u30cf\u30f3\u30b0\u30ea\u30fc resource hungry \u7406\u8ad6\u6b20\u5982 theory lagging \u4e0d\u900f\u660e opacity \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u7d20\u4eba\u306e\u7d71\u8a08\u5b66\u3067\u3042\u308b, Anderson et. al (1993) ... But Neural networks are not alchemy. 1. \u751f\u7406\u5b66 \u00b6 Van Essen & Gallant (1994) Left: Thorpe et al.(2001), Right: Felleman & Van Essen (1992) source: https://en.wikipedia.org/wiki/Retinotopy \u30d2\u30e5\u30fc\u30d9\u30eb\u3068\u30a6\u30a3\u30fc\u30bc\u30eb Hubel and Wiesel (1969) \u00b6 source: https://youtu.be/4nwpU7GFYe8 \u30c8\u30dd\u30b0\u30e9\u30d5\u30c3\u30af\u30de\u30c3\u30d4\u30f3\u30b0 topographic mappings (\u5730\u5f62\u56f3): \u7db2\u819c\u3084\u76ae\u819a\u306a\u3069\u306e\u4f53\u5236\u611f\u899a\uff0c\u7b4b\u8089\u7cfb\u306e\u3088\u3046\u306a\u52b9\u679c\u5668\u7cfb\u3092\u3001\u4e2d\u67a2\u795e\u7d4c\u7cfb\u306e 1 \u3064\u4ee5\u4e0a\u306e\u69cb\u9020\u7269\u306b\u6574\u7136\u3068\u6295\u5f71\u3057\u305f\u5730\u56f3\u3002 \u5730\u5f62\u56f3\u306f\u3001\u3059\u3079\u3066\u306e\u611f\u899a\u7cfb\u3068\u591a\u304f\u306e\u904b\u52d5\u7cfb\u3067\u89b3\u5bdf\u3055\u308c\u308b\u3002 \u30c8\u30ce\u30c8\u30d4\u30fc tonotopy\uff08\u30ae\u30ea\u30b7\u30e3\u8a9e\u306etono=\u5468\u6ce2\u6570\u3001topos=\u5834\u6240\uff09\u3068\u306f\u3001\u7570\u306a\u308b\u5468\u6ce2\u6570\u306e\u97f3\u304c\u8133\u5185\u3067\u51e6\u7406\u3055\u308c\u308b\u5834\u6240\u306e\u7a7a\u9593\u7684\u914d\u7f6e\u306e\u3053\u3068\u3002 \u5468\u6ce2\u6570\u304c\u8fd1\u3044\u97f3\u306f\u3001\u8133\u5185\u306e\u5834\u6240\u7684\u306b\u96a3\u63a5\u3059\u308b\u9818\u57df\u3067\u8868\u73fe\u3055\u308c\u308b\u3002\u30c8\u30ce\u30c8\u30d4\u30c3\u30af\u5730\u56f3\u3068\u3082\u547c\u3070\u308c\u308b \u30bd\u30de\u30c8\u30d4\u30fc somatopy: \u4e2d\u67a2\u795e\u7d4c\u7cfb\u4e0a\u306e\u7279\u5b9a\u306e\u70b9\u3078\u8eab\u4f53\u9818\u57df\u306e\u7167\u5c04\uff0c\u6295\u5f71\u306e\u3053\u3068\u3002 \u8eab\u4f53\u9818\u57df\u306f \u7b2c\u4e00\u6b21\u4f53\u6027\u611f\u899a\u76ae\u8cea (\u5f8c\u8179\u56de) \u306b\u6295\u5f71\u3055\u308c\u308b\u3002 \u5178\u578b\u7684\u306b\u306f \u7279\u5b9a\u306e\u8eab\u4f53\u90e8\u4f4d\u3068 \u305d\u306e\u305d\u308c\u305e\u308c\u306e\u4f4d\u7f6e\u3092 \u30db\u30e0\u30f3\u30af\u30eb\u30b9 homunclus (\u5c0f\u4eba) \u4e0a\u306b\u914d\u7f6e\u3059\u308b \u611f\u899a\u30db\u30e0\u30f3\u30af\u30eb\u30b9\u3068\u3057\u3066\u8868\u73fe\u3055\u308c\u308b\u3002 \u7d30\u304b\u304f\u5236\u5fa1\u3055\u308c\u3066\u3044\u308b\u90e8\u4f4d (\u6307\uff0c\u820c) \u306f\u4f53\u6027\u611f\u899a\u91ce\u306e\u9762\u7a4d\u304c\u5927\u304d\u3044\u3002\u4e00\u65b9 \u7c97\u304f\u5236\u5fa1\u3055\u308c\u3066\u3044\u308b\u90e8\u4f4d (\u4f53\u5e79) \u306f\u9762\u7a4d\u304c\u5c0f\u3055\u3044\u3002\u5185\u81d3\u306e\u3088\u3046\u306a\u9818\u57df\u306f\u4f53\u6027\u611f\u899a\u91ce\u306e\u4f4d\u7f6e\u3092\u6301\u305f\u306a\u3044\u3002 \u30ec\u30c6\u30a3\u30ce\u30c8\u30d4\u30fc retinotopy: \u7db2\u819c\u304b\u3089\u306e\u8996\u899a\u5165\u529b\u3092\u795e\u7d4c\u7d30\u80de \u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u3053\u3068\u3002\u54fa\u4e73\u985e\u306e\u8133\u306b\u591a\u304f\u898b\u3089\u308c\u308b\u3002\u3053\u306e\u5730\u56f3\u306e\u5927\u304d\u3055\u3001\u6570\u3001\u7a7a\u9593\u7684\u914d\u7f6e\u306f\u7a2e\u9593\u3067\u7570\u306a\u308b\u3002 \u8996\u91ce\u306e\u96a3\u63a5\u3059\u308b\u70b9 \u304c \u540c\u3058\u9818\u57df \u306e \u96a3\u63a5\u3059\u308b \u9818\u57df\u3067 \u8868\u73fe\u3055\u308c\u308b \u3068\u306f\u9650\u3089\u306a\u3044\u3068\u3044\u3046\u610f\u5473\u3067\u3001\u8907\u96d1\u306a\u5730\u56f3\u3068\u306a\u308b\u3002 \u4f8b\u3048\u3070 \u7b2c 2 \u6b21\u8996\u899a\u91ce (V2) \u3067\u306e\u8996\u899a\u5730\u56f3\u306f \u8996\u91ce\u306e\u4e0a\u534a\u5206\u306b\u5fdc\u7b54\u3059\u308b\u7db2\u819c\u306e\u90e8\u5206\u304c \u8996\u91ce\u306e\u4e0b\u534a\u5206\u306b\u5fdc\u7b54\u3059\u308b\u90e8\u5206\u304b\u3089\u5206\u96e2\u3055\u308c\u3066\u8868\u73fe\u3055\u308c\u3066\u3044\u308b\u3002\u7b2c\uff13\u6b21\u8996\u899a\u91ce (V3) \u3084 \u7b2c4\u6b21\u8996\u899a\u91ce (V4) \u3067\u306f\u4e0b\u4f4d\u306e\u8996\u899a\u91ce\u306b\u6bd4\u3079\u3066 \u3088\u308a\u8907\u96d1\u306a\u8868\u73fe\u304c\u306a\u3055\u308c\u3066\u3044\u308b \u30d6\u30ec\u30a4\u30af\u30e2\u30a2 \u3068 \u30af\u30fc\u30d1\u30fc Blackmore and Cooper (1970) \u00b6 source: https://youtu.be/QzkMo45pcUo source: https://youtu.be/RSNofraG8ZE \u4e00\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u4eee\u8aac One algorithm hypothesis \u00b6 Sur (1988) \u3088\u308a \u8074\u899a\u8996\u5e8a\u3078\u306e\u5b9f\u9a13\u7684\u306b\u8a98\u5c0e\u3055\u308c\u305f\u7db2\u819c\u6295\u5f71\uff08\u30cf\u30c3\u30c1\u30f3\u30b0\u3055\u308c\u305f\u9818\u57df\uff09\u304a\u3088\u3073\u8074\u899a\u8996\u5e8a\u3068\u8074\u899a\u76ae\u8cea\u306e\u63a5\u7d9a\u3002 \u624b\u8853\u3057\u305f\u534a\u7403\u3068\u306f\u53cd\u5bfe\u5074\u306e\u773c\u306f\u3001\u751f\u304d\u6b8b\u3063\u3066\u3044\u308b\u80cc\u5074LGN\uff08LGd\uff09\u3068\u8179\u5074LGN\uff08LGv\uff09\u3001\u304a\u3088\u3073MGN\u306e\u80cc\u5074\u3068\u8179\u5074\u306e\u533a\u753b\u5185\u306e\u30d1\u30c3\u30c1\uff08\u305d\u308c\u305e\u308cMGd\u3068MG\uff09\u306b\u6295\u5f71\u3059\u308b\u3002 \u8996\u5e8a\u306e\u508d\u77e2\u72b6\u5207\u7247\u3092\u756a\u53f7\u4ed8\u304d\u3067\u793a\u3059\u3002 \u8996\u5e8a\u306e\u508d\u77e2\u72b6\u5207\u7247\u306e \u540c\u3058\u52d5\u7269\u306b\u3001\u4e00\u6b21\u8074\u899a\u91ce\uff08Al\uff09\u306bHRP\u3092\u6ce8\u5165\u3057\u305f\u5834\u5408\uff08\u6ce8\u5165\u90e8\u4f4d\u306f\u5de6\u4e0a\u306b\u793a\u3059\uff09\u3001\u7d30\u80de\u304c\u5145\u586b\u3055\u308c\u308b\u3002 \u30c9\u30c3\u30c8\u3067\u793a\u3055\u308c\u3066\u3044\u308b\uff09MG \"MGd\u3067\u306f\u9006\u884c\u6027\u306b\u3001MGv\u3067\u306f\u5f8c\u907a\u75c7\u8907\u5408\u4f53\u306e\u5074\u65b9\u5206\u88c2\uff08P01\uff09\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3002MGd\u3068MGv\u306e\u591a\u304f\u306e\u7d30\u80de\u304c\u7db2\u819c\u7a81\u8d77\u5e2f\u3092\u8986\u3063\u3066\u3044\u308b\u3002 Metin and Frost (1989) Visual responses of neurons in somatosensory cortex of hamsters with experimentally induced retinal projections to somatosensory thalamus Roe et al. (1992) Visual Projections Routed to the Auditory Pathway in Ferrets: Receptive Fields of Visual Neurons in Primary Auditory Cortex 2. \u5fc3\u7406\u5b66 \u00b6 \u30bb\u30eb\u30d5\u30ea\u30c3\u30b8 Selfridge \u306e\u30d1\u30f3\u30c7\u30e2\u30cb\u30a6\u30e0 pandemonium \u30e2\u30c7\u30eb \u00b6 \u30bb\u30eb\u30d5\u30ea\u30c3\u30b8 (1958) ``Mechanisation of Thought Processes'' \u3088\u308a \u30bb\u30eb\u30d5\u30ea\u30c3\u30b8 (1958) ``Mechanisation of Thought Processes'' \u3088\u308a \u30bb\u30eb\u30d5\u30ea\u30c3\u30b8 (1958) ``Mechanisation of Thought Processes'' \u3088\u308a \u751f\u7406\u5b66\uff0c\u8996\u899a\u5fc3\u7406\u5b66\u3068\u306e\u5bfe\u5fdc \u00b6 Julesz Julesz (1981) Textons, the elements of texture perception, and their interactions, Nature Julesz (1981) Fig. 2 \u3088\u308a Marr Computational approach: Vision (1908) Poggio Poggio, Torre, and Koch (1985) Computational vision and regularization theory \u5fc3\u7406\u5b66\u30e2\u30c7\u30eb Psycholosophical consideration \u00b6 Epistemology \u601d\u5ff5\u7684\uff0c\u89b3\u5ff5\u7684 Empirical Episitemology \u5b9f\u8a3c\u7684 = psychology Constructive epipstemology \u69cb\u6210\u8ad6\u7684 = computer vision, neural networks Marr Computational approach: Vision (1908) Poggio Poggio, Torre, and Koch (1985) Computational vision and regularization theory \u751f\u7406\u5b66\u3068\u306e\u5bfe\u5fdc (Hubel and Wiesel \u306e\u30cd\u30b3\u3068\u30b5\u30eb, Blackmore \u306e\u30cd\u30b3, \u30f4\u30a1\u30f3\u30a8\u30c3\u30bb\u30f3) \u00b6 \u5c64\u9593\u306e\u7d50\u5408\u306e\u4ed5\u65b9, \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 forward/backward \u5f79\u5272\uff0c\u6a5f\u80fd\uff0c\u5b9f\u73fe\u65b9\u6cd5 \u5074\u6291\u5236 lateral inhibition (\u3053\u308c\u306b\u3064\u3044\u3066\u306f\u591a\u5c64\u5316\u3057\u3066\u56de\u907f\u3067\u304d\u308b\u53ef\u80fd\u6027\u3042\u308a) shape from X \u306f\u6b63\u3057\u304b\u3063\u305f\u306e\u304b\uff1f \u305f\u3060\u3057\u767a\u9054\u5fc3\u7406\u5b66\u306b\u304a\u3051\u308b\u30b7\u30a7\u30a4\u30d7\u30d0\u30a2\u30b9\u306f\u8a00\u8a9e\u767a\u9054\u306b\u304a\u3044\u3066\u91cd\u8981\u306a\u610f\u5473\u3092\u6301\u3064\u306f\u305a\u3002\u3060\u304b\u3089\u3068\u8a00\u3063\u3066\u4e73\u5e7c\u5150\u306f\u305d\u306e\u3088\u3046\u306b\u5f37\u5236(\u8105\u8feb\uff1f)\uff0c\u77ef\u6b63\u3055\u308c\u3066\u80b2\u3064\u308f\u3051\u3067\u306f\u306a\u3044\u3060\u308d\u3046\u3002 Ritter (2017) Cognitive Psychology for Deep Neural Networks: A Shape Bias Case Study Landau, Smith, Jones (1992) Syntactic Context and the Shape Bias in Childrens and Adults Lexical Learning Yamins (2016) Using goal-driven deep learning models to understand sensory cortex Julez \u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u8996\u899a\u7814\u7a76\u8005 Haar, SIFT, DoG \u306a\u3069\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u958b\u767a\u8005\u3068\u5bfe\u5fdc Poggio (1985) Computational Vision and Regularization Theory Marr and Poggio (1976) \u00b6 \u4e2d\u67a2\u795e\u7d4c\u7cfb\u306f 4 \u3064\u306e\u307b\u307c\u72ec\u7acb\u3057\u305f\u30ec\u30d9\u30eb\u306e\u8a18\u8ff0\u3067\u7406\u89e3\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 1. \u8a08\u7b97\u306e\u6027\u8cea\u304c\u8868\u73fe\u3055\u308c\u308b\u30ec\u30d9\u30eb\u3001 2. \u8a08\u7b97\u3092\u5b9f\u88c5\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u7279\u5fb4\u3065\u3051\u3089\u308c\u308b\u30ec\u30d9\u30eb\u3001 3. \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u7279\u5b9a\u306e\u30e1\u30ab\u30cb\u30ba\u30e0\u306b\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u30ec\u30d9\u30eb\u3001 4. \u30e1\u30ab\u30cb\u30ba\u30e0\u304c\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3067\u5b9f\u73fe\u3055\u308c\u308b\u30ec\u30d9\u30eb \u3067\u3042\u308b\u3002 \u4e00\u822c\u7684\u306b\u3001\u8a08\u7b97\u306e\u6027\u8cea\u306f\u89e3\u6c7a\u3059\u3079\u304d\u554f\u984c\u306b\u3088\u3063\u3066\u6c7a\u5b9a\u3055\u308c\u3001\u4f7f\u7528\u3055\u308c\u308b\u30e1\u30ab\u30cb\u30ba\u30e0\u306f\u5229\u7528\u53ef\u80fd\u306a\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306b\u4f9d\u5b58\u3057\u3001\u9078\u629e\u3055\u308c\u308b\u7279\u5b9a\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u554f\u984c\u3068\u5229\u7528\u53ef\u80fd\u306a\u30e1\u30ab\u30cb\u30ba\u30e0\u306b\u4f9d\u5b58\u3059\u308b\u3002 \u306e\u3061\u306b 3 \u3064\u306b\u307e\u3068\u3081\u3089\u308c\uff0c\u305d\u308c\u304c\u6709\u540d\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3067\u3059\u304c\uff0c\u51fa\u59cb\u3081\u306f 4 \u3064\u3067\u3057\u305f\u3002\u4ed6\u306e\u6388\u696d\u3067\u306f Marr \u306e 3 \u6c34\u6e96\u3068\u547c\u3070\u308c\u308b\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002 \u305d\u306e\u6709\u540d\u306b\u306a\u3063\u305f Marr \u306e 3 \u6c34\u6e96\u3068\u306f 1. \u8a08\u7b97\u8ad6 2. \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 3. \u5b9f\u88c5 \u306b\u3042\u305f\u308a\u307e\u3059\u3002\u8133\u3092\u7406\u89e3\u3059\u308b\u4e0a\u3067\uff0c3 \u3064\u3092\u533a\u5225\u3057\u3066\u8003\u3048\u307e\u3057\u3087\u3046\u3068\u3044\u3046\u30b9\u30ed\u30fc\u30ac\u30f3\u3067\u3059\u3002 \u73fe\u4ee3\u7684\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u3068\u751f\u7406\u5b66\u3068\u306e\u5bfe\u5fdc \u00b6 Zeiller 2012 \u3088\u308a Zeiler et. al. (2010) Fig. 7, and 8 \u76ee\u6a19\u99c6\u52d5\u578b\u30e2\u30c7\u30ea\u30f3\u30b0\u306e\u69cb\u6210\u8981\u7d20\u3002 \u5185\u5074\u306e\u5186\u306f\u3001\u4e0e\u3048\u3089\u308c\u305f\u6570\u306e\u30ec\u30a4\u30e4\u30fc\u306e\u30e2\u30c7\u30eb\u3092\u542b\u3080\u5b8c\u5168\u306a\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u306e\u90e8\u5206\u7a7a\u9593\u3092\u8868\u3059\u3002 \u76ee\u6a19\u99c6\u52d5\u30e2\u30c7\u30eb\u306f\u3001\u7279\u306b\u6700\u9069\u306a\u30e2\u30c7\u30eb\u3092\u767a\u898b\u3059\u308b\u305f\u3081\u306b\u3001\u30e2\u30c7\u30eb\u30fb\u30af\u30e9\u30b9\u5185\u306e\u8ecc\u9053\uff08\u5b9f\u7dda\uff09\u306b\u6cbf\u3063\u3066\u30b7\u30b9\u30c6\u30e0\u3092\u99c6\u52d5\u3059\u308b\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08\u9ed2\u306e\u70b9\u7dda\u77e2\u5370\uff09\u3092\u4f7f\u7528\u3057\u3066\u69cb\u7bc9\u3055\u308c\u308b\u3002 \u5404\u30b4\u30fc\u30eb\u306f\u3001\u305d\u306e\u30b4\u30fc\u30eb\u3092\u89e3\u304f\u306e\u306b\u7279\u306b\u9069\u3057\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u542b\u3080\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\uff08\u592a\u3044\u9ed2\u306e\u7b49\u9ad8\u7dda\uff09\u5185\u306e\u5f15\u304d\u5bc4\u305b\u306e\u76c6\u5730\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u8a08\u7b97\u7d50\u679c\u306f\u3001\u8ab2\u984c\u304c\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u8a2d\u5b9a\u306b\u5f37\u3044\u5236\u7d04\u3092\u4e0e\u3048\u308b\u3053\u3068\u3092\u793a\u3059\u3002 \u3059\u306a\u308f\u3061\u3001\u4e0e\u3048\u3089\u308c\u305f\u8ab2\u984c\u306e\u6700\u9069\u5316\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30bb\u30c3\u30c8\u306f\u3001\u5143\u306e\u7a7a\u9593\u306b\u6bd4\u3079\u3066\u975e\u5e38\u306b\u5c0f\u3055\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308b\u3002 \u3053\u308c\u3089\u306e\u76ee\u6a19\u99c6\u52d5\u30e2\u30c7\u30eb\u306f\u3001\u4e0e\u3048\u3089\u308c\u305f\u8ab2\u984c\u9818\u57df\u3067\u306e\u884c\u52d5\u306e\u6839\u5e95\u306b\u3042\u308b\u3068\u8003\u3048\u3089\u308c\u3066\u3044\u308b\u8133\u9818\u57df\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u5fdc\u7b54\u7279\u6027\u3092\u3069\u306e\u7a0b\u5ea6\u4e88\u6e2c\u3067\u304d\u308b\u304b\u306b\u3064\u3044\u3066\u8a55\u4fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u4f8b\u3048\u3070\u3001\u5358\u8a9e\u8a8d\u8b58\u306e\u305f\u3081\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u30e2\u30c7\u30eb\u306e\u30e6\u30cb\u30c3\u30c8\u3001\u8074\u899a\u76ae\u8cea\u306e\u4e00\u6b21\u9818\u57df\u3001\u30d9\u30eb\u30c8\u9818\u57df\u3001\u30d1\u30e9\u30d9\u30eb\u30c8\u9818\u57df\u306e\u5fdc\u7b54\u7279\u6027\u3068\u6bd4\u8f03\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u307e\u305f\u3001\u30e2\u30c7\u30eb\u3092\u4e92\u3044\u306b\u6bd4\u8f03\u3057\u3066\u3001\u7570\u306a\u308b\u30bf\u30a4\u30d7\u306e\u8ab2\u984c\u304c\u3069\u306e\u7a0b\u5ea6\u306e\u795e\u7d4c\u69cb\u9020\u306e\u5171\u6709\u306b\u3064\u306a\u304c\u308b\u304b\u3092\u5224\u65ad\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002 \u307e\u305f\u3001\u69d8\u3005\u306a\u69cb\u6210\u8981\u7d20\u306e\u30eb\u30fc\u30eb\uff08\u6559\u5e2b\u3042\u308a\u3001\u6559\u5e2b\u306a\u3057\u3001\u534a\u6559\u5e2b\u3042\u308a\uff09\u3092\u7814\u7a76\u3057\u3066\u3001\u305d\u308c\u3089\u304c\u751f\u5f8c\u306e\u767a\u9054\u3084\u5c02\u9580\u77e5\u8b58\u5b66\u7fd2\u306e\u9593\u306b\u3069\u306e\u3088\u3046\u306b\u7570\u306a\u308b\u30c0\u30a4\u30ca\u30df\u30af\u30b9\u306b\u3064\u306a\u304c\u308b\u304b\u3092\u5224\u65ad\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\uff08\u7dd1\u306e\u7834\u7dda\u306e\u30d1\u30b9\uff09\u3002 3. \u7573\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8(CNN) \u00b6 \u6df1\u5c64\u5b66\u7fd2 (\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0) \u306e\u4e2d\u3067 \u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af CNN \u3068\u547c\u3070\u308c\u308b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3064\u3044\u3066\u89e3\u8aac\u3057\u307e\u3059\u3002 \u6700\u521d\u306b\u753b\u50cf\u51e6\u7406\u306e\u6982\u7565\u3092\u8ff0\u3079\u308b CNN \u304c\uff0c\u305d\u308c\u307e\u3067\u4e3b\u6d41\u3067\u3042\u3063\u305f\u5f93\u6765\u306e\u624b\u6cd5\u306e\u6027\u80fd\u3092\u51cc\u99d5\u3057\u305f\u3053\u3068\u306f\u3059\u3067\u306b\u8ff0\u3079\u307e\u3057\u305f\u3002 CNN \u306e\u7279\u5fb4\u306e\u4e00\u3064\u306b \u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9 \u3068\u547c\u3070\u308c\u308b\u8003\u3048\u65b9\u304c\u3042\u308a\u307e\u3059\u3002 \u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u3068\u306f\uff0c\u5f93\u6765\u624b\u6cd5\u306b\u3088\u308b\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u30b7\u30b9\u30c6\u30e0\u3067\u306f\uff0c\u5c02\u9580\u5bb6\u306b\u3088\u308b\u624b\u306e\u8fbc\u3093\u3060\u8a73\u7d30\u306a\u4f5c\u308a\u8fbc\u307f\u3092\u5fc5\u8981\u3068\u3057\u3066\u3044\u305f\u3053\u3068\u3068\u7570\u306a\u308a\uff0c\u9762\u5012\u306a\u4f5c\u308a\u8fbc\u307f\u3092\u305b\u305a\u3068\u3082\u6027\u80fd\u304c\u5411\u4e0a\u3057\u305f\u3053\u3068\u3092\u6307\u3057\u307e\u3059\u3002 \u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u306a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3088\u308a\uff0c\u6b21\u306e\u3053\u3068\u304c\u5b9f\u73fe\u3057\u307e\u3057\u305f\u3002 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5c64\u3054\u3068\u306b\uff0c\u7279\u5fb4\u62bd\u51fa\u304c\u884c\u308f\u308c\uff0c\u62bd\u51fa\u3055\u308c\u305f\u7279\u5fb4\u304c\u3088\u308a\u9ad8\u6b21\u306e\u5c64\u3078\u3068\u4f1d\u9054\u3055\u308c\u308b \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5404\u5c64\u3067\u306f\uff0c\u6bd4\u8f03\u7684\u5358\u7d14\u306a\u7279\u5fb4\u304b\u3089\u6b21\u7b2c\u306b\u8907\u96d1\u306a\u7279\u5fb4\u3078\u3068\u6bb5\u968e\u7684\u306b\u5909\u5316\u3059\u308b \u9ad8\u6b21\u5c64\u306b\u307f\u3089\u308c\u308b\u7279\u5fb4\u306f\u4f4e\u6b21\u5c64\u306e\u7279\u5fb4\u3088\u308a\u5927\u57df\u7684\uff0c\u666e\u904d\u7684\u3067\u3042\u308b \u9ad8\u6b21\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306f\uff0c\u4f4e\u6b21\u5c64\u3067\u62bd\u51fa\u3055\u308c\u305f\u7279\u5fb4\u3092\u5171\u6709\u3057\u3066\u3044\u308b \u3053\u306e\u3053\u3068\u3092\u7c21\u5358\u306b\u8aac\u660e\u3057\u3066\u307f\u307e\u3059\u3002 \u6211\u3005\u4eba\u9593\u306f\uff0c\u5916\u754c\u3092\u8a8d\u8b58\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u8a08\u7b97\u3092\uff0c\u751f\u7269\u7a2e\u3068\u3057\u3066\u306e\u767a\u751f\u306e\u904e\u7a0b\u3068\uff0c\u500b\u4eba\u306e\u767a\u9054\u3092\u901a\u3057\u3066\u306e\u7d4c\u9a13\u306b\u57fa\u3065\u304f\u8a8d\u8b58\u30b7\u30b9\u30c6\u30e0\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u3068\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5f93\u3063\u3066\u6211\u3005\u306e\u8996\u899a\u8a8d\u8b58\u306b\u306f\u5316\u77f3\u6642\u4ee3\u306b\u59cb\u307e\u308b\u5149\u306e\u53d7\u5bb9\u5668\u3068\u3057\u3066\u306e\u773c\u306e\u9032\u5316\u306e\u6b74\u53f2\u3068\u767a\u9054\u3092\u901a\u3058\u305f\u500b\u4eba\u306e\u8996\u899a\u7d4c\u9a13\u304c\u53cd\u6620\u3055\u308c\u305f\u7d50\u679c\u3067\u3082\u3042\u308a\u307e\u3059\u3002 \u4eba\u5de5\u77e5\u80fd\u306e\u76ee\u6a19\u306f\uff0c\u3053\u306e\u8907\u96d1\u306a\u7279\u5fb4\u691c\u51fa\u904e\u7a0b\u3092\u3069\u3046\u3084\u3063\u305f\u3089\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u7372\u5f97\u3067\u304d\u308b\u304b\u3068\u3044\u3046\u3053\u3068\u3067\u3082\u3042\u308a\u307e\u3059\u3002 \u5916\u754c\u3092\u8a8d\u8b58\u3059\u308b\u305f\u3081\u306b\u4eca\u65e5\u307e\u3067\u8003\u6848\u3055\u308c\u3066\u304d\u305f\u30e2\u30c7\u30eb\uff08\u4f8b\u3048\u3070\uff0c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306a\u3069\u306f\uff09\u306f\u8907\u96d1\u3067\u3059\u3002 \u3067\u3059\u304c\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3059\u308b\u305f\u3081\u306e\u5b66\u7fd2\u65b9\u6cd5\u306f\u305d\u308c\u307b\u3069\u96e3\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002 \u3053\u306e\u610f\u5473\u3067\u753b\u50cf\u8a8d\u8b58\u8ab2\u984c\u304c\u6b63\u3057\u304f\u52d5\u4f5c\u3059\u308b\u305f\u3081\u306e\u30dd\u30a4\u30f3\u30c8\u306f\uff0c\u8a8d\u8b58\u30b7\u30b9\u30c6\u30e0\u304c\u554f\u984c\u3092\u89e3\u304f\u4e8b\u304c\u53ef\u80fd\u306a\u307b\u3069\u8907\u96d1\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u3067\u306f\u306a\u304f\uff0c\u5341\u5206\u306b\u8907\u96d1\u304c\u8996\u899a\u74b0\u5883\uff0c\u3059\u306a\u308f\u3061\u753b\u50cf\u8a8d\u8b58\u306e\u5834\u5408\uff0c\u5916\u90e8\u306e\u8266\u6a4b\u3092\u53cd\u6620\u3059\u308b\u305f\u3081\u306b\u5341\u5206\u306a\u91cf\u306e\u50cf\u30c7\u30fc\u30bf\u3092\u5bb9\u6613\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u5426\u304b\u306b\u3042\u308a\u307e\u3059\u3002 \u4eca\u65e5\u306e CNN \u306b\u3088\u308b\u753b\u50cf\u8a8d\u8b58\u6027\u80fd\u306e\u5411\u4e0a\u306f\uff0c\u7c21\u5358\u306a\u8a08\u7b97\u65b9\u6cd5\u3092\u7528\u3044\u3066\u8907\u96d1\u306a\u5916\u90e8\u74b0\u5883\u306b\u9069\u5fdc\u3067\u304d\u308b\u8a8d\u8b58\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3059\u308b\u65b9\u6cd5\u304c\u78ba\u7acb\u3057\u305f\u304b\u3089\u3067\u3042\u308b\u3068\u8a00\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u4e0b\u56f3 \u306b\u753b\u50cf\u51e6\u7406\u306e\u4f8b\u3092\u6319\u3052\u307e\u3057\u305f\u3002 Goodfellow et al. (2017) Fig.1 \u3092\u6539\u5909 \u6211\u3005\u306f \u753b\u50cf\u3092\u307b\u307c\u77ac\u6642\u306b\u5224\u65ad\u3067\u304d\u307e\u3059\u3002 \u3067\u3059\u304c\u753b\u50cf\u8a8d\u8b58\u306e\u96e3\u3057\u3055\u306f\uff0c\u5165\u529b\u753b\u50cf\u304c\u4e0a\u56f3 \u306b\u793a\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u5165\u529b\u4fe1\u53f7\u306e\u6570\u5b57\u306e\u96c6\u307e\u308a\u3067\u3057\u304b\u7121\u3044\u3053\u3068\u3067\u3059\u3002 \u3053\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u3092\u4f55\u5ea6\u3082\u7d4c\u9a13\u3059\u308b\u3053\u3068\u3067\u30cd\u30b3\u3092\u8b58\u5225\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u5165\u529b\u3055\u308c\u308b\u753b\u50cf\u306f\u6570\u5b57\u306e\u584a\u306b\u904e\u304e\u307e\u305b\u3093\u3002 \u72b6\u6cc1\u3054\u3068\u306b\u3068\u308b\u3079\u304d\u64cd\u4f5c\u3092\u547d\u4ee4\u3068\u3057\u3066\u9010\u4e00\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u4e0e\u3048\u308b\u6307\u793a\u3059\u308b\u624b\u9806\u306e\u96c6\u307e\u308a\u306e\u3053\u3068\u3092\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u547c\u3073\u307e\u3059\u3002\u4eba\u9593\u304c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u64cd\u4f5c\u3084\u547d\u4ee4\u306b\u3088\u3063\u3066\u753b\u50cf\u8a8d\u8b58\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308b\u5834\u5408\uff0c\u547d\u4ee4\u305d\u306e\u3082\u306e\u304c\u81a8\u5927\u306b\u306a\u3063\u305f\u308a\uff0c\u305d\u3082\u305d\u3082\u8aac\u660e\u3059\u308b\u3053\u3068\u304c\u96e3\u3057\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002 \u4f8b\u3092\u6319\u3052\u308c\u3070\uff0c\u304a\u6bcd\u3055\u3093\u3092\u601d\u3044\u6d6e\u304b\u3079\u3066\u304f\u3060\u3055\u3044\u3068\u8a00\u308f\u308c\u308c\u3070\u8ab0\u3067\u3082\uff0c\u305d\u308c\u305e\u308c\u7570\u306a\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u3042\u308c\u601d\u3044\u6d6e\u304b\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\uff0c\u63d0\u793a\u3055\u308c\u305f\u753b\u50cf\u304c\u81ea\u5206\u306e\u6bcd\u89aa\u306e\u3082\u306e\u3067\u3042\u308b\u304b\uff0c\u5225\u306e\u5973\u6027\u3067\u3042\u308b\u304b\u306e\u5224\u65ad\u306f\u4eba\u9593\u3067\u3042\u308c\u3070\u7c21\u5358\u3067\u3059\u3002\u3068\u3053\u308d\u304c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u306f\u96e3\u3057\u3044\u8ab2\u984c\u3068\u306a\u308a\u307e\u3059\u3002 \u52a0\u3048\u3066\u6bcd\u89aa\u306e\u7279\u5fb4\u3092\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u7406\u89e3\u3067\u304d\u308b\u547d\u4ee4\u3068\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3059\u308b\u3053\u3068\u3082\u96e3\u3057\u3044\u8ab2\u984c\u3067\u3059\u3002\u3064\u307e\u308a\u81ea\u5206\u306e\u6bcd\u89aa\u306e\u7279\u5fb4\u3092\u66d6\u6627\u306a\u8a00\u8449\u3067\u306a\u304f\u660e\u78ba\u306b\u8aac\u660e\u3059\u308b\u3068\u306a\u308b\u3068\u3068\u3066\u3082\u96e3\u3057\u3044\u8ab2\u984c\u3068\u306a\u308a\u307e\u3059\u3002 \u3068\u3044\u3046\u306e\u306f\uff0c\u5973\u6027\u306e\u9854\u5199\u771f\u3067\u3042\u308c\u3070\u3069\u306e\u5199\u771f\u3082\u4f3c\u3066\u3044\u308b\u3068\u8a00\u3048\u308b\u304b\u3089\u3067\u3059\u3002\u9854\u306e\u9020\u5f62\u3084\u8f2a\u90ed\uff0c\u9aea\u306e\u4f4d\u7f6e\u306a\u3069\u306f\u3069\u306e\u753b\u50cf\u3082\u985e\u4f3c\u3057\u3066\u3044\u308b\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u3068\u3053\u308d\u304c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u306f\u3053\u306e\u4f3c\u3066\u3044\u308b\uff0c\u4f3c\u3066\u3044\u3044\u306a\u3044\u306e\u533a\u5225\u304c\u96e3\u3057\u3044\u306e\u3067\u3059\u3002 \u52a0\u3048\u3066\uff0c\u540c\u4e00\u30cd\u30b3\u306e\u753b\u50cf\u3067\u3042\u3063\u3066\u3082\uff0c\u88ab\u5199\u4f53\u306e\u5411\u304d\u8996\u7dda\u306e\u65b9\u5411\u3084\u5149\u6e90\u306e\u4f4d\u7f6e\u3084\u64ae\u5f71\u6761\u4ef6\u304c\u7570\u306a\u308c\u3070\u753b\u50cf\u3068\u3057\u3066\u306f\u7570\u306a\u308a\u307e\u3059\u3002 \u4e0b\u56f3\u306b\u793a\u3057\u305f\u3088\u3046\u306b\u5165\u529b\u753b\u50cf\u306e\u4e2d\u306e\u7279\u5b9a\u306e\u5024\u3060\u3051\u3092\u8abf\u3079\u3066\u307f\u3066\u3082\uff0c\u5165\u529b\u753b\u50cf\u304c\u30cd\u30b3\u3067\u3042 \u308b\uff0c\u305d\u3046\u3067\u306f\u306a\u3044\u304b\u3092\u5224\u65ad\u3059\u308b\u3053\u3068\u306f\u96e3\u3057\u3044\u8ab2\u984c\u306b\u306a\u308a\u307e\u3059\u3002 \u73fe\u5728\u306e\u753b\u50cf\u8a8d\u8b58\u3067\u306f\uff0c\u7279\u5b9a\u306e\u753b\u7d20\u306e\u60c5\u5831\u306b\u4f9d\u5b58\u305b\u305a\u306b\uff0c\u5165\u529b\u753b\u50cf\u304c\u6301\u3063\u3066\u3044\u308b\u7279\u5fb4 \u3092\u3068\u3089\u3048\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u307e\u3059\u3002\u305f\u3068\u3048\u3070\uff0c\u30cd\u30b3\u3092\u8a8d\u8b58\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3053\u3068\u306f\uff0c\u30cd \u30b3\u306b\u7279\u5fb4\u7684\u306a\u300c\u30cd\u30b3\u76ee\u300d\u3084\u300c\u30cd\u30b3\u8db3\u300d\u3092\u691c\u51fa\u3059\u308b\u3053\u3068\u3067\u3042\u308b\u3068\u8003\u3048\u307e\u3059\u3002\u5165\u529b\u753b\u50cf \u304b\u3089\uff0c\u30cd\u30b3\u306e\u6301\u3064\u7279\u5fb4\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308c\u3070\uff0c\u305d\u308c\u3089\u306e\u7279\u5fb4\u3092\u6301\u3063\u3066\u3044\u308b\u5165\u529b \u753b\u50cf\u306f\u30cd\u30b3\u3067\u3042\u308b\u3068\u5224\u65ad\u3057\u3066\u826f\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059(\u4e0b\u56f3 )\u3002 \u4e0b\u56f3 \u306f\uff0c\u97f3\u58f0\u8a8d\u8b58\u3068\u753b\u50cf\u8a8d\u8b58\u306e\u4e21\u5206\u91ce\u306b\u304a\u3044\u3066 CNN \u304c\u7528\u3044\u3089\u308c\u308b\u4ee5\u524d\u306e\u5f93\u6765\u624b\u6cd5 \u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002 \u4e0a\u56f3 \u306e\u3088\u3046\u306a\u5f93\u6765\u624b\u6cd5\u306b\u5bfe\u3057\u3066\uff0cCNN \u3067\u306f\u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u306a\u7279\u5fb4\u62bd\u51fa\u3092\u591a\u5c64\u591a\u6bb5\u306b\u91cd\u306d\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u8907\u96d1\u306a\u7279\u5fb4\u3092\u62bd\u51fa(\u691c\u51fa)\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059 (\u4e0b\u56f3 )\u3002 \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u306f\u30cd\u30b3\u76ee\u7279\u5fb4\u691c\u51fa\u5668\uff0c\u30cd\u30b3\u8db3\u7279\u5fb4\u691c\u51fa\u5668\u306f\u5099\u308f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u305d\u3053\u3067\u753b\u50cf\u8a8d\u8b58\u7814\u7a76\u3067\u306f\uff0c\u753b\u50cf\u306e\u7d71\u8a08\u7684\u6027\u8cea\u306b\u57fa\u3065\u3044\u3066\u7279\u5fb4\u691c\u51fa\u5668\u3092\u7b97\u51fa\u3059\u308b\u65b9\u6cd5\u3092\u63a2\u3059\u52aa\u529b\u304c\u884c\u308f\u308c\u3066\u304d\u307e\u3057\u305f\u3002 \u3057\u304b\u3057\uff0c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u30cd\u30b3\u76ee\u7279\u5fb4\u3084\u30cd\u30b3\u8db3\u7279\u5fb4\u3092\u6559\u3048\u308b\u306f\u5bb9\u6613\u306a\u3053\u3068\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u3053\u306e\u3053\u3068\u306f\u753b\u50cf\u51e6\u7406\u306e\u5206\u91ce\u3060\u3051\u306b\u9650\u308a\u307e\u305b\u3093\uff0c\u97f3\u58f0\u8a8d\u8b58\u3067\u3082\u8a00\u8a9e\u60c5\u5831\u51e6\u7406\u3067\u3082\u305d\u308c\u305e\u308c\u306e\u7279\u5fb4\u5668\u3092\u4e00\u3064\u4e00\u3064\u5b9a\u7fa9\u3057\uff0c\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u306e\u306f\u6642\u9593\u304c\u304b\u304b\u308a\uff0c\u5c02\u9580\u7684\u306a\u77e5\u8b58\u3082\u5fc5\u8981\u3067\u56f0\u96e3\u306a\u4f5c\u696d\u3067\u3057\u305f\u3002 \u9818\u57df\u5207\u308a\u51fa\u3057 \u00b6 \u753b\u50cf\u51e6\u7406\u3068\u8a00\u8a9e\u51e6\u7406\u3068\u306e\u878d\u5408 \u00b6 \u307e\u3068\u3081\u308b\u3068\uff0c1950 \u5e74\u4ee3\u5f8c\u534a\u4ee5\u6765:\u56fa\u5b9a\u7684\uff0c\u624b\u5de5\u82b8\u7684\u7279\u5fb4\u62bd\u51fa\u5668\u3068\u5b66\u7fd2\u53ef\u80fd\u306a\u5206\u985e\u5668\u3092\u7528\u3044\u305f\u8a8d\u8b58\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308b\u3053\u3068\u304c\u8a66\u307f\u3089\u308c\u3066\u304d\u305f\u3068\u3044\u3048\u307e\u3059\u3002 \u3053\u308c\u306b\u5bfe\u3057\u3066 CNN \u304c\u4e3b\u6d41\u3068\u306a\u3063\u305f\u73fe\u5728\u306f\u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u3067\u5b66\u7fd2\u53ef\u80fd\u306a\u7279\u5fb4\u62bd\u51fa\u5668\u3092\u591a\u6570\u91cd\u306d\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u6027\u80fd\u304c\u5411\u4e0a\u3057\u307e\u3057\u305f\u3002 \u5922\u306e\u3088\u3046\u306a\u8a71\u304c\u7d9a\u304d\u307e\u3057\u305f\u304c\uff0c\u672c\u7bc0\u306e\u6700\u5f8c\u306b\u9006\u306b CNN \u306f\u7c21\u5358\u306b\u9a19\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u4f8b \u3092\u6319\u3052\u3066\u304a\u304d\u307e\u3059 \u3002 \u56f3\u3067\u306f\uff0c\u5de6\u306e\u753b\u50cf\u304c\u5165\u529b\u753b\u50cf\u3067\uff0cCNN \u306f\u78ba\u4fe1\u5ea6 57.7\u30d1\u30fc\u30bb\u30f3\u30c8\u3067\u30d1\u30f3\u30c0\u3067\u3042\u308b\u8a8d\u8b58\u3057\u307e\u3057\u305f\u3002 \u3068\u3053\u308d\u304c\u3053\u306e\u753b\u50cf\u306b 0.007\u3060\u3051\u610f\u5473\u306e\u306a\u3044\u753b\u50cf(\u56f3\u4e2d\u592e)\u3092\u52a0\u3048\u308b\u305f\u753b\u50cf(\u56f3\u53f3)\u3092 CNN \u306f 99.3\u30d1\u30fc\u30bb\u30f3\u30c8\u306e\u78ba\u4fe1\u5ea6\u3067\u30c6\u30ca\u30ac\u30b6\u30eb (gibbon)\u3068\u5224\u65ad\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u4f8b\u306f\u3053\u3053\u3067\u306f\u8a73\u3057\u304f\u89e6\u308c\u308b\u3053\u3068\u306f\u3057\u307e\u305b\u3093\u304c \u6575\u5bfe\u7684\u5b66\u7fd2 \u3068\u547c\u3076\u8a13\u7df4\u624b\u6cd5\u3092\u8aac\u660e\u3059\u308b\u969b\u306b\u7528\u3044\u3089\u308c\u305f\u4f8b\u3067\u3059 \u3002 \u3053\u306e\u4f8b\u304b\u3089\u3082\u5206\u304b\u308b\u3053\u3068\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u307e\u3068\u3081\u3089\u308c\u308b\u3067\u3057\u3087\u3046\u3002 \u3059\u306a\u308f\u3061\uff0c\u4eba\u9593\u306e\u8133\u3092\u6a21\u3057\u305f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3042\u308b CNN \u304c\u5927\u898f\u6a21\u5316\u50cf\u8a8d\u8b58\u30c1\u30e3\u30ec\u30f3\u30b8\u306b\u304a\u3044\u3066\u4eba\u9593\u306e\u8a8d\u8b58\u6027\u80fd\u3092\u8d8a\u3048\u305f\u3068\u5831\u9053\u3055\u308c\u307e\u3057\u305f\u3002 \u3067\u3059\u304c\uff0c\u4eba\u9593\u306e\u8996\u899a\u8a8d\u8b58\u3092\u5b8c\u5168\u306b\u5b9f\u73fe\u3057\u305f\u3068\u8003\u3048\u308b\u306e\u306f\u65e9\u8a08\u3067\uff0c\u89e3\u304f\u3079\u304d\u8ab2\u984c\u306f\u672a\u3060\u591a\u6570\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 \u3053\u306e\u72b6\u6cc1\u306f\uff0c\u97f3\u58f0\u8a8d\u8b58\u3084\u8a00\u8a9e\u60c5\u5831\u51e6\u7406\u3067\u3082\u540c\u69d8\u3067\u3042\u308b\u3068\u8a00\u3048\u307e\u3059\u3002 \u8a8d\u77e5\u8a08\u7b97\u8ad6\u7684\u795e\u7d4c\u79d1\u5b66 Cognitive computational neuroscience \u00b6 Kriegeskorte and Doglas (2018) Fig. 2\u3088\u308a \u8133\u306e\u6a5f\u80fd\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u306f\u3069\u3046\u3044\u3046\u3053\u3068\u304b\uff1f \u8a8d\u77e5\u8a08\u7b97\u795e\u7d4c\u79d1\u5b66\u306e\u76ee\u7684\u306f\u5b9f\u4e16\u754c\u306e\u8a8d\u77e5\u8ab2\u984c\u3092\u9042\u884c\u53ef\u80fd\u3067\uff0c\u751f\u7269\u5b66\u7684\u59a5\u5f53\u6027\u3092\u6301\u3064\u8a08\u7b97\u30e2\u30c7\u30eb\u3092\u7528\u3044\u3066\u52d5\u7269\u3084\u4eba\u9593\u306e\u795e\u7d4c\u6d3b\u52d5\u3068\u884c\u52d5\u306e\u591a\u304f\u306e\u89b3\u6e2c\u7d50\u679c\u3092\u8aac\u660e\u3059\u308b\u3053\u3068\u3067\u3042\u308b\u3002 \u6b74\u53f2\u7684\u306b\u306f\u5404\u5206\u91ce\uff08\u5186\uff09\u306f\u3053\u308c\u3089\u8ab2\u984c\u306e\u56de\u554f\u984c\uff08\u767d\u30e9\u30d9\u30eb\uff09\u306b\u53d6\u308a\u7d44\u3093\u3067\u304d\u305f\u3002 CNN \u306e\u8a73\u7d30 \u00b6 \u901a\u5e38\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u306f\uff0c\u76f4\u4e0b\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u3068\u305d\u306e\u3059\u3050\u4e0a\u306e\u5c64\u306e\u5168\u30cb\u30e5\u30fc\u30ed\u30f3\u3068\u7d50\u5408\u3092\u6709\u3059\u308b\u3002\u4e00\u65b9 CNN \u3067\u306f\u305d\u306e\u7d50\u5408\u304c\u90e8\u5206\u7684\u3067\u3042\u308b\u3002 \u5404\u30cb\u30e5\u30fc\u30ed\u30f3\u306f\u591a\u5165\u529b\u4e00\u51fa\u529b\u306e\u4fe1\u53f7\u5909\u63db\u6a5f\u3068\u307f\u306a\u3059\u3053\u3068\u304c\u3067\u304d\uff0c\u6d3b\u6027\u5316\u95a2\u6570\u306b\u975e\u7dda\u5f62\u306a\u95a2\u6570\u3092\u7528\u3044\u308b\u70b9\u306f\u901a\u5e38\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u540c\u69d8\u3002 \u753b\u50cf\u51e6\u7406\u3092\u8003\u3048\u308b\u5834\u5408\uff0c\u5178\u578b\u7684\u306b\u306f\u4e00\u679a\u306e\u5165\u529b\u9759\u6b62\u753b\u753b\u50cf\u306f 3 \u6b21\u5143\u30c7\u30fc\u30bf\u3067\u3042\u308b\u3002\u6b21\u5143\u306f\u5e45w\uff0c\u9ad8\u3055h\uff0c\u5965\u884c\u304dd \u3067\u3042\u308a\uff0c\u5165\u529b\u753b\u50cf\u3067\u306f\u5965\u884c\u304d\u304c\uff13\u6b21\u5143\uff0c\u3059\u306a\u308f\u3061\u8d64\u7dd1\u9752\u306e\u4e09\u539f\u8272\u3002\u51fa\u529b\u30cb\u30e5\u30fc\u30ed\u30f3\u3078\u306e\u5165\u529b\u306f\u5c40\u6240\u7d50\u5408\u304b\u3089\u5c0f\u9818\u57df\u306b\u9650\u5c40\u3055\u308c\u308b\u3002 1. CNN\u306e\u69cb\u6210 \u00b6 CNN \u306f\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u5c64\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\uff1a \u7573\u8fbc\u307f\u5c64 \u30d7\u30fc\u30ea\u30f3\u30b0\u5c64 \u5b8c\u5168\u7d50\u5408\u5c64 \uff08\u901a\u5e38\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u6b63\u78ba\u306b\u540c\u3058\u3082\u306e\uff0cCNN \u3067\u306f\u6700\u7d42 1 \u5c64\u307e\u305f\u306f\u6700\u7d42 1,2 \u5c64\u306b\u7528\u3044\u308b\uff09 \u5165\u529b\u4fe1\u53f7\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5024\u304c\u7570\u306a\u308b\u6d3b\u6027\u5316\u95a2\u6570\u306b\u3088\u3063\u3066\u975e\u7dda\u5f62\u5909\u63db\u3055\u308c\u308b\u3002 \u7573\u8fbc\u307f\u5c64\u3068\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u3068\u8907\u6570\u7a4d\u307f\u91cd\u306d\u308b\u3053\u3068\u3067\u591a\u5c64\u5316\u3092\u5b9f\u73fe\u3057\uff0c\u6df1\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u306a\u308b\u3002 \u4f8b\uff1a \u00b6 \u753b\u50cf\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u4fe1\u53f7\u3078\u5909\u63db \u5404\u5c64\u306f\u5225\u3005\u306e\u5f79\u5272\uff08\u7573\u8fbc\u307f\uff0c\u5168\u7d50\u5408\uff0cReLU, \u30d7\u30fc\u30ea\u30f3\u30b0\uff09 \u5165\u529b\u4fe1\u53f7\u306f 3 \u6b21\u5143\u30c7\u30fc\u30bf\uff0c\u51fa\u529b\u4fe1\u53f7\u3082 3 \u6b21\u5143\u30c7\u30fc\u30bf \u5b66\u7fd2\u3059\u3079\u304d\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u3064\u5c64\u306f\u7573\u8fbc\u307f\u5c64\uff0c\u5168\u7d50\u5408\u5c64 \u5b66\u7fd2\u3059\u3079\u304d\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u305f\u306a\u3044\u5c64\u306f ReLU \u5c64\u3068\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64 \u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u3064\u5c64\u306f\u7573\u8fbc\u307f\u5c64, \u5168\u7d50\u5408\u5c64, \u30d7\u30fc\u30ea\u30f3\u30b0\u5c64 \u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u305f\u306a\u3044\u5c64\u306f ReLU\u5c64 CNN \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3: \u5165\u529b\u5c64\u306f\u751f\u753b\u50cf\u306e\u753b\u7d20\u5024(\u5de6)\u3092\u683c\u7d0d\u3001\u6700\u5f8c\u5c64\u306f\u5206\u985e\u78ba\u7387(\u53f3)\u3092\u51fa\u529b\u3002\u51e6\u7406\u7d4c\u8def\u306b\u6cbf\u3063\u305f\u6d3b\u6027\u306e\u5404\u30dc\u30ea\u30e5\u30fc\u30e0\u306f\u5217\u3068\u3057\u3066\u793a\u3055\u308c\u3066\u3044\u308b\u30023D\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u8996\u899a\u5316\u3059\u308b\u3053\u3068\u306f\u96e3\u3057\u3044\u305f\u3081\u3001\u5404\u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u30b9\u30e9\u30a4\u30b9\u3092\u884c\u3054\u3068\u306b\u914d\u7f6e\u3057\u3066\u3042\u308b\u3002\u6700\u7d42\u5c64\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\u306f\u5404\u30af\u30e9\u30b9\u306e\u30b9\u30b3\u30a2\u3092\u4fdd\u6301\u3059\u308b\u304c\u3001\u30bd\u30fc\u30c8\u3055\u308c\u305f\u4e0a\u4f4d5\u30b9\u30b3\u30a2\u3060\u3051\u3092\u8996\u899a\u5316\u3057\u3001\u305d\u308c\u305e\u308c\u306e\u30e9\u30d9\u30eb\u3092\u5370\u5237\u3057\u3066\u3042\u308b\u3002 \u5165\u529b\u5c64[32x32x3]: \u4fe1\u53f7\u306f\u753b\u50cf\u306e\u751f\u30c7\u30fc\u30bf\uff08\u753b\u7d20\u5024\uff09\u5e45w(32)\uff0c\u9ad8\u3055h(32)\u3001\u8272\u30c1\u30e3\u30cd\u30eb3(R, G, B) \u7573\u8fbc\u307f\u5c64: \u4e0b\u4f4d\u5c64\u306e\u9650\u5c40\u3055\u308c\u305f\u5c0f\u9818\u57df\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u51fa\u529b\u306e\u8377\u91cd\u4ed8\u304d\u7dcf\u548c\u3092\u8a08\u7b97(\u5185\u7a4d\uff0c\u30c9\u30c3\u30c8\u7a4d\uff09\u300212\u500b\u306e\u30d5\u30a3\u30eb\u30bf\u3092\u4f7f\u7528\u3059\u308b\u3068[32x32x12]\u3068\u306a\u308b\u3002 ReLU\u5c64\u306e\u6d3b\u6027\u5316\u95a2\u6570\u306f ReLU (Recutified Linear Unit) max(0,x) \u30d7\u30fc\u30ea\u30f3\u30b0\u5c64: \u7a7a\u9593\u6b21\u5143\uff08\u5e45,\u9ad8\u3055\uff09\u306b\u6cbf\u3063\u3066\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3092\u5b9f\u884c\u3002[16x16x12]\u306e\u3088\u3046\u306b\u306a\u308b\u3002 \u5168\u7d50\u5408\u5c64\u306f\u30af\u30e9\u30b9\u306b\u5c5e\u3059\u308b\u78ba\u7387\u3092\u8a08\u7b97: 10 \u306e\u6570\u5b57\u306e\u305d\u308c\u305e\u308c\u304c CIFAR-10 \u306e 10 \u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u5206\u985e\u78ba\u7387\u306b\u5bfe\u5fdc\u3059\u308b\u30b5\u30a4\u30ba[1x1x10]\u306b\u5909\u63db\u3002\u901a\u5e38\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u540c\u69d8\u3001\u5168\u7d50\u5408\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306f\u524d\u5c64\u306e\u5168\u30cb\u30e5\u30fc\u30ed\u30f3\u3068\u7d50\u5408\u3059\u308b\u3002 CNN \u306f\u5143\u753b\u50cf\uff08\u5165\u529b\u5c64\uff09\u304b\u3089\u5206\u985e\u78ba\u7387\uff08\u51fa\u529b\u5c64\uff09\u3078\u5909\u63db\u3002\u5b66\u7fd2\u3059\u3079\u304d\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u3064\u5c64\uff08\u7573\u8fbc\u307f\u5c64\uff0c\u5168\u7d50\u5408\u5c64\uff09\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u305f\u306a\u3044\u5c64\uff08ReLU\u5c64\uff09\u304c\u5b58\u5728\u3002\u7573\u8fbc\u307f\u5c64\u3068\u5168\u7d50\u5408\u5c64\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u52fe\u914d\u964d\u4e0b\u6cd5\u3067\u8a13\u7df4 2. \u7573\u8fbc\u5c64 \u00b6 \u30cd\u30aa\u30b3\u30b0\u30cb\u30c8\u30ed\u30f3\u306e\u6982\u7565\u56f3(Fukushima, 1979) LeNet5 (LeCun, 1998) \u30a2\u30ec\u30c3\u30af\u30b9\u30cd\u30c3\u30c8(Krizensky et al. 2012) \u30a2\u30ec\u30c3\u30af\u30b9\u30cd\u30c3\u30c8\u306e\u51fa\u529b\u4f8b(Krizensky et al. 2012) \u7573\u8fbc\u307f\u5c64\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5b66\u7fd2\u53ef\u80fd\u306a\u30d5\u30a3\u30eb\u30bf\u306e\u7d44 \u5168\u30d5\u30a3\u30eb\u30bf\u306f\u7a7a\u9593\u7684\u306b\uff08\u5e45\u3068\u9ad8\u3055\u306b\u6cbf\u3063\u3066\uff09\u5c0f\u3055\u304f\u306a\u308b \u30d5\u30a3\u30eb\u30bf\u306f\u5165\u529b\u4fe1\u53f7\u306e\u6df1\u3055\u3068\u540c\u4e00 \u7b2c1\u5c64\u306e\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba\u306f\u4f8b\u3048\u3070 5\u00d75\u00d73\uff085 \u753b\u7d20\u5206\u306e\u5e45\uff0c\u9ad8\u3055\uff0c\u3068\u6df1\u3055 3\uff08\uff13\u539f\u8272\u306e\u8272\u30c1\u30e3\u30f3\u30cd\u30eb\uff09 \u5404\u5c64\u306e\u9806\u65b9\u5411\u306e\u8a08\u7b97\u306f\u5165\u529b\u4fe1\u53f7\u306e\u5e45\u3068\u9ad8\u3055\u306b\u6cbf\u3063\u3066\u5404\u30d5\u30a3\u30eb\u30bf\u3092\u6c34\u5e73\u307e\u305f\u306f\u5782\u76f4\u65b9\u5411\u3078\u30b9\u30e9\u30a4\u30c9 \u30d5\u30a3\u30eb\u30bf\u306e\u5404\u5024\u3068\u5165\u529b\u4fe1\u53f7\u306e\u7279\u5b9a\u306e\u4f4d\u7f6e\u306e\u4fe1\u53f7\u3068\u306e\u5185\u7a4d\uff08\u30c9\u30c3\u30c8\u7a4d\uff09\u3002 \u5165\u529b\u4fe1\u53f7\u306b\u6cbf\u3063\u3066\u6c34\u5e73\uff0c\u5782\u76f4\u65b9\u5411\u306b\u30d5\u30a3\u30eb\u30bf\u3092\u30b9\u30e9\u30a4\u30c9 \u5404\u7a7a\u9593\u4f4d\u7f6e\u3067\u30d5\u30a3\u30eb\u30bf\u306e\u5fdc\u7b54\u3092\u5b9a\u3081\u308b 2 \u6b21\u5143\u306e\u6d3b\u6027\u5316\u5730\u56f3\u304c\u751f\u6210\u3055\u308c\u308b \u5b66\u7fd2\u306e\u7d50\u679c\u7372\u5f97\u3055\u308c\u308b\u30d5\u30a3\u30eb\u30bf\u306e\u5f62\u72b6\u306b\u306f\u3001\u65b9\u4f4d\u691c\u51fa\u5668\uff0c\u8272\u30d6\u30ed\u30c3\u30d6\uff0c\u751f\u7406\u5b66\u7684\u306b\u306f\u8996\u899a\u91ce\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u5fdc\u7b54\u7279\u6027\u306b\u985e\u4f3c \u4e0a\u4f4d\u5c64\u306e\u30d5\u30a3\u30eb\u30bf\u306b\u306f\u8907\u96d1\u306a\u8996\u899a\u30d1\u30bf\u30f3\u306b\u5bfe\u5fdc\u3059\u308b\u8868\u8c61\u304c\u7372\u5f97\u3055\u308c\u308b \u5404\u7573\u8fbc\u307f\u5c64\u5168\u4f53\u3067\u306f\u5b66\u7fd2\u3059\u3079\u304d\u5165\u529b\u4fe1\u53f7\u3092\u3059\u3079\u3066\u7db2\u7f85\u3059\u308b\u30d5\u30a3\u30eb\u30bf\u306e\u96c6\u5408\u304c\u5f62\u6210\u3055\u308c\u308b \u5404\u30d5\u30a3\u30eb\u30bf\u306f\u76f8\u7570\u306a\u308b 2 \u6b21\u5143\u306e\u6d3b\u6027\u5316\u5730\u56f3\u3092\u5f62\u6210 \u5404\u30d5\u30a3\u30eb\u30bf\u306e\u5fdc\u7b54\u7279\u6027\u3068\u307f\u306a\u3059\u3053\u3068\u304c\u53ef\u80fd\u306a\u6d3b\u6027\u5316\u5730\u56f3 \u30d5\u30a3\u30eb\u30bf\u306e\u5965\u884c\u304d\u6b21\u5143\u306b\u6cbf\u3063\u3066\u8377\u91cd\u7dcf\u548c\u3092\u8a08\u7b97\u3057\u3001\u51fa\u529b\u4fe1\u53f7\u3092\u751f\u6210 \u7573\u8fbc\u307f\u6f14\u7b97\u306e\u30c7\u30e2 \u30d5\u30a3\u30eb\u30bf\u6f14\u7b97\u306e\u30c7\u30e2 2019komazawa_kitten_filters_demo.ipynb \u7573\u8fbc\u307f\u6f14\u7b97\u306e\u30c7\u30e2\u30d3\u30c7\u30aa \u30d3\u30aa\u30e9\uff0c\u30b8\u30e7\u30fc\u30f3\u30ba\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 (2001)\uff0c\u5bcc\u58eb\u30d5\u30a3\u30eb\u30e0\u306b\u3088\u308b\u5b9f\u88c5\u306f2006\u5e74\u9803 \u5b9f\u969b\u306b\u3069\u306e\u3088\u3046\u306a\u30d5\u30a3\u30eb\u30bf\u304c\u69cb\u6210\u3055\u308c\u305f\u306e\u304b \u5c40\u6240\u7d50\u5408 : \u753b\u50cf\u306e\u3088\u3046\u306a\u9ad8\u6b21\u5143\u306e\u5165\u529b\u3092\u51e6\u7406\u3059\u308b\u5834\u5408\uff0c\u4e0b\u4f4d\u5c64\u306e\u5168\u30cb\u30e5\u30fc\u30ed\u30f3\u3068\u4e0a\u4f4d\u5c64\u306e\u5168\u30cb\u30e5\u30fc\u30ed\u30f3\u3068\u3092\u63a5\u7d9a\u3059\u308b\u3053\u3068\u306f \u8cac\u4efb\u5272\u5f53\u554f\u984c\u56de\u907f \u306e\u89b3\u70b9\u304b\u3089\u3082\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u306e\u5897\u52a0\u306f\u73fe\u5b9f\u7684\u3067\u306f\u306a\u3044\u3002 \u4ee3\u308f\u308a\u306b\u5404\u30cb\u30e5\u30fc\u30ed\u30f3\u3092\u5165\u529b\u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u30ed\u30fc\u30ab\u30eb\u9818\u57df\u306e\u307f\u306b\u63a5\u7d9a\u3002\u7a7a\u9593\u7684\u9818\u57df\u306f\u30cb\u30e5\u30fc\u30ed\u30f3\u306e \u53d7\u5bb9\u91ce \u3068\u547c\u3070\u308c\u308b\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\uff08\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba\u3068\u3082\u8a00\u3046\uff09\u3002 \u6df1\u3055\u6b21\u5143\u306b\u6cbf\u3063\u305f\u63a5\u7d9a\u6027\uff1d\u5165\u529b\u5c64\u306e\u6df1\u3055\u6b21\u5143 \u3002 \u7a7a\u9593\u6b21\u5143\uff08\u5e45\u3068\u9ad8\u3055\uff09\u3068\u6df1\u3055\u6b21\u5143\u3092\u3069\u306e\u3088\u3046\u306b\u6271\u3046\u304b\u306b\u3088\u308a\uff0c\u3053\u306e\u975e\u5bfe\u79f0\u6027\u3092\u518d\u3073\u5f37\u8abf\u3059\u308b\u3053\u3068\u304c\u91cd\u8981\u3067\u3059\u3002\u30cb\u30e5\u30fc\u30ed\u30f3\u9593\u306e\u7d50\u5408\u306f\u7a7a\u9593\u6b21\u5143\uff08\u5e45\u3068\u9ad8\u3055\uff09\u306b\u305d\u3063\u3066\u9650\u5c40\u7684\u3002\u5165\u529b\u6b21\u5143\u306e\u6df1\u3055\u5168\u4f53\u3092\u5e38\u306b\u30ab\u30d0\u30fc\u3059\u308b\u3002 \u4f8b1: \u5165\u529b\u5c64\u306e\u30b5\u30a4\u30ba\u304c[32x32x3]\uff08RGB CIFAR-10\u753b\u50cf\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306a\u3069\uff09\u3067\u3042\u308c\u3070\u53d7\u5bb9\u91ce\uff08\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba\uff09\u304c 5x5 \u3068\u3059\u308c\u3070\uff0c\u7573\u8fbc\u307f\u5c64\u5185\u306e\u5404\u30cb\u30e5\u30fc\u30ed\u30f3\u306f\u5165\u529b\u5c64\u306e [5x5x3] \u5c0f\u9818\u57df\u3078\u306e\u7d50\u5408\u4fc2\u6570\u3092\u6301\u3064\u3002\u5404\u5c0f\u9818\u57df\u6bce\u306b 5x5x3=75 \u306e\u91cd\u307f\u4fc2\u6570\u3068 1 \u3064\u306e\u30d0\u30a4\u30a2\u30b9\u9805\u304c\u5fc5\u8981\u3067\u3042\u308b\u3002\u6df1\u3055\u6b21\u5143\u306b\u6cbf\u3063\u305f\u4e0a\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u304b\u3089\u4e0b\u4f4d\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u3078\u306e\u7d50\u5408\u306f\u4e0b\u4f4d\u5c64\u306e\u6df1\u3055(\u8272\u30c1\u30e3\u30f3\u30cd\u30eb\u6570)\u3068\u7b49\u3057\u304f 3 \u3067\u3042\u308b\u3002 \u4f8b2: \u5165\u529b\u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u30b5\u30a4\u30ba\u304c[16x16x20]\u3067\u3042\u308b\u3068\u3059\u308b\u3068 3x3 \u306e\u53d7\u5bb9\u91ce\u30b5\u30a4\u30ba\u3067\u7573\u8fbc\u5c64\u306e\u5168\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u5408\u8a08\u306f 3x3x20=180 \u63a5\u7d9a\u3002\u63a5\u7d9a\u6027\u306f\u7a7a\u9593\u7684\u306b\u5c40\u5728\u3059\u308b\uff083x3\uff09\u304c\uff0c\u5165\u529b\u6df1\u5ea6\uff0820\uff09\u306b\u6cbf\u3063\u3066\u306f\u5b8c\u5168\u7d50\u5408 \u7a7a\u9593\u914d\u7f6e : \u51fa\u529b\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u6570\u3068\u914d\u7f6e\u306b\u3064\u3044\u3066\u306f 3 \u3064\u306e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u51fa\u529b\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u304c\u5b9a\u307e\u308b\u3002 \u6df1\u3055\u6570(\u30d5\u30a3\u30eb\u30bf\u6570) \u30b9\u30c8\u30e9\u30a4\u30c9\u5e45 \u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0 1 \u51fa\u529b\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u306e\u3053\u3068\u3092\u51fa\u529b\u5c64\u306e \u6df1\u3055 \u6570\u3068\u547c\u3076\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3042\u308b\u3002\u6df1\u3055\u6570\u3068\u306f\u30d5\u30a3\u30eb\u30bf\u6570\uff08\u30ab\u30fc\u30cd\u30eb\u6570\uff09\u3068\u3082\u547c\u3070\u308c\u308b\u3002\u7b2c 1 \u7573\u8fbc\u307f\u5c64\u304c\u751f\u753b\u50cf\u3067\u3042\u308c\u3070\uff0c\u5965\u884c\u304d\u6b21\u5143\u3092\u69cb\u6210\u3059\u308b\u5404\u30cb\u30e5\u30fc\u30ed\u30f3\u306b\u3088\u3063\u3066\u7a2e\u3005\u306e\u65b9\u4f4d\u3092\u6301\u3064\u7dda\u5206(\u30a8\u30c3\u30b8\u691c\u51fa\u7d30\u80de)\u3084\u8272\u30d6\u30ed\u30c3\u30d6\u306e\u3088\u3046\u306a\u7279\u5fb4\u8868\u73fe\u3092\u7372\u5f97\u53ef\u80fd\u3068\u306a\u308b\u3002\u5165\u529b\u306e\u540c\u3058\u9818\u57df\u3092 \u6df1\u3055\u5217 \u3068\u3059\u308b\u30cb\u30e5\u30fc\u30ed\u30f3\u96c6\u56e3\u3092 \u30d5\u30a1\u30a4\u30d0 \u3068\u3082\u3044\u3046\u3002 2 \u30d5\u30a3\u30eb\u30bf\u3092\u4e0a\u4e0b\u5de6\u53f3\u306b\u305a\u3089\u3059\u5e45\u3092 \u30b9\u30c8\u30e9\u30a4\u30c9\u5e45 \u3068\u547c\u3076\u3002\u30b9\u30c8\u30e9\u30a4\u30c9\u5e45\u304c 1 \u306a\u3089\u30d5\u30a3\u30eb\u30bf\u3092 1 \u753b\u7d20\u305a\u3064\u79fb\u52d5\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u3002\u30b9\u30c8\u30e9\u30a4\u30c9\u304c 2\u306a\u3089\u30d5\u30a3\u30eb\u30bf\u306f\u4e00\u5ea6\u306b 2 \u753b\u7d20\u305a\u3064\u30b8\u30e3\u30f3\u30d7\u3055\u305b\u308b\u3002\u30b9\u30c8\u30e9\u30a4\u30c9\u5e45\u304c\u5927\u304d\u3051\u308c\u3070\u5165\u529b\u4fe1\u53f7\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u9593\u9694\u304c\u5927\u304d\u304f\u5e83\u304c\u308b\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u3002\u30b9\u30c8\u30e9\u30a4\u30c9\u5e45\u304c\u5927\u304d\u304f\u306a\u308c\u3070\u4e0a\u4f4d\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u306f\u6e1b\u5c11\u3059\u308b\u3002 3 \u5165\u529b\u306e\u5883\u754c\u4e0a\u306e\u5024\u3092\u30bc\u30ed\u3067\u57cb\u3081\u8fbc\u3080\u3053\u3068\u304c\u3042\u308b\u3002\u3053\u308c\u3092 \u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0 \u3068\u3044\u3046\u3002\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0\u306e\u91cf\u306f\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3042\u308b\u3002\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0\u306b\u3088\u308a\u51fa\u529b\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u6570\u3092\u5236\u5fa1\u3067\u304d\u308b\u3002\u4e0b\u4f4d\u5c64\u306e\u7a7a\u9593\u60c5\u5831\u3092\u6b63\u78ba\u306b\u4fdd\u5b58\u3059\u308b\u306b\u306f\u5165\u529b\u3068\u51fa\u529b\u306e\u5e45\uff0c\u9ad8\u3055\u306f\u540c\u3058\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 \u5165\u529b\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u3092 W \uff0c\u4e0a\u4f4d\u306b\u3042\u308b\u7573\u8fbc\u307f\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u3092 F \uff0c\u3068\u3059\u308c\u3070\u51fa\u529b\u5c64\u306b\u5fc5\u8981\u306a\u30cb\u30e5\u30fc\u30ed\u30f3\u6570 S \u306f\uff0c\u5468\u8fba\u306e\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0 \u3092 P \u3068\u3059\u308c\u3070 (W-F+2P)/S+1 \u3067\u7b97\u51fa\u3067\u304d\u308b\u3002 \u305f\u3068\u3048\u3070\u4e0b\u56f3\u3067\u30b9\u30c8\u30e9\u30a4\u30c9 1 \u3068\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0 0 \u3067\u3042\u308c\u3070\u5165\u529b 7\\times7 \u3067\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba\u304c 3\\times3 \u3067\u3042\u308c\u3070 5x5(=S=(7-3+2x0)/1+1=5) \u306e\u51fa\u529b\u3067\u3042\u308b\u3002 \u30b9\u30c8\u30e9\u30a4\u30c9 2 \u306a\u3089\u3070 3\\times 3=(S=(7-3+2x\\times )/2+1=3) \u3068\u306a\u308b\u3002 \u7a7a\u9593\u914d\u7f6e\u306e\u4f8b\uff1a\u5165\u529b\u7a7a\u9593\u306e\u6b21\u5143\uff08x\u8ef8\uff09\u304c1\u3064\u3067\u53d7\u5bb9\u91ce\u30b5\u30a4\u30ba F=3 \u306e\u5834\u5408\uff0c\u5165\u529b\u30b5\u30a4\u30ba W=5, \u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0 P=1 \u3067\u3042\u308c\u3070\uff0c \u5de6\u56f3\uff1a \u51fa\u529b\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u306f (5-3+2)/1+1=5 \u306e\u51fa\u529b\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u3068\u306a\u308b\u3002\u30b9\u30c8\u30e9\u30a4\u30c9\u6570 S=1 \u306e\u5834\u5408\u3002 \u53f3\u56f3\uff1a s=2\uff0c\u51fa\u529b\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u6570 (5-3+2)/2+1=3 \u3068\u306a\u308b\u3002\u30b9\u30c8\u30e9\u30a4\u30c9 S=3 \u306a\u3089\u3070\u30dc\u30ea\u30e5\u30fc\u30e0\u5168\u4f53\u306b\u304d\u3061\u3093\u3068\u53ce\u307e\u3089\u306a\u3044\u5834\u5408\u3082\u3067\u3066\u304f\u308b\u3002\u6570\u5f0f\u3067\u8868\u73fe\u3059\u308c\u3070 $(5-3+2)=4$ \u306f 3 \u3067\u5272\u308a\u5207\u308c\u306a\u3044\u306e\u3067\u3001\u6574\u6570\u306e\u5024\u3068\u3057\u3066\u4e00\u610f\u306b\u6c7a\u5b9a\u306f\u3067\u304d\u306a\u3044\u3002 \u30cb\u30e5\u30fc\u30ed\u30f3\u7d50\u5408\u4fc2\u6570\u306f\uff08\u53f3\u7aef\u306b\u793a\u3055\u308c\u3066\u3044\u308b\uff09[1,0,-1]\u3067\u3042\u308a\u30d0\u30a4\u30a2\u30b9\u306f\u30bc\u30ed\u3002\u3053\u306e\u91cd\u307f\u306f\u3059\u3079\u3066\u306e\u9ec4\u8272\u30cb\u30e5\u30fc\u30ed\u30f3\u3067\u5171\u6709\u3055\u308c\u308b\u3002 \u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0 : \u4e0a\u4f8b\u3067\u306f\u5165\u529b\u6b21\u5143\u304c 5\uff0c\u51fa\u529b\u6b21\u5143\u304c 5 \u3067\u3042\u3063\u305f\u3002 \u3053\u308c\u306f\u53d7\u5bb9\u91ce\u304c 3 \u3067\u30bc\u30ed\u57cb\u3081\u8fbc\u307f\u30921\u3068\u3057\u305f\u305f\u3081\u3067\u3042\u308b\u3002\u30bc\u30ed\u57cb\u3081\u8fbc\u307f\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u51fa\u529b\u30dc\u30ea\u30e5\u30fc\u30e0\u306f\u3001\u3069\u308c\u3060\u3051\u306e\u6570\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u304c\u5143\u306e\u5165\u529b\u306b\u300c\u30d5\u30a3\u30c3\u30c8\u300d\u3059\u308b\u306e\u3067\u3042\u308d\u3046\u304b\u3068\u3044\u3046\u7406\u7531\u3067\u3001\u7a7a\u9593\u6b21\u5143\u304c\u308f\u305a\u304b 3 \u3067\u3042\u3063\u305f\u3067\u3042\u308d\u3046\u3002 \u30b9\u30c8\u30e9\u30a4\u30c9\u304c S=1 \u306e\u3068\u304d\u3001\u30bc\u30ed\u57cb\u3081\u8fbc\u307f\u3092 P=(F-1)/2 \u306b\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u5165\u529b\u30dc\u30ea\u30e5\u30fc\u30e0\u3068\u51fa\u529b\u30dc\u30ea\u30e5\u30fc\u30e0\u304c\u7a7a\u9593\u7684\u306b\u540c\u3058\u30b5\u30a4\u30ba\u306b\u306a\u308b\u3002 \u3053\u306e\u3088\u3046\u306b\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306f\u4e00\u822c\u7684\u3067\u3042\u308b\u3002CNN\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u8aac\u660e\u3057\u3066\u3044\u308b\u5b8c\u5168\u306a\u7406\u7531\u306b\u3064\u3044\u3066\u8aac\u660e\u3059\u308b\u3002 \u30b9\u30c8\u30e9\u30a4\u30c9\u306e\u5236\u7d04 : \u7a7a\u9593\u914d\u7f6e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u306f\u76f8\u4e92\u306e\u5236\u7d04\u304c\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002\u305f\u3068\u3048\u3070\u5165\u529b\u306b W=10 \u3068\u3044\u3046\u30b5\u30a4\u30ba\u304c\u3042\u308a\u3001\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0\u306f P=0 \u3067\u306f\u306a\u304f\u3001\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba\u306f F=3 , (W-F+2P)/S+1=(10-3+0)/2+1=4.5 \u3088\u308a\u30b9\u30c8\u30e9\u30a4\u30c9 S=2 \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306f\u4e0d\u53ef\u80fd\u3067\u3042\u308b\u3002 \u3059\u306a\u308f\u3061\u6574\u6570\u3067\u306f\u306a\u304f\u30cb\u30e5\u30fc\u30ed\u30f3\u304c\u5165\u529b\u306b\u308f\u305f\u3063\u3066\u304d\u308c\u3044\u306b\u304b\u3064\u5bfe\u79f0\u7684\u306b \"\u9069\u5408\" \u3057\u306a\u3044\u3053\u3068\u3092\u793a\u3059\u3002 AlexNet \u306e\u8ad6\u6587\u3067\u306f\uff0c\u7b2c\u4e00\u7573\u8fbc\u5c64\u306f\u53d7\u5bb9\u91ce\u30b5\u30a4\u30ba F=11 \uff0c\u30b9\u30c8\u30e9\u30a4\u30c9 S=4 \uff0c\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0\u306a\u3057 P=0 \u3002 \u7573\u8fbc\u5c64 K=96 \u306e\u6df1\u3055 (227-11)/4+1=55 \u3002\u7573\u8fbc\u5c64\u306e\u51fa\u529b\u30b5\u30a4\u30ba\u306f [55x55x96]\u300255x55x96 \u30cb\u30e5\u30fc\u30ed\u30f3\u306f\u5165\u529b\u9818\u57df [11x11x3] \u3068\u9023\u7d50\u3002\u5168\u6df1\u5ea6\u5217 96 \u500b\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306f\u540c\u3058\u5165\u529b\u9818\u57df[11\u00d711\u00d73]\u306b\u7e4b\u304c\u308b\u3002\u8ad6\u6587\u4e2d\u306b\u306f(224-11)/4+1 \u3068\u306a\u3063\u3066\u3044\u308b\u3002\u30d1\u30c7\u30a3\u30f3\u30b0\u306b\u3064\u3044\u3066\u306e\u8a18\u8f09\u306f\u306a\u3044\u3002 \u30d1\u30e9\u30e1\u30fc\u30bf\u5171\u6709 \u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\u7573\u307f\u8fbc\u307f\u5c64\u3067\u4f7f\u7528\u3055\u308c\u308b\u3002\u4e0a\u8a18\u306e\u5b9f\u4e16\u754c\u306e\u4f8b\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u6700\u521d\u306e\u7573\u6545\u610f\u5c64\u306b\u306f 55x55x96=290,400\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u304c\u3042\u308a\u3001\u305d\u308c\u305e\u308c 11x11x3=363 \u306e\u91cd\u307f\u30681\u306e\u30d0\u30a4\u30a2\u30b9\u304c\u3042\u308b\u3002\u3053\u308c\u306b\u3088\u308a CNN \u5358\u72ec\u306e\u7b2c 1 \u5c64\u306b\u6700\u5927 290400x364=105,705,600 \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u8ffd\u52a0\u3055\u308c\u308b\u3002 \u30d1\u30e9\u30e1\u30fc\u30bf\u5171\u6709 \u306b\u3088\u308a\u5b66\u7fd2\u3059\u3079\u304d\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u304c\u6e1b\u5c11\u3059\u308b\u3002 \u4f8b\u3048\u3070 [55x55x96] \u306e\u30d5\u30a3\u30eb\u30bf\u3067\u306f\u6df1\u3055\u6b21\u5143\u306f 96 \u500b\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u3067\uff0c\u5404\u6df1\u3055\u3067\u540c\u3058\u7d50\u5408\u4fc2\u6570\u3092\u4f7f\u3046\u3053\u3068\u306b\u3059\u308c\u3070 \u30e6\u30cb\u30fc\u30af\u306a\u7d50\u5408\u4fc2\u6570\u306f\u8a08 96x11x11x3=34,848 \u3068\u306a\u308b\u306e\u3067\u7dcf\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u306f 34,944 \u3068\u306a\u308b(\u30d0\u30a4\u30a2\u30b9\u9805 +96)\u3002\u5404\u6df1\u3055\u3067\u5168\u30cb\u30e5\u30fc\u30ed\u30f3(55x55)\u306f\u540c\u3058\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u3002\u9006\u4f1d\u64ad\u3067\u306e\u5b66\u7fd2\u3067\u306f\uff0c\u5168\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u5168\u7d50\u5408\u4fc2\u6570\u306e\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u5404\u52fe\u914d\u306f\u5404\u6df1\u3055\u3054\u3068\u306b\u52a0\u7b97\u3055\u308c 1 \u3064\u306e\u6df1\u3055\u3042\u305f\u308a\u4e00\u3064\u306e\u7d50\u5408\u4fc2\u6570\u96c6\u5408\u3092\u7528\u3044\u308b\u3002 \u3042\u308b\u6df1\u3055\u306e\u5168\u30cb\u30e5\u30fc\u30ed\u30f3\u304c\u540c\u3058\u91cd\u307f\u4fc2\u6570\u30d9\u30af\u30c8\u30eb\u3092\u5171\u6709\u3059\u308b\u5834\u5408\uff0c\u7573\u8fbc\u307f\u5c64\u306e\u9806\u65b9\u5411\u30d1\u30b9\u306f\u5404\u6df1\u3055\u30b9\u30e9\u30a4\u30b9\u5185\u3067\u5165\u529b\u30dc\u30ea\u30e5\u30fc\u30e0\u3068\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u91cd\u307f\u306e \u7573\u307f\u8fbc\u307f \u3068\u3057\u3066\u8a08\u7b97\u3067\u304d\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002\u7d50\u5408\u8377\u91cd\u4fc2\u6570\u96c6\u5408\u306e\u3053\u3068\u3092 \u30d5\u30a3\u30eb\u30bf \u307e\u305f\u306f \u30ab\u30fc\u30cd\u30eb \u3068\u547c\u3076\u3002\u5165\u529b\u4fe1\u53f7\u3068\u306e\u9593\u3067\u7573\u8fbc\u307f\u6f14\u7b97\u3092\u884c\u3046\u3053\u3068\u3068\u306a\u308b\u3002 AlexNet \u306e\u5b66\u7fd2\u6e08\u30d5\u30a3\u30eb\u30bf\u4f8b: \u56f3\u306e 96 \u500b\u306e\u30d5\u30a3\u30eb\u30bf\u306f \u30b5\u30a4\u30ba [11x11x3]\u3002 \u305d\u308c\u305e\u308c\u304c 1 \u3064\u306e\u6df1\u3055\u5185\u306e $55\\times55$ \u30cb\u30e5\u30fc\u30ed\u30f3\u3067\u5171\u6709\u3055\u308c\u3066\u3044\u308b\u3002 \u753b\u50cf\u306e\u4efb\u610f\u306e\u4f4d\u7f6e\u3067\u6c34\u5e73\u30a8\u30c3\u30b8\u691c\u51fa\u304c\u5fc5\u8981\u306a\u5834\u5408\uff0c\u753b\u50cf\u306e\u4e26\u9032\u4e0d\u5909\u69cb\u9020 translationall-invariant structure \u4eee\u5b9a\u306b\u3088\u308a\u753b\u50cf\u4e2d\u306e\u4ed6\u306e\u5834\u6240\u3067\u3082\u6709\u52b9\u3067\u3042\u308b\u3002 \u7573\u8fbc\u307f\u5c64\u306e\u51fa\u529b\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u306f $55\\times55$ \u500b\u306e\u7570\u306a\u308b\u4f4d\u7f6e\u3059\u3079\u3066\u3067\u6c34\u5e73\u30a8\u30c3\u30b8\u306e\u691c\u51fa\u3092\u518d\u5b66\u7fd2\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3002 3. \u30d7\u30fc\u30ea\u30f3\u30b0\u5c64 \u00b6 CNN \u3067\u306f\uff0c\u9023\u7d9a\u3059\u308b\u7573\u8fbc\u307f\u5c64\u9593\u306b\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u3092\u633f\u5165\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3002\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u306e\u5f79\u5272\u306f\uff0c\u7a7a\u9593\u6b21\u5143\u306e\u5927\u304d\u3055\u306b\u6e1b\u5c11\u3055\u305b\u308b\u3053\u3068\u3067\u3042\u308b\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\uff0c\u3059\u306a\u308f\u3061\u8a08\u7b97\u91cf\u3092\u6e1b\u3089\u3057\uff0c\u904e\u5b66\u7fd2\u3092\u5236\u5fa1\u3067\u304d\u308b\u3002\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u306f\u5165\u529b\u306e\u5404\u6df1\u3055\u6bce\u306b\u72ec\u7acb\u3057\u3066\u52d5\u4f5c\u3059\u308b\u3002\u6700\u5927\u5024\u306e\u307f\u3092\u3068\u308a\u4ed6\u306e\u5024\u3092\u6368\u3066\u308b\u3053\u3068\u3092 \u30de\u30c3\u30af\u30b9\u30d7\u30fc\u30ea\u30f3\u30b0 \u3068\u547c\u3076\u3002\u30b5\u30a4\u30ba\u304c 2x2 \u306e\u30d5\u30a3\u30eb\u30bf\u306b\u3088\u308b\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u3067\u306f\uff0c\u5165\u529b\u306e\u6df1\u3055\u3054\u3068\u306b 2 \u3064\u306e\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30eb\u3092\u9069\u7528\u3057\u3001\u5e45\u3068\u9ad8\u3055\u306b\u6cbf\u3063\u30662\u305a\u3064\u5897\u3084\u3057\u306675\uff05\u306e\u60c5\u5831\u3092\u7834\u68c4\u3059\u308b\u3002\u3053\u306e\u5834\u5408 4 \u3064\u306e\u6570\u5024\u306e\u3046\u3061\u6700\u5927\u5024\u3092\u63a1\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002 \u4e00\u822c\u7684\u306a\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6f14\u7b97\u306f \u30de\u30c3\u30af\u30b9\u30d7\u30fc\u30ea\u30f3\u30b0 \u3067\u3042\u308b\u3002\u56f3\u3067\u306f \u30b9\u30c8\u30e9\u30a4\u30c9 2 \u3059\u306a\u308f\u3061 4 \u3064\u306e\u6570\u5024\u306e\u4e2d\u306e\u6700\u5927\u5024 \u5e73\u5747\u30d7\u30fc\u30ea\u30f3\u30b0 . \u30de\u30c3\u30af\u30b9\u30d7\u30fc\u30ea\u30f3\u30b0\u3067\u306f\u306a\u304f L2\u6b63\u5247\u5316\u30d7\u30fc\u30ea\u30f3\u30b0 \u3092\u884c\u3046\u5834\u5408\u3082\u3042\u308b\u3002\u5e73\u5747\u30d7\u30fc\u30ea\u30f3\u30b0\u306f\u6b74\u53f2\u7684\u306a\u610f\u5473\u3042\u3044\u304c\u3042\u308b\u304c\u30de\u30c3\u30af\u30b9\u30d7\u30fc\u30ea\u30f3\u30b0\u306e\u65b9\u304c\u6027\u80fd\u304c\u826f\u3044\u3068\u306e\u5831\u544a\u304c\u3042\u308b\u3002\u3042\u308b\u753b\u50cf\u4f4d\u7f6e\u306b\u306f\u7269\u7406\u7684\u306b\u4e00\u3064\u306e\u5024\u3060\u3051\u304c\u5b58\u5728\u3059\u308b\u3068\u3044\u3046\u8996\u899a\u60c5\u5831\u51e6\u7406\u304c\u4eee\u5b9a\u3059\u3079\u304d\u5916\u754c\u306e\u7269\u7406\u7684\u5236\u7d04\u3092\u53cd\u6620\u3057\u3066\u3044\u308b\u3068\u6587\u5b66\u7684\u306b\u89e3\u91c8\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b\u3002 \u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u3067\u306f\uff0c\u5165\u529b\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u306e\u5404\u6df1\u3055\u306b\u3064\u3044\u3066\u7a7a\u9593\u7684\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3092\u884c\u3046\u3002\u3053\u306e\u4f8b\u306f \u30b5\u30a4\u30ba[224x224x64]\u306e\u5165\u529b\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u304c\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba 2 \u3067\u30d7\u30fc\u30eb\u3055\u308c\uff0c\u30b5\u30a4\u30ba 2 \u306e\u51fa\u529b\u30cb\u30e5\u30fc\u30ed\u30f3\u6570 [112x112x64] \u306f 2 \u500d\u3067\u3042\u308b\u3002\u5965\u884c\u304d\u6570\u304c\u4fdd\u6301\u3055\u308c\u3066\u3044\u308b\u3002 4. \u5168\u7d50\u5408\u5c64 \u00b6 \u5168\u7d50\u5408\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306f\u3001\u901a\u5e38\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u540c\u3058 \u524d\u5c64\u306e\u5168\u30cb\u30e5\u30fc\u30ed\u30f3\u3068\u7d50\u5408\u3092\u6301\u3064 5. CNN \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u00b6 \u7573\u8fbc\u5c64 \u30d7\u30fc\u30ea\u30f3\u30b0\u5c64 \u5168\u7d50\u5408\u5c64 \u5c64\u306f\u4ee5\u4e0a 3 \u7a2e\u985e\u304c\u4e00\u822c\u7684\u3002 6. CNN \u306e\u5c64\u69cb\u9020 \u00b6 \u5165\u529b\u5c64 \\rightarrow [[\u7573\u8fbc\u5c64 \\rightarrow ReLU] \\times N\\rightarrow \u30d7\u30fc\u30ea\u30f3\u30b0(?)] \\times M \\rightarrow [\u5168\u7d50\u5408\u5c64 \\rightarrow ReLU] \\times K \\rightarrow \u5168\u7d50\u5408\u5c64 \u6700\u8fd1\u306e\u30c8\u30ec\u30f3\u30c9\u3068\u3057\u3066\u306f\u5927\u304d\u306a\u30d5\u30a3\u30eb\u30bf\u3088\u308a\u5c0f\u3055\u306a\u30d5\u30a3\u30eb\u30bf\u304c\u597d\u307e\u308c\u308b\u50be\u5411\u306b\u3042\u308b\u3002 [3x3] \u304c\u597d\u307e\u308c\u308b\u7406\u7531\u306f\u3069\u771f\u3093\u4e2d\u304c\u3042\u308b\u5947\u95a2\u6570\u3092\u6697\u9ed9\u306b\u4eee\u5b9a\u3057\u3066\u3044\u308b\u305f\u3081\u3060\u3068\u601d\u308f\u308c\u308b\uff08\u6d45\u5ddd\u306e\u5984\u60f3\uff09\u3002 \u305d\u306e\u4ee3\u308f\u308a\u591a\u6bb5\u306b\u3059\u308c\u3070 [3x3] \u304c\uff12\u5c64\u3067 \uff3b5x5]\uff0c\uff13\u5c64\u3067[7x7]\u306e\u53d7\u5bb9\u91ce\u3092\u5f62\u6210\u3067\u304d\u308b\u304b\u3089\u53d7\u5bb9\u91ce\u306e\u5e83\u3055\u3092\u5c64\u306e\u6df1\u3055\u3068\u3057\u3066\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3068\u3082\u89e3\u91c8\u3067\u304d\u308b\u3002\uff11\u5c64\u3067[7x7]\u306e\u53d7\u5bb9\u91ce\u3088\u308a\uff13\u5c64\u3067[7x7]\u306e\u53d7\u5bb9\u91ce\u3092\u5b9f\u73fe\u3057\u305f\u65b9\u304c the simpler, the better \u306e\u539f\u5247\u306b\u6cbf\u3063\u3066\u3044\u308b\u3068\u3082\uff08\u6587\u5b66\u7684\uff09\u89e3\u91c8\u304c\u53ef\u80fd\u3067\u3042\u308b\uff08\u307e\u305f\u3057\u3066\u3082\u6d45\u5ddd\u5984\u60f3\uff09\u3002 \u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u306e\u8a08\u7b97\u6642\u306b\u5e83\u3044\u53d7\u5bb9\u91ce\u3092\u4f5c\u308b\u3088\u308a\u5c64\u3092\u5206\u3051\u305f\u65b9\u304c GPU \u306e\u30e1\u30e2\u30ea\u306b\u4e57\u305b\u3084\u3059\u3044\u3068\u8a00\u3046\u8a08\u7b97\u4e0a\u306e\u5229\u70b9\u3082\u3042\u308b\u3002 Lillicrap et al. (2020) Fig. 7 \u3092\u6539\u5909 video by Geoffrey Hinton on the softmax function A Friendly Introduction to Cross Entropy Loss by Rob DiPietro How to Implement a Neural Network Intermezzo 2 by Peter Roelants \u753b\u50cf\u5206\u985e\u306e\u57fa\u790e ) Introduction to Convolutional Neural Networks by Jianxin Wu Yann LeCun\u2019s original article, Gradient-Based Learning Applied to Document Recognition The Nine Deep Learning Papers You Need to Know About (Understanding CNNs part 3) by Adit Deshpande","title":"\u7b2c 3 \u56de 05 \u6708 22 \u65e5"},{"location":"lect03/#iiia","text":"Shin Aasakawa , all rights reserved. Date: 22/May/2020 Appache 2.0 license","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA)"},{"location":"lect03/#_1","text":"\u8a13\u7df4\u30c7\u30fc\u30bf\uff0c\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\uff0c\u691c\u8a3c\u30c7\u30fc\u30bf \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af neural networks \u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3 perceptron \u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af convolutional neural netoworks \u30ec\u30c6\u30a3\u30ce\u30c8\u30d4\u30fc retinotopy, \u30c8\u30ce\u30c8\u30d4\u30fc tonotopy, \u30bd\u30de\u30c8\u30d4\u30fc somatopy, \u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5 error back propagation \u640d\u5931\u95a2\u6570 loss functions, \u8aa4\u5dee\u95a2\u6570 error functions, \u76ee\u7684\u95a2\u6570 objective functions, \u76ee\u6a19\u95a2\u6570 target functions \u52fe\u914d\u964d\u4e0b\u6cd5 gradient descent methods \u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u95a2\u6570 softmax function \u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc cross entropy \u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5 stochastic gradient descent methods \u8272\u3092\u8584\u304f\u3057\u3066\u3042\u308b\u306e\u306f\uff0c\u3053\u3053\u307e\u3067\u9032\u307e\u306a\u3044\u3060\u308d\u3046\u3068\u3044\u3046\u4e88\u60f3\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002 \u672c\u65e5\u306e\u8ab2\u984c","title":"\u672c\u65e5\u306e\u30ad\u30fc\u30ef\u30fc\u30c9"},{"location":"lect03/#_2","text":"ANN: \u4eba\u5de5\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Artificial Neural Networks BNN: \u751f\u7269\u5b66\u7684\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Biological Neural Networks CNN: \u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Convolutional Neural Networks DNN: \u6df1\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Deep Neural Networks","title":"\u30af\u30a4\u30ba\u306e\u7b54\u3048:"},{"location":"lect03/#_3","text":"ANN, BNN, CNN, DNN \u306f\u5197\u8ac7\u3067\u3059\u3002 \u3053\u306e\u5206\u91ce\u4ee5\u5916\u3067\u306f\uff0c\u3082\u3061\u308d\u3093 ANN \u306f \u30aa\u30fc\u30eb\u30ca\u30a4\u30c8\u30cb\u30c3\u30dd\u30f3\u3067\u3042\u3063\u305f\u308a\uff0cBNN \u306f\u30d6\u30eb\u30fc\u30e0\u30d0\u30fc\u30b0\u30cb\u30e5\u30fc\u30b9\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3060\u3063\u305f\u308a\uff0c CNN \u306f\u30b1\u30fc\u30d6\u30eb\u30cb\u30e5\u30fc\u30b9\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3060\u3063\u305f\u308a\u3057\u307e\u3059\u3002 DNN \u306f\u5e02\u6c11\u6a29\u3092\u5f97\u3066\u304d\u305f\u611f\u304c\u3042\u308b\u306e\u3067 \u30c7\u30a3\u30fc\u30d7\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u826f\u3044\u3067\u3057\u3087\u3046 colab \u306b\u81ea\u5206\u306e\u305f\u3081\u306e\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u66f8\u304f\u305f\u3081\u306b markdown \u306e\u66f8\u5f0f\u3092\u899a\u3048\u3066\u304a\u3044\u305f\u65b9\u304c\u826f\u3044\u3067\u3059\u3002(\u88dc\u8b1b\u3067\u5c11\u3057\u53d6\u308a\u4e0a\u3052\u307e\u3057\u305f) \u6700\u5148\u7aef\u306e\u8a71\u3092\u3057\u3066\u3044\u307e\u3059\u3002\u753b\u50cf\u51e6\u7406\u304c\u4eba\u9593\u3092\u8d85\u3048\u308b\u6027\u80fd\u3092\u793a\u3059\u3088\u3046\u306b\u306a\u3063\u305f\u304b\u3089\uff0c\u6700\u8fd1\u306e AI \u30d6\u30fc\u30e0\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u308c\u306f\uff0c\u7b2c\u4e8c\u56de\u306e\u6388\u696d\u3067\u3082\u53d6\u308a\u4e0a\u3052\u307e\u3057\u305f\u3002\u3060\u304b\u3089\u3053\u305d\uff0c\u3053\u306e\u6388\u696d\u304c\u3042\u308a\u307e\u3059\u3002\u5e72\u304b\u3089\u3073\u305f\u5316\u77f3\u306e\u3088\u3046\u306a\u77e5\u8b58\u3092\u6559\u3048\u308b\u3064\u3082\u308a\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30b8\u30a7\u30d5\u30a7\u30ea\u30fc\u30fb\u30d2\u30f3\u30c8\u30f3\u306e\u30de\u30af\u30bb\u30eb\u8cde\u53d7\u8cde\u8a18\u5ff5\u8b1b\u6f14(2016) \u6b21\u5143\u5727\u7e2e t-SNE \u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u5c0f\u53f2 \u6570\u5f0f\u306e\u8aad\u307f\u65b9 \u82e6\u3044\u6559\u8a13 Sutton \u306e\u30d6\u30ed\u30b0\uff0c\u82e6\u3044\u6559\u8a13 \u30aa\u30ea\u30b8\u30ca\u30eb Sutton's blog bitter lesson \u3068\u3053\u308d\u3067\u77e5\u80fd\u3068\u306f\u4f55\u3060\u308d\u3046\u304b\uff1f \u5fc3\u7406\u5b66\u8005\u306e\u8003\u3048\u305f\u77e5\u80fd","title":"\u5c0f\u30cd\u30bf"},{"location":"lect03/#_4","text":"\u3082\u3046\u5c11\u3057\u8a73\u3057\u304f\u30b9\u30c6\u30c3\u30d7\u30d0\u30a4\u30b9\u30c6\u30c3\u30d7\u3067\u753b\u50cf\u8a8d\u8b58 \u7b2c\u4e00\u5c64\u76ee\u306e\u8996\u899a\u5316 - \u8996\u899a\u7279\u5fb4\u306e\u8996\u899a\u5316\u3002 \u30ac\u30dc\u30fc\u30eb\u30d1\u30c3\u30c1 \u3042\u308b\u3044\u306f \u30ac\u30dc\u30fc\u30eb\u30d5\u30a3\u30eb\u30bf \u3068\u304b\uff0c\u8272\u30d6\u30ed\u30c3\u30d6\u3002 from Difference between AlexNet, VGGNet, ResNet, and Inception","title":"\u5b9f\u7fd2"},{"location":"lect03/#cnn","text":"\u6b21\u306e 7 \u3064\u3092\u4e0a\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059 \u3002 \u975e\u7dda\u5f62\u6d3b\u6027\u5316\u95a2\u6570 (nonlinear activation functions) \u7573\u8fbc\u307f\u6f14\u7b97 (convolutional operation) \u30d7\u30fc\u30ea\u30f3\u30b0\u51e6\u7406 (pooling) \u30c7\u30fc\u30bf\u62e1\u5f35 (data augmentation) \u30d0\u30c3\u30c1\u6b63\u898f\u5316 (batch normalization) \u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8(shortcut) GPU \u306e\u4f7f\u7528 \u4e0a\u8a18 7 \u3064\u306e\u7279\u5fb4\u3092\u8aac\u660e\u3059\u308b\u306e\u306f\u5c02\u9580\u7684\u306b\u306a\u308a\u3059\u304e\u308b\u306e\u3067\u7701\u7565\u3057\u307e\u3059\u3002\u4e00\u3064\u3060\u3051\u8aac\u660e\u3059\u308b\u3068\u3059\u308c\u3070\u6700\u5f8c\u306e GPU \u3068\u306f\u9ad8\u89e3\u50cf\u5ea6\u3067\u3057\u304b\u3082\u51e6\u7406\u901f\u5ea6\u3092\u5fc5\u8981\u3068\u3059\u308b\u30d1\u30bd\u30b3\u30f3\u30b2\u30fc\u30e0\u3067\u7528\u3044\u3089\u308c\u308b\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30dc\u30fc\u30c9\u306e\u3053\u3068\u3067\u3059\u3002 \u8a73\u7d30\u306a\u753b\u50cf\u3092\u9ad8\u901f\u306b\u753b\u9762\u306b\u8868\u793a\u3059\u308b\u5fc5\u8981\u304b\u3089\u958b\u767a\u3055\u308c\u305f\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30dc\u30fc\u30c9\u3067\u3059\u304c\uff0c\u5927\u898f\u6a21\u306a\u30cb\u30e5\u30fc\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u8a08\u7b97\u3067\u3082\u7528\u3044\u3089\u308c\u308b\u6570\u5b66\u304c\u540c\u3058\u3067\u3059\u3002 \u305d\u306e\u305f\u3081\uff0c\u30b2\u30fc\u30e0\u7528\u306b\u958b\u767a\u3055\u308c\u305f\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30dc\u30fc\u30c9\u304c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3082\u7528\u3044\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002","title":"CNN \u306e\u7279\u5fb4"},{"location":"lect03/#_5","text":"from Democratize AI slides \u30c7\u30fc\u30bf\u30cf\u30f3\u30b0\u30ea\u30fc data hungry \u8a08\u7b97\u8cc7\u6e90\u30cf\u30f3\u30b0\u30ea\u30fc resource hungry \u7406\u8ad6\u6b20\u5982 theory lagging \u4e0d\u900f\u660e opacity \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u7d20\u4eba\u306e\u7d71\u8a08\u5b66\u3067\u3042\u308b, Anderson et. al (1993) ... But Neural networks are not alchemy.","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u7279\u5fb4"},{"location":"lect03/#1","text":"Van Essen & Gallant (1994) Left: Thorpe et al.(2001), Right: Felleman & Van Essen (1992) source: https://en.wikipedia.org/wiki/Retinotopy","title":"1. \u751f\u7406\u5b66"},{"location":"lect03/#hubel-and-wiesel-1969","text":"source: https://youtu.be/4nwpU7GFYe8 \u30c8\u30dd\u30b0\u30e9\u30d5\u30c3\u30af\u30de\u30c3\u30d4\u30f3\u30b0 topographic mappings (\u5730\u5f62\u56f3): \u7db2\u819c\u3084\u76ae\u819a\u306a\u3069\u306e\u4f53\u5236\u611f\u899a\uff0c\u7b4b\u8089\u7cfb\u306e\u3088\u3046\u306a\u52b9\u679c\u5668\u7cfb\u3092\u3001\u4e2d\u67a2\u795e\u7d4c\u7cfb\u306e 1 \u3064\u4ee5\u4e0a\u306e\u69cb\u9020\u7269\u306b\u6574\u7136\u3068\u6295\u5f71\u3057\u305f\u5730\u56f3\u3002 \u5730\u5f62\u56f3\u306f\u3001\u3059\u3079\u3066\u306e\u611f\u899a\u7cfb\u3068\u591a\u304f\u306e\u904b\u52d5\u7cfb\u3067\u89b3\u5bdf\u3055\u308c\u308b\u3002 \u30c8\u30ce\u30c8\u30d4\u30fc tonotopy\uff08\u30ae\u30ea\u30b7\u30e3\u8a9e\u306etono=\u5468\u6ce2\u6570\u3001topos=\u5834\u6240\uff09\u3068\u306f\u3001\u7570\u306a\u308b\u5468\u6ce2\u6570\u306e\u97f3\u304c\u8133\u5185\u3067\u51e6\u7406\u3055\u308c\u308b\u5834\u6240\u306e\u7a7a\u9593\u7684\u914d\u7f6e\u306e\u3053\u3068\u3002 \u5468\u6ce2\u6570\u304c\u8fd1\u3044\u97f3\u306f\u3001\u8133\u5185\u306e\u5834\u6240\u7684\u306b\u96a3\u63a5\u3059\u308b\u9818\u57df\u3067\u8868\u73fe\u3055\u308c\u308b\u3002\u30c8\u30ce\u30c8\u30d4\u30c3\u30af\u5730\u56f3\u3068\u3082\u547c\u3070\u308c\u308b \u30bd\u30de\u30c8\u30d4\u30fc somatopy: \u4e2d\u67a2\u795e\u7d4c\u7cfb\u4e0a\u306e\u7279\u5b9a\u306e\u70b9\u3078\u8eab\u4f53\u9818\u57df\u306e\u7167\u5c04\uff0c\u6295\u5f71\u306e\u3053\u3068\u3002 \u8eab\u4f53\u9818\u57df\u306f \u7b2c\u4e00\u6b21\u4f53\u6027\u611f\u899a\u76ae\u8cea (\u5f8c\u8179\u56de) \u306b\u6295\u5f71\u3055\u308c\u308b\u3002 \u5178\u578b\u7684\u306b\u306f \u7279\u5b9a\u306e\u8eab\u4f53\u90e8\u4f4d\u3068 \u305d\u306e\u305d\u308c\u305e\u308c\u306e\u4f4d\u7f6e\u3092 \u30db\u30e0\u30f3\u30af\u30eb\u30b9 homunclus (\u5c0f\u4eba) \u4e0a\u306b\u914d\u7f6e\u3059\u308b \u611f\u899a\u30db\u30e0\u30f3\u30af\u30eb\u30b9\u3068\u3057\u3066\u8868\u73fe\u3055\u308c\u308b\u3002 \u7d30\u304b\u304f\u5236\u5fa1\u3055\u308c\u3066\u3044\u308b\u90e8\u4f4d (\u6307\uff0c\u820c) \u306f\u4f53\u6027\u611f\u899a\u91ce\u306e\u9762\u7a4d\u304c\u5927\u304d\u3044\u3002\u4e00\u65b9 \u7c97\u304f\u5236\u5fa1\u3055\u308c\u3066\u3044\u308b\u90e8\u4f4d (\u4f53\u5e79) \u306f\u9762\u7a4d\u304c\u5c0f\u3055\u3044\u3002\u5185\u81d3\u306e\u3088\u3046\u306a\u9818\u57df\u306f\u4f53\u6027\u611f\u899a\u91ce\u306e\u4f4d\u7f6e\u3092\u6301\u305f\u306a\u3044\u3002 \u30ec\u30c6\u30a3\u30ce\u30c8\u30d4\u30fc retinotopy: \u7db2\u819c\u304b\u3089\u306e\u8996\u899a\u5165\u529b\u3092\u795e\u7d4c\u7d30\u80de \u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u3053\u3068\u3002\u54fa\u4e73\u985e\u306e\u8133\u306b\u591a\u304f\u898b\u3089\u308c\u308b\u3002\u3053\u306e\u5730\u56f3\u306e\u5927\u304d\u3055\u3001\u6570\u3001\u7a7a\u9593\u7684\u914d\u7f6e\u306f\u7a2e\u9593\u3067\u7570\u306a\u308b\u3002 \u8996\u91ce\u306e\u96a3\u63a5\u3059\u308b\u70b9 \u304c \u540c\u3058\u9818\u57df \u306e \u96a3\u63a5\u3059\u308b \u9818\u57df\u3067 \u8868\u73fe\u3055\u308c\u308b \u3068\u306f\u9650\u3089\u306a\u3044\u3068\u3044\u3046\u610f\u5473\u3067\u3001\u8907\u96d1\u306a\u5730\u56f3\u3068\u306a\u308b\u3002 \u4f8b\u3048\u3070 \u7b2c 2 \u6b21\u8996\u899a\u91ce (V2) \u3067\u306e\u8996\u899a\u5730\u56f3\u306f \u8996\u91ce\u306e\u4e0a\u534a\u5206\u306b\u5fdc\u7b54\u3059\u308b\u7db2\u819c\u306e\u90e8\u5206\u304c \u8996\u91ce\u306e\u4e0b\u534a\u5206\u306b\u5fdc\u7b54\u3059\u308b\u90e8\u5206\u304b\u3089\u5206\u96e2\u3055\u308c\u3066\u8868\u73fe\u3055\u308c\u3066\u3044\u308b\u3002\u7b2c\uff13\u6b21\u8996\u899a\u91ce (V3) \u3084 \u7b2c4\u6b21\u8996\u899a\u91ce (V4) \u3067\u306f\u4e0b\u4f4d\u306e\u8996\u899a\u91ce\u306b\u6bd4\u3079\u3066 \u3088\u308a\u8907\u96d1\u306a\u8868\u73fe\u304c\u306a\u3055\u308c\u3066\u3044\u308b","title":"\u30d2\u30e5\u30fc\u30d9\u30eb\u3068\u30a6\u30a3\u30fc\u30bc\u30eb Hubel and Wiesel (1969)"},{"location":"lect03/#blackmore-and-cooper-1970","text":"source: https://youtu.be/QzkMo45pcUo source: https://youtu.be/RSNofraG8ZE","title":"\u30d6\u30ec\u30a4\u30af\u30e2\u30a2 \u3068 \u30af\u30fc\u30d1\u30fc Blackmore and Cooper (1970)"},{"location":"lect03/#one-algorithm-hypothesis","text":"Sur (1988) \u3088\u308a \u8074\u899a\u8996\u5e8a\u3078\u306e\u5b9f\u9a13\u7684\u306b\u8a98\u5c0e\u3055\u308c\u305f\u7db2\u819c\u6295\u5f71\uff08\u30cf\u30c3\u30c1\u30f3\u30b0\u3055\u308c\u305f\u9818\u57df\uff09\u304a\u3088\u3073\u8074\u899a\u8996\u5e8a\u3068\u8074\u899a\u76ae\u8cea\u306e\u63a5\u7d9a\u3002 \u624b\u8853\u3057\u305f\u534a\u7403\u3068\u306f\u53cd\u5bfe\u5074\u306e\u773c\u306f\u3001\u751f\u304d\u6b8b\u3063\u3066\u3044\u308b\u80cc\u5074LGN\uff08LGd\uff09\u3068\u8179\u5074LGN\uff08LGv\uff09\u3001\u304a\u3088\u3073MGN\u306e\u80cc\u5074\u3068\u8179\u5074\u306e\u533a\u753b\u5185\u306e\u30d1\u30c3\u30c1\uff08\u305d\u308c\u305e\u308cMGd\u3068MG\uff09\u306b\u6295\u5f71\u3059\u308b\u3002 \u8996\u5e8a\u306e\u508d\u77e2\u72b6\u5207\u7247\u3092\u756a\u53f7\u4ed8\u304d\u3067\u793a\u3059\u3002 \u8996\u5e8a\u306e\u508d\u77e2\u72b6\u5207\u7247\u306e \u540c\u3058\u52d5\u7269\u306b\u3001\u4e00\u6b21\u8074\u899a\u91ce\uff08Al\uff09\u306bHRP\u3092\u6ce8\u5165\u3057\u305f\u5834\u5408\uff08\u6ce8\u5165\u90e8\u4f4d\u306f\u5de6\u4e0a\u306b\u793a\u3059\uff09\u3001\u7d30\u80de\u304c\u5145\u586b\u3055\u308c\u308b\u3002 \u30c9\u30c3\u30c8\u3067\u793a\u3055\u308c\u3066\u3044\u308b\uff09MG \"MGd\u3067\u306f\u9006\u884c\u6027\u306b\u3001MGv\u3067\u306f\u5f8c\u907a\u75c7\u8907\u5408\u4f53\u306e\u5074\u65b9\u5206\u88c2\uff08P01\uff09\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3002MGd\u3068MGv\u306e\u591a\u304f\u306e\u7d30\u80de\u304c\u7db2\u819c\u7a81\u8d77\u5e2f\u3092\u8986\u3063\u3066\u3044\u308b\u3002 Metin and Frost (1989) Visual responses of neurons in somatosensory cortex of hamsters with experimentally induced retinal projections to somatosensory thalamus Roe et al. (1992) Visual Projections Routed to the Auditory Pathway in Ferrets: Receptive Fields of Visual Neurons in Primary Auditory Cortex","title":"\u4e00\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u4eee\u8aac One algorithm hypothesis"},{"location":"lect03/#2","text":"","title":"2. \u5fc3\u7406\u5b66"},{"location":"lect03/#selfridge-pandemonium","text":"\u30bb\u30eb\u30d5\u30ea\u30c3\u30b8 (1958) ``Mechanisation of Thought Processes'' \u3088\u308a \u30bb\u30eb\u30d5\u30ea\u30c3\u30b8 (1958) ``Mechanisation of Thought Processes'' \u3088\u308a \u30bb\u30eb\u30d5\u30ea\u30c3\u30b8 (1958) ``Mechanisation of Thought Processes'' \u3088\u308a","title":"\u30bb\u30eb\u30d5\u30ea\u30c3\u30b8 Selfridge \u306e\u30d1\u30f3\u30c7\u30e2\u30cb\u30a6\u30e0 pandemonium \u30e2\u30c7\u30eb"},{"location":"lect03/#_6","text":"Julesz Julesz (1981) Textons, the elements of texture perception, and their interactions, Nature Julesz (1981) Fig. 2 \u3088\u308a Marr Computational approach: Vision (1908) Poggio Poggio, Torre, and Koch (1985) Computational vision and regularization theory","title":"\u751f\u7406\u5b66\uff0c\u8996\u899a\u5fc3\u7406\u5b66\u3068\u306e\u5bfe\u5fdc"},{"location":"lect03/#psycholosophical-consideration","text":"Epistemology \u601d\u5ff5\u7684\uff0c\u89b3\u5ff5\u7684 Empirical Episitemology \u5b9f\u8a3c\u7684 = psychology Constructive epipstemology \u69cb\u6210\u8ad6\u7684 = computer vision, neural networks Marr Computational approach: Vision (1908) Poggio Poggio, Torre, and Koch (1985) Computational vision and regularization theory","title":"\u5fc3\u7406\u5b66\u30e2\u30c7\u30eb Psycholosophical consideration"},{"location":"lect03/#hubel-and-wiesel-blackmore","text":"\u5c64\u9593\u306e\u7d50\u5408\u306e\u4ed5\u65b9, \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 forward/backward \u5f79\u5272\uff0c\u6a5f\u80fd\uff0c\u5b9f\u73fe\u65b9\u6cd5 \u5074\u6291\u5236 lateral inhibition (\u3053\u308c\u306b\u3064\u3044\u3066\u306f\u591a\u5c64\u5316\u3057\u3066\u56de\u907f\u3067\u304d\u308b\u53ef\u80fd\u6027\u3042\u308a) shape from X \u306f\u6b63\u3057\u304b\u3063\u305f\u306e\u304b\uff1f \u305f\u3060\u3057\u767a\u9054\u5fc3\u7406\u5b66\u306b\u304a\u3051\u308b\u30b7\u30a7\u30a4\u30d7\u30d0\u30a2\u30b9\u306f\u8a00\u8a9e\u767a\u9054\u306b\u304a\u3044\u3066\u91cd\u8981\u306a\u610f\u5473\u3092\u6301\u3064\u306f\u305a\u3002\u3060\u304b\u3089\u3068\u8a00\u3063\u3066\u4e73\u5e7c\u5150\u306f\u305d\u306e\u3088\u3046\u306b\u5f37\u5236(\u8105\u8feb\uff1f)\uff0c\u77ef\u6b63\u3055\u308c\u3066\u80b2\u3064\u308f\u3051\u3067\u306f\u306a\u3044\u3060\u308d\u3046\u3002 Ritter (2017) Cognitive Psychology for Deep Neural Networks: A Shape Bias Case Study Landau, Smith, Jones (1992) Syntactic Context and the Shape Bias in Childrens and Adults Lexical Learning Yamins (2016) Using goal-driven deep learning models to understand sensory cortex Julez \u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u8996\u899a\u7814\u7a76\u8005 Haar, SIFT, DoG \u306a\u3069\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u958b\u767a\u8005\u3068\u5bfe\u5fdc Poggio (1985) Computational Vision and Regularization Theory","title":"\u751f\u7406\u5b66\u3068\u306e\u5bfe\u5fdc (Hubel and Wiesel \u306e\u30cd\u30b3\u3068\u30b5\u30eb, Blackmore \u306e\u30cd\u30b3, \u30f4\u30a1\u30f3\u30a8\u30c3\u30bb\u30f3)"},{"location":"lect03/#marr-and-poggio-1976","text":"\u4e2d\u67a2\u795e\u7d4c\u7cfb\u306f 4 \u3064\u306e\u307b\u307c\u72ec\u7acb\u3057\u305f\u30ec\u30d9\u30eb\u306e\u8a18\u8ff0\u3067\u7406\u89e3\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 1. \u8a08\u7b97\u306e\u6027\u8cea\u304c\u8868\u73fe\u3055\u308c\u308b\u30ec\u30d9\u30eb\u3001 2. \u8a08\u7b97\u3092\u5b9f\u88c5\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u7279\u5fb4\u3065\u3051\u3089\u308c\u308b\u30ec\u30d9\u30eb\u3001 3. \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u7279\u5b9a\u306e\u30e1\u30ab\u30cb\u30ba\u30e0\u306b\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u30ec\u30d9\u30eb\u3001 4. \u30e1\u30ab\u30cb\u30ba\u30e0\u304c\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3067\u5b9f\u73fe\u3055\u308c\u308b\u30ec\u30d9\u30eb \u3067\u3042\u308b\u3002 \u4e00\u822c\u7684\u306b\u3001\u8a08\u7b97\u306e\u6027\u8cea\u306f\u89e3\u6c7a\u3059\u3079\u304d\u554f\u984c\u306b\u3088\u3063\u3066\u6c7a\u5b9a\u3055\u308c\u3001\u4f7f\u7528\u3055\u308c\u308b\u30e1\u30ab\u30cb\u30ba\u30e0\u306f\u5229\u7528\u53ef\u80fd\u306a\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306b\u4f9d\u5b58\u3057\u3001\u9078\u629e\u3055\u308c\u308b\u7279\u5b9a\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u554f\u984c\u3068\u5229\u7528\u53ef\u80fd\u306a\u30e1\u30ab\u30cb\u30ba\u30e0\u306b\u4f9d\u5b58\u3059\u308b\u3002 \u306e\u3061\u306b 3 \u3064\u306b\u307e\u3068\u3081\u3089\u308c\uff0c\u305d\u308c\u304c\u6709\u540d\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3067\u3059\u304c\uff0c\u51fa\u59cb\u3081\u306f 4 \u3064\u3067\u3057\u305f\u3002\u4ed6\u306e\u6388\u696d\u3067\u306f Marr \u306e 3 \u6c34\u6e96\u3068\u547c\u3070\u308c\u308b\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002 \u305d\u306e\u6709\u540d\u306b\u306a\u3063\u305f Marr \u306e 3 \u6c34\u6e96\u3068\u306f 1. \u8a08\u7b97\u8ad6 2. \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 3. \u5b9f\u88c5 \u306b\u3042\u305f\u308a\u307e\u3059\u3002\u8133\u3092\u7406\u89e3\u3059\u308b\u4e0a\u3067\uff0c3 \u3064\u3092\u533a\u5225\u3057\u3066\u8003\u3048\u307e\u3057\u3087\u3046\u3068\u3044\u3046\u30b9\u30ed\u30fc\u30ac\u30f3\u3067\u3059\u3002","title":"Marr and Poggio (1976)"},{"location":"lect03/#_7","text":"Zeiller 2012 \u3088\u308a Zeiler et. al. (2010) Fig. 7, and 8 \u76ee\u6a19\u99c6\u52d5\u578b\u30e2\u30c7\u30ea\u30f3\u30b0\u306e\u69cb\u6210\u8981\u7d20\u3002 \u5185\u5074\u306e\u5186\u306f\u3001\u4e0e\u3048\u3089\u308c\u305f\u6570\u306e\u30ec\u30a4\u30e4\u30fc\u306e\u30e2\u30c7\u30eb\u3092\u542b\u3080\u5b8c\u5168\u306a\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u306e\u90e8\u5206\u7a7a\u9593\u3092\u8868\u3059\u3002 \u76ee\u6a19\u99c6\u52d5\u30e2\u30c7\u30eb\u306f\u3001\u7279\u306b\u6700\u9069\u306a\u30e2\u30c7\u30eb\u3092\u767a\u898b\u3059\u308b\u305f\u3081\u306b\u3001\u30e2\u30c7\u30eb\u30fb\u30af\u30e9\u30b9\u5185\u306e\u8ecc\u9053\uff08\u5b9f\u7dda\uff09\u306b\u6cbf\u3063\u3066\u30b7\u30b9\u30c6\u30e0\u3092\u99c6\u52d5\u3059\u308b\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08\u9ed2\u306e\u70b9\u7dda\u77e2\u5370\uff09\u3092\u4f7f\u7528\u3057\u3066\u69cb\u7bc9\u3055\u308c\u308b\u3002 \u5404\u30b4\u30fc\u30eb\u306f\u3001\u305d\u306e\u30b4\u30fc\u30eb\u3092\u89e3\u304f\u306e\u306b\u7279\u306b\u9069\u3057\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u542b\u3080\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\uff08\u592a\u3044\u9ed2\u306e\u7b49\u9ad8\u7dda\uff09\u5185\u306e\u5f15\u304d\u5bc4\u305b\u306e\u76c6\u5730\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u8a08\u7b97\u7d50\u679c\u306f\u3001\u8ab2\u984c\u304c\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u8a2d\u5b9a\u306b\u5f37\u3044\u5236\u7d04\u3092\u4e0e\u3048\u308b\u3053\u3068\u3092\u793a\u3059\u3002 \u3059\u306a\u308f\u3061\u3001\u4e0e\u3048\u3089\u308c\u305f\u8ab2\u984c\u306e\u6700\u9069\u5316\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30bb\u30c3\u30c8\u306f\u3001\u5143\u306e\u7a7a\u9593\u306b\u6bd4\u3079\u3066\u975e\u5e38\u306b\u5c0f\u3055\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308b\u3002 \u3053\u308c\u3089\u306e\u76ee\u6a19\u99c6\u52d5\u30e2\u30c7\u30eb\u306f\u3001\u4e0e\u3048\u3089\u308c\u305f\u8ab2\u984c\u9818\u57df\u3067\u306e\u884c\u52d5\u306e\u6839\u5e95\u306b\u3042\u308b\u3068\u8003\u3048\u3089\u308c\u3066\u3044\u308b\u8133\u9818\u57df\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u5fdc\u7b54\u7279\u6027\u3092\u3069\u306e\u7a0b\u5ea6\u4e88\u6e2c\u3067\u304d\u308b\u304b\u306b\u3064\u3044\u3066\u8a55\u4fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u4f8b\u3048\u3070\u3001\u5358\u8a9e\u8a8d\u8b58\u306e\u305f\u3081\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u30e2\u30c7\u30eb\u306e\u30e6\u30cb\u30c3\u30c8\u3001\u8074\u899a\u76ae\u8cea\u306e\u4e00\u6b21\u9818\u57df\u3001\u30d9\u30eb\u30c8\u9818\u57df\u3001\u30d1\u30e9\u30d9\u30eb\u30c8\u9818\u57df\u306e\u5fdc\u7b54\u7279\u6027\u3068\u6bd4\u8f03\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u307e\u305f\u3001\u30e2\u30c7\u30eb\u3092\u4e92\u3044\u306b\u6bd4\u8f03\u3057\u3066\u3001\u7570\u306a\u308b\u30bf\u30a4\u30d7\u306e\u8ab2\u984c\u304c\u3069\u306e\u7a0b\u5ea6\u306e\u795e\u7d4c\u69cb\u9020\u306e\u5171\u6709\u306b\u3064\u306a\u304c\u308b\u304b\u3092\u5224\u65ad\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002 \u307e\u305f\u3001\u69d8\u3005\u306a\u69cb\u6210\u8981\u7d20\u306e\u30eb\u30fc\u30eb\uff08\u6559\u5e2b\u3042\u308a\u3001\u6559\u5e2b\u306a\u3057\u3001\u534a\u6559\u5e2b\u3042\u308a\uff09\u3092\u7814\u7a76\u3057\u3066\u3001\u305d\u308c\u3089\u304c\u751f\u5f8c\u306e\u767a\u9054\u3084\u5c02\u9580\u77e5\u8b58\u5b66\u7fd2\u306e\u9593\u306b\u3069\u306e\u3088\u3046\u306b\u7570\u306a\u308b\u30c0\u30a4\u30ca\u30df\u30af\u30b9\u306b\u3064\u306a\u304c\u308b\u304b\u3092\u5224\u65ad\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\uff08\u7dd1\u306e\u7834\u7dda\u306e\u30d1\u30b9\uff09\u3002","title":"\u73fe\u4ee3\u7684\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u3068\u751f\u7406\u5b66\u3068\u306e\u5bfe\u5fdc"},{"location":"lect03/#3-cnn","text":"\u6df1\u5c64\u5b66\u7fd2 (\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0) \u306e\u4e2d\u3067 \u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af CNN \u3068\u547c\u3070\u308c\u308b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3064\u3044\u3066\u89e3\u8aac\u3057\u307e\u3059\u3002 \u6700\u521d\u306b\u753b\u50cf\u51e6\u7406\u306e\u6982\u7565\u3092\u8ff0\u3079\u308b CNN \u304c\uff0c\u305d\u308c\u307e\u3067\u4e3b\u6d41\u3067\u3042\u3063\u305f\u5f93\u6765\u306e\u624b\u6cd5\u306e\u6027\u80fd\u3092\u51cc\u99d5\u3057\u305f\u3053\u3068\u306f\u3059\u3067\u306b\u8ff0\u3079\u307e\u3057\u305f\u3002 CNN \u306e\u7279\u5fb4\u306e\u4e00\u3064\u306b \u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9 \u3068\u547c\u3070\u308c\u308b\u8003\u3048\u65b9\u304c\u3042\u308a\u307e\u3059\u3002 \u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u3068\u306f\uff0c\u5f93\u6765\u624b\u6cd5\u306b\u3088\u308b\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u30b7\u30b9\u30c6\u30e0\u3067\u306f\uff0c\u5c02\u9580\u5bb6\u306b\u3088\u308b\u624b\u306e\u8fbc\u3093\u3060\u8a73\u7d30\u306a\u4f5c\u308a\u8fbc\u307f\u3092\u5fc5\u8981\u3068\u3057\u3066\u3044\u305f\u3053\u3068\u3068\u7570\u306a\u308a\uff0c\u9762\u5012\u306a\u4f5c\u308a\u8fbc\u307f\u3092\u305b\u305a\u3068\u3082\u6027\u80fd\u304c\u5411\u4e0a\u3057\u305f\u3053\u3068\u3092\u6307\u3057\u307e\u3059\u3002 \u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u306a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3088\u308a\uff0c\u6b21\u306e\u3053\u3068\u304c\u5b9f\u73fe\u3057\u307e\u3057\u305f\u3002 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5c64\u3054\u3068\u306b\uff0c\u7279\u5fb4\u62bd\u51fa\u304c\u884c\u308f\u308c\uff0c\u62bd\u51fa\u3055\u308c\u305f\u7279\u5fb4\u304c\u3088\u308a\u9ad8\u6b21\u306e\u5c64\u3078\u3068\u4f1d\u9054\u3055\u308c\u308b \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5404\u5c64\u3067\u306f\uff0c\u6bd4\u8f03\u7684\u5358\u7d14\u306a\u7279\u5fb4\u304b\u3089\u6b21\u7b2c\u306b\u8907\u96d1\u306a\u7279\u5fb4\u3078\u3068\u6bb5\u968e\u7684\u306b\u5909\u5316\u3059\u308b \u9ad8\u6b21\u5c64\u306b\u307f\u3089\u308c\u308b\u7279\u5fb4\u306f\u4f4e\u6b21\u5c64\u306e\u7279\u5fb4\u3088\u308a\u5927\u57df\u7684\uff0c\u666e\u904d\u7684\u3067\u3042\u308b \u9ad8\u6b21\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306f\uff0c\u4f4e\u6b21\u5c64\u3067\u62bd\u51fa\u3055\u308c\u305f\u7279\u5fb4\u3092\u5171\u6709\u3057\u3066\u3044\u308b \u3053\u306e\u3053\u3068\u3092\u7c21\u5358\u306b\u8aac\u660e\u3057\u3066\u307f\u307e\u3059\u3002 \u6211\u3005\u4eba\u9593\u306f\uff0c\u5916\u754c\u3092\u8a8d\u8b58\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u8a08\u7b97\u3092\uff0c\u751f\u7269\u7a2e\u3068\u3057\u3066\u306e\u767a\u751f\u306e\u904e\u7a0b\u3068\uff0c\u500b\u4eba\u306e\u767a\u9054\u3092\u901a\u3057\u3066\u306e\u7d4c\u9a13\u306b\u57fa\u3065\u304f\u8a8d\u8b58\u30b7\u30b9\u30c6\u30e0\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u3068\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5f93\u3063\u3066\u6211\u3005\u306e\u8996\u899a\u8a8d\u8b58\u306b\u306f\u5316\u77f3\u6642\u4ee3\u306b\u59cb\u307e\u308b\u5149\u306e\u53d7\u5bb9\u5668\u3068\u3057\u3066\u306e\u773c\u306e\u9032\u5316\u306e\u6b74\u53f2\u3068\u767a\u9054\u3092\u901a\u3058\u305f\u500b\u4eba\u306e\u8996\u899a\u7d4c\u9a13\u304c\u53cd\u6620\u3055\u308c\u305f\u7d50\u679c\u3067\u3082\u3042\u308a\u307e\u3059\u3002 \u4eba\u5de5\u77e5\u80fd\u306e\u76ee\u6a19\u306f\uff0c\u3053\u306e\u8907\u96d1\u306a\u7279\u5fb4\u691c\u51fa\u904e\u7a0b\u3092\u3069\u3046\u3084\u3063\u305f\u3089\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u7372\u5f97\u3067\u304d\u308b\u304b\u3068\u3044\u3046\u3053\u3068\u3067\u3082\u3042\u308a\u307e\u3059\u3002 \u5916\u754c\u3092\u8a8d\u8b58\u3059\u308b\u305f\u3081\u306b\u4eca\u65e5\u307e\u3067\u8003\u6848\u3055\u308c\u3066\u304d\u305f\u30e2\u30c7\u30eb\uff08\u4f8b\u3048\u3070\uff0c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306a\u3069\u306f\uff09\u306f\u8907\u96d1\u3067\u3059\u3002 \u3067\u3059\u304c\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3059\u308b\u305f\u3081\u306e\u5b66\u7fd2\u65b9\u6cd5\u306f\u305d\u308c\u307b\u3069\u96e3\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002 \u3053\u306e\u610f\u5473\u3067\u753b\u50cf\u8a8d\u8b58\u8ab2\u984c\u304c\u6b63\u3057\u304f\u52d5\u4f5c\u3059\u308b\u305f\u3081\u306e\u30dd\u30a4\u30f3\u30c8\u306f\uff0c\u8a8d\u8b58\u30b7\u30b9\u30c6\u30e0\u304c\u554f\u984c\u3092\u89e3\u304f\u4e8b\u304c\u53ef\u80fd\u306a\u307b\u3069\u8907\u96d1\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u3067\u306f\u306a\u304f\uff0c\u5341\u5206\u306b\u8907\u96d1\u304c\u8996\u899a\u74b0\u5883\uff0c\u3059\u306a\u308f\u3061\u753b\u50cf\u8a8d\u8b58\u306e\u5834\u5408\uff0c\u5916\u90e8\u306e\u8266\u6a4b\u3092\u53cd\u6620\u3059\u308b\u305f\u3081\u306b\u5341\u5206\u306a\u91cf\u306e\u50cf\u30c7\u30fc\u30bf\u3092\u5bb9\u6613\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u5426\u304b\u306b\u3042\u308a\u307e\u3059\u3002 \u4eca\u65e5\u306e CNN \u306b\u3088\u308b\u753b\u50cf\u8a8d\u8b58\u6027\u80fd\u306e\u5411\u4e0a\u306f\uff0c\u7c21\u5358\u306a\u8a08\u7b97\u65b9\u6cd5\u3092\u7528\u3044\u3066\u8907\u96d1\u306a\u5916\u90e8\u74b0\u5883\u306b\u9069\u5fdc\u3067\u304d\u308b\u8a8d\u8b58\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3059\u308b\u65b9\u6cd5\u304c\u78ba\u7acb\u3057\u305f\u304b\u3089\u3067\u3042\u308b\u3068\u8a00\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u4e0b\u56f3 \u306b\u753b\u50cf\u51e6\u7406\u306e\u4f8b\u3092\u6319\u3052\u307e\u3057\u305f\u3002 Goodfellow et al. (2017) Fig.1 \u3092\u6539\u5909 \u6211\u3005\u306f \u753b\u50cf\u3092\u307b\u307c\u77ac\u6642\u306b\u5224\u65ad\u3067\u304d\u307e\u3059\u3002 \u3067\u3059\u304c\u753b\u50cf\u8a8d\u8b58\u306e\u96e3\u3057\u3055\u306f\uff0c\u5165\u529b\u753b\u50cf\u304c\u4e0a\u56f3 \u306b\u793a\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u5165\u529b\u4fe1\u53f7\u306e\u6570\u5b57\u306e\u96c6\u307e\u308a\u3067\u3057\u304b\u7121\u3044\u3053\u3068\u3067\u3059\u3002 \u3053\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u3092\u4f55\u5ea6\u3082\u7d4c\u9a13\u3059\u308b\u3053\u3068\u3067\u30cd\u30b3\u3092\u8b58\u5225\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u5165\u529b\u3055\u308c\u308b\u753b\u50cf\u306f\u6570\u5b57\u306e\u584a\u306b\u904e\u304e\u307e\u305b\u3093\u3002 \u72b6\u6cc1\u3054\u3068\u306b\u3068\u308b\u3079\u304d\u64cd\u4f5c\u3092\u547d\u4ee4\u3068\u3057\u3066\u9010\u4e00\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u4e0e\u3048\u308b\u6307\u793a\u3059\u308b\u624b\u9806\u306e\u96c6\u307e\u308a\u306e\u3053\u3068\u3092\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u547c\u3073\u307e\u3059\u3002\u4eba\u9593\u304c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u64cd\u4f5c\u3084\u547d\u4ee4\u306b\u3088\u3063\u3066\u753b\u50cf\u8a8d\u8b58\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308b\u5834\u5408\uff0c\u547d\u4ee4\u305d\u306e\u3082\u306e\u304c\u81a8\u5927\u306b\u306a\u3063\u305f\u308a\uff0c\u305d\u3082\u305d\u3082\u8aac\u660e\u3059\u308b\u3053\u3068\u304c\u96e3\u3057\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002 \u4f8b\u3092\u6319\u3052\u308c\u3070\uff0c\u304a\u6bcd\u3055\u3093\u3092\u601d\u3044\u6d6e\u304b\u3079\u3066\u304f\u3060\u3055\u3044\u3068\u8a00\u308f\u308c\u308c\u3070\u8ab0\u3067\u3082\uff0c\u305d\u308c\u305e\u308c\u7570\u306a\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u3042\u308c\u601d\u3044\u6d6e\u304b\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\uff0c\u63d0\u793a\u3055\u308c\u305f\u753b\u50cf\u304c\u81ea\u5206\u306e\u6bcd\u89aa\u306e\u3082\u306e\u3067\u3042\u308b\u304b\uff0c\u5225\u306e\u5973\u6027\u3067\u3042\u308b\u304b\u306e\u5224\u65ad\u306f\u4eba\u9593\u3067\u3042\u308c\u3070\u7c21\u5358\u3067\u3059\u3002\u3068\u3053\u308d\u304c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u306f\u96e3\u3057\u3044\u8ab2\u984c\u3068\u306a\u308a\u307e\u3059\u3002 \u52a0\u3048\u3066\u6bcd\u89aa\u306e\u7279\u5fb4\u3092\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u7406\u89e3\u3067\u304d\u308b\u547d\u4ee4\u3068\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3059\u308b\u3053\u3068\u3082\u96e3\u3057\u3044\u8ab2\u984c\u3067\u3059\u3002\u3064\u307e\u308a\u81ea\u5206\u306e\u6bcd\u89aa\u306e\u7279\u5fb4\u3092\u66d6\u6627\u306a\u8a00\u8449\u3067\u306a\u304f\u660e\u78ba\u306b\u8aac\u660e\u3059\u308b\u3068\u306a\u308b\u3068\u3068\u3066\u3082\u96e3\u3057\u3044\u8ab2\u984c\u3068\u306a\u308a\u307e\u3059\u3002 \u3068\u3044\u3046\u306e\u306f\uff0c\u5973\u6027\u306e\u9854\u5199\u771f\u3067\u3042\u308c\u3070\u3069\u306e\u5199\u771f\u3082\u4f3c\u3066\u3044\u308b\u3068\u8a00\u3048\u308b\u304b\u3089\u3067\u3059\u3002\u9854\u306e\u9020\u5f62\u3084\u8f2a\u90ed\uff0c\u9aea\u306e\u4f4d\u7f6e\u306a\u3069\u306f\u3069\u306e\u753b\u50cf\u3082\u985e\u4f3c\u3057\u3066\u3044\u308b\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u3068\u3053\u308d\u304c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u306f\u3053\u306e\u4f3c\u3066\u3044\u308b\uff0c\u4f3c\u3066\u3044\u3044\u306a\u3044\u306e\u533a\u5225\u304c\u96e3\u3057\u3044\u306e\u3067\u3059\u3002 \u52a0\u3048\u3066\uff0c\u540c\u4e00\u30cd\u30b3\u306e\u753b\u50cf\u3067\u3042\u3063\u3066\u3082\uff0c\u88ab\u5199\u4f53\u306e\u5411\u304d\u8996\u7dda\u306e\u65b9\u5411\u3084\u5149\u6e90\u306e\u4f4d\u7f6e\u3084\u64ae\u5f71\u6761\u4ef6\u304c\u7570\u306a\u308c\u3070\u753b\u50cf\u3068\u3057\u3066\u306f\u7570\u306a\u308a\u307e\u3059\u3002 \u4e0b\u56f3\u306b\u793a\u3057\u305f\u3088\u3046\u306b\u5165\u529b\u753b\u50cf\u306e\u4e2d\u306e\u7279\u5b9a\u306e\u5024\u3060\u3051\u3092\u8abf\u3079\u3066\u307f\u3066\u3082\uff0c\u5165\u529b\u753b\u50cf\u304c\u30cd\u30b3\u3067\u3042 \u308b\uff0c\u305d\u3046\u3067\u306f\u306a\u3044\u304b\u3092\u5224\u65ad\u3059\u308b\u3053\u3068\u306f\u96e3\u3057\u3044\u8ab2\u984c\u306b\u306a\u308a\u307e\u3059\u3002 \u73fe\u5728\u306e\u753b\u50cf\u8a8d\u8b58\u3067\u306f\uff0c\u7279\u5b9a\u306e\u753b\u7d20\u306e\u60c5\u5831\u306b\u4f9d\u5b58\u305b\u305a\u306b\uff0c\u5165\u529b\u753b\u50cf\u304c\u6301\u3063\u3066\u3044\u308b\u7279\u5fb4 \u3092\u3068\u3089\u3048\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u307e\u3059\u3002\u305f\u3068\u3048\u3070\uff0c\u30cd\u30b3\u3092\u8a8d\u8b58\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3053\u3068\u306f\uff0c\u30cd \u30b3\u306b\u7279\u5fb4\u7684\u306a\u300c\u30cd\u30b3\u76ee\u300d\u3084\u300c\u30cd\u30b3\u8db3\u300d\u3092\u691c\u51fa\u3059\u308b\u3053\u3068\u3067\u3042\u308b\u3068\u8003\u3048\u307e\u3059\u3002\u5165\u529b\u753b\u50cf \u304b\u3089\uff0c\u30cd\u30b3\u306e\u6301\u3064\u7279\u5fb4\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308c\u3070\uff0c\u305d\u308c\u3089\u306e\u7279\u5fb4\u3092\u6301\u3063\u3066\u3044\u308b\u5165\u529b \u753b\u50cf\u306f\u30cd\u30b3\u3067\u3042\u308b\u3068\u5224\u65ad\u3057\u3066\u826f\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059(\u4e0b\u56f3 )\u3002 \u4e0b\u56f3 \u306f\uff0c\u97f3\u58f0\u8a8d\u8b58\u3068\u753b\u50cf\u8a8d\u8b58\u306e\u4e21\u5206\u91ce\u306b\u304a\u3044\u3066 CNN \u304c\u7528\u3044\u3089\u308c\u308b\u4ee5\u524d\u306e\u5f93\u6765\u624b\u6cd5 \u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002 \u4e0a\u56f3 \u306e\u3088\u3046\u306a\u5f93\u6765\u624b\u6cd5\u306b\u5bfe\u3057\u3066\uff0cCNN \u3067\u306f\u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u306a\u7279\u5fb4\u62bd\u51fa\u3092\u591a\u5c64\u591a\u6bb5\u306b\u91cd\u306d\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u8907\u96d1\u306a\u7279\u5fb4\u3092\u62bd\u51fa(\u691c\u51fa)\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059 (\u4e0b\u56f3 )\u3002 \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u306f\u30cd\u30b3\u76ee\u7279\u5fb4\u691c\u51fa\u5668\uff0c\u30cd\u30b3\u8db3\u7279\u5fb4\u691c\u51fa\u5668\u306f\u5099\u308f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u305d\u3053\u3067\u753b\u50cf\u8a8d\u8b58\u7814\u7a76\u3067\u306f\uff0c\u753b\u50cf\u306e\u7d71\u8a08\u7684\u6027\u8cea\u306b\u57fa\u3065\u3044\u3066\u7279\u5fb4\u691c\u51fa\u5668\u3092\u7b97\u51fa\u3059\u308b\u65b9\u6cd5\u3092\u63a2\u3059\u52aa\u529b\u304c\u884c\u308f\u308c\u3066\u304d\u307e\u3057\u305f\u3002 \u3057\u304b\u3057\uff0c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u30cd\u30b3\u76ee\u7279\u5fb4\u3084\u30cd\u30b3\u8db3\u7279\u5fb4\u3092\u6559\u3048\u308b\u306f\u5bb9\u6613\u306a\u3053\u3068\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u3053\u306e\u3053\u3068\u306f\u753b\u50cf\u51e6\u7406\u306e\u5206\u91ce\u3060\u3051\u306b\u9650\u308a\u307e\u305b\u3093\uff0c\u97f3\u58f0\u8a8d\u8b58\u3067\u3082\u8a00\u8a9e\u60c5\u5831\u51e6\u7406\u3067\u3082\u305d\u308c\u305e\u308c\u306e\u7279\u5fb4\u5668\u3092\u4e00\u3064\u4e00\u3064\u5b9a\u7fa9\u3057\uff0c\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u306e\u306f\u6642\u9593\u304c\u304b\u304b\u308a\uff0c\u5c02\u9580\u7684\u306a\u77e5\u8b58\u3082\u5fc5\u8981\u3067\u56f0\u96e3\u306a\u4f5c\u696d\u3067\u3057\u305f\u3002","title":"3. \u7573\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8(CNN)"},{"location":"lect03/#_8","text":"","title":"\u9818\u57df\u5207\u308a\u51fa\u3057"},{"location":"lect03/#_9","text":"\u307e\u3068\u3081\u308b\u3068\uff0c1950 \u5e74\u4ee3\u5f8c\u534a\u4ee5\u6765:\u56fa\u5b9a\u7684\uff0c\u624b\u5de5\u82b8\u7684\u7279\u5fb4\u62bd\u51fa\u5668\u3068\u5b66\u7fd2\u53ef\u80fd\u306a\u5206\u985e\u5668\u3092\u7528\u3044\u305f\u8a8d\u8b58\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308b\u3053\u3068\u304c\u8a66\u307f\u3089\u308c\u3066\u304d\u305f\u3068\u3044\u3048\u307e\u3059\u3002 \u3053\u308c\u306b\u5bfe\u3057\u3066 CNN \u304c\u4e3b\u6d41\u3068\u306a\u3063\u305f\u73fe\u5728\u306f\u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u3067\u5b66\u7fd2\u53ef\u80fd\u306a\u7279\u5fb4\u62bd\u51fa\u5668\u3092\u591a\u6570\u91cd\u306d\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u6027\u80fd\u304c\u5411\u4e0a\u3057\u307e\u3057\u305f\u3002 \u5922\u306e\u3088\u3046\u306a\u8a71\u304c\u7d9a\u304d\u307e\u3057\u305f\u304c\uff0c\u672c\u7bc0\u306e\u6700\u5f8c\u306b\u9006\u306b CNN \u306f\u7c21\u5358\u306b\u9a19\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u4f8b \u3092\u6319\u3052\u3066\u304a\u304d\u307e\u3059 \u3002 \u56f3\u3067\u306f\uff0c\u5de6\u306e\u753b\u50cf\u304c\u5165\u529b\u753b\u50cf\u3067\uff0cCNN \u306f\u78ba\u4fe1\u5ea6 57.7\u30d1\u30fc\u30bb\u30f3\u30c8\u3067\u30d1\u30f3\u30c0\u3067\u3042\u308b\u8a8d\u8b58\u3057\u307e\u3057\u305f\u3002 \u3068\u3053\u308d\u304c\u3053\u306e\u753b\u50cf\u306b 0.007\u3060\u3051\u610f\u5473\u306e\u306a\u3044\u753b\u50cf(\u56f3\u4e2d\u592e)\u3092\u52a0\u3048\u308b\u305f\u753b\u50cf(\u56f3\u53f3)\u3092 CNN \u306f 99.3\u30d1\u30fc\u30bb\u30f3\u30c8\u306e\u78ba\u4fe1\u5ea6\u3067\u30c6\u30ca\u30ac\u30b6\u30eb (gibbon)\u3068\u5224\u65ad\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u4f8b\u306f\u3053\u3053\u3067\u306f\u8a73\u3057\u304f\u89e6\u308c\u308b\u3053\u3068\u306f\u3057\u307e\u305b\u3093\u304c \u6575\u5bfe\u7684\u5b66\u7fd2 \u3068\u547c\u3076\u8a13\u7df4\u624b\u6cd5\u3092\u8aac\u660e\u3059\u308b\u969b\u306b\u7528\u3044\u3089\u308c\u305f\u4f8b\u3067\u3059 \u3002 \u3053\u306e\u4f8b\u304b\u3089\u3082\u5206\u304b\u308b\u3053\u3068\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u307e\u3068\u3081\u3089\u308c\u308b\u3067\u3057\u3087\u3046\u3002 \u3059\u306a\u308f\u3061\uff0c\u4eba\u9593\u306e\u8133\u3092\u6a21\u3057\u305f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3042\u308b CNN \u304c\u5927\u898f\u6a21\u5316\u50cf\u8a8d\u8b58\u30c1\u30e3\u30ec\u30f3\u30b8\u306b\u304a\u3044\u3066\u4eba\u9593\u306e\u8a8d\u8b58\u6027\u80fd\u3092\u8d8a\u3048\u305f\u3068\u5831\u9053\u3055\u308c\u307e\u3057\u305f\u3002 \u3067\u3059\u304c\uff0c\u4eba\u9593\u306e\u8996\u899a\u8a8d\u8b58\u3092\u5b8c\u5168\u306b\u5b9f\u73fe\u3057\u305f\u3068\u8003\u3048\u308b\u306e\u306f\u65e9\u8a08\u3067\uff0c\u89e3\u304f\u3079\u304d\u8ab2\u984c\u306f\u672a\u3060\u591a\u6570\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 \u3053\u306e\u72b6\u6cc1\u306f\uff0c\u97f3\u58f0\u8a8d\u8b58\u3084\u8a00\u8a9e\u60c5\u5831\u51e6\u7406\u3067\u3082\u540c\u69d8\u3067\u3042\u308b\u3068\u8a00\u3048\u307e\u3059\u3002","title":"\u753b\u50cf\u51e6\u7406\u3068\u8a00\u8a9e\u51e6\u7406\u3068\u306e\u878d\u5408"},{"location":"lect03/#cognitive-computational-neuroscience","text":"Kriegeskorte and Doglas (2018) Fig. 2\u3088\u308a \u8133\u306e\u6a5f\u80fd\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u306f\u3069\u3046\u3044\u3046\u3053\u3068\u304b\uff1f \u8a8d\u77e5\u8a08\u7b97\u795e\u7d4c\u79d1\u5b66\u306e\u76ee\u7684\u306f\u5b9f\u4e16\u754c\u306e\u8a8d\u77e5\u8ab2\u984c\u3092\u9042\u884c\u53ef\u80fd\u3067\uff0c\u751f\u7269\u5b66\u7684\u59a5\u5f53\u6027\u3092\u6301\u3064\u8a08\u7b97\u30e2\u30c7\u30eb\u3092\u7528\u3044\u3066\u52d5\u7269\u3084\u4eba\u9593\u306e\u795e\u7d4c\u6d3b\u52d5\u3068\u884c\u52d5\u306e\u591a\u304f\u306e\u89b3\u6e2c\u7d50\u679c\u3092\u8aac\u660e\u3059\u308b\u3053\u3068\u3067\u3042\u308b\u3002 \u6b74\u53f2\u7684\u306b\u306f\u5404\u5206\u91ce\uff08\u5186\uff09\u306f\u3053\u308c\u3089\u8ab2\u984c\u306e\u56de\u554f\u984c\uff08\u767d\u30e9\u30d9\u30eb\uff09\u306b\u53d6\u308a\u7d44\u3093\u3067\u304d\u305f\u3002","title":"\u8a8d\u77e5\u8a08\u7b97\u8ad6\u7684\u795e\u7d4c\u79d1\u5b66 Cognitive computational neuroscience"},{"location":"lect03/#cnn_1","text":"\u901a\u5e38\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u306f\uff0c\u76f4\u4e0b\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u3068\u305d\u306e\u3059\u3050\u4e0a\u306e\u5c64\u306e\u5168\u30cb\u30e5\u30fc\u30ed\u30f3\u3068\u7d50\u5408\u3092\u6709\u3059\u308b\u3002\u4e00\u65b9 CNN \u3067\u306f\u305d\u306e\u7d50\u5408\u304c\u90e8\u5206\u7684\u3067\u3042\u308b\u3002 \u5404\u30cb\u30e5\u30fc\u30ed\u30f3\u306f\u591a\u5165\u529b\u4e00\u51fa\u529b\u306e\u4fe1\u53f7\u5909\u63db\u6a5f\u3068\u307f\u306a\u3059\u3053\u3068\u304c\u3067\u304d\uff0c\u6d3b\u6027\u5316\u95a2\u6570\u306b\u975e\u7dda\u5f62\u306a\u95a2\u6570\u3092\u7528\u3044\u308b\u70b9\u306f\u901a\u5e38\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u540c\u69d8\u3002 \u753b\u50cf\u51e6\u7406\u3092\u8003\u3048\u308b\u5834\u5408\uff0c\u5178\u578b\u7684\u306b\u306f\u4e00\u679a\u306e\u5165\u529b\u9759\u6b62\u753b\u753b\u50cf\u306f 3 \u6b21\u5143\u30c7\u30fc\u30bf\u3067\u3042\u308b\u3002\u6b21\u5143\u306f\u5e45w\uff0c\u9ad8\u3055h\uff0c\u5965\u884c\u304dd \u3067\u3042\u308a\uff0c\u5165\u529b\u753b\u50cf\u3067\u306f\u5965\u884c\u304d\u304c\uff13\u6b21\u5143\uff0c\u3059\u306a\u308f\u3061\u8d64\u7dd1\u9752\u306e\u4e09\u539f\u8272\u3002\u51fa\u529b\u30cb\u30e5\u30fc\u30ed\u30f3\u3078\u306e\u5165\u529b\u306f\u5c40\u6240\u7d50\u5408\u304b\u3089\u5c0f\u9818\u57df\u306b\u9650\u5c40\u3055\u308c\u308b\u3002","title":"CNN \u306e\u8a73\u7d30"},{"location":"lect03/#1-cnn","text":"CNN \u306f\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u5c64\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\uff1a \u7573\u8fbc\u307f\u5c64 \u30d7\u30fc\u30ea\u30f3\u30b0\u5c64 \u5b8c\u5168\u7d50\u5408\u5c64 \uff08\u901a\u5e38\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u6b63\u78ba\u306b\u540c\u3058\u3082\u306e\uff0cCNN \u3067\u306f\u6700\u7d42 1 \u5c64\u307e\u305f\u306f\u6700\u7d42 1,2 \u5c64\u306b\u7528\u3044\u308b\uff09 \u5165\u529b\u4fe1\u53f7\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5024\u304c\u7570\u306a\u308b\u6d3b\u6027\u5316\u95a2\u6570\u306b\u3088\u3063\u3066\u975e\u7dda\u5f62\u5909\u63db\u3055\u308c\u308b\u3002 \u7573\u8fbc\u307f\u5c64\u3068\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u3068\u8907\u6570\u7a4d\u307f\u91cd\u306d\u308b\u3053\u3068\u3067\u591a\u5c64\u5316\u3092\u5b9f\u73fe\u3057\uff0c\u6df1\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u306a\u308b\u3002","title":"1. CNN\u306e\u69cb\u6210"},{"location":"lect03/#_10","text":"\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u4fe1\u53f7\u3078\u5909\u63db \u5404\u5c64\u306f\u5225\u3005\u306e\u5f79\u5272\uff08\u7573\u8fbc\u307f\uff0c\u5168\u7d50\u5408\uff0cReLU, \u30d7\u30fc\u30ea\u30f3\u30b0\uff09 \u5165\u529b\u4fe1\u53f7\u306f 3 \u6b21\u5143\u30c7\u30fc\u30bf\uff0c\u51fa\u529b\u4fe1\u53f7\u3082 3 \u6b21\u5143\u30c7\u30fc\u30bf \u5b66\u7fd2\u3059\u3079\u304d\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u3064\u5c64\u306f\u7573\u8fbc\u307f\u5c64\uff0c\u5168\u7d50\u5408\u5c64 \u5b66\u7fd2\u3059\u3079\u304d\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u305f\u306a\u3044\u5c64\u306f ReLU \u5c64\u3068\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64 \u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u3064\u5c64\u306f\u7573\u8fbc\u307f\u5c64, \u5168\u7d50\u5408\u5c64, \u30d7\u30fc\u30ea\u30f3\u30b0\u5c64 \u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u305f\u306a\u3044\u5c64\u306f ReLU\u5c64 CNN \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3: \u5165\u529b\u5c64\u306f\u751f\u753b\u50cf\u306e\u753b\u7d20\u5024(\u5de6)\u3092\u683c\u7d0d\u3001\u6700\u5f8c\u5c64\u306f\u5206\u985e\u78ba\u7387(\u53f3)\u3092\u51fa\u529b\u3002\u51e6\u7406\u7d4c\u8def\u306b\u6cbf\u3063\u305f\u6d3b\u6027\u306e\u5404\u30dc\u30ea\u30e5\u30fc\u30e0\u306f\u5217\u3068\u3057\u3066\u793a\u3055\u308c\u3066\u3044\u308b\u30023D\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u8996\u899a\u5316\u3059\u308b\u3053\u3068\u306f\u96e3\u3057\u3044\u305f\u3081\u3001\u5404\u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u30b9\u30e9\u30a4\u30b9\u3092\u884c\u3054\u3068\u306b\u914d\u7f6e\u3057\u3066\u3042\u308b\u3002\u6700\u7d42\u5c64\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\u306f\u5404\u30af\u30e9\u30b9\u306e\u30b9\u30b3\u30a2\u3092\u4fdd\u6301\u3059\u308b\u304c\u3001\u30bd\u30fc\u30c8\u3055\u308c\u305f\u4e0a\u4f4d5\u30b9\u30b3\u30a2\u3060\u3051\u3092\u8996\u899a\u5316\u3057\u3001\u305d\u308c\u305e\u308c\u306e\u30e9\u30d9\u30eb\u3092\u5370\u5237\u3057\u3066\u3042\u308b\u3002 \u5165\u529b\u5c64[32x32x3]: \u4fe1\u53f7\u306f\u753b\u50cf\u306e\u751f\u30c7\u30fc\u30bf\uff08\u753b\u7d20\u5024\uff09\u5e45w(32)\uff0c\u9ad8\u3055h(32)\u3001\u8272\u30c1\u30e3\u30cd\u30eb3(R, G, B) \u7573\u8fbc\u307f\u5c64: \u4e0b\u4f4d\u5c64\u306e\u9650\u5c40\u3055\u308c\u305f\u5c0f\u9818\u57df\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u51fa\u529b\u306e\u8377\u91cd\u4ed8\u304d\u7dcf\u548c\u3092\u8a08\u7b97(\u5185\u7a4d\uff0c\u30c9\u30c3\u30c8\u7a4d\uff09\u300212\u500b\u306e\u30d5\u30a3\u30eb\u30bf\u3092\u4f7f\u7528\u3059\u308b\u3068[32x32x12]\u3068\u306a\u308b\u3002 ReLU\u5c64\u306e\u6d3b\u6027\u5316\u95a2\u6570\u306f ReLU (Recutified Linear Unit) max(0,x) \u30d7\u30fc\u30ea\u30f3\u30b0\u5c64: \u7a7a\u9593\u6b21\u5143\uff08\u5e45,\u9ad8\u3055\uff09\u306b\u6cbf\u3063\u3066\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3092\u5b9f\u884c\u3002[16x16x12]\u306e\u3088\u3046\u306b\u306a\u308b\u3002 \u5168\u7d50\u5408\u5c64\u306f\u30af\u30e9\u30b9\u306b\u5c5e\u3059\u308b\u78ba\u7387\u3092\u8a08\u7b97: 10 \u306e\u6570\u5b57\u306e\u305d\u308c\u305e\u308c\u304c CIFAR-10 \u306e 10 \u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u5206\u985e\u78ba\u7387\u306b\u5bfe\u5fdc\u3059\u308b\u30b5\u30a4\u30ba[1x1x10]\u306b\u5909\u63db\u3002\u901a\u5e38\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u540c\u69d8\u3001\u5168\u7d50\u5408\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306f\u524d\u5c64\u306e\u5168\u30cb\u30e5\u30fc\u30ed\u30f3\u3068\u7d50\u5408\u3059\u308b\u3002 CNN \u306f\u5143\u753b\u50cf\uff08\u5165\u529b\u5c64\uff09\u304b\u3089\u5206\u985e\u78ba\u7387\uff08\u51fa\u529b\u5c64\uff09\u3078\u5909\u63db\u3002\u5b66\u7fd2\u3059\u3079\u304d\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u3064\u5c64\uff08\u7573\u8fbc\u307f\u5c64\uff0c\u5168\u7d50\u5408\u5c64\uff09\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u305f\u306a\u3044\u5c64\uff08ReLU\u5c64\uff09\u304c\u5b58\u5728\u3002\u7573\u8fbc\u307f\u5c64\u3068\u5168\u7d50\u5408\u5c64\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u52fe\u914d\u964d\u4e0b\u6cd5\u3067\u8a13\u7df4","title":"\u4f8b\uff1a"},{"location":"lect03/#2_1","text":"\u30cd\u30aa\u30b3\u30b0\u30cb\u30c8\u30ed\u30f3\u306e\u6982\u7565\u56f3(Fukushima, 1979) LeNet5 (LeCun, 1998) \u30a2\u30ec\u30c3\u30af\u30b9\u30cd\u30c3\u30c8(Krizensky et al. 2012) \u30a2\u30ec\u30c3\u30af\u30b9\u30cd\u30c3\u30c8\u306e\u51fa\u529b\u4f8b(Krizensky et al. 2012) \u7573\u8fbc\u307f\u5c64\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5b66\u7fd2\u53ef\u80fd\u306a\u30d5\u30a3\u30eb\u30bf\u306e\u7d44 \u5168\u30d5\u30a3\u30eb\u30bf\u306f\u7a7a\u9593\u7684\u306b\uff08\u5e45\u3068\u9ad8\u3055\u306b\u6cbf\u3063\u3066\uff09\u5c0f\u3055\u304f\u306a\u308b \u30d5\u30a3\u30eb\u30bf\u306f\u5165\u529b\u4fe1\u53f7\u306e\u6df1\u3055\u3068\u540c\u4e00 \u7b2c1\u5c64\u306e\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba\u306f\u4f8b\u3048\u3070 5\u00d75\u00d73\uff085 \u753b\u7d20\u5206\u306e\u5e45\uff0c\u9ad8\u3055\uff0c\u3068\u6df1\u3055 3\uff08\uff13\u539f\u8272\u306e\u8272\u30c1\u30e3\u30f3\u30cd\u30eb\uff09 \u5404\u5c64\u306e\u9806\u65b9\u5411\u306e\u8a08\u7b97\u306f\u5165\u529b\u4fe1\u53f7\u306e\u5e45\u3068\u9ad8\u3055\u306b\u6cbf\u3063\u3066\u5404\u30d5\u30a3\u30eb\u30bf\u3092\u6c34\u5e73\u307e\u305f\u306f\u5782\u76f4\u65b9\u5411\u3078\u30b9\u30e9\u30a4\u30c9 \u30d5\u30a3\u30eb\u30bf\u306e\u5404\u5024\u3068\u5165\u529b\u4fe1\u53f7\u306e\u7279\u5b9a\u306e\u4f4d\u7f6e\u306e\u4fe1\u53f7\u3068\u306e\u5185\u7a4d\uff08\u30c9\u30c3\u30c8\u7a4d\uff09\u3002 \u5165\u529b\u4fe1\u53f7\u306b\u6cbf\u3063\u3066\u6c34\u5e73\uff0c\u5782\u76f4\u65b9\u5411\u306b\u30d5\u30a3\u30eb\u30bf\u3092\u30b9\u30e9\u30a4\u30c9 \u5404\u7a7a\u9593\u4f4d\u7f6e\u3067\u30d5\u30a3\u30eb\u30bf\u306e\u5fdc\u7b54\u3092\u5b9a\u3081\u308b 2 \u6b21\u5143\u306e\u6d3b\u6027\u5316\u5730\u56f3\u304c\u751f\u6210\u3055\u308c\u308b \u5b66\u7fd2\u306e\u7d50\u679c\u7372\u5f97\u3055\u308c\u308b\u30d5\u30a3\u30eb\u30bf\u306e\u5f62\u72b6\u306b\u306f\u3001\u65b9\u4f4d\u691c\u51fa\u5668\uff0c\u8272\u30d6\u30ed\u30c3\u30d6\uff0c\u751f\u7406\u5b66\u7684\u306b\u306f\u8996\u899a\u91ce\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u5fdc\u7b54\u7279\u6027\u306b\u985e\u4f3c \u4e0a\u4f4d\u5c64\u306e\u30d5\u30a3\u30eb\u30bf\u306b\u306f\u8907\u96d1\u306a\u8996\u899a\u30d1\u30bf\u30f3\u306b\u5bfe\u5fdc\u3059\u308b\u8868\u8c61\u304c\u7372\u5f97\u3055\u308c\u308b \u5404\u7573\u8fbc\u307f\u5c64\u5168\u4f53\u3067\u306f\u5b66\u7fd2\u3059\u3079\u304d\u5165\u529b\u4fe1\u53f7\u3092\u3059\u3079\u3066\u7db2\u7f85\u3059\u308b\u30d5\u30a3\u30eb\u30bf\u306e\u96c6\u5408\u304c\u5f62\u6210\u3055\u308c\u308b \u5404\u30d5\u30a3\u30eb\u30bf\u306f\u76f8\u7570\u306a\u308b 2 \u6b21\u5143\u306e\u6d3b\u6027\u5316\u5730\u56f3\u3092\u5f62\u6210 \u5404\u30d5\u30a3\u30eb\u30bf\u306e\u5fdc\u7b54\u7279\u6027\u3068\u307f\u306a\u3059\u3053\u3068\u304c\u53ef\u80fd\u306a\u6d3b\u6027\u5316\u5730\u56f3 \u30d5\u30a3\u30eb\u30bf\u306e\u5965\u884c\u304d\u6b21\u5143\u306b\u6cbf\u3063\u3066\u8377\u91cd\u7dcf\u548c\u3092\u8a08\u7b97\u3057\u3001\u51fa\u529b\u4fe1\u53f7\u3092\u751f\u6210 \u7573\u8fbc\u307f\u6f14\u7b97\u306e\u30c7\u30e2 \u30d5\u30a3\u30eb\u30bf\u6f14\u7b97\u306e\u30c7\u30e2 2019komazawa_kitten_filters_demo.ipynb \u7573\u8fbc\u307f\u6f14\u7b97\u306e\u30c7\u30e2\u30d3\u30c7\u30aa \u30d3\u30aa\u30e9\uff0c\u30b8\u30e7\u30fc\u30f3\u30ba\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 (2001)\uff0c\u5bcc\u58eb\u30d5\u30a3\u30eb\u30e0\u306b\u3088\u308b\u5b9f\u88c5\u306f2006\u5e74\u9803 \u5b9f\u969b\u306b\u3069\u306e\u3088\u3046\u306a\u30d5\u30a3\u30eb\u30bf\u304c\u69cb\u6210\u3055\u308c\u305f\u306e\u304b \u5c40\u6240\u7d50\u5408 : \u753b\u50cf\u306e\u3088\u3046\u306a\u9ad8\u6b21\u5143\u306e\u5165\u529b\u3092\u51e6\u7406\u3059\u308b\u5834\u5408\uff0c\u4e0b\u4f4d\u5c64\u306e\u5168\u30cb\u30e5\u30fc\u30ed\u30f3\u3068\u4e0a\u4f4d\u5c64\u306e\u5168\u30cb\u30e5\u30fc\u30ed\u30f3\u3068\u3092\u63a5\u7d9a\u3059\u308b\u3053\u3068\u306f \u8cac\u4efb\u5272\u5f53\u554f\u984c\u56de\u907f \u306e\u89b3\u70b9\u304b\u3089\u3082\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u306e\u5897\u52a0\u306f\u73fe\u5b9f\u7684\u3067\u306f\u306a\u3044\u3002 \u4ee3\u308f\u308a\u306b\u5404\u30cb\u30e5\u30fc\u30ed\u30f3\u3092\u5165\u529b\u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u30ed\u30fc\u30ab\u30eb\u9818\u57df\u306e\u307f\u306b\u63a5\u7d9a\u3002\u7a7a\u9593\u7684\u9818\u57df\u306f\u30cb\u30e5\u30fc\u30ed\u30f3\u306e \u53d7\u5bb9\u91ce \u3068\u547c\u3070\u308c\u308b\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\uff08\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba\u3068\u3082\u8a00\u3046\uff09\u3002 \u6df1\u3055\u6b21\u5143\u306b\u6cbf\u3063\u305f\u63a5\u7d9a\u6027\uff1d\u5165\u529b\u5c64\u306e\u6df1\u3055\u6b21\u5143 \u3002 \u7a7a\u9593\u6b21\u5143\uff08\u5e45\u3068\u9ad8\u3055\uff09\u3068\u6df1\u3055\u6b21\u5143\u3092\u3069\u306e\u3088\u3046\u306b\u6271\u3046\u304b\u306b\u3088\u308a\uff0c\u3053\u306e\u975e\u5bfe\u79f0\u6027\u3092\u518d\u3073\u5f37\u8abf\u3059\u308b\u3053\u3068\u304c\u91cd\u8981\u3067\u3059\u3002\u30cb\u30e5\u30fc\u30ed\u30f3\u9593\u306e\u7d50\u5408\u306f\u7a7a\u9593\u6b21\u5143\uff08\u5e45\u3068\u9ad8\u3055\uff09\u306b\u305d\u3063\u3066\u9650\u5c40\u7684\u3002\u5165\u529b\u6b21\u5143\u306e\u6df1\u3055\u5168\u4f53\u3092\u5e38\u306b\u30ab\u30d0\u30fc\u3059\u308b\u3002 \u4f8b1: \u5165\u529b\u5c64\u306e\u30b5\u30a4\u30ba\u304c[32x32x3]\uff08RGB CIFAR-10\u753b\u50cf\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306a\u3069\uff09\u3067\u3042\u308c\u3070\u53d7\u5bb9\u91ce\uff08\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba\uff09\u304c 5x5 \u3068\u3059\u308c\u3070\uff0c\u7573\u8fbc\u307f\u5c64\u5185\u306e\u5404\u30cb\u30e5\u30fc\u30ed\u30f3\u306f\u5165\u529b\u5c64\u306e [5x5x3] \u5c0f\u9818\u57df\u3078\u306e\u7d50\u5408\u4fc2\u6570\u3092\u6301\u3064\u3002\u5404\u5c0f\u9818\u57df\u6bce\u306b 5x5x3=75 \u306e\u91cd\u307f\u4fc2\u6570\u3068 1 \u3064\u306e\u30d0\u30a4\u30a2\u30b9\u9805\u304c\u5fc5\u8981\u3067\u3042\u308b\u3002\u6df1\u3055\u6b21\u5143\u306b\u6cbf\u3063\u305f\u4e0a\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u304b\u3089\u4e0b\u4f4d\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u3078\u306e\u7d50\u5408\u306f\u4e0b\u4f4d\u5c64\u306e\u6df1\u3055(\u8272\u30c1\u30e3\u30f3\u30cd\u30eb\u6570)\u3068\u7b49\u3057\u304f 3 \u3067\u3042\u308b\u3002 \u4f8b2: \u5165\u529b\u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u30b5\u30a4\u30ba\u304c[16x16x20]\u3067\u3042\u308b\u3068\u3059\u308b\u3068 3x3 \u306e\u53d7\u5bb9\u91ce\u30b5\u30a4\u30ba\u3067\u7573\u8fbc\u5c64\u306e\u5168\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u5408\u8a08\u306f 3x3x20=180 \u63a5\u7d9a\u3002\u63a5\u7d9a\u6027\u306f\u7a7a\u9593\u7684\u306b\u5c40\u5728\u3059\u308b\uff083x3\uff09\u304c\uff0c\u5165\u529b\u6df1\u5ea6\uff0820\uff09\u306b\u6cbf\u3063\u3066\u306f\u5b8c\u5168\u7d50\u5408 \u7a7a\u9593\u914d\u7f6e : \u51fa\u529b\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u6570\u3068\u914d\u7f6e\u306b\u3064\u3044\u3066\u306f 3 \u3064\u306e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u51fa\u529b\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u304c\u5b9a\u307e\u308b\u3002 \u6df1\u3055\u6570(\u30d5\u30a3\u30eb\u30bf\u6570) \u30b9\u30c8\u30e9\u30a4\u30c9\u5e45 \u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0 1 \u51fa\u529b\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u306e\u3053\u3068\u3092\u51fa\u529b\u5c64\u306e \u6df1\u3055 \u6570\u3068\u547c\u3076\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3042\u308b\u3002\u6df1\u3055\u6570\u3068\u306f\u30d5\u30a3\u30eb\u30bf\u6570\uff08\u30ab\u30fc\u30cd\u30eb\u6570\uff09\u3068\u3082\u547c\u3070\u308c\u308b\u3002\u7b2c 1 \u7573\u8fbc\u307f\u5c64\u304c\u751f\u753b\u50cf\u3067\u3042\u308c\u3070\uff0c\u5965\u884c\u304d\u6b21\u5143\u3092\u69cb\u6210\u3059\u308b\u5404\u30cb\u30e5\u30fc\u30ed\u30f3\u306b\u3088\u3063\u3066\u7a2e\u3005\u306e\u65b9\u4f4d\u3092\u6301\u3064\u7dda\u5206(\u30a8\u30c3\u30b8\u691c\u51fa\u7d30\u80de)\u3084\u8272\u30d6\u30ed\u30c3\u30d6\u306e\u3088\u3046\u306a\u7279\u5fb4\u8868\u73fe\u3092\u7372\u5f97\u53ef\u80fd\u3068\u306a\u308b\u3002\u5165\u529b\u306e\u540c\u3058\u9818\u57df\u3092 \u6df1\u3055\u5217 \u3068\u3059\u308b\u30cb\u30e5\u30fc\u30ed\u30f3\u96c6\u56e3\u3092 \u30d5\u30a1\u30a4\u30d0 \u3068\u3082\u3044\u3046\u3002 2 \u30d5\u30a3\u30eb\u30bf\u3092\u4e0a\u4e0b\u5de6\u53f3\u306b\u305a\u3089\u3059\u5e45\u3092 \u30b9\u30c8\u30e9\u30a4\u30c9\u5e45 \u3068\u547c\u3076\u3002\u30b9\u30c8\u30e9\u30a4\u30c9\u5e45\u304c 1 \u306a\u3089\u30d5\u30a3\u30eb\u30bf\u3092 1 \u753b\u7d20\u305a\u3064\u79fb\u52d5\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u3002\u30b9\u30c8\u30e9\u30a4\u30c9\u304c 2\u306a\u3089\u30d5\u30a3\u30eb\u30bf\u306f\u4e00\u5ea6\u306b 2 \u753b\u7d20\u305a\u3064\u30b8\u30e3\u30f3\u30d7\u3055\u305b\u308b\u3002\u30b9\u30c8\u30e9\u30a4\u30c9\u5e45\u304c\u5927\u304d\u3051\u308c\u3070\u5165\u529b\u4fe1\u53f7\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u9593\u9694\u304c\u5927\u304d\u304f\u5e83\u304c\u308b\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u3002\u30b9\u30c8\u30e9\u30a4\u30c9\u5e45\u304c\u5927\u304d\u304f\u306a\u308c\u3070\u4e0a\u4f4d\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u306f\u6e1b\u5c11\u3059\u308b\u3002 3 \u5165\u529b\u306e\u5883\u754c\u4e0a\u306e\u5024\u3092\u30bc\u30ed\u3067\u57cb\u3081\u8fbc\u3080\u3053\u3068\u304c\u3042\u308b\u3002\u3053\u308c\u3092 \u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0 \u3068\u3044\u3046\u3002\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0\u306e\u91cf\u306f\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3042\u308b\u3002\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0\u306b\u3088\u308a\u51fa\u529b\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u6570\u3092\u5236\u5fa1\u3067\u304d\u308b\u3002\u4e0b\u4f4d\u5c64\u306e\u7a7a\u9593\u60c5\u5831\u3092\u6b63\u78ba\u306b\u4fdd\u5b58\u3059\u308b\u306b\u306f\u5165\u529b\u3068\u51fa\u529b\u306e\u5e45\uff0c\u9ad8\u3055\u306f\u540c\u3058\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 \u5165\u529b\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u3092 W \uff0c\u4e0a\u4f4d\u306b\u3042\u308b\u7573\u8fbc\u307f\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u3092 F \uff0c\u3068\u3059\u308c\u3070\u51fa\u529b\u5c64\u306b\u5fc5\u8981\u306a\u30cb\u30e5\u30fc\u30ed\u30f3\u6570 S \u306f\uff0c\u5468\u8fba\u306e\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0 \u3092 P \u3068\u3059\u308c\u3070 (W-F+2P)/S+1 \u3067\u7b97\u51fa\u3067\u304d\u308b\u3002 \u305f\u3068\u3048\u3070\u4e0b\u56f3\u3067\u30b9\u30c8\u30e9\u30a4\u30c9 1 \u3068\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0 0 \u3067\u3042\u308c\u3070\u5165\u529b 7\\times7 \u3067\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba\u304c 3\\times3 \u3067\u3042\u308c\u3070 5x5(=S=(7-3+2x0)/1+1=5) \u306e\u51fa\u529b\u3067\u3042\u308b\u3002 \u30b9\u30c8\u30e9\u30a4\u30c9 2 \u306a\u3089\u3070 3\\times 3=(S=(7-3+2x\\times )/2+1=3) \u3068\u306a\u308b\u3002 \u7a7a\u9593\u914d\u7f6e\u306e\u4f8b\uff1a\u5165\u529b\u7a7a\u9593\u306e\u6b21\u5143\uff08x\u8ef8\uff09\u304c1\u3064\u3067\u53d7\u5bb9\u91ce\u30b5\u30a4\u30ba F=3 \u306e\u5834\u5408\uff0c\u5165\u529b\u30b5\u30a4\u30ba W=5, \u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0 P=1 \u3067\u3042\u308c\u3070\uff0c \u5de6\u56f3\uff1a \u51fa\u529b\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u306f (5-3+2)/1+1=5 \u306e\u51fa\u529b\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u3068\u306a\u308b\u3002\u30b9\u30c8\u30e9\u30a4\u30c9\u6570 S=1 \u306e\u5834\u5408\u3002 \u53f3\u56f3\uff1a s=2\uff0c\u51fa\u529b\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u6570 (5-3+2)/2+1=3 \u3068\u306a\u308b\u3002\u30b9\u30c8\u30e9\u30a4\u30c9 S=3 \u306a\u3089\u3070\u30dc\u30ea\u30e5\u30fc\u30e0\u5168\u4f53\u306b\u304d\u3061\u3093\u3068\u53ce\u307e\u3089\u306a\u3044\u5834\u5408\u3082\u3067\u3066\u304f\u308b\u3002\u6570\u5f0f\u3067\u8868\u73fe\u3059\u308c\u3070 $(5-3+2)=4$ \u306f 3 \u3067\u5272\u308a\u5207\u308c\u306a\u3044\u306e\u3067\u3001\u6574\u6570\u306e\u5024\u3068\u3057\u3066\u4e00\u610f\u306b\u6c7a\u5b9a\u306f\u3067\u304d\u306a\u3044\u3002 \u30cb\u30e5\u30fc\u30ed\u30f3\u7d50\u5408\u4fc2\u6570\u306f\uff08\u53f3\u7aef\u306b\u793a\u3055\u308c\u3066\u3044\u308b\uff09[1,0,-1]\u3067\u3042\u308a\u30d0\u30a4\u30a2\u30b9\u306f\u30bc\u30ed\u3002\u3053\u306e\u91cd\u307f\u306f\u3059\u3079\u3066\u306e\u9ec4\u8272\u30cb\u30e5\u30fc\u30ed\u30f3\u3067\u5171\u6709\u3055\u308c\u308b\u3002 \u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0 : \u4e0a\u4f8b\u3067\u306f\u5165\u529b\u6b21\u5143\u304c 5\uff0c\u51fa\u529b\u6b21\u5143\u304c 5 \u3067\u3042\u3063\u305f\u3002 \u3053\u308c\u306f\u53d7\u5bb9\u91ce\u304c 3 \u3067\u30bc\u30ed\u57cb\u3081\u8fbc\u307f\u30921\u3068\u3057\u305f\u305f\u3081\u3067\u3042\u308b\u3002\u30bc\u30ed\u57cb\u3081\u8fbc\u307f\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u51fa\u529b\u30dc\u30ea\u30e5\u30fc\u30e0\u306f\u3001\u3069\u308c\u3060\u3051\u306e\u6570\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u304c\u5143\u306e\u5165\u529b\u306b\u300c\u30d5\u30a3\u30c3\u30c8\u300d\u3059\u308b\u306e\u3067\u3042\u308d\u3046\u304b\u3068\u3044\u3046\u7406\u7531\u3067\u3001\u7a7a\u9593\u6b21\u5143\u304c\u308f\u305a\u304b 3 \u3067\u3042\u3063\u305f\u3067\u3042\u308d\u3046\u3002 \u30b9\u30c8\u30e9\u30a4\u30c9\u304c S=1 \u306e\u3068\u304d\u3001\u30bc\u30ed\u57cb\u3081\u8fbc\u307f\u3092 P=(F-1)/2 \u306b\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u5165\u529b\u30dc\u30ea\u30e5\u30fc\u30e0\u3068\u51fa\u529b\u30dc\u30ea\u30e5\u30fc\u30e0\u304c\u7a7a\u9593\u7684\u306b\u540c\u3058\u30b5\u30a4\u30ba\u306b\u306a\u308b\u3002 \u3053\u306e\u3088\u3046\u306b\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306f\u4e00\u822c\u7684\u3067\u3042\u308b\u3002CNN\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u8aac\u660e\u3057\u3066\u3044\u308b\u5b8c\u5168\u306a\u7406\u7531\u306b\u3064\u3044\u3066\u8aac\u660e\u3059\u308b\u3002 \u30b9\u30c8\u30e9\u30a4\u30c9\u306e\u5236\u7d04 : \u7a7a\u9593\u914d\u7f6e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u306f\u76f8\u4e92\u306e\u5236\u7d04\u304c\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002\u305f\u3068\u3048\u3070\u5165\u529b\u306b W=10 \u3068\u3044\u3046\u30b5\u30a4\u30ba\u304c\u3042\u308a\u3001\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0\u306f P=0 \u3067\u306f\u306a\u304f\u3001\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba\u306f F=3 , (W-F+2P)/S+1=(10-3+0)/2+1=4.5 \u3088\u308a\u30b9\u30c8\u30e9\u30a4\u30c9 S=2 \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306f\u4e0d\u53ef\u80fd\u3067\u3042\u308b\u3002 \u3059\u306a\u308f\u3061\u6574\u6570\u3067\u306f\u306a\u304f\u30cb\u30e5\u30fc\u30ed\u30f3\u304c\u5165\u529b\u306b\u308f\u305f\u3063\u3066\u304d\u308c\u3044\u306b\u304b\u3064\u5bfe\u79f0\u7684\u306b \"\u9069\u5408\" \u3057\u306a\u3044\u3053\u3068\u3092\u793a\u3059\u3002 AlexNet \u306e\u8ad6\u6587\u3067\u306f\uff0c\u7b2c\u4e00\u7573\u8fbc\u5c64\u306f\u53d7\u5bb9\u91ce\u30b5\u30a4\u30ba F=11 \uff0c\u30b9\u30c8\u30e9\u30a4\u30c9 S=4 \uff0c\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0\u306a\u3057 P=0 \u3002 \u7573\u8fbc\u5c64 K=96 \u306e\u6df1\u3055 (227-11)/4+1=55 \u3002\u7573\u8fbc\u5c64\u306e\u51fa\u529b\u30b5\u30a4\u30ba\u306f [55x55x96]\u300255x55x96 \u30cb\u30e5\u30fc\u30ed\u30f3\u306f\u5165\u529b\u9818\u57df [11x11x3] \u3068\u9023\u7d50\u3002\u5168\u6df1\u5ea6\u5217 96 \u500b\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306f\u540c\u3058\u5165\u529b\u9818\u57df[11\u00d711\u00d73]\u306b\u7e4b\u304c\u308b\u3002\u8ad6\u6587\u4e2d\u306b\u306f(224-11)/4+1 \u3068\u306a\u3063\u3066\u3044\u308b\u3002\u30d1\u30c7\u30a3\u30f3\u30b0\u306b\u3064\u3044\u3066\u306e\u8a18\u8f09\u306f\u306a\u3044\u3002 \u30d1\u30e9\u30e1\u30fc\u30bf\u5171\u6709 \u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\u7573\u307f\u8fbc\u307f\u5c64\u3067\u4f7f\u7528\u3055\u308c\u308b\u3002\u4e0a\u8a18\u306e\u5b9f\u4e16\u754c\u306e\u4f8b\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u6700\u521d\u306e\u7573\u6545\u610f\u5c64\u306b\u306f 55x55x96=290,400\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u304c\u3042\u308a\u3001\u305d\u308c\u305e\u308c 11x11x3=363 \u306e\u91cd\u307f\u30681\u306e\u30d0\u30a4\u30a2\u30b9\u304c\u3042\u308b\u3002\u3053\u308c\u306b\u3088\u308a CNN \u5358\u72ec\u306e\u7b2c 1 \u5c64\u306b\u6700\u5927 290400x364=105,705,600 \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u8ffd\u52a0\u3055\u308c\u308b\u3002 \u30d1\u30e9\u30e1\u30fc\u30bf\u5171\u6709 \u306b\u3088\u308a\u5b66\u7fd2\u3059\u3079\u304d\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u304c\u6e1b\u5c11\u3059\u308b\u3002 \u4f8b\u3048\u3070 [55x55x96] \u306e\u30d5\u30a3\u30eb\u30bf\u3067\u306f\u6df1\u3055\u6b21\u5143\u306f 96 \u500b\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u3067\uff0c\u5404\u6df1\u3055\u3067\u540c\u3058\u7d50\u5408\u4fc2\u6570\u3092\u4f7f\u3046\u3053\u3068\u306b\u3059\u308c\u3070 \u30e6\u30cb\u30fc\u30af\u306a\u7d50\u5408\u4fc2\u6570\u306f\u8a08 96x11x11x3=34,848 \u3068\u306a\u308b\u306e\u3067\u7dcf\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u306f 34,944 \u3068\u306a\u308b(\u30d0\u30a4\u30a2\u30b9\u9805 +96)\u3002\u5404\u6df1\u3055\u3067\u5168\u30cb\u30e5\u30fc\u30ed\u30f3(55x55)\u306f\u540c\u3058\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u3002\u9006\u4f1d\u64ad\u3067\u306e\u5b66\u7fd2\u3067\u306f\uff0c\u5168\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u5168\u7d50\u5408\u4fc2\u6570\u306e\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u5404\u52fe\u914d\u306f\u5404\u6df1\u3055\u3054\u3068\u306b\u52a0\u7b97\u3055\u308c 1 \u3064\u306e\u6df1\u3055\u3042\u305f\u308a\u4e00\u3064\u306e\u7d50\u5408\u4fc2\u6570\u96c6\u5408\u3092\u7528\u3044\u308b\u3002 \u3042\u308b\u6df1\u3055\u306e\u5168\u30cb\u30e5\u30fc\u30ed\u30f3\u304c\u540c\u3058\u91cd\u307f\u4fc2\u6570\u30d9\u30af\u30c8\u30eb\u3092\u5171\u6709\u3059\u308b\u5834\u5408\uff0c\u7573\u8fbc\u307f\u5c64\u306e\u9806\u65b9\u5411\u30d1\u30b9\u306f\u5404\u6df1\u3055\u30b9\u30e9\u30a4\u30b9\u5185\u3067\u5165\u529b\u30dc\u30ea\u30e5\u30fc\u30e0\u3068\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u91cd\u307f\u306e \u7573\u307f\u8fbc\u307f \u3068\u3057\u3066\u8a08\u7b97\u3067\u304d\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002\u7d50\u5408\u8377\u91cd\u4fc2\u6570\u96c6\u5408\u306e\u3053\u3068\u3092 \u30d5\u30a3\u30eb\u30bf \u307e\u305f\u306f \u30ab\u30fc\u30cd\u30eb \u3068\u547c\u3076\u3002\u5165\u529b\u4fe1\u53f7\u3068\u306e\u9593\u3067\u7573\u8fbc\u307f\u6f14\u7b97\u3092\u884c\u3046\u3053\u3068\u3068\u306a\u308b\u3002 AlexNet \u306e\u5b66\u7fd2\u6e08\u30d5\u30a3\u30eb\u30bf\u4f8b: \u56f3\u306e 96 \u500b\u306e\u30d5\u30a3\u30eb\u30bf\u306f \u30b5\u30a4\u30ba [11x11x3]\u3002 \u305d\u308c\u305e\u308c\u304c 1 \u3064\u306e\u6df1\u3055\u5185\u306e $55\\times55$ \u30cb\u30e5\u30fc\u30ed\u30f3\u3067\u5171\u6709\u3055\u308c\u3066\u3044\u308b\u3002 \u753b\u50cf\u306e\u4efb\u610f\u306e\u4f4d\u7f6e\u3067\u6c34\u5e73\u30a8\u30c3\u30b8\u691c\u51fa\u304c\u5fc5\u8981\u306a\u5834\u5408\uff0c\u753b\u50cf\u306e\u4e26\u9032\u4e0d\u5909\u69cb\u9020 translationall-invariant structure \u4eee\u5b9a\u306b\u3088\u308a\u753b\u50cf\u4e2d\u306e\u4ed6\u306e\u5834\u6240\u3067\u3082\u6709\u52b9\u3067\u3042\u308b\u3002 \u7573\u8fbc\u307f\u5c64\u306e\u51fa\u529b\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u306f $55\\times55$ \u500b\u306e\u7570\u306a\u308b\u4f4d\u7f6e\u3059\u3079\u3066\u3067\u6c34\u5e73\u30a8\u30c3\u30b8\u306e\u691c\u51fa\u3092\u518d\u5b66\u7fd2\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3002","title":"2. \u7573\u8fbc\u5c64"},{"location":"lect03/#3","text":"CNN \u3067\u306f\uff0c\u9023\u7d9a\u3059\u308b\u7573\u8fbc\u307f\u5c64\u9593\u306b\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u3092\u633f\u5165\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3002\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u306e\u5f79\u5272\u306f\uff0c\u7a7a\u9593\u6b21\u5143\u306e\u5927\u304d\u3055\u306b\u6e1b\u5c11\u3055\u305b\u308b\u3053\u3068\u3067\u3042\u308b\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\uff0c\u3059\u306a\u308f\u3061\u8a08\u7b97\u91cf\u3092\u6e1b\u3089\u3057\uff0c\u904e\u5b66\u7fd2\u3092\u5236\u5fa1\u3067\u304d\u308b\u3002\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u306f\u5165\u529b\u306e\u5404\u6df1\u3055\u6bce\u306b\u72ec\u7acb\u3057\u3066\u52d5\u4f5c\u3059\u308b\u3002\u6700\u5927\u5024\u306e\u307f\u3092\u3068\u308a\u4ed6\u306e\u5024\u3092\u6368\u3066\u308b\u3053\u3068\u3092 \u30de\u30c3\u30af\u30b9\u30d7\u30fc\u30ea\u30f3\u30b0 \u3068\u547c\u3076\u3002\u30b5\u30a4\u30ba\u304c 2x2 \u306e\u30d5\u30a3\u30eb\u30bf\u306b\u3088\u308b\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u3067\u306f\uff0c\u5165\u529b\u306e\u6df1\u3055\u3054\u3068\u306b 2 \u3064\u306e\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30eb\u3092\u9069\u7528\u3057\u3001\u5e45\u3068\u9ad8\u3055\u306b\u6cbf\u3063\u30662\u305a\u3064\u5897\u3084\u3057\u306675\uff05\u306e\u60c5\u5831\u3092\u7834\u68c4\u3059\u308b\u3002\u3053\u306e\u5834\u5408 4 \u3064\u306e\u6570\u5024\u306e\u3046\u3061\u6700\u5927\u5024\u3092\u63a1\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002 \u4e00\u822c\u7684\u306a\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6f14\u7b97\u306f \u30de\u30c3\u30af\u30b9\u30d7\u30fc\u30ea\u30f3\u30b0 \u3067\u3042\u308b\u3002\u56f3\u3067\u306f \u30b9\u30c8\u30e9\u30a4\u30c9 2 \u3059\u306a\u308f\u3061 4 \u3064\u306e\u6570\u5024\u306e\u4e2d\u306e\u6700\u5927\u5024 \u5e73\u5747\u30d7\u30fc\u30ea\u30f3\u30b0 . \u30de\u30c3\u30af\u30b9\u30d7\u30fc\u30ea\u30f3\u30b0\u3067\u306f\u306a\u304f L2\u6b63\u5247\u5316\u30d7\u30fc\u30ea\u30f3\u30b0 \u3092\u884c\u3046\u5834\u5408\u3082\u3042\u308b\u3002\u5e73\u5747\u30d7\u30fc\u30ea\u30f3\u30b0\u306f\u6b74\u53f2\u7684\u306a\u610f\u5473\u3042\u3044\u304c\u3042\u308b\u304c\u30de\u30c3\u30af\u30b9\u30d7\u30fc\u30ea\u30f3\u30b0\u306e\u65b9\u304c\u6027\u80fd\u304c\u826f\u3044\u3068\u306e\u5831\u544a\u304c\u3042\u308b\u3002\u3042\u308b\u753b\u50cf\u4f4d\u7f6e\u306b\u306f\u7269\u7406\u7684\u306b\u4e00\u3064\u306e\u5024\u3060\u3051\u304c\u5b58\u5728\u3059\u308b\u3068\u3044\u3046\u8996\u899a\u60c5\u5831\u51e6\u7406\u304c\u4eee\u5b9a\u3059\u3079\u304d\u5916\u754c\u306e\u7269\u7406\u7684\u5236\u7d04\u3092\u53cd\u6620\u3057\u3066\u3044\u308b\u3068\u6587\u5b66\u7684\u306b\u89e3\u91c8\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b\u3002 \u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u3067\u306f\uff0c\u5165\u529b\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u306e\u5404\u6df1\u3055\u306b\u3064\u3044\u3066\u7a7a\u9593\u7684\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3092\u884c\u3046\u3002\u3053\u306e\u4f8b\u306f \u30b5\u30a4\u30ba[224x224x64]\u306e\u5165\u529b\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u304c\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba 2 \u3067\u30d7\u30fc\u30eb\u3055\u308c\uff0c\u30b5\u30a4\u30ba 2 \u306e\u51fa\u529b\u30cb\u30e5\u30fc\u30ed\u30f3\u6570 [112x112x64] \u306f 2 \u500d\u3067\u3042\u308b\u3002\u5965\u884c\u304d\u6570\u304c\u4fdd\u6301\u3055\u308c\u3066\u3044\u308b\u3002","title":"3. \u30d7\u30fc\u30ea\u30f3\u30b0\u5c64"},{"location":"lect03/#4","text":"\u5168\u7d50\u5408\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306f\u3001\u901a\u5e38\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u540c\u3058 \u524d\u5c64\u306e\u5168\u30cb\u30e5\u30fc\u30ed\u30f3\u3068\u7d50\u5408\u3092\u6301\u3064","title":"4. \u5168\u7d50\u5408\u5c64"},{"location":"lect03/#5-cnn","text":"\u7573\u8fbc\u5c64 \u30d7\u30fc\u30ea\u30f3\u30b0\u5c64 \u5168\u7d50\u5408\u5c64 \u5c64\u306f\u4ee5\u4e0a 3 \u7a2e\u985e\u304c\u4e00\u822c\u7684\u3002","title":"5. CNN \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3"},{"location":"lect03/#6-cnn","text":"\u5165\u529b\u5c64 \\rightarrow [[\u7573\u8fbc\u5c64 \\rightarrow ReLU] \\times N\\rightarrow \u30d7\u30fc\u30ea\u30f3\u30b0(?)] \\times M \\rightarrow [\u5168\u7d50\u5408\u5c64 \\rightarrow ReLU] \\times K \\rightarrow \u5168\u7d50\u5408\u5c64 \u6700\u8fd1\u306e\u30c8\u30ec\u30f3\u30c9\u3068\u3057\u3066\u306f\u5927\u304d\u306a\u30d5\u30a3\u30eb\u30bf\u3088\u308a\u5c0f\u3055\u306a\u30d5\u30a3\u30eb\u30bf\u304c\u597d\u307e\u308c\u308b\u50be\u5411\u306b\u3042\u308b\u3002 [3x3] \u304c\u597d\u307e\u308c\u308b\u7406\u7531\u306f\u3069\u771f\u3093\u4e2d\u304c\u3042\u308b\u5947\u95a2\u6570\u3092\u6697\u9ed9\u306b\u4eee\u5b9a\u3057\u3066\u3044\u308b\u305f\u3081\u3060\u3068\u601d\u308f\u308c\u308b\uff08\u6d45\u5ddd\u306e\u5984\u60f3\uff09\u3002 \u305d\u306e\u4ee3\u308f\u308a\u591a\u6bb5\u306b\u3059\u308c\u3070 [3x3] \u304c\uff12\u5c64\u3067 \uff3b5x5]\uff0c\uff13\u5c64\u3067[7x7]\u306e\u53d7\u5bb9\u91ce\u3092\u5f62\u6210\u3067\u304d\u308b\u304b\u3089\u53d7\u5bb9\u91ce\u306e\u5e83\u3055\u3092\u5c64\u306e\u6df1\u3055\u3068\u3057\u3066\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3068\u3082\u89e3\u91c8\u3067\u304d\u308b\u3002\uff11\u5c64\u3067[7x7]\u306e\u53d7\u5bb9\u91ce\u3088\u308a\uff13\u5c64\u3067[7x7]\u306e\u53d7\u5bb9\u91ce\u3092\u5b9f\u73fe\u3057\u305f\u65b9\u304c the simpler, the better \u306e\u539f\u5247\u306b\u6cbf\u3063\u3066\u3044\u308b\u3068\u3082\uff08\u6587\u5b66\u7684\uff09\u89e3\u91c8\u304c\u53ef\u80fd\u3067\u3042\u308b\uff08\u307e\u305f\u3057\u3066\u3082\u6d45\u5ddd\u5984\u60f3\uff09\u3002 \u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u306e\u8a08\u7b97\u6642\u306b\u5e83\u3044\u53d7\u5bb9\u91ce\u3092\u4f5c\u308b\u3088\u308a\u5c64\u3092\u5206\u3051\u305f\u65b9\u304c GPU \u306e\u30e1\u30e2\u30ea\u306b\u4e57\u305b\u3084\u3059\u3044\u3068\u8a00\u3046\u8a08\u7b97\u4e0a\u306e\u5229\u70b9\u3082\u3042\u308b\u3002 Lillicrap et al. (2020) Fig. 7 \u3092\u6539\u5909 video by Geoffrey Hinton on the softmax function A Friendly Introduction to Cross Entropy Loss by Rob DiPietro How to Implement a Neural Network Intermezzo 2 by Peter Roelants \u753b\u50cf\u5206\u985e\u306e\u57fa\u790e ) Introduction to Convolutional Neural Networks by Jianxin Wu Yann LeCun\u2019s original article, Gradient-Based Learning Applied to Document Recognition The Nine Deep Learning Papers You Need to Know About (Understanding CNNs part 3) by Adit Deshpande","title":"6. CNN \u306e\u5c64\u69cb\u9020"},{"location":"lect04/","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA) \u00b6 Shin Aasakawa , all rights reserved. Date: 29/May/2020 Appache 2.0 license \u6ce8\u610f\u3068\u544a\u77e5 \u00b6 \u30d6\u30e9\u30a6\u30b6\u306f Chrome \u3067\u3059\u3002\u5b9f\u7fd2\u306b\u4e0d\u90fd\u5408\u304c\u751f\u3058\u307e\u3059\u3002 \u6700\u4f4e\u4e00\u5ea6\u306f\u8cea\u554f\uff0c\u767a\u8a00\u3092\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3053\u307e\u3081\u306b\u53cd\u5fdc\u3092\u8fd4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u9854\u51fa\u3057\u3082\u304a\u9858\u3044\u3057\u307e\u3059\u3002 \u672c\u65e5\u306f\uff08\u304b\u3089\uff1f\uff09\u30b2\u30b9\u30c8\uff08\u3082\u3050\u308a\uff1f\uff09\u306e\u65b9\u304c\u53c2\u52a0\u3055\u308c\u307e\u3059\u3002 \u99d2\u6fa4 c-learning \u306e\u63b2\u793a\u677f\u3060\u3068\u53c2\u52a0\u8005\u3092\u8ffd\u52a0\u3067\u304d\u307e\u305b\u3093\u3002\u3060\u304b\u3089\u5225\u306e\u65b9\u6cd5\u3092\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Google classroom \u304b\u306a\uff1f \u30a2\u30eb\u30d0\u30a4\u30c8\u52df\u96c6\u3057\u307e\u3059\u3002\u3053\u306e\u6388\u696d\u306b\u95a2\u9023\u3057\u305f\u77e5\u8b58\u3092\u751f\u304b\u3057\u305f\u6587\u7ae0\u6821\u6b63\u306e\u4ed5\u4e8b\u3067\u3059\u3002\u8a73\u7d30\u306f\u9023\u7d61\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002 \u672c\u65e5\u306e\u8ab2\u984c \u524d\u56de\u306e\u5fa9\u7fd2 \u00b6 \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0 \u6df1\u5c64\u5b66\u7fd2, \u7573\u8fbc\u307f\u6f14\u7b97\u3063\u3066\u4f55\uff1f \u30ab\u30fc\u30cd\u30eb\u30b5\u30a4\u30ba \u30d7\u30fc\u30ea\u30f3\u30b0 \u30b9\u30c8\u30e9\u30a4\u30c9 \u30d1\u30c7\u30a3\u30f3\u30b0 \u672c\u65e5\u306e\u76ee\u6a19 \u00b6 \u6700\u5c0f\u4e8c\u4e57\u6cd5\u304b\u3089\u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5\u3078\u3002\u8aa4\u5dee\u95a2\u6570\uff0c\u640d\u5931\u95a2\u6570\uff0c\u76ee\u7684\u95a2\u6570\uff0c\u52fe\u914d\u964d\u4e0b\u6cd5 (\u30d6\u30e9\u30a4\u30f3\u30c9 \u30cf\u30a4\u30ab\u30fc \u30a2\u30ca\u30ed\u30b8\u30fc)\u3002 \u4fe1\u7528\u5272\u5f53\u554f\u984c\u3002\u52fe\u914d\u6d88\u5931\u554f\u984c\u3002 \u6a19\u6e96\u6b63\u5247\u5316\u7406\u8ad6\u3002\u5236\u7d04\u4ed8\u304d\u6700\u9069\u5316\u3002\u5909\u5206\u539f\u7406\u3002 \u30aa\u30a4\u30e9\u30fc=\u30e9\u30b0\u30e9\u30f3\u30b8\u30a7\u65b9\u7a0b\u5f0f \u753b\u50cf\u5207\u308a\u5206\u3051 \u672c\u65e5\u306e\u5b9f\u7fd2 \u00b6 kminst \u306b\u3088\u308b CNN \u8ee2\u79fb\u5b66\u7fd2 MaskR-CNN \u306b\u3088\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u753b\u50cf\u9818\u57df\u5206\u5272 Deeplab \u306e\u30c7\u30e2\u306b\u3088\u308b\u753b\u50cf\u306e\u610f\u5473\u7684\u753b\u50cf\u5207\u308a\u5206\u3051 \u30c7\u30e2 \u00b6 Google Neural Networks Playground \u7573\u307f\u8fbc\u307f\u6f14\u7b97\u3092\u5229\u7528\u3057\u305f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u00b6 \u30cd\u30aa\u30b3\u30b0\u30cb\u30c8\u30ed\u30f3\u306e\u6982\u7565\u56f3(Fukushima, 1979) LeNet5 (LeCun, 1998) \u00b6 LeCun (1998) \u3088\u308a AlexNet (Krizensky, et al., 2012) \u00b6 Krzensky et al (2012) \u3088\u308a GooLeNet (Inception) (Szegedy et. al, 2014) \u00b6 \u30a4\u30e1\u30fc\u30b8\u30cd\u30c3\u30c8\u30b3\u30f3\u30c6\u30b9\u30c8\uff0c\u30a2\u30ec\u30c3\u30af\u30b9\u30cd\u30c3\u30c8\u306e\u51fa\u529b\u306b\u307f\u308b\u554f\u984c\u70b9 \u00b6 \u30a2\u30ec\u30c3\u30af\u30b9\u30cd\u30c3\u30c8\u306e\u7d50\u679c: \u753b\u50cf\u306e\u3059\u3050\u4e0b\u306e\u82f1\u5358\u8a9e\u306f\u6b63\u89e3\u30e9\u30d9\u30eb\u3092\u8868\u3059\u3002Krizensky et. al (2012) Fig. 4 \u3088\u308a\u3002 \u30d4\u30f3\u30af\u8272\u306f\u6b63\u89e3\u30e9\u30d9\u30eb\u306e\u78ba\u7387\u3092\u8868\u3059\u3002\u30d6\u30eb\u30fc\u306f\u4e0d\u6b63\u89e3\u30e9\u30d9\u30eb\u5224\u65ad\u78ba\u7387\u3092\u8868\u3057\u3066\u3044\u308b\u3002 \u30c1\u30a7\u30ea\u30fc\u304c\u6b63\u89e3\u3067\u3042\u308b\u304c\uff0c\u753b\u50cf\u3092\u898b\u308b\u9650\u308a\uff0c\u7b2c\u4e00\u56de\u7b54\u5019\u88dc\u306e\u30c0\u30eb\u30de\u30c1\u30a2\u30f3\u3092\u6b63\u89e3\u3060\u3068\u8003\u3048\u3066\u3082\u554f\u984c\u306f\u7121\u3044\u3068\u8003\u3048\u3089\u308c\u308b\u3002 \u753b\u50cf\u5207\u308a\u51fa\u3057 \u00b6 \u7269\u4f53\u4f4d\u7f6e \u7269\u4f53\u8a8d\u8b58 object recognition \u610f\u5473\u7684\u5207\u308a\u51fa\u3057 semantic segmentation \u5bfe\u8c61\u5207\u308a\u51fa\u3057 instance segmentation \u7279\u5fb4\u70b9\u62bd\u51fa keypoint \u30d1\u30ce\u30d7\u30c6\u30a3\u30c3\u30af\u5207\u308a\u51fa\u3057 Dang and Ha (2017) \u3088\u308a \u8ee2\u79fb\u5b66\u7fd2 \u00b6 - \u6d3b\u6027\u5316\u95a2\u6570 \u00b6 \u6a19\u6e96\u6b63\u5247\u5316\u7406\u8ad6\u3068\u6761\u4ef6\u4ed8\u304d\u6700\u9069\u5316 \u00b6 \u4e0a\u3092\u8a33\u3057\u3066\u307f\u307e\u3057\u305f\u3002github.io \u3060\u3068\u6570\u5f0f\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u305f\u3081 colab \u306b\u3057\u3066\u3044\u307e\u3059","title":"\u7b2c 4 \u56de 05 \u6708 29 \u65e5"},{"location":"lect04/#iiia","text":"Shin Aasakawa , all rights reserved. Date: 29/May/2020 Appache 2.0 license","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA)"},{"location":"lect04/#_1","text":"\u30d6\u30e9\u30a6\u30b6\u306f Chrome \u3067\u3059\u3002\u5b9f\u7fd2\u306b\u4e0d\u90fd\u5408\u304c\u751f\u3058\u307e\u3059\u3002 \u6700\u4f4e\u4e00\u5ea6\u306f\u8cea\u554f\uff0c\u767a\u8a00\u3092\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3053\u307e\u3081\u306b\u53cd\u5fdc\u3092\u8fd4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u9854\u51fa\u3057\u3082\u304a\u9858\u3044\u3057\u307e\u3059\u3002 \u672c\u65e5\u306f\uff08\u304b\u3089\uff1f\uff09\u30b2\u30b9\u30c8\uff08\u3082\u3050\u308a\uff1f\uff09\u306e\u65b9\u304c\u53c2\u52a0\u3055\u308c\u307e\u3059\u3002 \u99d2\u6fa4 c-learning \u306e\u63b2\u793a\u677f\u3060\u3068\u53c2\u52a0\u8005\u3092\u8ffd\u52a0\u3067\u304d\u307e\u305b\u3093\u3002\u3060\u304b\u3089\u5225\u306e\u65b9\u6cd5\u3092\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Google classroom \u304b\u306a\uff1f \u30a2\u30eb\u30d0\u30a4\u30c8\u52df\u96c6\u3057\u307e\u3059\u3002\u3053\u306e\u6388\u696d\u306b\u95a2\u9023\u3057\u305f\u77e5\u8b58\u3092\u751f\u304b\u3057\u305f\u6587\u7ae0\u6821\u6b63\u306e\u4ed5\u4e8b\u3067\u3059\u3002\u8a73\u7d30\u306f\u9023\u7d61\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002 \u672c\u65e5\u306e\u8ab2\u984c","title":"\u6ce8\u610f\u3068\u544a\u77e5"},{"location":"lect04/#_2","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0 \u6df1\u5c64\u5b66\u7fd2, \u7573\u8fbc\u307f\u6f14\u7b97\u3063\u3066\u4f55\uff1f \u30ab\u30fc\u30cd\u30eb\u30b5\u30a4\u30ba \u30d7\u30fc\u30ea\u30f3\u30b0 \u30b9\u30c8\u30e9\u30a4\u30c9 \u30d1\u30c7\u30a3\u30f3\u30b0","title":"\u524d\u56de\u306e\u5fa9\u7fd2"},{"location":"lect04/#_3","text":"\u6700\u5c0f\u4e8c\u4e57\u6cd5\u304b\u3089\u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5\u3078\u3002\u8aa4\u5dee\u95a2\u6570\uff0c\u640d\u5931\u95a2\u6570\uff0c\u76ee\u7684\u95a2\u6570\uff0c\u52fe\u914d\u964d\u4e0b\u6cd5 (\u30d6\u30e9\u30a4\u30f3\u30c9 \u30cf\u30a4\u30ab\u30fc \u30a2\u30ca\u30ed\u30b8\u30fc)\u3002 \u4fe1\u7528\u5272\u5f53\u554f\u984c\u3002\u52fe\u914d\u6d88\u5931\u554f\u984c\u3002 \u6a19\u6e96\u6b63\u5247\u5316\u7406\u8ad6\u3002\u5236\u7d04\u4ed8\u304d\u6700\u9069\u5316\u3002\u5909\u5206\u539f\u7406\u3002 \u30aa\u30a4\u30e9\u30fc=\u30e9\u30b0\u30e9\u30f3\u30b8\u30a7\u65b9\u7a0b\u5f0f \u753b\u50cf\u5207\u308a\u5206\u3051","title":"\u672c\u65e5\u306e\u76ee\u6a19"},{"location":"lect04/#_4","text":"kminst \u306b\u3088\u308b CNN \u8ee2\u79fb\u5b66\u7fd2 MaskR-CNN \u306b\u3088\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u753b\u50cf\u9818\u57df\u5206\u5272 Deeplab \u306e\u30c7\u30e2\u306b\u3088\u308b\u753b\u50cf\u306e\u610f\u5473\u7684\u753b\u50cf\u5207\u308a\u5206\u3051","title":"\u672c\u65e5\u306e\u5b9f\u7fd2"},{"location":"lect04/#_5","text":"Google Neural Networks Playground","title":"\u30c7\u30e2"},{"location":"lect04/#_6","text":"\u30cd\u30aa\u30b3\u30b0\u30cb\u30c8\u30ed\u30f3\u306e\u6982\u7565\u56f3(Fukushima, 1979)","title":"\u7573\u307f\u8fbc\u307f\u6f14\u7b97\u3092\u5229\u7528\u3057\u305f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af"},{"location":"lect04/#lenet5-lecun-1998","text":"LeCun (1998) \u3088\u308a","title":"LeNet5 (LeCun, 1998)"},{"location":"lect04/#alexnet-krizensky-et-al-2012","text":"Krzensky et al (2012) \u3088\u308a","title":"AlexNet (Krizensky, et al., 2012)"},{"location":"lect04/#goolenet-inception-szegedy-et-al-2014","text":"","title":"GooLeNet (Inception) (Szegedy et. al, 2014)"},{"location":"lect04/#_7","text":"\u30a2\u30ec\u30c3\u30af\u30b9\u30cd\u30c3\u30c8\u306e\u7d50\u679c: \u753b\u50cf\u306e\u3059\u3050\u4e0b\u306e\u82f1\u5358\u8a9e\u306f\u6b63\u89e3\u30e9\u30d9\u30eb\u3092\u8868\u3059\u3002Krizensky et. al (2012) Fig. 4 \u3088\u308a\u3002 \u30d4\u30f3\u30af\u8272\u306f\u6b63\u89e3\u30e9\u30d9\u30eb\u306e\u78ba\u7387\u3092\u8868\u3059\u3002\u30d6\u30eb\u30fc\u306f\u4e0d\u6b63\u89e3\u30e9\u30d9\u30eb\u5224\u65ad\u78ba\u7387\u3092\u8868\u3057\u3066\u3044\u308b\u3002 \u30c1\u30a7\u30ea\u30fc\u304c\u6b63\u89e3\u3067\u3042\u308b\u304c\uff0c\u753b\u50cf\u3092\u898b\u308b\u9650\u308a\uff0c\u7b2c\u4e00\u56de\u7b54\u5019\u88dc\u306e\u30c0\u30eb\u30de\u30c1\u30a2\u30f3\u3092\u6b63\u89e3\u3060\u3068\u8003\u3048\u3066\u3082\u554f\u984c\u306f\u7121\u3044\u3068\u8003\u3048\u3089\u308c\u308b\u3002","title":"\u30a4\u30e1\u30fc\u30b8\u30cd\u30c3\u30c8\u30b3\u30f3\u30c6\u30b9\u30c8\uff0c\u30a2\u30ec\u30c3\u30af\u30b9\u30cd\u30c3\u30c8\u306e\u51fa\u529b\u306b\u307f\u308b\u554f\u984c\u70b9"},{"location":"lect04/#_8","text":"\u7269\u4f53\u4f4d\u7f6e \u7269\u4f53\u8a8d\u8b58 object recognition \u610f\u5473\u7684\u5207\u308a\u51fa\u3057 semantic segmentation \u5bfe\u8c61\u5207\u308a\u51fa\u3057 instance segmentation \u7279\u5fb4\u70b9\u62bd\u51fa keypoint \u30d1\u30ce\u30d7\u30c6\u30a3\u30c3\u30af\u5207\u308a\u51fa\u3057 Dang and Ha (2017) \u3088\u308a","title":"\u753b\u50cf\u5207\u308a\u51fa\u3057"},{"location":"lect04/#_9","text":"","title":"\u8ee2\u79fb\u5b66\u7fd2"},{"location":"lect04/#-","text":"","title":"- \u6d3b\u6027\u5316\u95a2\u6570"},{"location":"lect04/#_10","text":"\u4e0a\u3092\u8a33\u3057\u3066\u307f\u307e\u3057\u305f\u3002github.io \u3060\u3068\u6570\u5f0f\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u305f\u3081 colab \u306b\u3057\u3066\u3044\u307e\u3059","title":"\u6a19\u6e96\u6b63\u5247\u5316\u7406\u8ad6\u3068\u6761\u4ef6\u4ed8\u304d\u6700\u9069\u5316"},{"location":"lect05/","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA) \u00b6 Shin Aasakawa , all rights reserved. Date: Jun/05/2020 Appache 2.0 license \u5b9f\u7fd2 \u00b6 \u753b\u50cf\u5206\u5272 detectron2 \u30c7\u30e2 CAM \u3069\u3053\u3092\u898b\u3066\u3044\u308b\u306e\u304b\uff0c\u3069\u3053\u3092\u898b\u3066\u5224\u65ad\u3057\u3066\u3044\u308b\u306e\u304b \u8ee2\u79fb\u5b66\u7fd2 Kaggle \u4e0a\u3067\u306e Interactive demo for TL-GAN (transparent latent-space GAN) \u5148\u9031\u306e\u5fa9\u7fd2 \u00b6 \u610f\u5473\u7684\u5206\u5272 (\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30fb\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3) \u7269\u4f53\uff08\u3042\u308b\u3044\u306f\u5bfe\u8c61\uff09\u5206\u5272 \uff08\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30fb\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\uff09 \u5b9f\u4f53\u5206\u5272 (\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30fb\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3) \u30d0\u30a6\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9 \u95a2\u5fc3\u9818\u57df\u306e\u5207\u308a\u51fa\u3057 \u8a73\u3057\u304f\u306f \u5148\u9031\u306e\u8a72\u5f53\u7b87\u6240 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u3069\u3053 (where) \u306b \u4f55 (what) \u304c\u3042\u308b\u306e\u304b\u3092\u8a8d\u8b58\u3059\u308b\u305f\u3081\u306e\u52aa\u529b\u304c 2014 \u5e74\u304b\u3089\u9577\u8db3\u306e\u9032\u6b69\u3092\u9042\u3052\u307e\u3057\u305f\u3002 \u5148\u9031\u306e\u8ab2\u984c\u30d3\u30c7\u30aa\u306b\u3042\u3063\u305f\u5510\u63da\u3052\u30ed\u30dc\u30c3\u30c8\u3067\u306f\uff0c\u610f\u5473\u7684\u5206\u5272\u3067\u306f\u5bfe\u5fdc\u4e0d\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f \u8981\u70b9 \u00b6 \u5916\u754c\u306e\u60c5\u5831\u3092\u53d7\u3051\u53d6\u308a\uff0c\u8a8d\u8b58\u306b\u81f3\u308b\u305f\u3081\u306b\uff0c\u54fa\u4e73\u985e\u306e\u8996\u899a\u60c5\u5831\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u306f\u5c11\u306a\u304f\u3068\u3082 2 \u3064\u306e\u7d4c\u8def\u3092\u4f5c\u308a\u51fa\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3042\u308b\u3002 \u8996\u899a\u7cfb\u3067\u306f\uff0c\u8179\u5074\u7d4c\u8def\u3067\u300c\u4f55\u300d\u304c\u51e6\u7406\u3055\u308c\uff0c\u80cc\u5074\u7d4c\u8def\u3067\u300c\u3069\u3053\u300d\u304c\u51e6\u7406\u3055\u308c\u3066\u3044\u308b\u3089\u3057\u3044 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3082\uff0c\u5165\u529b\u753b\u50cf\u4e2d\u306e\uff0c\u3069\u3053\u306b\uff0c\u4f55\u304c\uff0c\u5199\u3063\u3066\u3044\u308b\u306e\u304b\u3092\u8a8d\u8b58\u3055\u305b\u308b\u30e2\u30c7\u30eb\u304c\u5b58\u5728\u3059\u308b\u3002 \u8a8d\u8b58\u6027\u80fd\u306e\u5411\u4e0a\u306b\u4f34\u3044\uff0c\u3053\u306e\u8a8d\u8b58\u6a5f\u80fd\u306b\u7acb\u811a\u3057\u305f\u767a\u5c55\u304c\u76db\u3093\u3067\u3042\u308b\u3002 \u8ee2\u79fb\u5b66\u7fd2\u3068\u751f\u6210\u306b\u3064\u3044\u3066\u3068\u308a\u3042\u3052\u308b 2 \u7d4c\u8def\u4eee\u8aac \u00b6 \u8179\u5074\u7d4c\u8def ventral pathways (\"what\" \u7d4c\u8def) \u80cc\u5074\u7d4c\u8def dorsan pathways (\"where\" \u7d4c\u8def) Ungerleider and Mishkin (1982) \u3088\u308a Behnke (2003) \u3088\u308a \u540c\u69d8\u306e 2 \u7d4c\u8def\u306b\u3088\u308b\u51e6\u7406\u306f \u8074\u899a (Romanski et al., 1999) \u3084 \u89e6\u899a(Reed et al., 2005)\u3067\u3082\u767a\u898b\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u767a\u5c55\u7684\u306a\u8a71\u984c\u3068\u3057\u3066\u306f\uff0c\u3053\u306e\u3088\u3046\u306a 2 \u7a2e\u985e\u306e\u51e6\u7406\u7d4c\u8def\u306f\uff0c \u51e6\u7406\u3055\u308c\u308b\u60c5\u5831\u306e\u7a2e\u985e\u306e\u554f\u984c\u3067\u306f\u306a\u3044\u304f\u3066\uff0c\u6a5f\u80fd\u306b\u95a2\u4e0e\u3057\u305f\u533a\u5225\u3067\u3042\u308b\u3068\u306e\u4eee\u8aac\u3082\u3042\u308a\u307e\u3059\u3002\u3059\u306a\u308f\u3061 * \u8179\u5074\u7d4c\u8def\u306f\u7269\u4f53\u306b\u95a2\u3059\u308b\u60c5\u5831\u306e\u77e5\u899a (\u77e5\u899a\u306e\u305f\u3081\u306e\u8996\u899a) * \u80cc\u5074\u7d4c\u8def\u306f\u884c\u52d5\u3092\u5c0e\u304f\u305f\u3081\u306e\u60c5\u5831\u51e6\u7406 (\u884c\u52d5\u306e\u305f\u3081\u306e\u8996\u899a) \u3055\u3089\u306b\u3001\u80cc\u5074\u7d4c\u8def \u306f\u80cc\u5916\u5074\u7d4c\u8def dorsolateral \u3068\u80cc\u4e2d\u5074\u7d4c\u8def dorsomedial \u306b\u7d30\u5206\u5316\u3067\u304d\u308b\u3053\u3068\u304c\u793a\u5506\u3055\u308c\u3066\u3044\u307e\u3059\uff08Binkofski and Buxbaum, 2013, Grafton, 2010, Rizzolatti and Matelli, 2003\uff09\u3002 * \u80cc\u5916\u5074\u5074\u7d4c\u8def \u524d\u982d\u9802\u5185\u6e9d\uff08aIPS\uff09\u3068\u524d\u982d\u524d\u76ae\u8cea\u306e\u8179\u5074\u90e8\u5206\uff08PMv\uff09, \u53e4\u5178\u7684\u306b\u5230\u9054\u904b\u52d5\u306e\u8a08\u753b\u306b\u5bc4\u4e0e \uff08Davare\u3089\u30012015\u3001Davare\u3089\u30012012\u3001Vesia and Crawford\u30012012\uff09 * \u80cc\u4e2d\u5074\u7d4c\u8def\u306f V6A \u3068\u5185\u5074\u982d\u9802\u5185\u6e9d \u3092\u4ecb\u3057\u3066\u80cc\u5074\u524d\u982d\u524d\u76ae\u8cea\uff08PMd\uff09\u3078. \u628a\u6301\u306b\u95a2\u9023\u3059\u308b\u60c5\u5831\u3092\u7d71\u5408\u3059\u308b\uff08Davare\u3089\u30012007\u3001Davare\u3089\u30012010\u3001Tunik\u3089\u30012005\uff09 \u6700\u8fd1\u3067\u306f\u3001\u3053\u308c\u30892\u3064\u306e \u526f\u56de\u8def\u304c \u884c\u52d5\u306b\u3088\u3063\u3066\u8981\u6c42\u3055\u308c\u308b\u30aa\u30f3\u30e9\u30a4\u30f3\u5236\u5fa1\u306e\u7a0b\u5ea6\u306b\u5fdc\u3058\u3066\u76f8\u4e92\u4f5c\u7528\u3059\u308b\u3053\u3068\u3082\u767a\u898b\u3055\u308c\u3066\u3044\u308b(Grol et al., 2007, Verhagen et al., 2013)\u3002 \u4e8c\u6bb5\u968e\u30e2\u30c7\u30eb \u00b6 R-CNN \u00b6 Girshick (2013) \u3088\u308a Fast R-CNN \u3068 Faster R-CNN (2014) \u00b6 Fast R-CNN \u4e00\u6bb5\u968e\u30e2\u30c7\u30eb \u00b6 U-Net \u00b6 \u753b\u50cf\u5206\u5272\u306e SOTA Ronnenberger et. al (2015) Fig. 1 \u3088\u308a \u80cc\u9aa8 \uff08\u30d0\u30c3\u30af\u30dc\u30fc\u30f3\uff09\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u3068 \u5468\u8fba\u30cd\u30c3\u30c8 \u00b6 detectron2 \u306e\u5b9f\u7fd2\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 Realtime Multi-Person 2D Human Pose Estimation using Part Affinity Fields, CVPR 2017 Oral Paper: https://arxiv.org/pdf/1808.07371.pdf Web site: https://carolineec.github.io/everybody_dance_now/ \u8ee2\u79fb\u5b66\u7fd2 \u00b6 \u8ee2\u79fb\u5b66\u7fd2 transfer learning \u306f\u6a5f\u68b0\u5b66\u7fd2\u5206\u91ce\u306e\u307f\u306a\u3089\u305a\uff0c\u30ed\u30dc\u30c3\u30c8\u5de5\u5b66\u3084\u5b9f\u5fdc\u7528\u306e\u5206\u91ce\u3067\u3082\u5fdc\u7528\u304c\u8003\u3048\u3089\u308c\u307e\u3059\u3002 \u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3068\u73fe\u5b9f\u3068\u306e\u9593\u9699\u3092\u3069\u306e\u3088\u3046\u306b\u57cb\u3081\u308b\u306e\u304b\u3068\u3044\u3046\u5927\u304d\u306a\u554f\u984c\u306b\u95a2\u9023\u3057\u307e\u3059\u3002 \u4e00\u65b9\u3067\uff0c\u8ee2\u79fb\u5b66\u7fd2\u3068 \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0 \u3084 \u9818\u57df\u9069\u5fdc * domain adaptation \u306e\u533a\u5225\u304c\u306a\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u8ee2\u79fb\u5b66\u7fd2\u3068\u306f \u8ab2\u984c A \u3092\u7528\u3044\u3066\u8a13\u7df4\u3057\u305f\u30e2\u30c7\u30eb\u306b\u5bfe\u3057\u3066\uff0c\u5225\u306e\u8ab2\u984c B \u306b\u9069\u7528\u3059\u308b\u3053\u3068\u3092\u8a00\u3044\u307e\u3059\u3002 DNN \u3067\u306f\u8ee2\u79fb\u5b66\u7fd2\u306f\u983b\u7528\u3055\u308c\u307e\u3059\u3002 \u30a4\u30e1\u30fc\u30b8\u30cd\u30c3\u30c8\u3067\u753b\u50cf\u5206\u985e\u3092\u5b66\u7fd2\u3057\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5bfe\u3057\u3066\uff0c\u4f8b\u3048\u3070\u9854\u8a8d\u8b58\u3092\u5b66\u7fd2\u3055\u305b\u308b\u3088\u3046\u306a\u5834\u5408\u3067\u3059\u3002 PyTorch \u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306a\u3069\u3067\u306f\uff0c\u5b66\u7fd2\u6e08\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5bfe\u3057\u3066\uff0c\u6700\u7d42\u76f4\u4e0b\u5c64\u3092\u5165\u308c\u66ff\u3048\u3066\u5225\u306e\u8ab2\u984c\u3092\u8a13\u7df4\u3059\u308b\u3053\u3068\u3092\u8ee2\u79fb\u5b66\u7fd2\u3068\u547c\u3073\u307e\u3059\u3002 \u3053\u306e\u3068\u304d\uff0c\u6700\u7d42\u76f4\u4e0b\u5c64\u3068\u51fa\u529b\u5c64\u3068\u306e\u7d50\u5408\u3092\u5b66\u7fd2\u3055\u305b\uff0c\u305d\u306e\u4ed6\u306e\u4e0b\u4f4d\u5c64\u306e\u7d50\u5408\u306f\u56fa\u5b9a\u3057\uff0c\u8a13\u7df4\u3057\u307e\u305b\u3093\u3002 \u4e00\u65b9\u3067\uff0c\u4e0b\u4f4d\u5c64\u307e\u3067\u542b\u3081\u3066\u5168\u7d50\u5408\u3092\u8a13\u7df4\u3055\u305b\u308b\u5834\u5408\u3092\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3068\u547c\u3073\uff0c\u533a\u5225\u3057\u3066\u3044\u307e\u3059\u3002 \u5de6: \u30cf\u30fc\u30c9\u30d1\u30e9\u30e1\u30fc\u30bf\u5171\u6709: \u8ee2\u79fb\u5b66\u7fd2, \u53f3: \u30bd\u30d5\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u5171\u6709: \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0 \u751f\u6210\u30e2\u30c7\u30eb \u00b6 \u8a8d\u8b58\u306e\u53cd\u5bfe\u306e\u64cd\u4f5c\u3092\u3059\u308c\u3070\uff0c\u751f\u6210\u304c\u53ef\u80fd\u3067\u3059\u3002 \u751f\u6210\u6575\u5bfe\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Generative Adversarial Networks: GAN \u306b\u306a\u308a\u307e\u3059\u3002 GAN \u3067\u306f 2 \u3064\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u7528\u3044\u3089\u308c\uff0c \u8b58\u5225\u5668 descriminator \u3068 \u751f\u6210\u5668 generator \u3068\u547c\u3073\u307e\u3059(Goodfellow,2014)\u3002 \u8b58\u5225\u5668\u3082\u751f\u6210\u5668\u3082\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3059\u3002 \u901a\u5e38\u306e\u753b\u50cf\u5206\u985e\u8ab2\u984c\u3067\u306f\uff0c\u6700\u4e0a\u4f4d\u5c64\u306b\u304a\u3044\u3066\u63a8\u8ad6\uff0c\u3059\u306a\u308f\u3061\u5165\u529b\u753b\u50cf\u304c\u4f55\u3067\u3042\u308b\u304b\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u308b\u95a2\u6570\u306a\u3069\u304c\u7528\u3044\u3089\u308c\u307e\u3059\u3002 \u3053\u308c\u306b\u5bfe\u3057\u3066 GAN \u306e\u8b58\u5225\u5668\u3067\u306f\uff0c0 \u304b 1 \u304b\u306e\u51fa\u529b\u3092\u3057\u307e\u3059\u3002\u5165\u529b\u753b\u50cf\u304c\u901a\u5e38\u306e\u753b\u50cf\u3067\u3042\u308c\u3070 1 \u3092\uff0c\u751f\u6210\u5668\u306b\u3088\u3063\u3066\u751f\u6210 \u3055\u308c\u305f\u753b\u50cf\u3067\u3042\u308c\u3042\u3070 0 \u3092\u51fa\u529b\u3057\u307e\u3059\u3002 \u751f\u6210\u5668\u306f\uff0c\u8b58\u5225\u5668\u306e\u6700\u7d42\u76f4\u4e0b\u5c64\u3067\u5f97\u3089\u308c\u305f\u3088\u3046\u306a\u753b\u50cf\u8868\u73fe\u306b\u96d1\u97f3\u3092\u52a0\u3048\u305f\u5024\u304b\u3089\u753b\u50cf\u3092\u751f\u6210\u3057\u307e\u3059\u3002 \u751f\u6210\u5668\u306f\uff0c\u8b58\u5225\u5668\u304c\u5165\u529b\u30c7\u30fc\u30bf\u304b\u3089\u753b\u50cf\u3092\u63a8\u8ad6\u3059\u308b\u306e\u3068\u9006\u65b9\u6cd5\u306b\u63a8\u8ad6\u304b\u3089\u753b\u50cf\u3092\u751f\u6210\u3057\u307e\u3059\u3002 \u3059\u306a\u308f\u3061 GAN \u306f\u5165\u529b\u304c\u5b9f\u5728\u3059\u308b\u304b\uff0c\u507d\u9020\u54c1\uff0c\u3059\u306a\u308f\u3061\u30d5\u30a7\u30a4\u30af\u304b\u3092\u898b\u7834\u308b\u8a13\u7df4\u304c\u306a\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306b\u3057\u3066\uff0c\u751f\u6210\u5668\u306f\u8b58\u5225\u5668\u306e\u5b66\u7fd2\u6210\u679c\u3067\u3042\u308b\u30c7\u30fc\u30bf\u306e\u5185\u90e8\u8868\u73fe\u3092\u6a21\u5023\u3057\uff0c\u751f\u6210\u5668\u3092\u6b3a\u3053\u3046\u3057\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306b\u3057\u3066\u8b58\u5225\u5668\u3068\u751f\u6210\u5668\u3068\u306e\u9593\u3067 \u30b2\u30fc\u30e0\u7406\u8ad6 \u3067\u3044\u3046 \u30ca\u30c3\u30b7\u30e5\u5747\u8861 Nash's equilibrium \u304c\u6210\u308a\u7acb\u3061\u307e\u3059 (Heusel, 2017)\u3002 GAN \u306e\u6a21\u5f0f\u7684\u306a\u6d41\u308c\u3092\u4e0b\u56f3 \u306b\u793a\u3057\u307e\u3057\u305f\u3002 \u753b\u50cf\u5909\u63db \u00b6 \u30b5\u30a4\u30af\u30eb GAN \u00b6 \u30b5\u30a4\u30af\u30eb GAN \u306b\u3088\u308b\u9818\u57df\u5909\u63db \u00b6 \u307e\u3093\u304c\u306e\u753b\u98a8\u5909\u63db \u00b6 ``CartoonGAN: Generative Adversarial Networks for Photo Cartoonization'' CVPR 2018 (Conference on Computer Vision and Pattern Recognition) \u5de6: \u541b\u306e\u540d\u306f\u3002\u53f3: \u98a8\u306e\u8c37\u306e\u30ca\u30a6\u30b7\u30ab\uff0c\u3088\u308a","title":"\u7b2c 5 \u56de 06 \u6708 05 \u65e5"},{"location":"lect05/#iiia","text":"Shin Aasakawa , all rights reserved. Date: Jun/05/2020 Appache 2.0 license","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA)"},{"location":"lect05/#_1","text":"\u753b\u50cf\u5206\u5272 detectron2 \u30c7\u30e2 CAM \u3069\u3053\u3092\u898b\u3066\u3044\u308b\u306e\u304b\uff0c\u3069\u3053\u3092\u898b\u3066\u5224\u65ad\u3057\u3066\u3044\u308b\u306e\u304b \u8ee2\u79fb\u5b66\u7fd2 Kaggle \u4e0a\u3067\u306e Interactive demo for TL-GAN (transparent latent-space GAN)","title":"\u5b9f\u7fd2"},{"location":"lect05/#_2","text":"\u610f\u5473\u7684\u5206\u5272 (\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30fb\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3) \u7269\u4f53\uff08\u3042\u308b\u3044\u306f\u5bfe\u8c61\uff09\u5206\u5272 \uff08\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30fb\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\uff09 \u5b9f\u4f53\u5206\u5272 (\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30fb\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3) \u30d0\u30a6\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9 \u95a2\u5fc3\u9818\u57df\u306e\u5207\u308a\u51fa\u3057 \u8a73\u3057\u304f\u306f \u5148\u9031\u306e\u8a72\u5f53\u7b87\u6240 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u3069\u3053 (where) \u306b \u4f55 (what) \u304c\u3042\u308b\u306e\u304b\u3092\u8a8d\u8b58\u3059\u308b\u305f\u3081\u306e\u52aa\u529b\u304c 2014 \u5e74\u304b\u3089\u9577\u8db3\u306e\u9032\u6b69\u3092\u9042\u3052\u307e\u3057\u305f\u3002 \u5148\u9031\u306e\u8ab2\u984c\u30d3\u30c7\u30aa\u306b\u3042\u3063\u305f\u5510\u63da\u3052\u30ed\u30dc\u30c3\u30c8\u3067\u306f\uff0c\u610f\u5473\u7684\u5206\u5272\u3067\u306f\u5bfe\u5fdc\u4e0d\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f","title":"\u5148\u9031\u306e\u5fa9\u7fd2"},{"location":"lect05/#_3","text":"\u5916\u754c\u306e\u60c5\u5831\u3092\u53d7\u3051\u53d6\u308a\uff0c\u8a8d\u8b58\u306b\u81f3\u308b\u305f\u3081\u306b\uff0c\u54fa\u4e73\u985e\u306e\u8996\u899a\u60c5\u5831\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u306f\u5c11\u306a\u304f\u3068\u3082 2 \u3064\u306e\u7d4c\u8def\u3092\u4f5c\u308a\u51fa\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3042\u308b\u3002 \u8996\u899a\u7cfb\u3067\u306f\uff0c\u8179\u5074\u7d4c\u8def\u3067\u300c\u4f55\u300d\u304c\u51e6\u7406\u3055\u308c\uff0c\u80cc\u5074\u7d4c\u8def\u3067\u300c\u3069\u3053\u300d\u304c\u51e6\u7406\u3055\u308c\u3066\u3044\u308b\u3089\u3057\u3044 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3082\uff0c\u5165\u529b\u753b\u50cf\u4e2d\u306e\uff0c\u3069\u3053\u306b\uff0c\u4f55\u304c\uff0c\u5199\u3063\u3066\u3044\u308b\u306e\u304b\u3092\u8a8d\u8b58\u3055\u305b\u308b\u30e2\u30c7\u30eb\u304c\u5b58\u5728\u3059\u308b\u3002 \u8a8d\u8b58\u6027\u80fd\u306e\u5411\u4e0a\u306b\u4f34\u3044\uff0c\u3053\u306e\u8a8d\u8b58\u6a5f\u80fd\u306b\u7acb\u811a\u3057\u305f\u767a\u5c55\u304c\u76db\u3093\u3067\u3042\u308b\u3002 \u8ee2\u79fb\u5b66\u7fd2\u3068\u751f\u6210\u306b\u3064\u3044\u3066\u3068\u308a\u3042\u3052\u308b","title":"\u8981\u70b9"},{"location":"lect05/#2","text":"\u8179\u5074\u7d4c\u8def ventral pathways (\"what\" \u7d4c\u8def) \u80cc\u5074\u7d4c\u8def dorsan pathways (\"where\" \u7d4c\u8def) Ungerleider and Mishkin (1982) \u3088\u308a Behnke (2003) \u3088\u308a \u540c\u69d8\u306e 2 \u7d4c\u8def\u306b\u3088\u308b\u51e6\u7406\u306f \u8074\u899a (Romanski et al., 1999) \u3084 \u89e6\u899a(Reed et al., 2005)\u3067\u3082\u767a\u898b\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u767a\u5c55\u7684\u306a\u8a71\u984c\u3068\u3057\u3066\u306f\uff0c\u3053\u306e\u3088\u3046\u306a 2 \u7a2e\u985e\u306e\u51e6\u7406\u7d4c\u8def\u306f\uff0c \u51e6\u7406\u3055\u308c\u308b\u60c5\u5831\u306e\u7a2e\u985e\u306e\u554f\u984c\u3067\u306f\u306a\u3044\u304f\u3066\uff0c\u6a5f\u80fd\u306b\u95a2\u4e0e\u3057\u305f\u533a\u5225\u3067\u3042\u308b\u3068\u306e\u4eee\u8aac\u3082\u3042\u308a\u307e\u3059\u3002\u3059\u306a\u308f\u3061 * \u8179\u5074\u7d4c\u8def\u306f\u7269\u4f53\u306b\u95a2\u3059\u308b\u60c5\u5831\u306e\u77e5\u899a (\u77e5\u899a\u306e\u305f\u3081\u306e\u8996\u899a) * \u80cc\u5074\u7d4c\u8def\u306f\u884c\u52d5\u3092\u5c0e\u304f\u305f\u3081\u306e\u60c5\u5831\u51e6\u7406 (\u884c\u52d5\u306e\u305f\u3081\u306e\u8996\u899a) \u3055\u3089\u306b\u3001\u80cc\u5074\u7d4c\u8def \u306f\u80cc\u5916\u5074\u7d4c\u8def dorsolateral \u3068\u80cc\u4e2d\u5074\u7d4c\u8def dorsomedial \u306b\u7d30\u5206\u5316\u3067\u304d\u308b\u3053\u3068\u304c\u793a\u5506\u3055\u308c\u3066\u3044\u307e\u3059\uff08Binkofski and Buxbaum, 2013, Grafton, 2010, Rizzolatti and Matelli, 2003\uff09\u3002 * \u80cc\u5916\u5074\u5074\u7d4c\u8def \u524d\u982d\u9802\u5185\u6e9d\uff08aIPS\uff09\u3068\u524d\u982d\u524d\u76ae\u8cea\u306e\u8179\u5074\u90e8\u5206\uff08PMv\uff09, \u53e4\u5178\u7684\u306b\u5230\u9054\u904b\u52d5\u306e\u8a08\u753b\u306b\u5bc4\u4e0e \uff08Davare\u3089\u30012015\u3001Davare\u3089\u30012012\u3001Vesia and Crawford\u30012012\uff09 * \u80cc\u4e2d\u5074\u7d4c\u8def\u306f V6A \u3068\u5185\u5074\u982d\u9802\u5185\u6e9d \u3092\u4ecb\u3057\u3066\u80cc\u5074\u524d\u982d\u524d\u76ae\u8cea\uff08PMd\uff09\u3078. \u628a\u6301\u306b\u95a2\u9023\u3059\u308b\u60c5\u5831\u3092\u7d71\u5408\u3059\u308b\uff08Davare\u3089\u30012007\u3001Davare\u3089\u30012010\u3001Tunik\u3089\u30012005\uff09 \u6700\u8fd1\u3067\u306f\u3001\u3053\u308c\u30892\u3064\u306e \u526f\u56de\u8def\u304c \u884c\u52d5\u306b\u3088\u3063\u3066\u8981\u6c42\u3055\u308c\u308b\u30aa\u30f3\u30e9\u30a4\u30f3\u5236\u5fa1\u306e\u7a0b\u5ea6\u306b\u5fdc\u3058\u3066\u76f8\u4e92\u4f5c\u7528\u3059\u308b\u3053\u3068\u3082\u767a\u898b\u3055\u308c\u3066\u3044\u308b(Grol et al., 2007, Verhagen et al., 2013)\u3002","title":"2 \u7d4c\u8def\u4eee\u8aac"},{"location":"lect05/#_4","text":"","title":"\u4e8c\u6bb5\u968e\u30e2\u30c7\u30eb"},{"location":"lect05/#r-cnn","text":"Girshick (2013) \u3088\u308a","title":"R-CNN "},{"location":"lect05/#fast-r-cnn-faster-r-cnn-2014","text":"Fast R-CNN","title":"Fast R-CNN \u3068 Faster R-CNN (2014)"},{"location":"lect05/#_5","text":"","title":"\u4e00\u6bb5\u968e\u30e2\u30c7\u30eb"},{"location":"lect05/#u-net","text":"\u753b\u50cf\u5206\u5272\u306e SOTA Ronnenberger et. al (2015) Fig. 1 \u3088\u308a","title":"U-Net"},{"location":"lect05/#_6","text":"detectron2 \u306e\u5b9f\u7fd2\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 Realtime Multi-Person 2D Human Pose Estimation using Part Affinity Fields, CVPR 2017 Oral Paper: https://arxiv.org/pdf/1808.07371.pdf Web site: https://carolineec.github.io/everybody_dance_now/","title":"\u80cc\u9aa8 \uff08\u30d0\u30c3\u30af\u30dc\u30fc\u30f3\uff09\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u3068 \u5468\u8fba\u30cd\u30c3\u30c8"},{"location":"lect05/#_7","text":"\u8ee2\u79fb\u5b66\u7fd2 transfer learning \u306f\u6a5f\u68b0\u5b66\u7fd2\u5206\u91ce\u306e\u307f\u306a\u3089\u305a\uff0c\u30ed\u30dc\u30c3\u30c8\u5de5\u5b66\u3084\u5b9f\u5fdc\u7528\u306e\u5206\u91ce\u3067\u3082\u5fdc\u7528\u304c\u8003\u3048\u3089\u308c\u307e\u3059\u3002 \u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3068\u73fe\u5b9f\u3068\u306e\u9593\u9699\u3092\u3069\u306e\u3088\u3046\u306b\u57cb\u3081\u308b\u306e\u304b\u3068\u3044\u3046\u5927\u304d\u306a\u554f\u984c\u306b\u95a2\u9023\u3057\u307e\u3059\u3002 \u4e00\u65b9\u3067\uff0c\u8ee2\u79fb\u5b66\u7fd2\u3068 \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0 \u3084 \u9818\u57df\u9069\u5fdc * domain adaptation \u306e\u533a\u5225\u304c\u306a\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u8ee2\u79fb\u5b66\u7fd2\u3068\u306f \u8ab2\u984c A \u3092\u7528\u3044\u3066\u8a13\u7df4\u3057\u305f\u30e2\u30c7\u30eb\u306b\u5bfe\u3057\u3066\uff0c\u5225\u306e\u8ab2\u984c B \u306b\u9069\u7528\u3059\u308b\u3053\u3068\u3092\u8a00\u3044\u307e\u3059\u3002 DNN \u3067\u306f\u8ee2\u79fb\u5b66\u7fd2\u306f\u983b\u7528\u3055\u308c\u307e\u3059\u3002 \u30a4\u30e1\u30fc\u30b8\u30cd\u30c3\u30c8\u3067\u753b\u50cf\u5206\u985e\u3092\u5b66\u7fd2\u3057\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5bfe\u3057\u3066\uff0c\u4f8b\u3048\u3070\u9854\u8a8d\u8b58\u3092\u5b66\u7fd2\u3055\u305b\u308b\u3088\u3046\u306a\u5834\u5408\u3067\u3059\u3002 PyTorch \u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306a\u3069\u3067\u306f\uff0c\u5b66\u7fd2\u6e08\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5bfe\u3057\u3066\uff0c\u6700\u7d42\u76f4\u4e0b\u5c64\u3092\u5165\u308c\u66ff\u3048\u3066\u5225\u306e\u8ab2\u984c\u3092\u8a13\u7df4\u3059\u308b\u3053\u3068\u3092\u8ee2\u79fb\u5b66\u7fd2\u3068\u547c\u3073\u307e\u3059\u3002 \u3053\u306e\u3068\u304d\uff0c\u6700\u7d42\u76f4\u4e0b\u5c64\u3068\u51fa\u529b\u5c64\u3068\u306e\u7d50\u5408\u3092\u5b66\u7fd2\u3055\u305b\uff0c\u305d\u306e\u4ed6\u306e\u4e0b\u4f4d\u5c64\u306e\u7d50\u5408\u306f\u56fa\u5b9a\u3057\uff0c\u8a13\u7df4\u3057\u307e\u305b\u3093\u3002 \u4e00\u65b9\u3067\uff0c\u4e0b\u4f4d\u5c64\u307e\u3067\u542b\u3081\u3066\u5168\u7d50\u5408\u3092\u8a13\u7df4\u3055\u305b\u308b\u5834\u5408\u3092\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3068\u547c\u3073\uff0c\u533a\u5225\u3057\u3066\u3044\u307e\u3059\u3002 \u5de6: \u30cf\u30fc\u30c9\u30d1\u30e9\u30e1\u30fc\u30bf\u5171\u6709: \u8ee2\u79fb\u5b66\u7fd2, \u53f3: \u30bd\u30d5\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u5171\u6709: \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0","title":"\u8ee2\u79fb\u5b66\u7fd2"},{"location":"lect05/#_8","text":"\u8a8d\u8b58\u306e\u53cd\u5bfe\u306e\u64cd\u4f5c\u3092\u3059\u308c\u3070\uff0c\u751f\u6210\u304c\u53ef\u80fd\u3067\u3059\u3002 \u751f\u6210\u6575\u5bfe\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Generative Adversarial Networks: GAN \u306b\u306a\u308a\u307e\u3059\u3002 GAN \u3067\u306f 2 \u3064\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u7528\u3044\u3089\u308c\uff0c \u8b58\u5225\u5668 descriminator \u3068 \u751f\u6210\u5668 generator \u3068\u547c\u3073\u307e\u3059(Goodfellow,2014)\u3002 \u8b58\u5225\u5668\u3082\u751f\u6210\u5668\u3082\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3059\u3002 \u901a\u5e38\u306e\u753b\u50cf\u5206\u985e\u8ab2\u984c\u3067\u306f\uff0c\u6700\u4e0a\u4f4d\u5c64\u306b\u304a\u3044\u3066\u63a8\u8ad6\uff0c\u3059\u306a\u308f\u3061\u5165\u529b\u753b\u50cf\u304c\u4f55\u3067\u3042\u308b\u304b\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u308b\u95a2\u6570\u306a\u3069\u304c\u7528\u3044\u3089\u308c\u307e\u3059\u3002 \u3053\u308c\u306b\u5bfe\u3057\u3066 GAN \u306e\u8b58\u5225\u5668\u3067\u306f\uff0c0 \u304b 1 \u304b\u306e\u51fa\u529b\u3092\u3057\u307e\u3059\u3002\u5165\u529b\u753b\u50cf\u304c\u901a\u5e38\u306e\u753b\u50cf\u3067\u3042\u308c\u3070 1 \u3092\uff0c\u751f\u6210\u5668\u306b\u3088\u3063\u3066\u751f\u6210 \u3055\u308c\u305f\u753b\u50cf\u3067\u3042\u308c\u3042\u3070 0 \u3092\u51fa\u529b\u3057\u307e\u3059\u3002 \u751f\u6210\u5668\u306f\uff0c\u8b58\u5225\u5668\u306e\u6700\u7d42\u76f4\u4e0b\u5c64\u3067\u5f97\u3089\u308c\u305f\u3088\u3046\u306a\u753b\u50cf\u8868\u73fe\u306b\u96d1\u97f3\u3092\u52a0\u3048\u305f\u5024\u304b\u3089\u753b\u50cf\u3092\u751f\u6210\u3057\u307e\u3059\u3002 \u751f\u6210\u5668\u306f\uff0c\u8b58\u5225\u5668\u304c\u5165\u529b\u30c7\u30fc\u30bf\u304b\u3089\u753b\u50cf\u3092\u63a8\u8ad6\u3059\u308b\u306e\u3068\u9006\u65b9\u6cd5\u306b\u63a8\u8ad6\u304b\u3089\u753b\u50cf\u3092\u751f\u6210\u3057\u307e\u3059\u3002 \u3059\u306a\u308f\u3061 GAN \u306f\u5165\u529b\u304c\u5b9f\u5728\u3059\u308b\u304b\uff0c\u507d\u9020\u54c1\uff0c\u3059\u306a\u308f\u3061\u30d5\u30a7\u30a4\u30af\u304b\u3092\u898b\u7834\u308b\u8a13\u7df4\u304c\u306a\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306b\u3057\u3066\uff0c\u751f\u6210\u5668\u306f\u8b58\u5225\u5668\u306e\u5b66\u7fd2\u6210\u679c\u3067\u3042\u308b\u30c7\u30fc\u30bf\u306e\u5185\u90e8\u8868\u73fe\u3092\u6a21\u5023\u3057\uff0c\u751f\u6210\u5668\u3092\u6b3a\u3053\u3046\u3057\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306b\u3057\u3066\u8b58\u5225\u5668\u3068\u751f\u6210\u5668\u3068\u306e\u9593\u3067 \u30b2\u30fc\u30e0\u7406\u8ad6 \u3067\u3044\u3046 \u30ca\u30c3\u30b7\u30e5\u5747\u8861 Nash's equilibrium \u304c\u6210\u308a\u7acb\u3061\u307e\u3059 (Heusel, 2017)\u3002 GAN \u306e\u6a21\u5f0f\u7684\u306a\u6d41\u308c\u3092\u4e0b\u56f3 \u306b\u793a\u3057\u307e\u3057\u305f\u3002","title":"\u751f\u6210\u30e2\u30c7\u30eb"},{"location":"lect05/#_9","text":"","title":"\u753b\u50cf\u5909\u63db"},{"location":"lect05/#gan","text":"","title":"\u30b5\u30a4\u30af\u30eb GAN"},{"location":"lect05/#gan_1","text":"","title":"\u30b5\u30a4\u30af\u30eb GAN \u306b\u3088\u308b\u9818\u57df\u5909\u63db"},{"location":"lect05/#_10","text":"``CartoonGAN: Generative Adversarial Networks for Photo Cartoonization'' CVPR 2018 (Conference on Computer Vision and Pattern Recognition) \u5de6: \u541b\u306e\u540d\u306f\u3002\u53f3: \u98a8\u306e\u8c37\u306e\u30ca\u30a6\u30b7\u30ab\uff0c\u3088\u308a","title":"\u307e\u3093\u304c\u306e\u753b\u98a8\u5909\u63db"},{"location":"lect06/","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA) \u00b6 Shin Aasakawa , all rights reserved. Date: XX/XX/2020 Appache 2.0 license \\ldots \u5de5\u4e8b\u4e2d \\ldots \u9ad8\u7cbe\u5ea6\u5316\uff0c\u9ad8\u901f\u5316\u3078\u306e\u52aa\u529b \u00b6 \u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5\uff0c\u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\uff0c\u30d0\u30c3\u30c1\u5b66\u7fd2 \u30c7\u30fc\u30bf\u62e1\u5f35 \u6b63\u5247\u5316 \u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8 \u975e\u7dda\u5f62\u6d3b\u6027\u5316\u95a2\u6570 \u6700\u9069\u5316\u624b\u6cd5 \u7528\u8a9e\u306e\u6574\u7406 \u00b6 SGD \u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5 stochastic gradient descent method \u52fe\u914d\u6d88\u5931\u554f\u984c gradient decent problem \u8cac\u4efb\u5272\u5f53\u554f\u984c credit assignment problem \u975e\u7dda\u5f62\u5909\u63db non lineaar transformation ReLU \u6574\u6d41\u7dda\u5f62\u30e6\u30cb\u30c3\u30c8 Recutified Linear Unit \u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u95a2\u6570 softmax function \u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc cross entropy \u30aa\u30fc\u30d0\u30fc\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0 \u904e\u5b66\u7fd2 overfitting \u306e\u56de\u907f\u6cd5 \u6b63\u5247\u5316 regularization \u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8 dropout \u30c7\u30fc\u30bf\u62e1\u5f35 data augumentation penultimate layer {\u30d0\u30c3\u30c1, \u5c64, \u91cd\u307f} \u6b63\u898f\u5316 one algorithm hypothesis TensorFlow HUB \u00b6 \u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\uff0c\u30c7\u30fc\u30bf\u62e1\u5f35\uff0c\u5404\u7a2e\u6b63\u898f\u5316: cnn.md \u6709\u540d\u306a\u30e2\u30c7\u30eb LeNet\uff0cAlex Net\uff0cInception\uff0cVGG\uff0cResNet R-CNN\uff0c\u30cf\u30a4\u30a6\u30a7\u30a4\u30cd\u30c3\u30c8\uff0cYOLO\uff0cSSD \u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3 \u8ee2\u79fb\u5b66\u7fd2\uff0c\u4e8b\u524d\u5b66\u7fd2\uff0c\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0 GAN \u30a4\u30f3\u30bb\u30d7\u30b7\u30e7\u30f3 Inception\uff0c\u6b8b\u6e23\u30cd\u30c3\u30c8 ResNet\uff0c\u9818\u57df R-CNN (Regional Convolutional Neural Networks) \u00b6 what and where routes \u5fc3\u7406\u5b66\u7684\u5bfe\u5fdc\u7269(\uff1f) Cadieu (2014) Deep Neural Networks Rival the Representation of Primate IT Cortex for Core Visual Object Recognition Nasr, Viswanathan, Nieder (2019) Number detectors spontaneously emerge in a deep neural network designed for visual object recognition Marcus (2018) Deep Learning A Critical Appraisal \u8ee2\u79fb\u5b66\u7fd2 Notebooks \u00b6 colab/text_classification_with_tf_hub_on_kaggle.ipynb Shows how to solve a problem on Kaggle with TF-Hub. colab/semantic_similarity_with_tf_hub_universal_encoder.ipynb Explores text semantic similarity with the Universal Encoder Module . colab/tf_hub_generative_image_module.ipynb Explores a generative image module. colab/action_recognition_with_tf_hub.ipynb Explores action recognition from video. colab/tf_hub_delf_module.ipynb Exemplifies use of the DELF Module for landmark recognition and matching. colab/object_detection.ipynb Explores object detection with the use of the Faster R-CNN module trained on Open Images v4 The Complete Beginner\u2019s Guide to Deep Learning: Convolutional Neural Networks and Image Classification , Anne Bonner Feb. 02 \u7573\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af (Convlutional Neural Networks:CNN) \u3068\u306f\u753b\u50cf\u8a8d\u8b58\u306b\u304a\u3051\u308b\u30b2\u30fc\u30e0\u30c1\u30a7\u30f3\u30b8\u30e3\u30fc(\u4ee5\u5f8c\uff0c\u753b\u50cf\u8a8d\u8b58\uff0c\u30d3\u30c7\u30aa\u5206\u985e\uff0c\u81ea\u52d5\u904b\u8ee2\uff0c\u30c9\u30ed\u30fc\u30f3\uff0c\u30b2\u30fc\u30e0\u306a\u3069\u3078\u306e\u5fdc\u7528\u591a\u6570) \u30a4\u30e1\u30fc\u30b8\u30cd\u30c3\u30c8\u753b\u50cf\u30b3\u30f3\u30c6\u30b9\u30c8 \u3067\u306f\uff0c\u5206\u985e (classification) \u8ab2\u984c\u3068\u4f4d\u7f6e (locallization) \u8ab2\u984c\u3068\u304b\u3089\u306a\u308b\u3002 \u30b3\u30f3\u30c6\u30b9\u30c8\u306f 2010 \u5e74\u304b\u3089 Li Fei-Fei \u3055\u3093\u4e2d\u5fc3\u3068\u306a\u3063\u3066 AMT \u3067\u753b\u50cf\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3063\u3066 \u753b\u50cf\u30922012 \u5e74\u306e\u512a\u52dd\u30c1\u30fc\u30e0\u304c CNN \u3092\u4f7f\u3063\u305f\u3002\u901a\u79f0 \u30a2\u30ec\u30c3\u30af\u30b9\u30cd\u30c3\u30c8 \u30b9\u30bf\u30f3\u30d5\u30a9\u30fc\u30c9\u5927\u5b66\u306e\u6388\u696d CS231n: Convolutional Neural Networks for Visual Recognition . \u30b9\u30e9\u30a4\u30c9](http://cs231n.stanford.edu/slides/2019/cs231n_2019_lecture05.pdf) \u3055\u3089\u306a\u308b\u60c5\u5831 \u00b6 Math? Introduction to Convolutional Neural Networks by Jianxin Wu C.-C. Jay Kuo Understanding Convolutional Neural Networks With a Mathematical Model . the absolute basics of activation functions, you can find that here [Artificial neural networks? You can learn about them here \u6b63\u898f\u5316\uff0c\u6b63\u5247\u5316\uff0c\u6a19\u6e96\u5316\uff0c\u767d\u8272\u5316\uff0c\u4e8c\u91cd\u4e2d\u5fc3\u5316 \u00b6 \u767d\u8272\u5316\u306b\u3064\u3044\u3066\u306f\u5e73\u4e95\u6709\u4e09\u5148\u751f\u306e\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u304c\u53c2\u8003\u6587\u732e\u3067\u826f\u3044\u304b\u306a Differences between normalization, standardization and regularization ReLU layer \u00b6 The ReLU (rectified linear unit) layer is another step to our convolution layer. You\u2019re applying an activation function onto your feature maps to increase non-linearity in the network. This is because images themselves are highly non-linear! It removes negative values from an activation map by setting them to zero. Convolution is a linear operation with things like element wise matrix multiplication and addition. The real-world data we want our CNN to learn will be non-linear. We can account for that with an operation like ReLU. You can use other operations like tanh or sigmoid. ReLU, however, is a popular choice because it can train the network faster without any major penalty to generalization accuracy. Want to dig deeper? Try Kaiming He, et al. Delving Deep into Rectifiers: Surpassing Human-Level Performance on ImageNet Classification . If you need a little more info about the absolute basics of activation functions, you can find that here ! Here\u2019s how our little buddy is looking after a ReLU activation function turns all of the negative pixel values black 1 viz_layer(activated_layer) Pooling \u00b6 The last thing you want is for your network to look for one specific feature in an exact shade in an exact location. That\u2019s useless for a good CNN! You want images that are flipped, rotated, squashed, and so on. You want lots of pictures of the same thing so that your network can recognize an object (say, a leopard) in all the images. No matter what the size or location. No matter what the lighting or the number of spots,or whether that leopard is fast asleep or crushing prey. You want spatial variance ! You want flexibility. That\u2019s what pooling is all about. Pooling progressively reduces the size of the input representation. It makes it possible to detect objects in an image no matter where they\u2019re located. Pooling helps to reduce the number of required parameters and the amount of computation required. It also helps control overfitting . Overfitting can be kind of like when you memorize super specific details before a test without understanding the information. When you memorize details, you can do a great job with your flashcards at home. You\u2019ll fail a real test, though, if you\u2019re presented with new information. (Another example: if all of the dogs in your training data have spots and dark eyes, your network will believe that for an image to be classified as a dog, it must have spots and dark eyes. If you test your data with that same training data, it will do an amazing job of classifying dogs correctly! But if your outputs are only \u201cdog\u201d and \u201ccat,\u201d and your network is presented with new images containing, say, a Rottweiler and a Husky, it will probably wind up classifying both the Rottweiler and the Husky as cats. You can see the problem!) Without variance, your network will be useless with images that don\u2019t exactly match the training data. Always, always, always keep your training and testing data separate ! If you test with the data you trained on, your network has the information memorized! It will do a terrible job when it\u2019s introduced to any new data. Overfitting is not cool. \u00b6 So for this step, you take the feature map , apply a pooling layer , and the result is the pooled feature map . The most common example of pooling is max pooling . In max pooling, the input image is partitioned into a set of areas that don\u2019t overlap. The outputs of each area are the maximum value in each area. This makes a smaller size with fewer parameters. Max pooling is all about grabbing the maximum value at each spot in the image. This gets rid of 75% of the information that is not the feature. By taking the maximum value of the pixels, you\u2019re accounting for distortion. If the feature rotates a little to the left or right or whatever, the pooled feature will be the same. You\u2019re reducing the size and parameters. This is great because it means that the model won\u2019t overfit on that information. You could use average pooling or sum pooling , but they aren\u2019t common choices. Max pooling tends to perform better than both in practice. In max pooling, you\u2019re taking the largest pixel value. In average pooling, you take the average of all the pixel values at that spot in the image. (Actually, there\u2019s a trend now towards using smaller filters or discarding pooling layers entirely. This is in response to an aggressive reduction in representation size.) Want to look a little more at why you might want to choose max pooling and why you might prefer a stride of two pixels? Check out Dominik Scherer et. al, Evaluation of Pooling Operations in Convolutional Architectures for Object Recognition . If you go here you can check out a really interesting 2D visualization of a convolutional layer. Draw a number in the box on the left-hand side of the screen and then really go through the output. You can see the convolved and pooled layers as well as the guesses. Try hovering over a single pixel so you can see where the filter was applied. So now we have an input image, an applied convolutional layer, and an applied pooling layer. Let\u2019s visualize the output of the pooling layer! We were here: The pooling layer takes as input the feature maps pictured above and reduces the dimensionality of those maps. It does this by constructing a new, smaller image of only the maximum (brightest) values in a given kernel area. See how the image has changed size? Cool, right? Flattening \u00b6 This is a pretty simple step. You flatten the pooled feature map into a sequential column of numbers (a long vector). This allows that information to become the input layer of an artificial neural network for further processing. Fully connected layer \u00b6 At this step, we add an artificial neural network to our convolutional neural network. (Not sure about artificial neural networks? You can learn about them here !) The main purpose of the artificial neural network is to combine our features into more attributes. These will predict the classes with greater accuracy. This combines features and attributes that can predict classes better. At this step, the error is calculated and then backpropagated. The weights and feature detectors are adjusted to help optimize the performance of the model. Then the process happens again and again and again. This is how our network trains on the data! How do the output neurons work when there\u2019s more than one? First, we have to understand what weights to apply to the synapses that connect to the output. We want to know which of the previous neurons are important for the output. If, for example, you have two output classes, one for a cat and one for a dog, a neuron that reads \u201c0\u201d is absolutely uncertain that the feature belongs to a cat. A neuron that reads \u201c1 is absolutely certain that the feature belongs to a cat. In the final fully connected layer, the neurons will read values between 0 and 1. This signifies different levels of certainty. A value of 0.9 would signify a certainty of 90%. The cat neurons that are certain when a feature is identified know that the image is a cat. They say the mathematical equivalent of, \u201cThese are my neurons! I should be triggered!\u201d If this happens many times, the network learns that when certain features fire up, the image is a cat. Through lots of iterations, the cat neuron learns that when certain features fire up, the image is a cat. The dog (for example) neuron learns that when certain other features fire up, the image is a dog. The dog neuron learns that for example again, the \u201cbig wet nose\u201d neuron and the \u201cfloppy ear\u201d neuron contribute with a great deal of certainty to the dog neuron. It gives greater weight to the \u201cbig wet nose\u201d neuron and the \u201cfloppy ear\u201d neuron. The dog neuron learns to more or less ignore the \u201cwhiskers\u201d neuron and the \u201ccat-iris\u201d neuron. The cat neuron learns to give greater weight to neurons like \u201cwhiskers\u201d and \u201ccat-iris.\u201d (Okay, there aren\u2019t actually \u201cbig wet nose\u201d or \u201cwhiskers\u201d neurons. But the detected features do have distinctive features of the specific class.) Once the network has been trained, you can pass in an image and the neural network will be able to determine the image class probability for that image with a great deal of certainty. The fully connected layer is a traditional Multi-Layer Perceptron. It uses a classifier in the output layer. The classifier is usually a softmax activation function. Fully connected means every neuron in the previous layer connects to every neuron in the next layer. What\u2019s the purpose of this layer? To use the features from the output of the previous layer to classify the input image based on the training data. Once your network is up and running you can see, for example, that you have a 95% probability that your image is a dog and a 5% probability that your image is a cat. Why do these numbers add up to 1.0? (0.95 + 0.05) There isn\u2019t anything that says that these two outputs are connected to each other. What is it that makes them relate to each other? Essentially, they wouldn\u2019t, but they do when we introduce the softmax function . This brings the values between 0 and 1 and makes them add up to 1 (100%). (You can read all about this on Wikipedia.) The softmax function takes a vector of scores and squashes it to a vector of values between 0 and 1 that add up to 1. After you apply a softmax function, you can apply the loss function. Cross entropy often goes hand in hand with softmax. We want to minimize the loss function so we can maximize the performance of our network. At the beginning of backpropagation, your output values would be tiny. That\u2019s why you might choose cross entropy loss. The gradient would be very low and it would be hard for the neural network to start adjusting in the right direction. Using cross entropy helps the network assess even a tiny error and get to the optimal state faster. Want more? Check out \u00b6 \u7528\u8a9e\u96c6 \u00b6 \u975e\u7dda\u5f62\u6027 \u00b6 ReLU Sigmoid Tanh GRU LSTM \u6700\u9069\u5316 \u00b6 SGD Momentum RMSProp Adagrad Adam KFac \u7d50\u5408\u30d1\u30bf\u30fc\u30f3 \u00b6 \u5b8c\u5168\u7d50\u5408 \u7573\u8fbc\u307f Dilated \u518d\u5e30\u7d50\u5408 \u30b9\u30ad\u30c3\u30d7\u30b3\u30cd\u30af\u30c8\uff0c\u6b8b\u6e23 \u640d\u5931\u95a2\u6570 \u00b6 \u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u6575\u5bfe\u5b66\u7fd2 \u5909\u5206\u539f\u7406 \u6700\u5c24\u6cd5 L2 \u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf \u00b6 \u5b66\u7fd2\u7387 \u5c64\u6570 \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba \u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u7387 \u521d\u671f\u5316 \u30c7\u30fc\u30bf\u62e1\u5f35 \u52fe\u914d\u30af\u30ea\u30c3\u30d7 \u30e2\u30fc\u30e1\u30f3\u30c8 \u30a2\u30ec\u30c3\u30af\u30b9\u30cd\u30c3\u30c8\u4ee5\u964d\u306e\u6d41\u308c \u00b6 2013\u5e74 ZF \u30cd\u30c3\u30c8 2014\u5e74 GoogLeNet (\u30a4\u30f3\u30bb\u30d7\u30b7\u30e7\u30f3)\uff0cVGG\uff0cVery Deep, GAN, VAE 2015\u5e74 \u6b8b\u6e23\u30cd\u30c3\u30c8 (ResNet) \u3053\u306e\u6642\u70b9\u3067\uff0c\u4eba\u9593\u8d85\u3048 2016\u5e74 YOLO, SSD, Segmentation (Semantics/Instance) 2017\u5e74 Mask R-CNN 2018\u5e74 \u30e2\u30d0\u30a4\u30eb\u30cd\u30c3\u30c8 \u9ad8\u7cbe\u5ea6\u5316\uff0c\u9ad8\u901f\u5316\u3078\u306e\u52aa\u529b \u00b6 \u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5\uff0c\u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\uff0c\u30d0\u30c3\u30c1\u5b66\u7fd2 \u30c7\u30fc\u30bf\u62e1\u5f35 \u6b63\u5247\u5316 \u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8 \u975e\u7dda\u5f62\u6d3b\u6027\u5316\u95a2\u6570 \u6700\u9069\u5316\u624b\u6cd5","title":"2020\u5e74\u5ea6 \u99d2\u6fa4\u5927\u5b66\u5fc3\u7406\u5b66\u7279\u8b1bIIIA \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8"},{"location":"lect06/#iiia","text":"Shin Aasakawa , all rights reserved. Date: XX/XX/2020 Appache 2.0 license \\ldots \u5de5\u4e8b\u4e2d \\ldots","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA)"},{"location":"lect06/#_1","text":"\u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5\uff0c\u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\uff0c\u30d0\u30c3\u30c1\u5b66\u7fd2 \u30c7\u30fc\u30bf\u62e1\u5f35 \u6b63\u5247\u5316 \u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8 \u975e\u7dda\u5f62\u6d3b\u6027\u5316\u95a2\u6570 \u6700\u9069\u5316\u624b\u6cd5","title":"\u9ad8\u7cbe\u5ea6\u5316\uff0c\u9ad8\u901f\u5316\u3078\u306e\u52aa\u529b"},{"location":"lect06/#_2","text":"SGD \u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5 stochastic gradient descent method \u52fe\u914d\u6d88\u5931\u554f\u984c gradient decent problem \u8cac\u4efb\u5272\u5f53\u554f\u984c credit assignment problem \u975e\u7dda\u5f62\u5909\u63db non lineaar transformation ReLU \u6574\u6d41\u7dda\u5f62\u30e6\u30cb\u30c3\u30c8 Recutified Linear Unit \u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u95a2\u6570 softmax function \u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc cross entropy \u30aa\u30fc\u30d0\u30fc\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0 \u904e\u5b66\u7fd2 overfitting \u306e\u56de\u907f\u6cd5 \u6b63\u5247\u5316 regularization \u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8 dropout \u30c7\u30fc\u30bf\u62e1\u5f35 data augumentation penultimate layer {\u30d0\u30c3\u30c1, \u5c64, \u91cd\u307f} \u6b63\u898f\u5316 one algorithm hypothesis","title":"\u7528\u8a9e\u306e\u6574\u7406"},{"location":"lect06/#tensorflow-hub","text":"\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\uff0c\u30c7\u30fc\u30bf\u62e1\u5f35\uff0c\u5404\u7a2e\u6b63\u898f\u5316: cnn.md \u6709\u540d\u306a\u30e2\u30c7\u30eb LeNet\uff0cAlex Net\uff0cInception\uff0cVGG\uff0cResNet R-CNN\uff0c\u30cf\u30a4\u30a6\u30a7\u30a4\u30cd\u30c3\u30c8\uff0cYOLO\uff0cSSD \u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3 \u8ee2\u79fb\u5b66\u7fd2\uff0c\u4e8b\u524d\u5b66\u7fd2\uff0c\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0 GAN","title":"TensorFlow HUB"},{"location":"lect06/#inception-resnet-r-cnn-regional-convolutional-neural-networks","text":"what and where routes \u5fc3\u7406\u5b66\u7684\u5bfe\u5fdc\u7269(\uff1f) Cadieu (2014) Deep Neural Networks Rival the Representation of Primate IT Cortex for Core Visual Object Recognition Nasr, Viswanathan, Nieder (2019) Number detectors spontaneously emerge in a deep neural network designed for visual object recognition Marcus (2018) Deep Learning A Critical Appraisal \u8ee2\u79fb\u5b66\u7fd2","title":"\u30a4\u30f3\u30bb\u30d7\u30b7\u30e7\u30f3 Inception\uff0c\u6b8b\u6e23\u30cd\u30c3\u30c8 ResNet\uff0c\u9818\u57df R-CNN (Regional Convolutional Neural Networks)"},{"location":"lect06/#notebooks","text":"colab/text_classification_with_tf_hub_on_kaggle.ipynb Shows how to solve a problem on Kaggle with TF-Hub. colab/semantic_similarity_with_tf_hub_universal_encoder.ipynb Explores text semantic similarity with the Universal Encoder Module . colab/tf_hub_generative_image_module.ipynb Explores a generative image module. colab/action_recognition_with_tf_hub.ipynb Explores action recognition from video. colab/tf_hub_delf_module.ipynb Exemplifies use of the DELF Module for landmark recognition and matching. colab/object_detection.ipynb Explores object detection with the use of the Faster R-CNN module trained on Open Images v4 The Complete Beginner\u2019s Guide to Deep Learning: Convolutional Neural Networks and Image Classification , Anne Bonner Feb. 02 \u7573\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af (Convlutional Neural Networks:CNN) \u3068\u306f\u753b\u50cf\u8a8d\u8b58\u306b\u304a\u3051\u308b\u30b2\u30fc\u30e0\u30c1\u30a7\u30f3\u30b8\u30e3\u30fc(\u4ee5\u5f8c\uff0c\u753b\u50cf\u8a8d\u8b58\uff0c\u30d3\u30c7\u30aa\u5206\u985e\uff0c\u81ea\u52d5\u904b\u8ee2\uff0c\u30c9\u30ed\u30fc\u30f3\uff0c\u30b2\u30fc\u30e0\u306a\u3069\u3078\u306e\u5fdc\u7528\u591a\u6570) \u30a4\u30e1\u30fc\u30b8\u30cd\u30c3\u30c8\u753b\u50cf\u30b3\u30f3\u30c6\u30b9\u30c8 \u3067\u306f\uff0c\u5206\u985e (classification) \u8ab2\u984c\u3068\u4f4d\u7f6e (locallization) \u8ab2\u984c\u3068\u304b\u3089\u306a\u308b\u3002 \u30b3\u30f3\u30c6\u30b9\u30c8\u306f 2010 \u5e74\u304b\u3089 Li Fei-Fei \u3055\u3093\u4e2d\u5fc3\u3068\u306a\u3063\u3066 AMT \u3067\u753b\u50cf\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3063\u3066 \u753b\u50cf\u30922012 \u5e74\u306e\u512a\u52dd\u30c1\u30fc\u30e0\u304c CNN \u3092\u4f7f\u3063\u305f\u3002\u901a\u79f0 \u30a2\u30ec\u30c3\u30af\u30b9\u30cd\u30c3\u30c8 \u30b9\u30bf\u30f3\u30d5\u30a9\u30fc\u30c9\u5927\u5b66\u306e\u6388\u696d CS231n: Convolutional Neural Networks for Visual Recognition . \u30b9\u30e9\u30a4\u30c9](http://cs231n.stanford.edu/slides/2019/cs231n_2019_lecture05.pdf)","title":"Notebooks"},{"location":"lect06/#_3","text":"Math? Introduction to Convolutional Neural Networks by Jianxin Wu C.-C. Jay Kuo Understanding Convolutional Neural Networks With a Mathematical Model . the absolute basics of activation functions, you can find that here [Artificial neural networks? You can learn about them here","title":"\u3055\u3089\u306a\u308b\u60c5\u5831"},{"location":"lect06/#_4","text":"\u767d\u8272\u5316\u306b\u3064\u3044\u3066\u306f\u5e73\u4e95\u6709\u4e09\u5148\u751f\u306e\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u304c\u53c2\u8003\u6587\u732e\u3067\u826f\u3044\u304b\u306a Differences between normalization, standardization and regularization","title":"\u6b63\u898f\u5316\uff0c\u6b63\u5247\u5316\uff0c\u6a19\u6e96\u5316\uff0c\u767d\u8272\u5316\uff0c\u4e8c\u91cd\u4e2d\u5fc3\u5316"},{"location":"lect06/#relu-layer","text":"The ReLU (rectified linear unit) layer is another step to our convolution layer. You\u2019re applying an activation function onto your feature maps to increase non-linearity in the network. This is because images themselves are highly non-linear! It removes negative values from an activation map by setting them to zero. Convolution is a linear operation with things like element wise matrix multiplication and addition. The real-world data we want our CNN to learn will be non-linear. We can account for that with an operation like ReLU. You can use other operations like tanh or sigmoid. ReLU, however, is a popular choice because it can train the network faster without any major penalty to generalization accuracy. Want to dig deeper? Try Kaiming He, et al. Delving Deep into Rectifiers: Surpassing Human-Level Performance on ImageNet Classification . If you need a little more info about the absolute basics of activation functions, you can find that here ! Here\u2019s how our little buddy is looking after a ReLU activation function turns all of the negative pixel values black 1 viz_layer(activated_layer)","title":"ReLU layer"},{"location":"lect06/#pooling","text":"The last thing you want is for your network to look for one specific feature in an exact shade in an exact location. That\u2019s useless for a good CNN! You want images that are flipped, rotated, squashed, and so on. You want lots of pictures of the same thing so that your network can recognize an object (say, a leopard) in all the images. No matter what the size or location. No matter what the lighting or the number of spots,or whether that leopard is fast asleep or crushing prey. You want spatial variance ! You want flexibility. That\u2019s what pooling is all about. Pooling progressively reduces the size of the input representation. It makes it possible to detect objects in an image no matter where they\u2019re located. Pooling helps to reduce the number of required parameters and the amount of computation required. It also helps control overfitting . Overfitting can be kind of like when you memorize super specific details before a test without understanding the information. When you memorize details, you can do a great job with your flashcards at home. You\u2019ll fail a real test, though, if you\u2019re presented with new information. (Another example: if all of the dogs in your training data have spots and dark eyes, your network will believe that for an image to be classified as a dog, it must have spots and dark eyes. If you test your data with that same training data, it will do an amazing job of classifying dogs correctly! But if your outputs are only \u201cdog\u201d and \u201ccat,\u201d and your network is presented with new images containing, say, a Rottweiler and a Husky, it will probably wind up classifying both the Rottweiler and the Husky as cats. You can see the problem!) Without variance, your network will be useless with images that don\u2019t exactly match the training data. Always, always, always keep your training and testing data separate ! If you test with the data you trained on, your network has the information memorized! It will do a terrible job when it\u2019s introduced to any new data.","title":"Pooling"},{"location":"lect06/#overfitting-is-not-cool","text":"So for this step, you take the feature map , apply a pooling layer , and the result is the pooled feature map . The most common example of pooling is max pooling . In max pooling, the input image is partitioned into a set of areas that don\u2019t overlap. The outputs of each area are the maximum value in each area. This makes a smaller size with fewer parameters. Max pooling is all about grabbing the maximum value at each spot in the image. This gets rid of 75% of the information that is not the feature. By taking the maximum value of the pixels, you\u2019re accounting for distortion. If the feature rotates a little to the left or right or whatever, the pooled feature will be the same. You\u2019re reducing the size and parameters. This is great because it means that the model won\u2019t overfit on that information. You could use average pooling or sum pooling , but they aren\u2019t common choices. Max pooling tends to perform better than both in practice. In max pooling, you\u2019re taking the largest pixel value. In average pooling, you take the average of all the pixel values at that spot in the image. (Actually, there\u2019s a trend now towards using smaller filters or discarding pooling layers entirely. This is in response to an aggressive reduction in representation size.) Want to look a little more at why you might want to choose max pooling and why you might prefer a stride of two pixels? Check out Dominik Scherer et. al, Evaluation of Pooling Operations in Convolutional Architectures for Object Recognition . If you go here you can check out a really interesting 2D visualization of a convolutional layer. Draw a number in the box on the left-hand side of the screen and then really go through the output. You can see the convolved and pooled layers as well as the guesses. Try hovering over a single pixel so you can see where the filter was applied. So now we have an input image, an applied convolutional layer, and an applied pooling layer. Let\u2019s visualize the output of the pooling layer! We were here: The pooling layer takes as input the feature maps pictured above and reduces the dimensionality of those maps. It does this by constructing a new, smaller image of only the maximum (brightest) values in a given kernel area. See how the image has changed size? Cool, right?","title":"Overfitting is not cool."},{"location":"lect06/#flattening","text":"This is a pretty simple step. You flatten the pooled feature map into a sequential column of numbers (a long vector). This allows that information to become the input layer of an artificial neural network for further processing.","title":"Flattening"},{"location":"lect06/#fully-connected-layer","text":"At this step, we add an artificial neural network to our convolutional neural network. (Not sure about artificial neural networks? You can learn about them here !) The main purpose of the artificial neural network is to combine our features into more attributes. These will predict the classes with greater accuracy. This combines features and attributes that can predict classes better. At this step, the error is calculated and then backpropagated. The weights and feature detectors are adjusted to help optimize the performance of the model. Then the process happens again and again and again. This is how our network trains on the data! How do the output neurons work when there\u2019s more than one? First, we have to understand what weights to apply to the synapses that connect to the output. We want to know which of the previous neurons are important for the output. If, for example, you have two output classes, one for a cat and one for a dog, a neuron that reads \u201c0\u201d is absolutely uncertain that the feature belongs to a cat. A neuron that reads \u201c1 is absolutely certain that the feature belongs to a cat. In the final fully connected layer, the neurons will read values between 0 and 1. This signifies different levels of certainty. A value of 0.9 would signify a certainty of 90%. The cat neurons that are certain when a feature is identified know that the image is a cat. They say the mathematical equivalent of, \u201cThese are my neurons! I should be triggered!\u201d If this happens many times, the network learns that when certain features fire up, the image is a cat. Through lots of iterations, the cat neuron learns that when certain features fire up, the image is a cat. The dog (for example) neuron learns that when certain other features fire up, the image is a dog. The dog neuron learns that for example again, the \u201cbig wet nose\u201d neuron and the \u201cfloppy ear\u201d neuron contribute with a great deal of certainty to the dog neuron. It gives greater weight to the \u201cbig wet nose\u201d neuron and the \u201cfloppy ear\u201d neuron. The dog neuron learns to more or less ignore the \u201cwhiskers\u201d neuron and the \u201ccat-iris\u201d neuron. The cat neuron learns to give greater weight to neurons like \u201cwhiskers\u201d and \u201ccat-iris.\u201d (Okay, there aren\u2019t actually \u201cbig wet nose\u201d or \u201cwhiskers\u201d neurons. But the detected features do have distinctive features of the specific class.) Once the network has been trained, you can pass in an image and the neural network will be able to determine the image class probability for that image with a great deal of certainty. The fully connected layer is a traditional Multi-Layer Perceptron. It uses a classifier in the output layer. The classifier is usually a softmax activation function. Fully connected means every neuron in the previous layer connects to every neuron in the next layer. What\u2019s the purpose of this layer? To use the features from the output of the previous layer to classify the input image based on the training data. Once your network is up and running you can see, for example, that you have a 95% probability that your image is a dog and a 5% probability that your image is a cat. Why do these numbers add up to 1.0? (0.95 + 0.05) There isn\u2019t anything that says that these two outputs are connected to each other. What is it that makes them relate to each other? Essentially, they wouldn\u2019t, but they do when we introduce the softmax function . This brings the values between 0 and 1 and makes them add up to 1 (100%). (You can read all about this on Wikipedia.) The softmax function takes a vector of scores and squashes it to a vector of values between 0 and 1 that add up to 1. After you apply a softmax function, you can apply the loss function. Cross entropy often goes hand in hand with softmax. We want to minimize the loss function so we can maximize the performance of our network. At the beginning of backpropagation, your output values would be tiny. That\u2019s why you might choose cross entropy loss. The gradient would be very low and it would be hard for the neural network to start adjusting in the right direction. Using cross entropy helps the network assess even a tiny error and get to the optimal state faster.","title":"Fully connected layer"},{"location":"lect06/#want-more-check-out","text":"","title":"Want more? Check out"},{"location":"lect06/#_5","text":"","title":"\u7528\u8a9e\u96c6"},{"location":"lect06/#_6","text":"ReLU Sigmoid Tanh GRU LSTM","title":"\u975e\u7dda\u5f62\u6027"},{"location":"lect06/#_7","text":"SGD Momentum RMSProp Adagrad Adam KFac","title":"\u6700\u9069\u5316"},{"location":"lect06/#_8","text":"\u5b8c\u5168\u7d50\u5408 \u7573\u8fbc\u307f Dilated \u518d\u5e30\u7d50\u5408 \u30b9\u30ad\u30c3\u30d7\u30b3\u30cd\u30af\u30c8\uff0c\u6b8b\u6e23","title":"\u7d50\u5408\u30d1\u30bf\u30fc\u30f3"},{"location":"lect06/#_9","text":"\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u6575\u5bfe\u5b66\u7fd2 \u5909\u5206\u539f\u7406 \u6700\u5c24\u6cd5 L2","title":"\u640d\u5931\u95a2\u6570"},{"location":"lect06/#_10","text":"\u5b66\u7fd2\u7387 \u5c64\u6570 \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba \u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u7387 \u521d\u671f\u5316 \u30c7\u30fc\u30bf\u62e1\u5f35 \u52fe\u914d\u30af\u30ea\u30c3\u30d7 \u30e2\u30fc\u30e1\u30f3\u30c8","title":"\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf"},{"location":"lect06/#_11","text":"2013\u5e74 ZF \u30cd\u30c3\u30c8 2014\u5e74 GoogLeNet (\u30a4\u30f3\u30bb\u30d7\u30b7\u30e7\u30f3)\uff0cVGG\uff0cVery Deep, GAN, VAE 2015\u5e74 \u6b8b\u6e23\u30cd\u30c3\u30c8 (ResNet) \u3053\u306e\u6642\u70b9\u3067\uff0c\u4eba\u9593\u8d85\u3048 2016\u5e74 YOLO, SSD, Segmentation (Semantics/Instance) 2017\u5e74 Mask R-CNN 2018\u5e74 \u30e2\u30d0\u30a4\u30eb\u30cd\u30c3\u30c8","title":"\u30a2\u30ec\u30c3\u30af\u30b9\u30cd\u30c3\u30c8\u4ee5\u964d\u306e\u6d41\u308c"},{"location":"lect06/#_12","text":"\u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5\uff0c\u30aa\u30f3\u30e9\u30a4\u30f3\u5b66\u7fd2\uff0c\u30d0\u30c3\u30c1\u5b66\u7fd2 \u30c7\u30fc\u30bf\u62e1\u5f35 \u6b63\u5247\u5316 \u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8 \u975e\u7dda\u5f62\u6d3b\u6027\u5316\u95a2\u6570 \u6700\u9069\u5316\u624b\u6cd5","title":"\u9ad8\u7cbe\u5ea6\u5316\uff0c\u9ad8\u901f\u5316\u3078\u306e\u52aa\u529b"},{"location":"lect07/","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA) \u00b6 Shin Aasakawa , all rights reserved. Date: 19/Jun/2020 Appache 2.0 license 0.1 \u30c7\u30e2 \u00b6 \u524d\u56de\u3067\u304d\u306a\u304b\u3063\u305f GAN \u306e\u30c7\u30e2 TL-GAN (transparent latent-space GAN) \u6f31\u77f3\u300c\u3053\u3053\u308d\u300d\u5192\u982d\u90e8\u5206\u3092\u6587\u5b57\u30d9\u30fc\u30b9\u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u8a00\u8a9e\u30e2\u30c7\u30eb javascript \u7248 \u65e5\u672c\u56fd\u61b2\u6cd5\u7b2c 9 \u6761\u3092\u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u7406\u89e3\u3059\u308b \u66f8\u753b\u306e\u30c7\u30e2 word2vec\u306e\u30c7\u30e2 0.2 \u518d\u5e30\u578b (\u30ea\u30ab\u30ec\u30f3\u30c8) \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb \u00b6 \u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb (Recurrent Neural Networks, \u4ee5\u4e0b RNN) \u306f \u7cfb\u5217\u60c5\u5831\u51e6\u7406 (serial information processings) \u3092\u6271\u3046\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb \u3067\u3059\u3002 \u89b3\u5bdf\u3055\u308c\u305f\u8a3c\u62e0\u304b\u3089\u6b21\u306b\u751f\u3058\u308b\u4e8b\u8c61\u3092\u4e88\u60f3\u3059\u308b\u3053\u3068\u306f\uff0c\u751f\u7269\u306e\u751f\u5b58\u306b\u3068\u3063\u3066\u610f\u5473\u3042\u308b\u60c5\u5831\u51e6\u7406\u3067\u3042\u308b\u3068\u8003\u3048\u307e\u3059\u3002 \u305d\u306e\u9069\u7528\u7bc4\u56f2\u3092\u601d\u3044\u3064\u304f\u307e\u307e\u306b\u8003\u3048\u3066\u307f\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4e8b\u67c4\u304c\u542b\u307e\u308c\u308b\u3067\u3057\u3087\u3046\u3002 \u751f\u7269\u306e\u751f\u5b58\u6226\u7565 \u5236\u5fa1\uff0c\u4e88\u6e2c\u3002\u5929\u6c17\u4e88\u5831\uff0c\u30ed\u30b1\u30c3\u30c8\u306a\u3069\u306e\u5f3e\u9053\u5236\u5fa1 \u30c7\u30fc\u30bf\u51e6\u7406 \u672a\u6765\u4e88\u60f3\uff0cSF \u7684\uff0c\u5fc3\u7406\u5b66\u7684\uff0c\u54f2\u5b66\u7684\uff0c\u6b74\u53f2\u7684\u610f\u5473\u3042\u3044\u3082\u542b\u3081\u3066\u3002\u8eab\u8fd1\u306a\u4f8b\u3067\u306f\u5360\u3044\u3084\u7d4c\u6e08\u4e88\u6e2c\u3082\u542b\u307e\u308c\u307e\u3059 \u4e00\u65b9\uff0c\u6a5f\u68b0\u5b66\u7fd2\uff0c\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5206\u91ce\u3067\u306f\uff0c\u7cfb\u5217\u60c5\u5831\u51e6\u7406\u306e\u4e2d\u306e \u8a00\u8a9e\u30e2\u30c7\u30eb (Language models) \u3068\u3057\u3066\u983b\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u6628\u4eca\u306e \u81ea\u7136\u8a00\u8a9e\u51e6\u7406 (Natural Language Processings, \u4ee5\u4e0b NLP) \u3067\u306f \u6a5f\u68b0\u7ffb\u8a33 \u3084\u7a2e\u3005\u306e\u51e6\u7406\u306b\u63a1\u7528\u3055\u308c\u3066\u304d\u307e\u3057\u305f\u3002 2014 \u5e74\u4ee5\u964d\u306e\u8a71\u984c\u3068\u3057\u3066 \u6ce8\u610f (attention) \u3092\u8a00\u8a9e\u30e2\u30c7\u30eb\u306b\u53d6\u308a\u8fbc\u3093\u3067\u7cbe\u5ea6\u5411\u4e0a\u3092\u76ee\u6307\u3059\u52d5\u5411\u304c\u6d3b\u767a\u3067\u3059\u3002 \u6ce8\u610f \u3068 \u8a00\u8a9e \u3068\u306f\u3069\u3061\u3089\u3082 \u5fc3\u7406\u5b66\u5206\u91ce \u3067\u6ce8\u76ee\u3059\u3079\u304d\u8a71\u984c\u3067\u3057\u3087\u3046\u3002 RNN \u306e\u5fdc\u7528\u53ef\u80fd\u6027\u306f\u795e\u7d4c\u5fc3\u7406\u5b66\u306b\u3068\u3063\u3066\u4e00\u8003\u306e\u4fa1\u5024\u304c\u3042\u308b\u30e2\u30c7\u30eb\u3068\u8a00\u3048\u307e\u3059\u3002 2018 \u5e74\uff0c\u8907\u6570\u306e\u8a00\u8a9e\u8ab2\u984c\u3067\u4eba\u9593\u306e\u6210\u7e3e\u3092\u51cc\u99d5\u3059\u308b\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u30e2\u30c7\u30eb\u304c\u63d0\u6848\u3055\u308c\u307e\u3057\u305f\u3002 \u3053\u306e\u3053\u3068\u304b\u3089\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u30e2\u30c7\u30eb\u3092\u795e\u7d4c\u5fc3\u7406\u5b66\u306b\u5fdc\u7528\u3059\u308b\u6a5f\u904b\u306f\u719f\u3057\u3066\u3044\u308b\u3068\u8003\u3048\u307e\u3059\u3002 0.3 \u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6210\u679c \u00b6 \u624b\u66f8\u304d\u6587\u5b57\u8a8d\u8b58 Graves(2009) \u97f3\u58f0\u8a8d\u8b58 Graves (2013) , Grave and Jaitly (2014) \u624b\u66f8\u304d\u6587\u5b57\u751f\u6210 Graves (2013) \u7cfb\u5217\u5b66\u7fd2 Sutskever (2014) \u6a5f\u68b0\u7ffb\u8a33 Bahdanau (2014) \u6a5f\u68b0\u7ffb\u8a33 Luong (2015) \u753b\u50cf\u811a\u6ce8\u4ed8\u3051 Vinyals et. al(2014) \u6ce8\u610f\u3064\u304d\u753b\u50cf\u811a\u6ce8\u751f\u6210 \u69cb\u6587\u89e3\u6790 Vinayals et. al., (2014) \u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u751f\u6210 Zaremba (2015) \u5bfe\u8a71\u751f\u6210 Vinyals (2014) \u30cb\u30e5\u30fc\u30e9\u30eb\u30c1\u30e5\u30fc\u30ea\u30f3\u30b0\u30de\u30b7\u30f3 NTM Graves et. al, (2 014) \u4e16\u754c\u30e2\u30c7\u30eb Ha and Schmithuber (2018) ^about_world_model \u6211\u3005\u306f\u73fe\u5b9f\u4e16\u754c\u306e\u8868\u8c61\u3059\u308b\u30b3\u30f3\u30bb\u30d7\u30c8\u3092\u9078\u3093\u3067\u305d\u306e\u95a2\u4fc2\u3092\u4f7f\u3046\u3060\u3051\u3060(\u6d45\u5ddd\u62d9\u8a33)\u3068 \u30d5\u30a9\u30ec\u30b9\u30bf\u30fc \u306f\u8a00\u3063\u305f\u305d\u3046\u3067\u3059\u3002 0.4 \u53c2\u8003\u6587\u732e \u00b6 \u6d45\u5ddd\u4f38\u4e00 (2003) \u5358\u7d14\u518d\u5e30\u578b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5fc3\u7406\u5b66\u30e2\u30c7\u30eb\u3068\u3057\u3066\u306e\u5fdc\u7528\u53ef\u80fd\u6027, \u5fc3\u7406\u5b66\u8a55\u8ad6, 46(2), 274-287. \u6d45\u5ddd\u4f38\u4e00 (2016) \u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af, \u65e5\u672c\u4eba\u5de5\u77e5\u80fd\u5b66\u4f1a\u7de8\uff0c\u4eba\u5de5\u77e5\u80fd\u5b66\u4e8b\u5178\u65b0\u7248\uff0c\u5171\u7acb\u51fa\u7248 \u6d45\u5ddd\u4f38\u4e00 (2016) \u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3088\u308b\u6587\u6cd5\u5b66\u7fd2, \u65e5\u672c\u4eba\u5de5\u77e5\u80fd\u5b66\u4f1a\u7de8\uff0c\u4eba\u5de5\u77e5\u80fd\u5b66\u4e8b\u5178\u65b0\u7248\uff0c\u5171\u7acb\u51fa\u7248 1. \u81ea\u7136\u8a00\u8a9e\u51e6\u7406 \u00b6 1.1. \u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u524d\u53f2 \u00b6 \u7b2c\u4e00\u6b21\u30d6\u30fc\u30e0 1960 \u5e74\u4ee3 \u6975\u5ea6\u306e\u697d\u89b3\u8ad6: \u8f9e\u66f8\u3092\u4e38\u5199\u3057\u3059\u308c\u3070\u7ffb\u8a33\u306f\u53ef\u80fd\u3060\u3068\u601d\u3063\u3066\u3044\u305f\uff0c\u3089\u3057\u3044... \u7b2c\u4e8c\u6b21\u30d6\u30fc\u30e0 \u7d71\u8a08\u7684\u81ea\u7136\u8a00\u8a9e\u51e6\u7406 \u7d71\u8a08\u7684\u8a00\u8a9e\u30e2\u30c7\u30eb statistical language model Chris Manning (\u30b9\u30bf\u30f3\u30d5\u30a9\u30fc\u30c9\u5927\u5b66) ) and Schutze (1999) \u8457\u3002\u5b9a\u756a\u306e\u6559\u79d1\u66f8 Fundations of Statistical Natural Language Processing , \u3042\u308b\u3044\u306f \u3053\u3061\u3089 \u3082\u3046\u4e00\u3064\u5b9a\u8a55\u306e\u6559\u79d1\u66f8 Jurafsky \u8457) \u3068 Martin \u8457 Speech and Language Processing \u306f \u6539\u8a02\u7248 \u304c\u51fa\u7248\u3055\u308c\u307e\u3057\u305f\u3002\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3088\u308b\u8a00\u8a9e\u30e2\u30c7\u30eb\u3082\u8f09\u3063\u3066\u3044\u307e\u3059\u3002 1.2. \u7528\u8a9e\u89e3\u8aac \u00b6 BoW : Bag of Words \u5358\u8a9e\u306e\u888b\u3002\u3042\u308b\u6587\u7ae0\u3092\u8868\u73fe\u3059\u308b\u5834\u5408\u306b\uff0c\u5404\u5358\u8a9e\u306e\u8868\u73fe\u3092\u96c6\u3081\u3066\u888b\u8a70\u3081\u3057\u305f\u3068\u306e\u610f\u5473\u3002\u5f93\u3063\u3066\u8a9e\u9806\u304c\u8003\u616e\u3055\u308c\u307e\u305b\u3093\u3002\"\u72ac\u304c\u7537\u3092\u565b\u3093\u3060\" \u3068 \"\u7537\u304c\u72ac\u3092\u565b\u3093\u3060\" \u3067\u306f\u540c\u3058\u8868\u73fe\u306b\u306a\u308a\u307e\u3059\u3002LSA, LDA, fastText \u306a\u3069\u3082\u540c\u3058\u3088\u3046\u306a\u8868\u73fe\u3092\u4e0e\u3048\u307e\u3059\u3002 TF-IDF: \u5358\u8a9e\u983b\u5ea6 (Term Frequency) \u3068 \u9006(Inverse) \u6587\u66f8\u983b\u5ea6 (Document Frequency) \u3067\u6587\u66f8\u306e\u30d9\u30af\u30c8\u30eb\u8868\u73fe\u3092\u5b9a\u7fa9\u3059\u308b\u624b\u6cd5\u3067\u3059\u3002\u4f55\u5ea6\u3082\u51fa\u73fe\u3059\u308b\u5358\u8a9e\u306f\u91cd\u8981\u306a\u306e\u3067\u5358\u8a9e\u983b\u5ea6\u304c\u9ad8\u3044\u6587\u66f8\u306b\u306f\u610f\u5473\u304c\u3042\u308a\u307e\u3059\u3002\u4e00\u65b9\uff0c\u5168\u3066\u306e\u6587\u66f8\u306b\u51fa\u73fe\u3059\u308b\u5358\u8a9e\u306f\u91cd\u8981\u3068\u306f\u8a00\u3048\u306a\u3044\u306e\u3067\u5358\u8a9e\u306e\u51fa\u73fe\u308b\u6587\u66f8\u306e\u500b\u6570\u306e\u9006\u6570\u306e\u5bfe\u6570\u5909\u63db\u3092\u7528\u3044\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u3067\u304d\u305f\u6587\u7ae0\u8868\u73fe\u3092 TF-IDF \u3068\u8a00\u3044\u307e\u3059\u3002 \u8a00\u8a9e\u30e2\u30c7\u30eb Language model \u00b6 \u6587\u732e\u3067\u306f\u8a00\u8a9e\u30e2\u30c7\u30eb\u3092 LM \u3068\u8868\u8a18\u3055\u308c\u308b\u3002 \u7d71\u8a08\u7684\u8a00\u8a9e\u30e2\u30c7\u30eb statistical language model \u3002\u8a00\u8a9e\u7cfb\u5217\u306b\u78ba\u7387\u3092\u4e0e\u3048\u308b\u30e2\u30c7\u30eb\u306e\u7dcf\u79f0\u3002\u826f\u3044\u8a00\u8a9e\u30e2\u30c7\u30eb LM \u306f\uff0c\u6709\u610f\u5473\u6587\u306b\u9ad8\u3044\u78ba\u7387\u3092\u4e0e\u3048\uff0c\u66d6\u6627\u306a\u6587\u306b\u306f\u4f4e\u3044\u78ba\u7387\u3092\u4e0e\u3048\u308b\u3002\u8a00\u8a9e\u30e2\u30c7\u30eb\u306f\u4eba\u5de5\u77e5\u80fd\u306e\u554f\u984c\u3002 n-gram \u8a00\u8a9e\u30e2\u30c7\u30eb \u6307\u6a19: BELU, perplexity \u8ab2\u984c: NER, POS, COL, Summary, QA, Translation 1.3. N-\u30b0\u30e9\u30e0\u8a00\u8a9e\u30e2\u30c7\u30eb \u00b6 \u985e\u4f3c\u3057\u305f\u8a00\u8a9e\u5c65\u6b74 h \u306b\u3064\u3044\u3066, n-gram \u8a00\u8a9e\u30e2\u30c7\u30eb\u306f\u8a00\u8a9e\u5c65\u6b74 h \u306b\u3088\u3063\u3066\u8a00\u8a9e\u304c\u5b9a\u307e\u308b\u3053\u3068\u3092\u8a00\u3044\u307e\u3059\u3002 \u5b9f\u7528\u7684\u306b\u306f n-gram \u8a00\u8a9e\u30e2\u30c7\u30eb\u306f n \u8a9e\u306e\u5358\u8a9e\u7cfb\u5217\u30d1\u30bf\u30fc\u30f3\u3092\u8868\u8c61\u3059\u308b\u30e2\u30c7\u30eb\u3067\u3059\u3002 n-gram \u8a00\u8a9e\u30e2\u30c7\u30eb\u3067\u306f n \u306e\u6b21\u6570\u5897\u5927\u306b\u5f93\u3063\u3066\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u6307\u6570\u95a2\u6570\u7684\u306b\u5897\u5927\u3057\u307e\u3059\u3002 \u3059\u306a\u308f\u3061\u9ad8\u6b21 n \u30b0\u30e9\u30e0\u8a00\u8a9e\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u63a8\u5b9a\u306b\u5fc5\u8981\u306a\u8a00\u8a9e\u60c5\u5831\u306e\u30b3\u30fc\u30d1\u30b9\u30b5\u30a4\u30ba\u306f\uff0c\u6b21\u6570\u5897\u5927\u306b\u4f34\u3063\u3066\uff0c\u6025\u6fc0\u4e0d\u8db3\u3057\u307e\u3059 Wikipedia \u304b\u3089\u306e\u5f15\u7528\u3067\u306f\u6b21\u5f0f: p(w_1,\\dots,w_m)=\\prod_{i=1}^{m} P(w_i\\vert w_1,\\ldots,w_{i-1})\\simeq \\prod_{i=1}^{m}p(w_i\\vert w_{i-(n-1)},\\ldots,w_{i-1}) \u4e0a\u5f0f\u3067\u306f m \u3067\u3059\u304c\uff0c\u4f1d\u7d71\u7684\u306b n \u30b0\u30e9\u30e0\u3068\u547c\u3073\u307e\u3059\u3002 n=1 \u3067\u3042\u308c\u3070\u76f4\u524d\u306e 1 \u3064\u3092\u8003\u616e\u3057\u3066 \u6b21\u8a9e\u3092\u4e88\u6e2c\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u4f59\u8ac7[^gram] \u3067\u3059\u304c n=0 : \u30cc\u30eb\u30b0\u30e9\u30e0 null-gram n=1 : \u30e6\u30cb\u30b0\u30e9\u30e0 uni-gram n=2 : \u30d0\u30a4\u30b0\u30e9\u30e0 bi-gram n=3 : \u30c8\u30ea\u30b0\u30e9\u30e0 tri-gram \u306a\u3069\u3068\u547c\u3070\u308c\u307e\u3059\u3002 [^gram]: \u4e94\u6708\u877f\u3044\u3053\u3068\u3092\u8a00\u3048\u3070 Manning (1999, p.193) \u306b\u3088\u308b\u3068\u5358\u8a9e gram \u306f\u30ae\u30ea\u30b7\u30e3\u8a9e\u7531\u6765\u306e\u5358\u8a9e\u3060\u305d\u3046\u3067\u3059\u3002\u5f93\u3063\u3066 gram \u306b\u4ed8\u3051\u308b\u6570\u63a5\u982d\u8f9e\u3082\u30ae\u30ea\u30b7\u30e3\u8a9e\u3067\u3042\u308b\u6559\u990a\u3092\u6301\u3064\u3079\u304d\u3067\u3059\u3002\u305d\u3046\u3059\u308b\u3068 n=1 : mono-gram, n=2 : di-gram, n=4 : tetra-gram \u304c\u6559\u990a\u3067\u3059\u3002 n=3 \u306f\u30ae\u30ea\u30b7\u30e3\uff0c\u30ed\u30fc\u30de\u5171\u901a\u3067 tri-gram \u3067\u3059\u3002\u65e5\u5e38\u4f1a\u8a71\u3067\u306f n=4 \u3092\u30af\u30ef\u30c3\u30c9\u30b0\u30e9\u30e0(\u30e9\u30c6\u30f3\u8a9e\u7531\u6765)\u3084\u30d5\u30a9\u30fc\u30b0\u30e9\u30e0\u3068\u547c\u3076\u3053\u3068\u3082\u591a\u3044\u3067\u3059\u3002 1.4. \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a00\u8a9e\u30e2\u30c7\u30eb\u3042\u308b\u3044\u306f\u30df\u30b3\u30ed\u30d5\u9769\u547d \u00b6 \u30b9\u30d1\u30fc\u30b9\u306a\u8a00\u8a9e\u5c65\u6b74 h \u306f\u4f4e\u6b21\u5143\u7a7a\u9593\u3078\u3068\u5c04\u5f71\u3055\u308c\u308b\u3002\u985e\u4f3c\u3057\u305f\u8a00\u8a9e\u5c65\u6b74\u306f\u7fa4\u5316\u3059\u308b \u985e\u4f3c\u306e\u8a00\u8a9e\u5c65\u6b74\u3092\u5171\u6709\u3059\u308b\u3053\u3068\u3067\uff0c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a00\u8a9e\u30e2\u30c7\u30eb\u306f\u9811\u5065 (\u8a13\u7df4\u30c7\u30fc\u30bf\u304b\u3089\u63a8\u5b9a\u3059\u3079\u304d\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5c11\u306a\u3044)\u3002 1.5 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a00\u8a9e\u30e2\u30c7\u30eb NNLM \u30d5\u30a3\u30fc\u30c9\u30d5\u30a9\u30ef\u30fc\u30c9\u578b NNLM \u00b6 \u56f3: \u30d5\u30a3\u30fc\u30c9\u30d5\u30a9\u30ef\u30fc\u30c9\u578b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a00\u8a9e\u30e2\u30c7\u30eb NNLM [@2003Bengio],[@2007Schwenk]. \u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a00\u8a9e\u30e2\u30c7\u30eb RNNLM \u00b6 \u5165\u529b\u5c64 w \u3068\u51fa\u529b\u5c64 y \u306f\u540c\u4e00\u6b21\u5143\uff0c\u7dcf\u8a9e\u5f59\u6570\u306b\u4e00\u81f4\u3002(\u7d04\u4e00\u4e07\u8a9e\u304b\u308920\u4e07\u8a9e) \u4e2d\u9593\u5c64 s \u306f\u76f8\u5bfe\u7684\u306b\u4f4e\u6b21\u5143 (50\u304b\u30891000\u30cb\u30e5\u30fc\u30ed\u30f3) \u5165\u529b\u5c64\u304b\u3089\u4e2d\u9593\u5c64\u3078\u306e\u7d50\u5408\u4fc2\u6570\u884c\u5217 U \uff0c\u4e2d\u9593\u5c64\u304b\u3089\u51fa\u529b\u5c64\u3078\u306e\u7d50\u5408\u4fc2\u6570\u884c\u5217 V \uff0c \u518d\u5e30\u7d50\u5408\u4fc2\u6570\u884c\u5217 W \u304c\u306a\u3051\u308c\u3070\u30d0\u30a4\u30b0\u30e9\u30e0(2-\u30b0\u30e9\u30e0)\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a00\u8a9e\u30e2\u30c7\u30eb\u3068\u7b49\u3057\u3044 1.6. RNNLM \u306e\u5b66\u7fd2 \u6642\u9593\u8cab\u901a\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3 BPTT \u00b6 2011 Mikolov Fig.3 \u518d\u5e30\u7d50\u5408\u4fc2\u6570\u884c\u5217 \\mathbf{W} \u3092\u6642\u9593\u5c55\u958b\u3057\uff0c\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u307f\u306a\u3057\u3066\u5b66\u7fd2\u3092\u884c\u3046 \u6642\u9593\u8cab\u901a\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u306f Backpropagation Through Time (BPTT) \u3068\u3044\u3044\u307e\u3059 1.7. \u6642\u9593\u8cab\u901a\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3 BPTT \u00b6 \u56f3: \u30d0\u30c3\u30c1\u66f4\u65b0\u306e\u4f8b\u3002\u8d64\u3044\u77e2\u5370\u306f\u8aa4\u5dee\u52fe\u914d\u304c\u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u306e\u6642\u9593\u5c55\u958b\u3092\u9061\u3063\u3066\u3044\u304f\u69d8\u5b50\u3092\u793a\u3057\u3066\u3044\u308b\u3002 1.8. \u6587\u5b57\u30d9\u30fc\u30b9\u304b\u5358\u8a9e\u30d9\u30fc\u30b9\u304b\uff1f \u00b6 Pros/Cons OOV problems\u3002OOV: Out of Vocabulary \u554f\u984c\u3002\u30bd\u30fc\u30b7\u30e3\u30eb\u30e1\u30c7\u30a3\u30a2\u306a\u3069\u3092\u6d3b\u7528\u3059\u308b\u5834\u5408\u4e0d\u53ef\u907f\u306e\u554f\u984c 2. \u518d\u5e30\u578b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u00b6 2.1. NETtalk \u00b6 \u7cfb\u5217\u60c5\u5831\u51e6\u7406\u3092\u6271\u3063\u305f\u521d\u671f\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f8b\u3068\u3057\u3066 NETTalk \u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002 NETTalk[^NETTalk] \u306f\u6587\u5b57\u3092\u97f3\u8aad\u3059\u308b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3059\u3002\u4e0b\u56f3\u306e\u3088\u3046\u306a\u69cb\u6210\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u4e0b\u56f3\u306e\u3088\u3046\u306b\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8 7 \u6587\u5b57\u3092\u5165\u529b\u3057\u3066\uff0c\u7a7a\u767d\u306f\u30a2\u30f3\u30c0\u30fc\u30e9\u30a4\u30f3\u3067\u8868\u73fe\u3055\u308c\u3066\u3044\u307e\u3059\uff0c\u4e2d\u592e\u306e\u6587\u5b57\u306e\u767a\u97f3\u3092\u5b66\u7fd2\u3059\u308b 3 \u5c64\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3059\u3002NETTalk \u306f 7 \u6587\u5b57\u5e45\u306e\u7a93\u3092\u79fb\u52d5\u3055\u305b\u306a\u304c\u3089 \u9010\u6b21\u4e2d\u592e\u306e\u6587\u5b57\u306e\u767a\u97f3\u3092\u5b66\u7fd2\u3057\u307e\u3057\u305f\u3002\u305f\u3068\u3048\u3070 /I ate the apple/ \u3068\u3044\u3046\u6587\u7ae0\u3067\u306f \"the\" \u3092 \"\u30b6\" \u3067\u306f\u306a\u304f \"\u30b8\" \u3068\u767a\u97f3\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u5370\u5237\u5358\u8a9e\u306e\u8aad\u5b57\u904e\u7a0b\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u3067\u3042\u308b SM89[^SM89], PMSP96[^PMSP96] \u3067\u7528\u3044\u3089\u308c\u305f\u767a\u97f3\u8868\u73fe\u306f ARPABET \u306e\u4e9c\u7a2e\u3067\u3059\u3002Python \u3067\u306f nltk \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3068 ARPABET \u306e\u767a\u97f3\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059( ARPABET \u306e\u30c7\u30e2 )\u3002 [^NETTalk]: Sejnowski, T.J. and Rosenberg, C. R. (1987) Parallel Networks that Learn to Pronounce English Text, Complex Systems 1, 145-168. [^SM89]: Seidenberg, M. S. & McClelland, J. L. (1989). A distributed, developmetal model of word recognition and naming. Psychological Review, 96(4), 523\u2013568. [^PMSP96]: Plaut, D. C., McClelland, J. L., Seidenberg, M. S. & Patterson, K. (1996). Understanding normal and impaired word reading: Computational principles in quasi-regular domains. Psychological Review, 103, 56\u2013115. Sejnowski (1986) Fig. 2 2.2. \u5358\u7d14\u518d\u5e30\u578b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u00b6 NETTalk \u3092\u5148\u304c\u3051\u3068\u3057\u3066 \u5358\u7d14\u518d\u5e30\u578b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Simple Recurrent Neural networks (SRN) \u304c\u63d0\u6848\u3055\u308c\u307e\u3057\u305f\u3002 \u767a\u6848\u8005\u306e\u540d\u524d\u3067 Jordan \u30cd\u30c3\u30c8 [^JordanNet]\uff0c Elman \u30cd\u30c3\u30c8 [^ElmanNet] \u3068\u547c\u3070\u308c\u307e\u3059\u3002 [^JordanNet]: Joradn, M.I. (1986) Serial Order: A Parallel Distributed Processing Approach, UCSD tech report. [^ElmanNet]: Elman, J. L. (1990)Finding structure in time, Cognitive Science, 14, 179-211. Jordan \u30cd\u30c3\u30c8\u3082 Elman \u30cd\u30c3\u30c8\u3082\u4e0a\u4f4d\u5c64\u304b\u3089\u306e \u5e30\u9084\u4fe1\u53f7 \u3092\u6301\u3061\u307e\u3059\u3002\u3053\u308c\u3092 \u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u7d50\u5408 \u3068\u547c\u3073\uff0c\u4f4d\u7f6e\u6642\u523b\u524d\u306e\u72b6\u614b\u304c\u6b21\u306e\u6642\u523b\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002Jordan \u30cd\u30c3\u30c8\u3067\u306f\u4e00\u6642\u523b\u524d\u306e\u51fa\u529b\u5c64\u306e\u60c5\u5831\u304c\u7528\u3044\u3089\u308c\u307e\u3059(\u4e0b\u56f3)\u3002 \u56f3\uff1a\u30de\u30a4\u30b1\u30eb\u30fb\u30b8\u30e7\u30fc\u30c0\u30f3\u767a\u6848\u30b8\u30e7\u30fc\u30c0\u30f3\u30cd\u30c3\u30c8 [@1986Jordan] \u99c4\u83d3\u5b50\u83d3\u5b50 \u5f7c\uff08\u30de\u30a4\u30b1\u30eb\u30fb\u30b8\u30a7\u30d5\u30a7\u30ea\u30fc(\u30a8\u30a2\u30fc)\u30fb\u30b8\u30e7\u30fc\u30c0\u30f3\uff09 \u3067\u306f\u306a\u3044 :) \u30de\u30a4\u30b1\u30eb\u30fb\u30a2\u30fc\u30a6\u30a3\u30f3\u30fb\u30b8\u30e7\u30fc\u30c0\u30f3\u3002\u30df\u30b9\u30bf\u30fc\u6a5f\u68b0\u5b66\u7fd2[^jordan_ai_revolution_not_yet] [^jordan_ai_revolution_not_yet]: \u5f7c\u306f(\u3082\uff1f)\u795e\u69d8\u3067\u3059\u3002\u591a\u304f\u306e\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u63d0\u6848\u3057\u7d9a\u3051\u3066\u3044\u308b\u5f71\u97ff\u529b\u306e\u3042\u308b\u4eba\u3067\u3059\u3002\u9577\u3089\u304f\u6a5f\u68b0\u5b66\u7fd2\u306e\u56fd\u969b\u96d1\u8a8c\u306e\u7de8\u96c6\u9577\u3067\u3057\u305f\u30022018\u5e74 AI \u9769\u547d\u306f\u672a\u3060\u8d77\u3053\u3063\u3066\u3044\u306a\u3044 \u3068\u8a00\u3044\u51fa\u3057\u3066\u8b70\u8ad6\u3092\u547c\u3073\u307e\u3057\u305f\u3002 \u4e00\u65b9\uff0cElman \u30cd\u30c3\u30c8\u3067\u306f\u4e00\u6642\u523b\u524d\u306e\u4e2d\u9593\u5c64\u306e\u72b6\u614b\u304c\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u4fe1\u53f7\u3068\u3057\u3066\u7528\u3044\u3089\u308c\u307e\u3059\u3002 \u56f3\uff1a\u30b8\u30a7\u30d5\u30fb\u30a8\u30eb\u30de\u30f3\u767a\u6848\u306e\u30a8\u30eb\u30de\u30f3\u30cd\u30c3\u30c8[@lman1990],[@Elman1993] \u3069\u3061\u3089\u3082\u4e00\u6642\u523b\u524d\u306e\u72b6\u614b\u3092\u77ed\u671f\u8a18\u61b6\u3068\u3057\u3066\u4fdd\u6301\u3057\u3066\u5229\u7528\u3059\u308b\u306e\u3067\u3059\u304c\uff0c\u5b9f\u969b\u306e\u5b66\u7fd2\u3067\u306f\u4e00\u6642\u523b\u524d\u306e\u72b6\u614b\u3092\u30b3\u30d4\u30fc\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3060\u3051\u3067\uff0c\u5b9f\u969b\u306e\u5b66\u7fd2\u3067\u306f\u901a\u5e38\u306e \u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5 \u3059\u306a\u308f\u3061\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u6cd5\u304c\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u4e0a 2 \u3064\u306e\u56f3\u306b\u793a\u3057\u305f\u3068\u304a\u308a U \u3068 W \u3068\u306f\u5171\u306b\u4e2d\u9593\u5c64\u3078\u306e\u7d50\u5408\u4fc2\u6570\u3067\u3042\u308a\uff0cV \u306f\u4e2d\u9593\u5c64\u304b\u3089\u51fa\u529b\u5c64\u3078\u306e\u7d50\u5408\u4fc2\u6570\u3067\u3059\u3002Z=I \u3068\u66f8\u304d\u70b9\u7dda\u3067\u63cf\u304b\u308c\u3066\u3044\u308b\u77e2\u5370\u306f\u30b3\u30d4\u30fc\u3059\u308b\u3060\u3051\u3067\u3059\u306e\u3067\u5b66\u7fd2\u306f\u8d77\u3053\u308a\u307e\u305b\u3093\u3002\u3053\u306e\u3088\u3046\u306b\u8003\u3048\u308c\u3070 SRN \u306f 3 \u5c64\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002 SRN \u306f\u3053\u306e\u3088\u3046\u306a\u5358\u7d14\u306a\u69cb\u9020\u306b\u3082\u95a2\u308f\u3089\u305a \u30c1\u30e5\u30fc\u30ea\u30f3\u30b0\u5b8c\u5168 \u3067\u3042\u308d\u3046\u3068\u8a00\u308f\u308c\u3066\u304d\u307e\u3057\u305f\u3002 \u3059\u306a\u308f\u3061\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u8a08\u7b97\u53ef\u80fd\u306a\u554f\u984c\u306f\u3059\u3079\u3066\u8a08\u7b97\u3067\u304d\u308b\u304f\u3089\u3044\u5f37\u529b\u306a\u8a08\u7b97\u6a5f\u3060\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002 Jordan \u30cd\u30c3\u30c8\u306f\u51fa\u529b\u5c64\u306e\u60c5\u5831\u3092\u7528\u3044\u308b\u305f\u3081 \u904b\u52d5\u5236\u5fa1 \u306b Elan \u30cd\u30c3\u30c8\u306f\u5185\u90e8\u72b6\u614b\u3092\u5229\u7528\u3059\u308b\u305f\u3081 \u8a00\u8a9e\u51e6\u7406 \u306b \u305d\u308c\u305e\u308c\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u5f93\u3063\u3066 \u5931\u884c aparxia (no matter what kind of apraxia such as 'ideomotor' or 'conceptual')\uff0c \u884c\u70ba\u969c\u5bb3 \u306e\u30e2\u30c7\u30eb\u3092\u8003\u3048\u308b\u5834\u5408 Jordan \u30cd\u30c3\u30c8\u306f\u8003\u616e\u3059\u3079\u304d\u9078\u629e\u80a2\u306e\u5019\u88dc\u306e\u4e00\u3064\u3068\u306a\u308b\u3067\u3057\u3087\u3046\u3002 2.3. \u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6642\u9593\u5c55\u958b \u00b6 \u4e00\u6642\u523b\u524d\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3057\u3066\u5229\u7528\u3059\u308b SRN \u306f\u4e0b\u56f3\u5de6\u306e\u3088\u3046\u306b\u63cf\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u540c\u6642\u306b\u6642\u9593\u767a\u5c55\u3092\u8003\u616e\u3059\u308c\u3070\u4e0b\u56f3\u53f3\u306e\u3088\u3046\u306b\u63cf\u304f\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 Time unfoldings of recurrent neural networks \u4e0a\u56f3\u53f3\u3092\u982d\u90e8\u3092 90 \u5ea6\u53f3\u306b\u50be\u3051\u3066\u773a\u3081\u3066\u304f\u3060\u3055\u3044\u3002\u3042\u308b\u3044\u306f\u540c\u7fa9\u3067\u3059\u304c\u4e0a\u56f3\u53f3\u3092\u53cd\u6642\u8a08\u56de\u308a\u306b 90 \u5ea6\u56de\u8ee2\u3055\u305b\u305f\u30e1\u30f3\u30bf\u30eb\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u60f3\u50cf\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u306e\u3053\u3068\u304b\u3089 \"SRN \u3068\u306f\u6642\u9593\u65b9\u5411\u306b\u5c55\u958b\u3057\u305f\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3067\u3042\u308b\" \u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002 2.4. \u30a8\u30eb\u30de\u30f3\u30cd\u30c3\u30c8\u306b\u3088\u308b\u8a00\u8a9e\u30e2\u30c7\u30eb \u00b6 \u4e0b\u56f3\u306b \u30a8\u30eb\u30de\u30f3 \u304c\u7528\u3044\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u3092\u793a\u3057\u307e\u3057\u305f\u3002\u56f3\u4e2d\u306e\u6570\u5b57\u306f\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u6570\u3092\u8868\u3057\u307e\u3059\u3002\u5165\u529b\u5c64\u3068\u51fa\u529b\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u6570 26 \u3068\u306f\uff0c\u3082\u3061\u3044\u305f\u8a9e\u5f59\u6570\u304c 26 \u3067\u3042\u3063\u305f\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002 from [@Elman1991startingsmall] \u30a8\u30eb\u30de\u30f3\u306f\uff0c\u7cfb\u5217\u4e88\u6e2c\u8ab2\u984c\u306b\u3088\u3063\u3066\u6b21\u306e\u5358\u8a9e\u3092\u4e88\u60f3\u3059\u308b\u3053\u3068\u3092\u7e70\u308a\u8fd4\u3057\u5b66\u7fd2\u3055\u305b\u305f\u7d50\u679c\uff0c\u6587\u6cd5\u69cb\u9020\u304c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u7d50\u5408\u4fc2\u6570\u3068\u3057\u3066\u5b66\u7fd2\u3055\u308c\u308b\u3053\u3068\u3092\u793a\u3057\u307e\u3057\u305f\u3002Elman \u30cd\u30c3\u30c8\u306b\u3088\u3063\u3066\uff0c\u57cb\u3081\u8fbc\u307f\u6587\u306e\u51e6\u7406\uff0c\u6642\u5236\u306e\u4e00\u81f4\uff0c\u6027\u3084\u6570\u306e\u4e00\u81f4\uff0c\u9577\u8ddd\u96e2\u4f9d\u5b58\u306a\u3069\u3092\u6b63\u3057\u304f\u4e88\u6e2c\u3067\u304d\u308b\u3053\u3068\u304c\u793a\u3055\u308c\u307e\u3057\u305f(Elman, 1990, 1991, 1993)\u3002 S \\rightarrow NP VP \u201c.\u201d NP \\rightarrow PropN | N | N RC VP \\rightarrow V (NP) RC \\rightarrow who NP VP | who VP (NP) N \\rightarrow boy | girl | cat | dog | boys | girls | cats | dogs PropN \\rightarrow John | Mary | V \\rightarrow chase | feed | see | hear | walk | live | chases | feeds | seeds | hears | walks | lives \u3053\u308c\u3089\u306e\u898f\u5247\u306b\u306f\u3055\u3089\u306b 2 \u3064\u306e\u5236\u7d04\u304c\u3042\u308a\u307e\u3059\u3002 N \u3068 V \u306e\u6570\u304c\u4e00\u81f4\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 \u76ee\u7684\u8a9e\u3092\u53d6\u308b\u52d5\u8a5e\u306b\u5236\u9650\u304c\u3042\u308b\u3002\u4f8b\u3048\u3070hit, feed \u306f\u76f4\u63a5\u76ee\u7684\u8a9e\u304c\u5fc5\u305a\u5fc5\u8981\u3067\u3042\u308a\uff0csee \u3068hear \u306f\u76ee\u7684\u8a9e\u3092\u3068\u3063\u3066\u3082\u3068\u3089\u306a\u304f\u3066\u3082\u826f\u3044\u3002walk \u3068live \u3067\u306f\u76ee\u7684\u8a9e\u306f\u4e0d\u8981\u3067\u3042\u308b\u3002 \u6587\u7ae0\u306f 23 \u500b\u306e\u9805\u76ee\u304b\u3089\u69cb\u6210\u3055\u308c\uff0c8 \u500b\u306e\u540d\u8a5e\u3068 12 \u500b\u306e\u52d5\u8a5e\uff0c\u95a2\u4fc2\u4ee3\u540d\u8a5e who\uff0c\u53ca\u3073\u6587\u306e\u7d42\u7aef\u3092\u8868\u3059\u30d4\u30ea\u30aa\u30c9\u3067\u3059\u3002\u3053\u306e\u6587\u6cd5\u898f\u5247\u304b\u3089\u751f\u6210\u3055\u308c\u308b\u6587 S \u306f\uff0c\u540d\u8a5e\u53e5 NP \u3068\u52d5\u8a5e\u53e5 VP \u3068\u6700\u5f8c\u306b\u30d4\u30ea\u30aa\u30c9\u304b\u3089\u6210\u308a\u7acb\u3063\u3066\u3044\u308b\u3002 \u540d\u8a5e\u53e5 NP \u306f\u56fa\u6709\u540d\u8a5e PropN \u304b\u540d\u8a5e N \u304b\u540d\u8a5e\u306b\u95a2\u4fc2\u7bc0 RC \u304c\u4ed8\u52a0\u3057\u305f\u3082\u306e\u306e\u4f55\u308c\u304b\u3068\u306a\u308a\u307e\u3059\u3002 \u52d5\u8a5e\u53e5 VP \u306f\u52d5\u8a5e V \u3068\u540d\u8a5e\u53e5 NP \u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u304c\u540d\u8a5e\u53e5\u304c\u4ed8\u52a0\u3055\u308c\u308b\u304b\u5426\u304b\u306f\u52d5\u8a5e\u306e\u7a2e\u985e\u306b\u3088\u3063\u3066\u5b9a\u307e\u308b\u3002 \u95a2\u4fc2\u7bc0 RC \u306f\u95a2\u4fc2\u4ee3\u540d\u8a5e who \u3067\u59cb\u307e\u308a\uff0c\u540d\u8a5e\u53e5 NP \u3068\u52d5\u8a5e\u53e5 VP \u304b\uff0c\u3082\u3057\u304f\u306f\u52d5\u8a5e\u53e5\u3060\u3051\u306e\u3069\u3061\u3089\u304b\u304b\u304c\u7d9a\u304f\uff0c\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002 \u4e0b\u56f3\u306b\u8a13\u7df4\u5f8c\u306e\u4e2d\u9593\u5c64\u306e\u72b6\u614b\u3092\u4e3b\u6210\u5206\u5206\u6790\u306b\u304b\u3051\u305f\u7d50\u679c\u3092\u793a\u3057\u307e\u3057\u305f\u3002\"boy chases boy\", \"boy sees boy\", \u304a\u3088\u3073 \"boy walks\" \u3068\u3044\u3046\u6587\u3092\u9010\u6b21\u5165\u529b\u3057\u305f\u5834\u5408\u306e\u9077\u79fb\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002 \u540c\u3058\u6587\u578b\u306e\u6587\u7ae0\u306f\u540c\u3058\u3088\u3046\u306a\u72b6\u614b\u9077\u79fb\u3092\u8fbf\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002 \u4e0b\u56f3\u306f\u6587 \"boy chases boy who chases boy\" \u3092\u5165\u529b\u3057\u305f\u5834\u5408\u306e\u9077\u79fb\u56f3\u3067\u3059\u3002\u3053\u306e\u6587\u7ae0\u306b\u306f\u5358\u8a9e \"boy\" \u304c 3 \u5ea6\u51fa\u3066\u304d\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u304c\u7570\u306a\u308b\u3051\u308c\u3069\uff0c\u4ed6\u306e\u5358\u8a9e\u3068\u306f\u7570\u306a\u308b\u4f4d\u7f6e\u306b\u9644\u7f6e\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002 \u540c\u69d8\u306b 'chases\" \u304c 2 \u5ea6\u51fa\u3066\u304d\u307e\u3059\u304c\uff0c\u3084\u306f\u308a\u540c\u3058\u3088\u3046\u306a\u4f4d\u7f6e\u3067\uff0c\u304b\u3064\uff0c\u5225\u306e\u5358\u8a9e\u3068\u306f\u7570\u306a\u308b\u4f4d\u7f6e\u306b\u9644\u7f6e\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u540c\u69d8\u306b\u3057\u3066 \"boy who chases boy chases boy\" (\u7537\u306e\u5b50\u3092\u8ffd\u3044\u304b\u3051\u308b\u7537\u306e\u5b50\u304c\u7537\u306e\u5b50\u3092\u8ffd\u3044\u304b\u3051\u308b) \u306e\u72b6\u614b\u9077\u79fb\u56f3\u3092\u4e0b\u56f3\u306b\u793a\u3057\u307e\u3057\u305f\u3002 \u3055\u3089\u306b\u8907\u96d1\u306a\u6587\u7ae0\u4f8b \"boy chases boy who chases boy who chases boy\" \u306e\u72b6\u614b\u9077\u79fb\u56f3\u3092\u4e0b\u56f3\u306b\u5cf6\u3057\u307e\u3059\u3002 Elman \u30cd\u30c3\u30c8\u304c\u69cb\u6587\uff0c\u6587\u6cd5\u51e6\u7406\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u4e0a\u56f3\u306e\u3088\u3046\u306a\u4e2d\u9593\u5c64\u3067\u306e\u72b6\u614b\u9077\u79fb\u3067\u540c\u3058\u5358\u8a9e\u304c \u7570\u306a\u308b\u6587\u4f4d\u7f6e\u3067\u7570\u306a\u308b\u6587\u6cd5\u7684\u5f79\u5272\u3092\u62c5\u3063\u3066\u3044\u308b\u5834\u5408\u306b\uff0c\u5fae\u5999\u306b\u7570\u306a\u308b\u8868\u8c61\u3092\uff0c\u56f3\u306b\u5373\u3057\u3066\u3067\u8a00\u3048\u3070\uff0c \u540c\u3058\u5358\u8a9e\u3067\u306f\uff0c\u540c\u3058\u3088\u3046\u306a\u5834\u6240\u3092\u5360\u3081\u308b\u304c\uff0c\u305d\u306e\u6587\u6cd5\u7684\u5f79\u5272\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u4f4d\u7f6e\u3092\u5360\u3081\u308b\u3053\u3068\u304c \u793a\u5506\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u3053\u3068\u304b\u3089\u4e2d\u9593\u5c64\u306e\u72b6\u614b\u306f\u7570\u306a\u308b\u6587\u7ae0\u306e\u8868\u73fe\u3092\u7570\u306a\u308b\u4f4d\u7f6e\u3068\u3057\u3066\u8868\u73fe\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u8003\u3048\u3089\u308c\uff0c \u5f8c\u8ff0\u3059\u308b \u5358\u8a9e\u306e\u610f\u5473 \u3084 \u81ea\u52d5\u7ffb\u8a33 \u306a\u3069\u306b\u4f7f\u308f\u308c\u308b\u3053\u3068\u306b\u7e4b\u304c\u308a\u307e\u3059(\u6d45\u5ddd\u306e\u4e3b\u89b3\u534a\u5206\u4ee5\u4e0a) 2.5. Seq2sep \u7ffb\u8a33\u30e2\u30c7\u30eb \u00b6 \u4e0a\u8a18\u306e\u4e2d\u9593\u5c64\u306e\u72b6\u614b\u3092\u7d20\u76f4\u306b\u5fdc\u7528\u3059\u308b\u3068 \u6a5f\u68b0\u7ffb\u8a33 \u3084 \u5bfe\u8a71 \u306e\u30e2\u30c7\u30eb\u306b\u306a\u308a\u307e\u3059\u3002 \u4e0b\u56f3\u306f\u521d\u671f\u306e\u7ffb\u8a33\u30e2\u30c7\u30eb\u3067\u3042\u308b \"seq2seq\" \u306e\u6982\u5ff5\u56f3\u3092\u793a\u3057\u307e\u3057\u305f\u3002 \" <eos> \" \u306f\u6587\u672b end of sentence \u3092\u8868\u3057\u307e\u3059\u3002\u4e2d\u592e\u306e \" <eos> \" \u306e\u524d\u304c\u30bd\u30fc\u30b9\u8a00\u8a9e \u3067\u3042\u308a\uff0c\u4e2d\u592e\u306e \" <eos> \" \u306e\u5f8c\u306f\u30bf\u30fc\u30b2\u30c3\u30c8\u8a00\u8a9e\u306e\u8a00\u8a9e\u30e2\u30c7\u30eb\u3067\u3042\u308b SRN \u306e\u4e2d\u9593\u5c64\u3078\u306e \u5165\u529b\u3068\u3057\u3066\u7528\u3044\u307e\u3059\u3002 \u6ce8\u610f\u3059\u3079\u304d\u306f\uff0c\u30bd\u30fc\u30b9\u8a00\u8a9e\u306e\u6587\u7d42\u4e86\u6642\u306e\u4e2d\u9593\u5c64\u72b6\u614b\u306e\u307f\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u8a00\u8a9e\u306e\u6700\u521d\u306e\u4e2d\u9593\u5c64 \u306e\u5165\u529b\u306b\u7528\u3044\u308b\u3053\u3068\u3067\u3042\u308a\uff0c\u305d\u308c\u4ee5\u5916\u306e\u6642\u523b\u3067\u306f\u30bd\u30fc\u30b9\u8a00\u8a9e\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u8a00\u8a9e\u306f\u95a2\u4fc2\u304c \u306a\u3044\u3053\u3068\u3067\u3059\u3002\u9006\u306b\u8a00\u3048\u3070\u6700\u7d42\u6642\u523b\u306e\u4e2d\u9593\u5c64\u72b6\u614b\u304c\u30bd\u30fc\u30b9\u6587\u306e\u60c5\u5831\u5168\u3066\u3092\u542b\u3093\u3067\u3044\u308b\u3068 \u307f\u306a\u3059\u3053\u3068\u3067\u3059\u3002\u3053\u306e\u70b9\u3092\u6539\u5584\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3059\u3053\u3068\u304c 2014 \u5e74\u4ee5\u964d\u76db\u3093\u306b\u884c\u308f\u308c\u3066\u304d\u307e\u3057\u305f\u3002 \u9855\u8457\u306a\u4f8b\u304c\u5f8c\u8ff0\u3059\u308b \u53cc\u65b9\u5411 RNN \uff0c LSTM \u3092\u63a1\u7528\u3057\u305f\u308a\uff0c \u6ce8\u610f \u6a5f\u69cb\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u3067\u3057\u305f\u3002 From [@2014Sutskever_Sequence_to_Sequence] \\mbox{argmax}_{\\theta} \\left(-\\log p\\left(w_{t+1}\\right)\\right)=f\\left(w_{t}\\vert \\theta\\right) 2.6. \u591a\u69d8\u306a RNN \u3068\u305d\u306e\u4e07\u80fd\u6027 \u00b6 \u53cc\u65b9\u5411 RNN \u3084 LSTM \u3092\u7d39\u4ecb\u3059\u308b\u524d\u306b\uff0c\u30ab\u30eb\u30d1\u30b7\u30fc\u306e\u30d6\u30ed\u30b0[^karpathy] \u304b\u3089\u4e0b\u56f3\u306b\u5f15\u7528\u3057\u307e\u3059\u3002 \u4e0b\u306e 2 \u3064\u56f3\u3067\u306f\u30d4\u30f3\u30af\u8272\u304c\u5165\u529b\u5c64\uff0c\u7dd1\u304c\u4e2d\u9593\u5c64\uff0c\u9752\u304c\u51fa\u529b\u5c64\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002 [^karpathy]: \u53bb\u5e74\u307e\u3067\u30b9\u30bf\u30f3\u30d5\u30a9\u30fc\u30c9\u5927\u5b66\u306e\u5927\u5b66\u9662\u751f\u3002\u73fe\u5728\u306f\u30b9\u30c6\u30e9\u81ea\u52d5\u8eca\uff0c\u30a4\u30fc\u30ed\u30f3\u30fb\u30de\u30b9\u30af\u304c\u793e\u9577\uff0c\u306e AI \u90e8\u9577\u3055\u3093\u3067\u3059\u3002\u56f3\u306f\u5f7c\u306e\u30d6\u30ed\u30b0\u304b\u3089\u5f15\u7528\u3067\u3059\u3002\u86c7\u8db3\u3067\u3059\u304c\u30d6\u30ed\u30b0\u306e\u30bf\u30a4\u30c8\u30eb\u304c unreasonable effectiveness of RNN \u3067\u3059\u3002\u904e\u53bb\u306e\u5049\u5927\u306a\u8ad6\u6587 Wiegner (1960), Hamming (1967), Halevy (2009) \u304b\u3089\u306e \u30d1\u30af\u30ea \u656c\u610f\u3092\u8868\u3057\u305f\u30aa\u30de\u30fc\u30b8\u30e5 \u3067\u3059\u3002\"unreasonable effectiveness of [science|mathematics|data]\" \\ldots www > RNN variations from http://karpathy.github.io/2015/05/21/rnn-effectiveness/ \u4e0a\u56f3\u6700\u5de6\u306f\u901a\u5e38\u306e\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u753b\u50cf\u8a8d\u8b58\uff0c\u5206\u985e\uff0c\u8b58\u5225\u554f\u984c\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002 \u4e0a\u56f3\u5de6\u304b\u3089 2 \u3064\u76ee\u306f\uff0c\u753b\u50cf\u304b\u3089\u306e\u6587\u7ae0\u751f\u6210 \u4e0a\u56f3\u4e2d\u592e\uff0c\u5de6\u304b\u3089 3 \u3064\u76ee\u306f\uff0c\u6975\u6027\u5206\u6790\uff0c\u6587\u7ae0\u306e\u30ec\u30d3\u30e5\u30fc\uff0c\u661f\u306e\u6570\u63a8\u5b9a \u4e0a\u56f3\u53f3\u304b\u3089 2 \u3064\u76ee\u306f\u7ffb\u8a33\u3084\u6587\u7ae0\u751f\u6210 \u4e0a\u56f3\u6700\u53f3\u306f\u30d3\u30c7\u30aa\u5206\u6790\uff0c\u30d3\u30c7\u30aa\u811a\u6ce8\u4ed8\u3051 \u306a\u3069\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u3053\u308c\u307e\u3067\u7406\u89e3\u3092\u4fc3\u9032\u3059\u308b\u76ee\u7684\u3067\u4e2d\u9593\u5c64\u3092\u305f\u3060\u4e00\u5c64\u3068\u3057\u3066\u63cf\u3044\u3066\u304d\u307e\u3057\u305f\u3002 \u3067\u3059\u304c\u304c\u4e2d\u9593\u5c64\u306f\u591a\u5c64\u5316\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306e\u65b9\u304c\u591a\u3044\u3053\u3068\uff0c\u4e2d\u9593\u5c64\u5404\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u306f 1024 \u7a0b\u5ea6\u307e\u3067\u7528\u3044\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u306f\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6570\u306f\u5404\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u304c 4 \u3064\u3067\u3042\u308b\u5834\u5408\u306e\u6570\u5024\u4f8b\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u5165\u529b\u5c64\u3067\u306f \u30ef\u30f3\u30db\u30c3\u30c8 \u8868\u73fe[^onehot] [^onehot]: \u30d9\u30af\u30c8\u30eb\u306e\u8981\u7d20\u306e\u3046\u3061\u4e00\u3064\u3060\u3051\u304c \"1\" \u3067\u3042\u308a\u4ed6\u306f\u5168\u3066 \"0\u201d \u3067\u3042\u308b\u758e\u306a\u30d9\u30af\u30c8\u30eb\u306e\u3053\u3068\u3002\u4e00\u3064\u3060\u3051\u304c \"\u71b1\u3044\" \u3042\u308b\u3044\u306f \"\u8f9b\u3044\" \u30d9\u30af\u30c8\u30eb\u3068\u547c\u3073\u307e\u3059\u3002\u4ee5\u524d\u306f one-of- k \u8868\u73fe (MacKay \u306e PRML \u306a\u3069) \u3068\u547c\u3070\u308c\u3066\u3044\u305f\u306e\u3067\u3059\u304c \u30ef\u30f3\u30db\u30c3\u30c8\u8868\u73fe\uff0c\u3042\u308b\u3044\u306f \u30ef\u30f3\u30db\u30c3\u30c8\u30d9\u30af\u30c8\u30eb (\u304a\u305d\u3089\u304f\u547d\u540d\u8005\u306f Begnio \u4e00\u6d3e)\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\u30ef\u30f3\u30db\u30c3\u30c8\u30d9\u30af\u30c8\u30eb\u3092\u5b66\u7fd2\u3055\u305b\u308b\u3068\u6642\u9593\u304c\u304b\u304b\u308b\u3068\u3044\u3046\u8a08\u7b97\u4e0a\u306e\u5f31\u70b9\u304c\u751f\u3058\u307e\u3059\u3002\u5178\u578b\u7684\u306a\u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5\u306b\u3088\u308b\u5b66\u7fd2\u3067\u306f\uff0c\u4e0b\u4f4d\u5c64\u306e\u5165\u529b\u5024\u306b\u7d50\u5408\u4fc2\u6570\u3092\u639b\u3051\u305f\u5024\u3067\u7d50\u5408\u4fc2\u6570\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\u5f93\u3063\u3066\uff0c\u4e0b\u4f4d\u5c64\u306e\u5024\u306e\u307b\u3068\u3093\u3069\u304c \"0\" \u3067\u3042\u308b\u30ef\u30f3\u30db\u30c3\u30c8\u30d9\u30af\u30c8\u30eb\u306f\u5b66\u7fd2\u52b9\u7387\u304c\u843d\u3061\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u3053\u3067 Elman \u306f\u30ef\u30f3\u30db\u30c3\u30c8\u30d9\u30af\u30c8\u30eb\u3092\u5b9f\u6570\u5024\u3092\u6301\u3064\u591a\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u306b\u5909\u63db\u3057\u3066\u304b\u3089\u7528\u3044\u308b\u3053\u3068\u3092\u884c\u3044\u307e\u3057\u305f\u3002\u4e0a\u306e\u30a8\u30eb\u30de\u30f3\u30cd\u30c3\u30c8\u306b\u3088\u308b\u6587\u6cd5\u5b66\u7fd2\u306b\u304a\u3044\u3066,\u30cb\u30e5\u30fc\u30ed\u30f3\u6570 10 \u306e\u5358\u8a9e\u57cb\u3081\u8fbc\u307f\u5c64\u3068\u66f8\u304b\u308c\u305f\u5c64\u304c\u3053\u308c\u306b\u8a72\u5f53\u3057\u307e\u3059\u3002\u5358\u8a9e\u57cb\u3081\u8fbc\u307f\u5c64\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u5b66\u7fd2\u52b9\u7387\u304c\u6539\u5584\u3057\uff0c\u5f8c\u306b\u793a\u3059 word2vec \u306a\u3069\u306e \u5206\u6563\u30d9\u30af\u30c8\u30eb\u30e2\u30c7\u30eb \u3078\u3068\u767a\u5c55\u3057\u307e\u3059\u3002 > RNN variations from http://karpathy.github.io/2015/05/21/rnn-effectiveness/ [@1991Siegelmann_RNN_universal] said Turing completeness of RNN. 2.7. \u53cc\u65b9\u5411 RNN BiRNN \u00b6 RNN \u3092\u6539\u5584\u3059\u308b\u30e2\u30c7\u30eb\u3068\u3057\u3066 2 \u3064\u7d39\u4ecb\u3057\u307e\u3059\u3002\u4e00\u3064\u306f \u53cc\u65b9\u5411 RNN bidirectional RNN (BiRNN) \u3067 Shuster[^shuster]\uff0c\u5225\u306f LSTM \u3067\u3059\u3002\u3053\u3053\u3067\u306f BiRNN \u3092\u6271\u3044\u307e\u3059\u3002\u4e0b\u56f3\u306b BiRNN \u306e\u6982\u5ff5\u56f3\u3092\u793a\u3057\u307e\u3057\u305f\u3002 BiRNN \u306f RNN \u304c 2 \u3064\u9006\u65b9\u5411\u306b\u8d70\u3063\u3066\u3044\u3066\u4e92\u3044\u306b\u4ea4\u308f\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u3053\u306e\u610f\u5473\u3067\u306f\u6642\u9593\u3092\u9006\u5411\u304d\u306b\u8003\u3048\u308b\u3060\u3051\u306a\u306e\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u4e0a\u306e\u96e3\u3057\u3055\u306f\u6709\u308a\u307e\u305b\u3093\u3002 \u6642\u523b t \u3067\u306e\u51fa\u529b y(t) \u3092\u5f97\u308b\u305f\u3081\u306b\u306f\uff0c [0\\ldots,t-1] \u307e\u3067\u306e\u9806\u65b9\u6cd5 RNN \u3068 [T,\\ldots,t+1] \u307e\u3067\u306e\u9006\u65b9\u6cd5 RNN \u3092\u7528\u3044\u3066\u4e88\u6e2c\u3057\u307e\u3059\u3002 \u9006\u65b9\u6cd5 RNN \u306f\u672a\u6765\u304b\u3089\u904e\u53bb\u3092\u4e88\u6e2c\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u7269\u7406\u7684\u56e0\u679c\u5f8b\u306b\u9055\u53cd\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067 \u6c17\u6301\u3061\u60aa\u3044\u3068\u3082\u8a00\u3048\u307e\u3059\u3002\u3067\u3059\u304c\u82f1\u5358\u8a9e \"the\" \u306e\u767a\u97f3\u306f\u5f8c\u7d9a\u3059\u308b\u540d\u8a5e\u3092\u77e5\u3063\u3066\u3044\u308c\u3070\u767a\u97f3\u3092 \u4e88\u6e2c\u3059\u308b\u3053\u3068\u306f\u5bb9\u6613\u3067\u3059\u3002\u540c\u69d8\u306b\u30d5\u30e9\u30f3\u30b9\u8a9e\u306e\u5b9a\u51a0\u8a5e\u3092 \"\u30e9\" \u306b\u3059\u308b\u304b \"\u30eb\" \u306b\u3059\u308b\u304b\u306f \u5f8c\u7d9a\u3059\u308b\u540d\u8a5e\u306e\u6027\u304c\u5206\u304b\u3063\u3066\u3044\u308c\u3070\u5bb9\u6613\u3067\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3067\u306f BiRNN \u3092\u4f7f\u3046\u3068 \u7cbe\u5ea6\u5411\u4e0a\u304c\u671f\u5f85\u3055\u308c\u308b\u5834\u5408\u983b\u7528\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u306b\u306f\u795e\u7d4c\u5fc3\u7406\u5b66\u7684\u306a\u610f\u5473\u3065\u3051\u3068\u5de5\u5b66\u7684\u4fa1\u5024\u3068\u306e\u9f5f\u9f6c\uff0c\u4e56\u96e2\u304c \u3042\u308a\u307e\u3059\u3002 [^shuter]: \u63d0\u6848\u5f53\u6642 ATR \u3068 NICT \u6240\u5c5e\u306e\u535a\u58eb\u8ab2\u7a0b\u7814\u7a76\u54e1\u3002\u73fe\u5728\u306f Google \u6240\u5c5e\u3002 \u4e0b\u56f3\u306b BiRNN \u306e\u97f3\u58f0\u8a8d\u8b58\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u7528\u3044\u305f\u6027\u80fd\u6bd4\u8f03\u3092\u793a\u3057\u307e\u3057\u305f\u3002\u56f3\u4e2d\u3067\u306f \"BiRNN\" \u304c \"BRNN\" \u3068\u8868\u8a18\u3055\u308c\u3066\u3044\u307e\u3059\u3002 Shuster (1997) Fig.1, Tab. 2 2.8. \u9577\u8ddd\u96e2\u4f9d\u5b58 \u00b6 \u4e0a\u3067\u306f RNN \u306f\u6642\u9593\u65b9\u5411\u3067\u306e\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0(\u6df1\u5c64\u5b66\u7fd2)\u3067\u3042\u308b\u3068\u8aac\u660e\u3057\u307e\u3057\u305f\u3002 \u3067\u3059\u304c\u904e\u53bb\u306e\u60c5\u5831\u3092\u7528\u3044\u308b\u305f\u3081\u306b\uff0c\u4e00\u6642\u523b\u524d\uff0c\u3059\u306a\u308f\u3061\u76f4\u524d\u306e\u60c5\u5831\u3067\u306f\u306a\u304f\u904e\u53bb\u306e\u3042\u308b\u6642\u70b9\u3067\u306e\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3066\u304a\u3044\u3066\u4f7f\u3044\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307es\u3002\u82f1\u8a9e\u306e\u95a2\u4fc2\u4ee3\u540d\u8a5e\u7bc0\u3092\u540d\u8a5e\u306e\u4fee\u98fe\u306b\u7528\u3044\u308b\u3088\u3046\u306a \u4e2d\u592e\u57cb\u3081\u8fbc\u307f\u6587 \u3067\u306f\uff0c \u4e3b\u8a9e\u3068\u52d5\u8a5e\u3068\u306e\u9593\u3067\u6642\u5236\u306e\u4e00\u81f4\u304c\u5fc5\u8981\u3067\u3059\u304c\uff0c\u4e3b\u8a9e\u306e\u5f8c\u306b\u95a2\u4fc2\u4ee3\u540d\u8a5e\u7bc0\u304c\u57cb\u3081\u8fbc\u307e\u308c\u308b\u3068\uff0c\u4e3b\u8a9e\u306e\u6642\u5236\u3084\u6570\u3092 \u899a\u3048\u3066\u304a\u304f\u5fc5\u8981\u304c\u751f\u3058\u307e\u3059\u3002 \u6587 \"boy that girls chase plays the guitar\" \u3067\u306f\u95a2\u4fc2\u4ee3\u540d\u8a5e\u7bc0\u5185\u306e\u4e3b\u8a9e \"girls\" \u304c\u8907\u6570\u5f62\u3067\u3059\u3002 \u3053\u306e\u8907\u6570\u5f62 \"girls\" \u306b\u5f15\u304d\u3065\u3089\u308c\u3066\u52d5\u8a5e \"plays\" \u3092 \"play\" \u3068\u3057\u3066\u306f\u6b63\u3057\u3044\u6587\u6cd5\u306b\u306a\u308a\u307e\u305b\u3093\u3002 \u3053\u306e\u3088\u3046\u306b\u904e\u53bb\u306e\u60c5\u5831\u3092\u899a\u3048\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092 \u9577\u8ddd\u96e2\u4f9d\u5b58 long term dependency \u3068\u8a00\u3044\u307e\u3059\u3002SRN \u306f\u9577\u8ddd\u96e2\u4f9d\u5b58\u89e3\u6d88\u306e\u305f\u3081\u306b\u5b66\u7fd2\u6642\u9593\u304c\u9577\u304f\u306a\u308b\u3068\u3044\u3046\u554f\u984c\u70b9\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u308c\u306f\u4e2d\u9593\u5c64\u306e\u5185\u5bb9\u304c\u6642\u3005\u523b\u3005\u5909\u5316\u3057\u7d9a\u3051\u308b\u305f\u3081\uff0c\u7279\u5b9a\u306e\u5185\u5bb9\u3092\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u56f0\u96e3\u306b\u306a\u308b\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002 \u3053\u306e\u9577\u8ddd\u96e2\u4f9d\u5b58\u89e3\u6d88\u304c\u96e3\u3057\u3044\u3068\u3044\u3046\u77ed\u6240\u306f\uff0c\u8a18\u61b6\u5185\u5bb9\u3092\u4fdd\u6301\u3057\u3066\u304a\u304f\u5225\u306e\u5834\u6240\uff0c\u77ed\u671f\u8a18\u61b6\u30d0\u30c3\u30d5\u30a1\u3092\u7528\u610f\u3059\u308b\u306a\u3069\u306e\u89e3\u6d88\u65b9\u6cd5\u3082\u5b58\u5728\u3057\u307e\u3059\u3002\u4e00\u65b9\uff0c\u77ed\u671f\u8a18\u61b6\u3092\u4fdd\u6301\u3059\u308b\u6a5f\u69cb\u3092\u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5185\u306b\u7d44\u307f\u8fbc\u3080\u3068\u3044\u3046\u8003\u3048\u65b9\u3082\u3042\u308a\u307e\u3059\u3002\u5f8c\u8005\u306e\u8003\u3048\u65b9\u3092\u5b9f\u73fe\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u6b21\u306b\u7d39\u4ecb\u3059\u308b\u9577=\u77ed\u671f\u8a18\u61b6\u30e2\u30c7\u30eb\u304c\u3042\u308a\u307e\u3059\u3002 Schematic description of a long term dependency 2.9. \u9577=\u77ed\u671f\u8a18\u61b6 LSTM \u00b6 \u9577=\u77ed\u671f\u8a18\u61b6 (Long Short-Term Memory: LSTM, henceforth) \u306f\u30b7\u30e5\u30df\u30c3\u30c8\u30d5\u30fc\u30d0\u30fc (Shumithuber, J.) \u4e00\u6d3e\u306b\u3088\u308a\u63d0\u6848\u3055\u308c\u305f\u9577\u8ddd\u96e2\u4f9d\u5b58\u89e3\u6d88\u306e\u305f\u3081\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u3067\u3059\u3002 \u9577\u8ddd\u96e2\u4f9d\u5b58\u3092\u89e3\u6d88\u3059\u308b\u305f\u3081\u306b\u306f\uff0c\u3042\u308b\u5185\u5bb9\u3092\u4fdd\u6301\u3057\u7d9a\u3051\u3066\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u305d\u306e\u5185\u5bb9\u3092\u8868\u51fa\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u3053\u3068\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\uff0c\u30cb\u30e5\u30fc\u30ed\u30f3\u3078\u306e\u5165\u529b\u306b\u9580 (gate) \u3092\u7f6e\u304f\u3053\u3068\u304c\u63d0\u6848\u3055\u308c\u307e\u3057\u305f\u3002 \u4e0b\u56f3\u306b\u9577=\u77ed\u671f\u8a18\u61b6\u30e2\u30c7\u30eb\u306e\u6982\u5ff5\u56f3\u3092\u793a\u3057\u307e\u3057\u305f\u3002 LSTM from [@2016Asakawa_AIdict] \u4e0a\u56f3\u306e LSTM \u306f\u4e00\u3064\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306b\u8a72\u5f53\u3057\u307e\u3059\u3002\u3053\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306b\u306f 3 \u3064\u306e\u30b2\u30fc\u30c8(gate, \u9580) \u304c\u4ed8\u3044\u3066\u3044\u307e\u3059\u3002 3 \u3064\u306e\u30b2\u30fc\u30c8\u306f\u4ee5\u4e0b\u306e\u540d\u524d\u3067\u547c\u3070\u308c\u307e\u3059\u3002 \u5165\u529b\u30b2\u30fc\u30c8 input gate \u51fa\u529b\u30b2\u30fc\u30c8 output gate \u5fd8\u5374\u30b2\u30fc\u30c8 forget gate \u5404\u30b2\u30fc\u30c8\u306e\u4f4d\u7f6e\u3092\u4e0a\u56f3\u3067\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5165\u529b\u30b2\u30fc\u30c8\u3068\u51fa\u529b\u30b2\u30fc\u30c8\u304c\u9589\u3058\u3066\u3044\u308c\u3070\uff0c\u30bb\u30eb\u306e\u5185\u5bb9(\u3053\u308c\u307e\u3067\u306f\u4e2d\u9593\u5c64\u306e\u72b6\u614b\u3068\u547c\u3093\u3067\u304d\u307e\u3057\u305f)\u304c\u4fdd\u6301\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u51fa\u529b\u30b2\u30fc\u30c8\u304c\u958b\u3044\u3066\u3044\u308b\u5834\u5408\u306b\u306f\uff0c\u30bb\u30eb\u5185\u5bb9\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\u4e00\u65b9\u51fa\u529b\u30b2\u30fc\u30c8\u304c\u9589\u3058\u3066\u3044\u308c\u3070\u305d\u306e\u30bb\u30eb\u5185\u5bb9\u306f\u51fa\u529b\u3055\u308c\u307e\u305b\u3093\u3002\u3053\u306e\u3088\u3046\u306b\u5165\u529b\u30b2\u30fc\u30c8\u3068\u51fa\u529b\u30b2\u30fc\u30c8\u306f\u30bb\u30eb\u5185\u5bb9\u306e\u5165\u51fa\u529b\u306b\u95a2\u4e0e\u3057\u307e\u3059\u3002 \u5fd8\u5374\u30b2\u30fc\u30c8\u306f\u30bb\u30eb\u5185\u5bb9\u306e\u4fdd\u6301\u306b\u95a2\u4e0e\u3057\u307e\u3059\u3002\u5fd8\u5374\u30b2\u30fc\u30c8\u304c\u958b\u3044\u3066\u3044\u308c\u3070\u4e00\u6642\u523b\u524d\u306e\u30bb\u30eb\u5185\u5bb9\u304c\u4fdd\u6301\u3055\u308c\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u53cd\u5bfe\u306b\u5fd8\u5374\u30b2\u30fc\u30c8\u304c\u9589\u3058\u3066\u3044\u308c\u3070\u4e00\u6642\u523b\u524d\u306e\u30bb\u30eb\u5185\u5bb9\u306f\u7834\u68c4\u3055\u308c\u307e\u3059\u3002\u5168\u30bb\u30eb\u306e\u5fd8\u5374\u30b2\u30fc\u30c8\u304c\u5168\u9589\u306a\u3089\u3070\u901a\u5e38\u306e\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3042\u308b\u3053\u3068\u3068\u540c\u7fa9\u3067\u3059\u3002\u3059\u306a\u308f\u3061\u8a18\u61b6\u5185\u5bb9\u3092\u4fdd\u6301\u3057\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002SRN \u3067\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u4fe1\u53f7\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\u30bb\u30eb\u3078\u306e\u5165\u529b\u306f\uff0c \u4e0b\u5c64\u304b\u3089\u306e\u4fe1\u53f7\uff0c \u4e0a\u5c64\u304b\u3089\u306e\u4fe1\u53f7, \u3059\u306a\u308f\u3061 Jordan \u30cd\u30c3\u30c8\u306e\u5e30\u9084\u4fe1\u53f7 \u81ea\u5206\u81ea\u8eab\u306e\u5185\u5bb9\uff0c\u3059\u306a\u308f\u3061 Elman \u30cd\u30c3\u30c8\u306e\u5e30\u9084\u4fe1\u53f7 \u304c\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u3053\u308c\u3089\u5165\u529b\u4fe1\u53f7\u304c \u5165\u529b\u4fe1\u53f7\u305d\u306e\u3082\u306e \u5165\u529b\u30b2\u30fc\u30c8\u306e\u958b\u9589\u5236\u5fa1\u7528\u4fe1\u53f7 \u51fa\u529b\u30b2\u30fc\u30c8\u306e\u958b\u9589\u5236\u5fa1\u7528\u4fe1\u53f7 \u5fd8\u5374\u30b2\u30fc\u30c8\u306e\u958b\u9589\u5236\u5fa1\u7528\u4fe1\u53f7 \u3068\u3044\u3046 4 \u7a2e\u985e\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u5f93\u3063\u3066 LSTM \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u306f SRN \u306b\u6bd4\u3079\u3066 4 \u500d\u306b\u306a\u308a\u307e\u3059\u3002 LSTM \u306b\u9650\u3089\u305a\u4e00\u822c\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u51fa\u529b\u306b\u306f\u975e\u7dda\u5f62\u95a2\u6570\u304c\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u4ee3\u8868\u7684\u306a\u975e\u7dda\u5f62\u51fa\u529b\u95a2\u6570\u3068\u3057\u3066\u306f\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002 \u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570[^sigmoid]: f(x)=\\left[1+e^{-x}\\right]^{-1} \u30cf\u30a4\u30d1\u30fc\u30dc\u30ea\u30c3\u30af\u30bf\u30f3\u30b8\u30a7\u30f3\u30c8\u95a2\u6570: f(x)=\\left(e^{x}-e^{-x}\\right)/\\left(e^{x}+e^{-x}\\right) \u6574\u6d41\u7dda\u5f62\u30e6\u30cb\u30c3\u30c8\u95a2\u6570: f(x)=\\max\\left(0,x\\right) [^sigmoid]: 1980 \u5e74\u4ee3\u306b\u7528\u3044\u3089\u308c\u305f\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u304c\u7528\u3044\u3089\u308c\u308b\u3053\u3068\u306f\u307b\u3068\u3093\u3069\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u7406\u7531\u306f\u53ce\u675f\u304c\u9045\u3044\u304b\u3089\u3067\u3059[@1999LeCun] \u3053\u306e\u4e2d\u3067\uff0c\u30bb\u30eb\u306e\u51fa\u529b\u95a2\u6570\u3068\u3057\u3066 2. \u306e\u30cf\u30a4\u30d1\u30fc\u30dc\u30ea\u30c3\u30af\u30bf\u30f3\u30b8\u30a7\u30f3\u30c8\u95a2\u6570\u304c\uff0c\u30b2\u30fc\u30c8\u306e\u51fa\u529b\u95a2\u6570\u306b\u306f\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002\u305d\u306e\u7406\u7531\u306f\u30cf\u30a4\u30d1\u30fc\u30dc\u30ea\u30c3\u30af\u30bf\u30f3\u30b8\u30a7\u30f3\u30c8\u95a2\u6570\u306e\u65b9\u304c\u53ce\u675f\u304c\u65e9\u3044\u3053\u3068\uff0c\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u306f\u5024\u57df\u304c [0,1] \u3067\u3042\u308b\u305f\u3081\u30b2\u30fc\u30c8\u306e\u958b\u9589\u306b\u76f4\u63a5\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002 Le Cun, Y. Bottou, L., Orr, G. B, Muller K-R. (1988) Efficient BackProp, in Orr, G. and Muller, K. (Eds.) Neural Networks: tricks and trade, Springer. 2.10. LSTM \u306b\u304a\u3051\u308b\u30b2\u30fc\u30c8\u306e\u751f\u7406\u5b66\u7684\u5bfe\u5fdc\u7269 \u00b6 \u4ee5\u4e0b\u306e\u753b\u50cf\u306f http://kybele.psych.cornell.edu/~edelman/Psych-2140/week-2-2.html \u3088\u308a\u306e\u5f15\u7528\u3067\u3059\u3002 \u30a6\u30df\u30a6\u30b7\u306e\u30a8\u30e9\u5f15\u3063\u8fbc\u3081\u53cd\u5fdc\u6642\u306b\uff0c\u30cb\u30e5\u30fc\u30ed\u30f3\u3078\u306e\u5165\u529b\u4fe1\u53f7\u3067\u306f\u306a\u304f\uff0c\u5165\u529b\u4fe1\u53f7\u3092\u4fee\u98fe\u3059\u308b\u7d50\u5408 \u304c\u5b58\u5728\u3057\u307e\u3059\u3002\u4e0b\u56f3\u53c2\u7167\u3002 \u30a2\u30e1\u30d5\u30e9\u30b7 (Aplysia) \u306e\u30a8\u30e9\u5f15\u3063\u8fbc\u3081\u53cd\u5fdc(a.k.a. \u9632\u5fa1\u53cd\u5fdc)\u306e\u6a21\u5f0f\u56f3[^seaslang] [^seaslang]: from http://kybele.psych.cornell.edu/~edelman/Psych-2140/week-2-2.html \u306e 222\u30da\u30fc\u30b8\u3088\u308a \u753b\u50cf\u306f\u305d\u308c\u305e\u308c http://kybele.psych.cornell.edu/~edelman/Psych-2140/shunting-inhibition.jpg http://kybele.psych.cornell.edu/~edelman/Psych-2140/C87-fig2.25.jpg http://kybele.psych.cornell.edu/~edelman/Psych-2140/C87-fig2.24.jpg \u307e\u305f\u53e4\u304f\u306f PDP \u306e\u30d0\u30a4\u30d6\u30eb\u306b\u3082\u30b7\u30b0\u30de\u30d1\u30a4\u30e6\u30cb\u30c3\u30c8 ( \\sigma\\pi units) \u3068\u3057\u3066\u65e2\u8ff0\u304c\u898b\u3089\u308c\u307e\u3059\u3002\u5404\u30e6\u30cb\u30c3\u30c8\u3092\u639b\u3051\u7b97 ( \\pi ) \u3057\u3066\u304b\u3089\u8db3\u3057\u7b97 ( \\sum ) \u3059\u308b\u306e\u3067\u3053\u306e\u3088\u3046\u306b\u547d\u540d\u3055\u308c\u305f\u306e\u3067\u3057\u3087\u3046\u3002 From [@PDPbook] chaper 7 2.11. \u753b\u50cf\u3068\u8a00\u8a9e\u3068\u306e\u878d\u5408\u3078\u5411\u3051\u3066 \u00b6 \u4ee5\u4e0a\u3067\u4eca\u56de\u306e\u7279\u5225\u4f01\u753b\u306e\u76ee\u6a19\u3067\u3042\u308b\u753b\u50cf\u3068\u8a00\u8a9e\u3068\u306e\u30de\u30eb\u30c1\u30e2\u30fc\u30c0\u30eb\u7d71\u5408\u3078\u5411\u3051\u3066\u306e\u6e96\u5099\u304c\u307b\u307c\u51fa\u63c3\u3044\u307e\u3057\u305f\u3002 2014 \u5e74\u306b\u63d0\u6848\u3055\u308c\u305f\u30cb\u30e5\u30fc\u30e9\u30eb\u753b\u50cf\u811a\u6ce8\u4ed8\u3051\u306e\u30e2\u30c7\u30eb\u3092\u4e0b\u56f3\u306b\u793a\u3057\u307e\u3059\u3002 [@2014Vinyals_Bengio_Show_and_Tell] \u753b\u50cf\u306b\u5bfe\u3057\u3066\u6ce8\u610f\u3092\u4ed8\u52a0\u3057\u305f\u811a\u6ce8\u4ed8\u3051\u30e2\u30c7\u30eb\u306e\u51fa\u529b\u4f8b\u3092\u4e0b\u56f3\u306b\u793a\u3057\u307e\u3059\u3002 \u5404\u753b\u50cf\u5bfe\u306f\u53f3\u304c\u5165\u529b\u753b\u50cf\u3067\u3042\u308a\uff0c\u5de6\u306f\u305d\u306e\u5165\u529b\u753b\u50cf\u306e\u811a\u6ce8\u4ed8\u3051\u3067\u3042\u308b\u5358\u8a9e\u3092\u51fa\u529b\u3057\u3066\u3044\u308b\u969b\u306b\u3069\u3053\u306b\u6ce8\u610f\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u767d\u8272\u3067\u8868\u3057\u3066\u3044\u307e\u3059\u3002 [@2015Xu_Bengio_NIC_attention] 3. \u610f\u5473\u8ad6 \u00b6 \u3053\u3053\u3067\u306f\u610f\u5473\u8ad6\u306e\u7814\u7a76\u53f2\u3092\u5fc3\u7406\u5b66\u95a2\u9023\u9818\u57df\u306b\u7d5e\u3063\u3066\u307e\u3068\u3081\u308b\u3053\u3068\u3092\u8a66\u307f\u307e\u3059\u3002 \u610f\u5473\u306b\u3064\u3044\u3066\u306e\u8a00\u53ca\u306f\u8a00\u8a9e\u5b66\u8005 Firth \u3055\u3089\u306b\u9061\u308c\u3070 Witgenstein \u307e\u3067\u8fbf\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u3067\u3059\u304c\u3053\u3053\u3067\u306f\u76f4\u63a5\u95a2\u9023\u3059\u308b\u7814\u7a76\u3068\u3057\u3066\u4ee5\u4e0b\u3092\u3068\u308a\u3052\u307e\u3059 \u7b2c 1 \u4e16\u4ee3 \u610f\u5473\u5fae\u5206\u6cd5 Osgood \u7b2c 2 \u4e16\u4ee3 \u6f5c\u5728\u610f\u5473\u89e3\u6790 Ladauer \u7b2c 3 \u4e16\u4ee3 \u6f5c\u5728\u30c7\u30a3\u30ec\u30af\u30ea\u914d\u7f6e\uff0c\u30c8\u30d4\u30c3\u30af\u30e2\u30c7\u30eb \u7b2c 4 \u4e16\u4ee3 \u5206\u6563\u57cb\u3081\u8fbc\u307f\u30e2\u30c7\u30eb word2vec \u3068\u305d\u306e\u5f8c\u7d99\u30e2\u30c7\u30eb \u6700\u8fd1\u306e\u5c55\u958b 3.1. 1952 \u5e74 \u610f\u5473\u5fae\u5206\u6cd5 Semantics Differential (SD) \u00b6 \u30c1\u30e3\u30fc\u30eb\u30ba\u30fb\u30aa\u30ba\u30b0\u30c3\u30c9\u306b\u3088\u3063\u3066\u63d0\u6848\u3055\u308c\u305f\u610f\u5473\u5fae\u5206\u6cd5\u306f\uff0c\u88ab\u9a13\u8005\u306b\u5bfe\u8c61\u3092\u8a55\u4fa1\u3055\u305b\u308b\u969b\u306b\u5f62\u5bb9\u8a5e\u5bfe\u3092\u7528\u3044\u307e\u3059\u3002 \u5f62\u5bb9\u8a5e\u5bfe\u306f 5 \u4ef6\u6cd5\u3042\u308b\u3044\u306f\u305d\u306e\u4ed6\u306e\u5909\u7a2e\u306b\u3088\u3063\u3066\u8a55\u4fa1\u3055\u308c\u307e\u3059\u3002 \u5f97\u3089\u308c\u305f\u7d50\u679c\u3092 \u8a55\u4fa1\u5bfe\u8c61 X \u5f62\u5bb9\u8a5e\u5bfe\u306e\u884c\u5217\u306b\u3057\u307e\u3059\u3002 \u3059\u306a\u308f\u3061\u8a55\u4fa1\u5bfe\u8c61\u8005\u306e\u5e73\u5747\u3092\u6c42\u3081\u3066\u5f97\u305f\u884c\u5217\u3092 \u56fa\u6709\u5024\u5206\u89e3 \uff0c\u6b63\u78ba\u306b\u306f\u56e0\u5b50\u5206\u6790 FA \u3092\u884c\u3044\u307e\u3059\u3002 \u6700\u5927\u56fa\u6709\u5024\u304b\u3089\u9806\u306b\u6e80\u8db3\u306e\u884c\u304f\u307e\u3067\u6c42\u3081\u307e\u3059\u3002 \u56fa\u6709\u5024\u884c\u5217\u3078\u306e\u5c04\u5f71\u884c\u5217\u3092\u56e0\u5b50\u8ca0\u8377\u91cf\u3068\u547c\u3073\u307e\u3059\u3002\u5f97\u3089\u308c\u305f\u7d50\u679c\u3092\u4e0b\u56f3\u306b\u793a\u3057\u307e\u3057\u305f\u3002 From Osgood (1952) Tab. 1 \u4e0a\u56f3\u3067\u306f\uff0c50 \u5bfe\u306e\u5f62\u5bb9\u8a5e\u5bfe\u306b\u3088\u3063\u3066\u5bfe\u8c61\u3092\u8a55\u4fa1\u3057\u305f\u5024\u304c\u63cf\u304b\u308c\u3066\u3044\u307e\u3059\u3002 \u56e0\u5b50\u5206\u6790(FA) \u5f62\u5bb9\u8a5e\u5bfe\u306b\u3088\u308b\u591a\u6bb5\u968e\u8a55\u5b9a From Osgood (1952) Fig.2 \u610f\u5473\u5fae\u5206\u6cd5\u306b\u304a\u3044\u3066\u306f\uff0c\u7814\u7a76\u8005\u306e\u7528\u610f\u3057\u305f\u5f62\u5bb9\u8a5e\u5bfe\u306e\u95a2\u4fc2\u306b\u4f9d\u5b58\u3057\u3066\u5bfe\u8c61\u3068\u306a\u308b\u6982\u5ff5\u3084\u30e2\u30ce\uff0c\u30b3\u30c8\u304c\u6c7a\u307e\u308a\u307e\u3059\u3002 \u5f93\u3063\u3066\u7814\u7a76\u8005\u306e\u60f3\u5b9a\u3057\u3066\u3044\u306a\u3044\u6982\u5ff5\u7a7a\u9593\u306b\u3064\u3044\u3066\u306f\u8a00\u53ca\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u70b9\u304c\u554f\u984c\u70b9\u3068\u3057\u3066\u6307\u6458\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u3053\u3068\u306f\u8a55\u4fa1\u5bfe\u8c61\u304c\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u308b\u554f\u984c\u3067\u3042\u308c\u3070\u7cbe\u5ea6\u826f\u304f\u6e2c\u5b9a\u3067\u304d\u308b\u3068\u3044\u3046\u9577\u6240\u306e\u88cf\u8fd4\u3057\u3067\u3059\u3002 \u4e00\u822c\u7684\u306a\u610f\u5473\uff0c\u5bfe\u8c61\u8005\u304c\u6301\u3063\u3066\u3044\u308b\u610f\u5473\u7a7a\u9593\u5168\u4f53\u3092\u8003\u3048\u308b\u305f\u3081\u306b\u306f\uff0c50 \u500b\u306e\u5f62\u5bb9\u8a5e\u5bfe\u3067\u306f\u6349\u3048\u304d\u308c\u306a\u3044\u3053\u3068\u3082\u610f\u5473\u3057\u307e\u3059\u3002\u5f93\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5206\u91ce\u306b\u9069\u7528\u3059\u308b\u5834\u5408\u306b\u306f\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3068\u8a00\u3048\u307e\u3059 \u795e\u7d4c\u5fc3\u7406\u5b66\u7684\u306a\u75c7\u72b6\u3067\u3042\u308b \u610f\u5473\u75f4\u5446 semantic dimentia \u3092\u6271\u3046\u5834\u5408 \u5165\u8a66\u554f\u984c\u306a\u3069\u306e\u4e00\u822c\u77e5\u8b58\u3092\u8a55\u4fa1\u3057\u305f\u3044\u5834\u5408 \u4e00\u822c\u8a00\u8a9e\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408 3.2. 1997 \u5e74 \u6f5c\u5728\u610f\u5473\u5206\u6790 Latent Semantic Analysis (LSA, LSI) \u00b6 \u6f5c\u5728\u610f\u5473\u5206\u6790 : \u7279\u7570\u5024\u5206\u89e3(SVD) \u306f\uff0c\u5f53\u6642\u5897\u5927\u3057\u3064\u3064\u3042\u3063\u305f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u8a08\u7b97\u8cc7\u6e90\u3092\u80cc\u666f\u306b\u4e00\u822c\u610f\u5473\u8ad6\u306b\u8e0f\u307f\u8fbc\u3080\u5148\u97ad\u3092\u3064\u3051\u305f\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3059\u306a\u308f\u3061\u5148\u4ee3\u306e\u610f\u5473\u5fae\u5206\u6cd5\u304c\u6301\u3064\u554f\u984c\u70b9\u3067\u3042\u308b\uff0c\u8a55\u4fa1\u65b9\u6cd5\u304c 50 \u5bfe\u306e\u5f62\u5bb9\u8a5e\u3067\u3042\u308b\u3053\u3068\uff0c 50 \u3092\u3044\u304f\u3089\u5897\u3084\u3057\u3066\u3082\uff0c\u7d50\u5c40\u306f\u7814\u7a76\u8005\u306e\u6063\u610f\u6027\u304c\u6392\u9664\u3067\u304d\u306a\u3044\u3053\u3068\uff0c\u8a55\u4fa1\u8005\u304c\u4eba\u9593\u3067\u3042\u308b\u305f\u3081\u5927\u91cf\u306e\u8a55\u4fa1\u5bfe\u8c61\u3092\u8a55\u4fa1\u3055\u305b\u308b\u3053\u3068\u306f\uff0c \u5fc3\u7406\u5b9f\u9a13\u53c2\u52a0\u8005\u306e\u62d8\u675f\u6642\u9593\u3092\u9577\u304f\u3059\u308b\u305f\u3081\u73fe\u5b9f\u7684\u306b\u306f\u4e0d\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u89e3\u6d88\u3059\u308b\u305f\u3081\u306b\uff0c\u8f9e\u66f8\u305d\u306e\u3082\u306e\u3092\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u89e3\u6790\u3059\u308b\u3068\u3044\u3046\u624b\u6cd5\u3092\u63a1\u7528\u3057\u307e\u3057\u305f\u3002 \u8f9e\u66f8\u306e\u9805\u76ee\u3068\u305d\u306e\u9805\u76ee\u306e\u8a18\u8ff0\u5185\u5bb9\u3068\u3092\u8003\u3048\u307e\u3059 \u7279\u5b9a\u306e\u8f9e\u66f8\u9805\u9805\u76ee\u306b\u306f\u3069\u306e\u5358\u8a9e\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u3044\u308b\u306e\u304b\u3068\u3044\u3046\u5171\u8d77\u884c\u5217 \u5185\u5bb9 \\times \u5358\u8a9e \u3092 \u8003\u3048\uff0c\u3053\u306e\u884c\u5217\u306b\u3064\u3044\u3066 \u7279\u7570\u5024\u5206\u89e3 \u3092\u884c\u3044\u307e\u3059\u3002 Osgood \u306e\u610f\u5473\u5fae\u5206\u6cd5\u3067\u7528\u3044\u3089\u308c\u305f\u884c\u5217\u306e\u30b5\u30a4\u30ba\u3068\u6bd4\u8f03\u3059\u308b\u3068\uff0c\u5358\u8a9e\u6570\u304c\u6570\u4e07\uff0c\u9805\u76ee\u6570\u306f\u6570\u4e07\u304b\u3089\u6570\u5341\u4e07\u306b\u5897\u52a0\u3057\u3066\u3044\u307e\u3059\u3002 \u6570\u306e\u5897\u52a0\u306f\u7db2\u7f85\u3059\u308b\u7bc4\u56f2\u306e\u62e1\u5927\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u4e0b\u56f3\u306f\u6301\u3061\u3089\u308c\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u4f8b\u3092\u793a\u3057\u305f\u3082\u306e\u3067\u3059\u3002 From Landauer and Duman (1997) Fig. A2 LSA (LSI) \u306e\u554f\u984c\u70b9\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u56f3\u3092\u898b\u3066\u304f\u3060\u3055\u3044 From Landauer and Dumas (1997) Fig.3 \u4e0a\u56f3\u306f\uff0c\u5f97\u3089\u308c\u305f\u7d50\u679c\u3092\u5143\u306b\u985e\u7fa9\u8a9e\u30c6\u30b9\u30c8\u3092\u554f\u3044\u305f\u5834\u5408\u306b\u7279\u7570\u5024\u5206\u89e3\u3067\u5f97\u3089\u308c\u308b\u6b21\u5143\u6570\u3092\u6a2a\u8ef8\u306b\uff0c\u6b63\u89e3\u7387\u3092\u7e26\u8ef8\u306b\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u56f3\u3067\u3059\u3002 \u6b21\u5143\u3092\u4e0a\u3052\u308b\u3068\u6210\u7e3e\u306e\u5411\u4e0a\u304c\u8a8d\u3081\u3089\u308c\u307e\u3059\u3002 \u3067\u3059\u304c\uff0c\u3042\u308b\u7a0b\u5ea6 300 \u4ee5\u4e0a\u306e\u6b21\u5143\u3092\u62bd\u51fa\u3057\u3066\u3082\u8fd4\u3063\u3066\u6210\u7e3e\u304c\u4f4e\u4e0b\u3059\u308b\u3053\u3068\u304c\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u6b21\u5143\u6570\u3092\u5897\u3084\u3059\u3053\u3068\u3067\u672c\u6765\u306e\u985e\u7fa9\u8a9e\u691c\u67fb\u306b\u5fc5\u8981\u306a\u77e5\u8b58\u4ee5\u5916\u306e\u60c5\u5831\u304c\u542b\u307e\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u63a8\u5bdf\u3055\u308c\u307e\u3059\u3002 3.3. 2003 \u5e74 \u6f5c\u5728\u30c7\u30a3\u30ec\u30af\u30ea\u914d\u7f6e Latent Direchlet Allocation (LDA) \u00b6 \u6f5c\u5728\u30c7\u30a3\u30ec\u30af\u30ea\u914d\u7f6e Latent Direchlet Allocation: LDA[^LDA] \u306f LSA (LSI) \u3092\u78ba\u7387\u7684\u306b\u62e1\u5f35\u3057\u305f\u30e2\u30c7\u30eb\u3067\u3042\u308b\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3059\u306a\u308f\u3061 LDA \u3067\u306f\u5358\u8a9e\u3068\u9805\u76ee\u3068\u306e\u95a2\u4fc2\u306b\u78ba\u7387\u7684\u306a\u751f\u6210\u30e2\u30c7\u30eb\u3092\u4eee\u5b9a\u3057\u307e\u3059\u3002 [^LDA]: \u4f1d\u7d71\u7684\u306a\u7d71\u8a08\u5b66\u306b\u304a\u3044\u3066\u306f Fischer \u306e\u7dda\u5f62\u5224\u5225\u5206\u6790\u3092 LDA \u3068\u8868\u8a18\u3057\u307e\u3059\u3002\u3067\u3059\u304c\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\uff0c\u3059\u306a\u308f\u3061\u7d71\u8a08\u5b66\u306e\u4e00\u5206\u91ce\u3067\u306f\u8fd1\u5e74\u306e\u6f5c\u5728\u30c7\u30a3\u30ec\u30af\u30ea\u914d\u7f6e\u306e\u6210\u529f\u306b\u3088\u308a LDA \u3068\u672a\u5b9a\u7fa9\u3067\u8868\u8a18\u3055\u308c\u305f\u5834\u5408\u306b\u306f\u6f5c\u5728\u30c7\u30a3\u30af\u30ec\u30af\u30ea\u914d\u7f6e\u3092\u6307\u3059\u3053\u3068\u304c\u591a\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u305d\u306e\u7406\u7531\u3068\u3057\u3066\u306f\uff0c\u5bfe\u8c61\u3068\u306a\u308b\u9805\u76ee\uff0c\u3057\u3070\u3057\u3070 \u30c8\u30d4\u30c3\u30af \u3068\u8a00\u3044\u8868\u3059\u3068\uff0c\u9805\u76ee\u306e\u8aac\u660e\u306b\u7528\u3044\u3089\u308c\u308b\u5358\u8a9e\u3068\u306e\u9593\u306b\uff0c\u6c7a\u5b9a\u8ad6\u7684\u306a\u95a2\u4fc2\u3092\u4eee\u5b9a\u3057\u306a\u3044\u3068\u8003\u3048\u308b\u3053\u3068\u306b\u3088\u308a\u307e\u3059\u3002\u78ba\u7387\u7684\u306a\u95a2\u4fc2\u3092\u4eee\u5b9a\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u67d4\u8edf\u306a\u95a2\u4fc2\u3092\u30e2\u30c7\u30eb\u5316\u304c\u53ef\u80fd\u3067\u3042\u308b\u304b\u3089\u3067\u3059\u3002 \u4f8b\u3048\u3070\uff0c\u3042\u308b\u6982\u5ff5\uff0c\u8a71\u984c(\u30c8\u30d4\u30c3\u30af) \"\u795e\u7d4c\" \u3092\u8aac\u660e\u3059\u308b\u5834\u5408\u3092\u8003\u3048\u307e\u3059\u3002 \"\u795e\u7d4c\" \u3092\u8aac\u660e\u3059\u308b\u306b\u306f\u591a\u69d8\u306a\u8868\u73fe\u3084\u8aac\u660e\u304c\u53ef\u80fd\u3067\u3059\u3002 \"\u795e\u7d4c\" \u3092\u8aac\u660e\u3059\u308b\u6587\u7ae0\u3092\u6570\u591a\u304f\u96c6\u3081\u3066\u308b\u3068\uff0c\u5358\u8a9e \"\u8133\" \u306f\u9ad8\u983b\u5ea6\u3067\u51fa\u73fe\u3059\u308b\u3068\u4e88\u60f3\u3067\u304d\u307e\u3059\u3002 \u540c\u69d8\u306b\u3057\u3066 \"\u7d30\u80de\" \u3084 \"\u8133\" \u3082\u9ad8\u983b\u5ea6\u3067\u89b3\u5bdf\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\u3068\u3053\u308d\u304c\u5358\u8a9e \"\u72ac\" \u306f\u4f4e\u983b\u5ea6\u3067\u3057\u3087\u3046\u3002 \u5358\u8a9e \"\u30a2\u30e1\u30d5\u30e9\u30b7\" \u3084 \"\u30a4\u30ab\" \u306f\u5834\u5408\u306b\u3088\u308a\u3051\u308a\u3067\u3057\u3087\u3046\u3002\u3069\u3061\u3089\u3082\u795e\u7d4c\u751f\u7406\u5b66\u306e\u767a\u5c55\u306b\u8ca2\u732e\u3057\u305f\u5b9f\u9a13\u52d5\u7269\u3067\u3059\u304b\u3089\u5358\u8a9e \"\u30a2\u30e1\u30d5\u30e9\u30b7\" \u3084 \"\u30a4\u30ab\" \u304c\u51fa\u73fe\u3059\u308b\u6587\u7ae0\u3082\u3042\u308c\u3070\uff0c\u5358\u8a9e \"\u8133\u6897\u585e\" \u3084\u5358\u8a9e \"\u5931\u8a9e\" \u3068\u540c\u6642\u306b\u51fa\u73fe\u3059\u308b\u78ba\u7387\u3082\u3042\u308a\u3048\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306b\u8003\u3048\u308b\u3068\u78ba\u7387\u7684\u306b\u8003\u3048\u305f\u65b9\u304c\u826f\u3044\u5834\u5408\u304c\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002 \u30c7\u30a3\u30ec\u30af\u30ea\u5206\u5e03 \u00b6 \u3082\u3046\u4e00\u70b9\uff0c\u30ce\u30f3\u30d1\u30e9\u30e1\u30c8\u30ea\u30c3\u30af\u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002 parametric model \u306f\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u3092\u7528\u3044\u305f\u30e2\u30c7\u30eb\u307b\u3069\u306e\u610f\u5473\u3067\u3059\u3002 \u5fc3\u7406\u7d71\u8a08\u5b66\u306e\u53e4\u5178\u7684\u306a\u6559\u79d1\u66f8\u3067\u306f\uff0c\u30ce\u30f3\u30d1\u30e9\u30e1\u30c8\u30ea\u30c3\u30af\u691c\u5b9a\u3068\u306f\u6bcd\u96c6\u56e3\u5206\u5e03\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u4f9d\u5b58 \u3057\u306a\u3044 \u7d71\u8a08\u7684\u691c\u5b9a\u3068\u3044\u3046\u610f\u5473\u3067\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u4e00\u65b9 LDA \u306e\u5834\u5408\u306b\u306f\u63a8\u5b9a\u3059\u3079\u304d\u5206\u5e03\u306e\u30d1\u30e9\u30e1\u30fc\u30bf(\u306e\u6570)\u3092 \u4e8b\u524d\u306b\u5b9a\u3081\u306a\u3044 \u3068\u3044\u3046\u610f\u5473\u3067 \u30ce\u30f3\u30d1\u30e9\u30e1\u30c8\u30ea\u30c3\u30af \u306a\u30e2\u30c7\u30eb\u3067\u3042\u308b\u3068\u8a00\u3044\u307e\u3059\u3002 \u3059\u306a\u308f\u3061\u3042\u308b\u8a71\u984c(\u30c8\u30d4\u30c3\u30af)\u3068\u305d\u308c\u3092\u8aac\u660e\u3059\u308b\u5358\u8a9e\u306e\u51fa\u73fe\u78ba\u7387\u306b\u3064\u3044\u3066\uff0c\u53d6\u308a\u6271\u3046\u73fe\u8c61\u306e\u8907\u96d1\u3055\u306b\u5fdc\u3058\u3066\u30e2\u30c7\u30eb\u3092\u8a18\u8ff0\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u3092\u9069\u5fdc\u7684\u306b\u5897\u3084\u3057\u3066\u884c\u304f\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002 \u6570\u5b66\u7684\u65e2\u8ff0\u306f\u7701\u7565\u3057\u307e\u3059\u304c\uff0c \u30d9\u30fc\u30bf\u5206\u5e03 \u3092\u7528\u3044\u308b\u3068\u533a\u9593 [a,b] \u306e\u9593\u3092\u3068\u308b\u5206\u5e03\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3088\u308a\u5206\u5e03\u304c\u67d4\u8edf\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\u30d9\u30fc\u30bf\u5206\u5e03\u306e\u591a\u6b21\u5143\u62e1\u5f35\u3092 \u30c7\u30a3\u30af\u30af\u30ea\u5206\u5e03 \u3068\u8a00\u3044\u307e\u3059\u3002 \u78ba\u7387\u7a7a\u9593\u306b\u5bfe\u3057\u3066\u4e00\u5b9a\u306e\u6210\u7d04\u3092\u4ed8\u3057\u305f\u8868\u73fe\u3092\u30b7\u30f3\u30d7\u30ec\u30c3\u30af\u30b9\u3068\u8a00\u3063\u305f\u308a\u3057\u307e\u3059\u3002 \u305f\u3068\u3048\u3070\u3058\u3083\u3093\u3051\u3093\u3067\u5bfe\u6226\u76f8\u624b\u304c\uff0c\u30b0\u30fc\uff0c\u30c1\u30e7\u30ad\uff0c\u30d1\u30fc \u306e\u3044\u305a\u308c\u304b\u3092\u51fa\u3059\u78ba\u7387\u306f\uff0c2 \u3064\u304c\u5206\u304b\u308c\u3070 3 \u3064\u76ee\u306e\u624b\u306f\u81ea\u305a\u3068\u5206\u304b\u3063\u3066\u304d\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u95a2\u4fc2\u306f 3 \u3064\u306e\u624b\u306e\u78ba\u7387\u5206\u5e03\u3067\u30c7\u30a3\u30af\u30af\u30ea\u5206\u5e03\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u4e0b\u56f3\u306f\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u304b\u3089\u6301\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u3053\u306e\u56f3\u306f\u305d\u306e\u3088\u3046\u306a\u3058\u3083\u3093\u3051\u3093\u306e\u624b\u306e\u51fa\u73fe\u78ba\u7387\u3092\u30c7\u30a3\u30ec\u30af\u30ea\u5206\u5e03\u3068\u3057\u3066\u8868\u73fe\u3057\u305f\u4f8b\u3060\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044\u3002 \u591a\u6b21\u5143\u30c7\u30a3\u30ec\u30af\u30ea\u5206\u5e03(\u591a\u6b21\u5143\u30d9\u30fc\u30bf\u5206\u5e03) \u306b\u3088\u308b\u30ce\u30f3\u30d1\u30e9\u30e1\u30c8\u30ea\u30c3\u30af\u63a8\u5b9a \u56f3\u306f https://en.wikipedia.org/wiki/Dirichlet_distribution \u3088\u308a \u30c8\u30d4\u30c3\u30af\u6bce\u306e\u5358\u8a9e\u306e\u51fa\u73fe\u78ba\u7387\u3082\u4e0a\u56f3\u3068\u540c\u3058\u67a0\u7d44\u307f\u3067\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u304b\u3064\uff0c\u4e0a\u56f3\u3067\u306f\u3068\u308a\u3046\u308b\u5024\u304c 3 \u3064\u306e\u5834\u5408\u3067\u3059\u304c\uff0c\u8a71\u984c\u304c\u8907\u96d1\u306b\u306a\u308c\u3070\u9069\u5fdc\u7684\u306b\u9078\u629e\u80a2\u306e\u6570\uff0c\u3059\u306a\u308f\u3061\u30c7\u30a3\u30ec\u30af\u30ea\u5206\u5e03\u306e\u6b21\u5143\u6570\u304c\u5897\u52a0\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u30d7\u30ec\u30fc\u30c8\u8868\u8a18 \u00b6 \u3042\u3089\u304b\u3058\u3081\u5b9a\u3081\u3089\u308c\u305f\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u7528\u3044\u3066\u5206\u5e03\u3092\u8a18\u8ff0\u3059\u308b\u306e\u3067\u306f\u306a\u304f\uff0c \u89e3\u304f\u3079\u304d\u554f\u984c\u306e\u8907\u96d1\u3055\u306b\u5fdc\u3058\u3066\u9069\u5fdc\u7684\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u3092\u5b9a\u3081\u308b\u3053\u3068\u306b\u5bfe\u5fdc\u3057\u3066\uff0c LDA \u3042\u308b\u3044\u306f\u30c8\u30d4\u30c3\u30af\u30e2\u30c7\u30eb\u306e\u56f3\u793a\u65b9\u6cd5\u3068\u3057\u3066 \u30d7\u30ec\u30fc\u30c8\u8868\u8a18 plate notation \u304c\u3042\u308a\u307e\u3059\u3002 \u4e0b\u56f3\u306b\u30d7\u30ec\u30fc\u30c8\u8868\u8a18\u306e\u4f8b\u3092\u793a\u3057\u307e\u3057\u305f\u3002 \u30d7\u30ec\u30fc\u30c8\u8868\u8a18: \u30ce\u30f3\u30d1\u30e9\u30e1\u30c8\u30ea\u30c3\u30af\u30e2\u30c7\u30eb\u306e\u8868\u73fe\u306b\u7528\u3044\u3089\u308c\u308b \u4e38\u306f\u78ba\u7387\u5909\u6570 \u77e2\u5370\u306f\u78ba\u7387\u7684\u4f9d\u5b58\u95a2\u4fc2\u3092\u8868\u73fe \u89b3\u6e2c\u5909\u6570\u306f\u5f71\u4ed8\u304d(\u6587\u732e\u306b\u3088\u3063\u3066\u306f\u4e8c\u91cd\u4e38) \u30d7\u30ec\u30fc\u30c8\u306f\u7e70\u308a\u8fd4\u3057\u3092\u8868\u3059 Y \u304b\u3089\u30d1\u30e9\u30e1\u30fc\u30bf X \u304c\u751f\u6210\u3055\u308c\u308b\u5834\u5408\uff0c\u77e2\u5370\u3092\u4f7f\u3063\u3066\u305d\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u8868\u73fe\u3057\u307e\u3059\u3002\u30ce\u30f3\u30d1\u30e9\u30e1\u30c8\u30ea\u30c3\u30af\u30e2\u30c7\u30eb\u306e\u5834\u5408\uff0c\u77e2\u5370\u306e\u6570\u3092\u4e88\u3081\u5b9a\u3081\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081\u77e2\u5370\u3092\u591a\u6570\u63cf\u304f\u306e\u304c\u7169\u96d1\u306a\u306e\u3067\uff0c\u4e00\u3064\u306e\u7bb1\u4ee3\u7528\u3057\u3066\u8868\u73fe\u3057\u307e\u3059\u3002 \u3053\u308c\u304c\u30d7\u30ec\u30fc\u30c8\u8868\u8a18\u306b\u306a\u308a\u307e\u3059\u3002 \u89b3\u6e2c\u53ef\u80fd\u306a\u5909\u6570\u3092\u30b0\u30ec\u30fc\uff0c\u307e\u305f\u306f\u4e8c\u91cd\u4e38\u3067\u8868\u3057\uff0c\u89b3\u6e2c\u4e0d\u80fd\u306a\uff0c\u985e\u63a8\u3059\u3079\u304d\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u767d\u4e38\u3067\u8868\u8a18\u3057\u307e\u3059\u3002 \u5b9f\u969b\u306b\u306f\u89b3\u6e2c\u4e0d\u53ef\u80fd\u306a\u6f5c\u5728\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u89b3\u6e2c\u30c7\u30fc\u30bf\u304b\u3089\u985e\u63a8\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u5927\u307e\u304b\u306a\u30eb\u30fc\u30eb\u3068\u3057\u3066\uff0c\u6f5c\u5728\u5909\u6570\u3092\u30ae\u30ea\u30b7\u30e3\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u8868\u8a18\uff0c\u89b3\u6e2c\u3055\u308c\u308b\u5909\u6570\u306f\u30ed\u30fc\u30de\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u8868\u8a18\u306e\u5834\u5408\u304c\u591a\u3044\u3067\u3059\u304c\uff0c\u4e00\u822c\u5247\u3067\u3059\u306e\u3067\u4f8b\u5916\u3082\u3042\u308a\u307e\u3059\u3002 \u4e0b\u56f3\u306b\u6f5c\u5728\u30c7\u30a3\u30ec\u30af\u30ea\u914d\u7f6e LDA \u306e\u30d7\u30ec\u30fc\u30c8\u8868\u8a18\u3092\u793a\u3057\u307e\u3057\u305f\u3002 \u30c8\u30d4\u30c3\u30af\u3068\u5358\u8a9e\u306e\u95a2\u4fc2 \u00b6 \u30c8\u30d4\u30c3\u30af\u30e2\u30c7\u30eb\u306e\u8981\u70b9\u3092\u307e\u3068\u3081\u305f\u4e0b\u56f3\u306f\u3053\u308c\u307e\u3067\u306e\u8aac\u660e\u3092\u3059\u3079\u3066\u542b\u3093\u3067\u3044\u307e\u3059\u3002 \u51fa\u5178: \u30d6\u30e9\u30a4\u306e\u30b9\u30e9\u30a4\u30c9(2009)\u3088\u308a\uff0c\u6587\u7ae0\u306f\u8a71\u984c(\u30c8\u30d4\u30c3\u30af)\u306e\u6df7\u5408 \u5404\u6587\u7ae0\u306f\u305d\u306e\u8a71\u984c\u304b\u3089\u6587\u7ae0\u304c\u751f\u6210\u3055\u308c\u305f\u3068\u8003\u3048\u308b \u8208\u5473\u6df1\u3044\u5fdc\u7528\u4f8b\u3068\u3057\u3066 Mochihashi \u3089(2009) \u306e\u793a\u3057\u305f\u6559\u5e2b\u306a\u3057\u5b66\u7fd2\u306b\u3088\u308b\u65e5\u672c\u8a9e\u5206\u304b\u3061\u66f8\u304d\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002 \u4e0b\u56f3\u306f\u6e90\u6c0f\u7269\u8a9e\u3092\u30c8\u30d4\u30c3\u30af\u30e2\u30c7\u30eb\u306b\u3088\u308a\u5206\u304b\u3061\u66f8\u304d\u3055\u305b\u305f\u4f8b\u3067\u3059\u3002\u3069\u3053\u306b\u7a7a\u767d\u3092\u633f\u5165\u3059\u308b\u3068\u6587\u5b57\u9593\u306e\u96a3\u63a5\u95a2\u4fc2\u3092\u8868\u73fe\u3067\u304d\u308b\u304b\u3092\u30c8\u30d4\u30c3\u30af\u30e2\u30c7\u30eb\u3067\u89e3\u304f\u3053\u3068\u3092\u8003\u3048\u305f\u5834\u5408\uff0c\u7a7a\u767d\u306e\u633f\u5165\u4f4d\u7f6e\u304c\u78ba\u7387\u7684\u306b\u5b9a\u307e\u308b\u3068\u4eee\u5b9a\u3057\u3066\u5c45\u307e\u3059\u3002 Mochihashi \u3089\u306f\uff0c\u30eb\u30a4\u30b9\u30fb\u30ad\u30e3\u30ed\u30eb\u306e\u5c0f\u8aac \"\u4e0d\u601d\u8b70\u306e\u56fd\u306e\u30a2\u30ea\u30b9\" \u539f\u6587\u304b\u3089\u7a7a\u767d\u3092\u53d6\u308a\u9664\u304d\uff0c \u6587\u5b57\u9593\u306e\u96a3\u63a5\u95a2\u4fc2\u304b\u3089\u6587\u5b57\u306e\u533a\u5207\u308a\uff0c\u3059\u306a\u308f\u3061\u7a7a\u767d\u3092\u63a8\u5b9a\u3059\u308b\u3053\u3068\u3092\u8a66\u307f\u307e\u3057\u305f\u3002\u7d50\u679c\u3092\u4e0b\u56f3\u306b\u793a\u3057\u307e\u3057\u305f\u3002 \u539f\u8457\u8ad6\u6587 \u00b6 Blei, Jordan (2003) Latent Dirichlet Allocation \u539f\u8457\u8ad6\u6587 \u767a\u5c55\u30e2\u30c7\u30eb: \u4e2d\u83ef\u30ec\u30b9\u30c8\u30e9\u30f3\u904e\u7a0b CRP \u30a4\u30f3\u30c9\u98df\u5802\u904e\u7a0b IBP R \u306b\u3088\u308b\u5b9f\u88c5 \u00b6 https://cran.r-project.org/web/packages/lda/index.html https://cran.r-project.org/web/packages/topicmodels/index.html 3.4. 2013 \u5e74 word2vec, \u5358\u8a9e\u57cb\u3081\u8fbc\u307f, \u30d9\u30af\u30c8\u30eb\u57cb\u3081\u8fbc\u307f\u30e2\u30c7\u30eb \u00b6 \u30df\u30b3\u30ed\u30d5 \u304a\u306a\u3058\u304f\u30df\u30b3\u30ed\u30d5 \u30df\u30b3\u30ed\u30d5\u306f word2vec \u306b\u3088\u308a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3088\u308b\u610f\u5473\u5b9f\u88c5\u3092\u793a\u3057\u307e\u3057\u305f\u3002 \u30ef\u30fc\u30c9\u30c4\u30fc\u30d9\u30c3\u30af\u3068\u767a\u97f3\u3057\u307e\u3059\u3002 Word2vec \u306f\u5b9f\u88c5\u306b 2 \u7a2e\u985e\u3042\u30ea\u307e\u3059\u3002\u305d\u308c\u305e\u308c CBOW \u3068 skip-gram \u3068\u547d\u540d\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \"\u30b7\u30fc\u30dc\u30a6\" \u307e\u305f\u306f \"\u30b7\u30fc\u30d0\u30a6\" \u3068\u65e5\u672c\u4eba\u306f\u8a00\u3063\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3088\u3046\u3067\u3059\u3002 \u6709\u540d\u306a \"king\" - \"man\" + \"woman\" = \"queen\" \u306e\u30a2\u30ca\u30ed\u30b8\u30fc\u3092\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u55a7\u4f1d\u3055\u308c\u307e\u3057\u305f\u3002 \u4e0b\u56f3\u5de6\u306f\u610f\u5473\u7684\u306a\u30a2\u30ca\u30ed\u30b8\u30fc\u304c\u30d9\u30af\u30c8\u30eb\u306e\u5411\u304d\u3068\u3057\u3066\u8868\u73fe\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30d9\u30af\u30c8\u30eb\u306f\u65b9\u5411\u3068\u5927\u304d\u3055\u3092\u6301\u3063\u3066\u3044\u308b\u77e2\u5370\u3067\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\u77e2\u5370\u306e\u539f\u70b9\u3092\u79fb\u52d5\u3059\u308b \u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\u305f\u3068\u3048\u3070 \"MAN\" \u304b\u3089 \"WOMAN\" \u3078\u5411\u304b\u3046\u77e2\u5370\u3092\u5e73\u884c\u79fb\u52d5\u3057\u3066 \"KING\" \u307e\u3067 \u6301\u3063\u3066\u304f\u308b\u3068\uff0c\u305d\u306e\u77e2\u5370\u306f \"QUEEN\" \u3092\u91cd\u306a\u308b\u3053\u3068\u304c\u4e88\u60f3\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u304c\u30a2\u30ca\u30ed\u30b8\u30fc\u554f\u984c\u306e\u89e3\u653e\u306e\u76f4\u611f\u7684\u8aac\u660e\u306b\u306a\u308a\u307e\u3059\u3002 \u4e0a\u56f3\u53f3\u306f\u540c\u3058 word2vec \u3067\u3067\u304d\u305f\u7a7a\u9593\u306b\u5bfe\u3057\u3066\uff0c\u7d71\u8a9e\u95a2\u4fc2 syntax \u3092\u89e3\u304b\u305b\u305f\u5834\u5408\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002 \"KING\" \u304b\u3089 \"KINGS\" \u3078\u5411\u304b\u3046\u77e2\u5370\u3092 \"QUEEN\" \u307e\u3067\u6301\u3063\u3066\u304f\u308b\u3068 \"QUEENS\" \u306b\u91cd\u306a\u308b \u3053\u3068\u304c\u898b\u3066\u53d6\u308c\u307e\u3059\u3002 \u3053\u306e\u3053\u3068\u304b\u3089\u4e0a\u56f3\u53f3\u306e\u8d64\u77e2\u5370\u3067\u793a\u3055\u308c\u305f\u30d9\u30af\u30c8\u30eb\u306f \u8907\u6570\u5f62 \u3078\u306e\u5909\u63db\u3068\u3044\u3046\u7d71\u8a9e\u60c5\u5831\uff0c \u6587\u6cd5\u60c5\u5831\u3092\u8868\u73fe\u3057\u3066\u3044\u308b\u3068\u307f\u306a\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u4f1d\u7d71\u7684\u306a\u8a00\u8a9e\u5b66\u306e\u77e5\u8b58\u3067\u306f\uff0c\u7d71\u8a9e\u69cb\u9020\u3068\u610f\u5473\u69cb\u9020\u306f\u5225\u500b\u306b\u53d6\u308a\u7d44\u3080\u8ab2\u984c\u3067\u3042\u308b\u3068\u8003\u3048\u3089\u308c\u3066\u304d\u307e\u3057\u305f\u3002 \u3068\u3053\u308d\u304c word2vec \u304c\u793a\u3059\u610f\u5473\u7a7a\u9593\u306f\u305d\u306e\u3088\u3046\u306a\u533a\u5225\u3092\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u304b\u5426\u304b\u306b\u3064\u3044\u3066 \u554f\u984c\u3092\u63d0\u8d77\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u601d\u308f\u308c\u307e\u3059\u3002 \u9006\u306b\u4e00\u3064\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3042\u308c\u3070\uff0c\u5206\u5272\u3057\u3066\u6271\u3046\u610f\u5473\u304c\u3042\u308b\u306e\u304b\u3069\u3046\u304b\u3092\u8003\u3048\u308b\u5207\u3063\u639b\u3051\u306b\u306a\u308b\u3068\u8003\u3048\u307e\u3059\u3002 \u3082\u3046\u4e00\u3064\u9762\u767d\u3044\u7d50\u679c\u3092\u4e0b\u56f3\u306b\u793a\u3057\u307e\u3059\u3002\u4e0b\u56f3\u306f word2vec \u306b\u3088\u3063\u3066\u4e16\u754c\u306e\u56fd\u3068\u305d\u306e\u9996\u90fd\u3068\u306e\u95a2\u4fc2\u3092\u4e3b\u6210\u5206\u5206\u6790 PCA \u3067 2 \u6b21\u5143\u306b\u63cf\u753b\u3057\u305f\u56f3\u3067\u3059\u3002 \u6a2a\u8ef8\u306f\u56fd\u3068\u9996\u90fd\u3068\u306e\u95a2\u4fc2\u3092\u8868\u73fe\u3057\u3066\u3044\u308b\u3068\u307f\u306a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u7e26\u8ef8\u306f\u4e0b\u304b\u3089\u4e0a\u306b\u5411\u304b\u3063\u3066 \u304a\u304a\u307e\u304b\u306b\u30e6\u30fc\u30e9\u30b7\u30a2\u5927\u9678\u3092\u897f\u304b\u3089\u6771\u3078\u6a2a\u65ad\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u914d\u7f6e\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u610f\u5473\u3092\u8868\u73fe\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u306f\uff0c\u89e3\u91c8\u306b\u3088\u3063\u3066\uff0c\u3053\u306e\u5834\u5408 PCA \u306b\u3088\u3063\u3066 2 \u6b21\u5143\u306b\u56f3\u793a\u3057\u3066\u307f\u308b\u3068 \u5927\u307e\u304b\u306b\u6211\u3005\u306e\u77e5\u8b58\u3092\u8868\u73fe\u3067\u304d\u308b\u3053\u3068\u3092\u793a\u5506\u3057\u3066\u3044\u308b\u3068\u8003\u3048\u307e\u3059\u3002 word2vec \u306e\u5b9f\u88c5\u306b\u306f 2 \u7a2e\u985e\u3042\u308a\u307e\u3059\u3002\u3069\u3061\u3089\u3092\u4f7f\u3063\u3066\u3082\u540c\u3058\u3088\u3046\u306a\u7d50\u679c\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 CBOW: Continous Bog of Words \u9023\u7d9a\u5358\u8a9e\u888b skip-gram: \u30b9\u30ad\u30c3\u30d7\u30b0\u30e9\u30e0 \u4e21\u8005\u306f\u53cd\u5bfe\u306e\u95a2\u4fc2\u306b\u306a\u308a\u307e\u3059\u3002\u4e0b\u56f3\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 From Mikolov (2013) Fig. 1 CBOW \u3082 skip-gram \u3082 3 \u5c64\u306b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3059\u3002\u305d\u306e\u4e2d\u9593\u5c64\u306b\u73fe\u308c\u305f\u8868\u73fe\u3092 \u30d9\u30af\u30c8\u30eb\u57cb\u3081\u8fbc\u307f\u30e2\u30c7\u30eb \u3042\u308b\u3044\u306f \u5358\u8a9e\u57cb\u3081\u8fbc\u307f\u30e2\u30c7\u30eb \u3068\u8a00\u3063\u305f\u308a\u3057\u307e\u3059\u3002 CBOW \u30e2\u30c7\u30eb\u306f\u5468\u8fba\u306e\u5358\u8a9e\u306e\u5358\u8a9e\u888b\u8a70\u3081\u8868\u73fe\u304b\u3089\u4e2d\u592e\u306e\u5358\u8a9e\u3092\u4e88\u6e2c\u3059\u308b\u30e2\u30c7\u30eb\u3067\u3059\u3002 skip-gram \u306f\u4e2d\u5fc3\u306e\u5358\u8a9e\u304b\u3089\u5468\u8fba\u306e\u5358\u8a9e\u888b\u8a70\u8868\u73fe\u3092\u4e88\u6e2c\u3059\u308b\u30e2\u30c7\u30eb\u3067\u3059\u3002 \u305f\u3068\u3048\u3070\uff0c\u6b21\u306e\u6587\u7ae0\u3092\u8003\u3048\u307e\u3059\u3002 1 [ \"\u5f7c\" , \"\u306f\" , \"\u610f\u5473\u8ad6\" , \"\u3092\" , \"\u8ad6\u3058\" , \"\u305f\" ] \u8868\u8a18\u3092\u7c21\u6f54\u306b\u3059\u308b\u305f\u3081\u5404\u5358\u8a9e\u306b ID \u3092\u3075\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002 1 { \"\u5f7c\" : 0 , \"\u306f\" : 1 , \"\u610f\u5473\u8ad6\" : 2 , \"\u3092\" : 3 , \"\u8ad6\u3058\" : 4 , \"\u305f\" : 5 } \u3059\u308b\u3068\u4e0a\u8a18\u4f8b\u6587\u306f 1 [ 0 , 1 , 2 , 3 , 4 , 5 ] \u3068\u8868\u73fe\u3055\u308c\u307e\u3059\u3002 \u30a6\u30a3\u30f3\u30c9\u30a6\u5e45\u304c\u30d7\u30e9\u30b9\u30de\u30a4\u30ca\u30b9 2 \u3067\u3042\u308b CBOW \u30e2\u30c7\u30eb\u3067\u306f 3 \u5c64\u306e\u591a\u5c64\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3 \u306e\u5165\u51fa\u529b\u95a2\u4fc2\u306f\uff0c\u5165\u529b\u304c 4 \u6b21\u5143\u30d9\u30af\u30c8\u30eb\uff0c\u51fa\u529b\u3082 4 \u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3068\u306a\u308a\u307e\u3059\u3002 \u6587\u306e\u5883\u754c\u3092\u7121\u8996\u3059\u308c\u3070\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5165\u51fa\u529b\u95a2\u4fc2\u3068\u307f\u306a\u305b\u307e\u3059\u3002 1 2 3 4 5 6 [ 0 ,1,1,0,0,0] -> [ 1 ,0,0,0,0,0] # In:\"\u306f\",\"\u610f\u5473\u8ad6\" Out:\"\u5f7c\" [ 1 ,0,1,1,0,0] -> [ 0 ,1,0,0,0,0] # In:\"\u5f7c\",\"\u610f\u5473\u8ad6\",\"\u3092\" Out:\"\u306f\" [ 1 ,1,0,1,1,0] -> [ 0 ,0,1,0,0,0] # In:\"\u5f7c\",\"\u306f\",\"\u3092\",\"\u8ad6\u3058\" Out:\"\u610f\u5473\u8ad6\" [ 0 ,1,1,0,1,1] -> [ 0 ,0,0,1,0,0] # In:\"\u306f\",\"\u610f\u5473\u8ad6\",\"\u8ad6\u3058\",\"\u305f\" Out:\"\u3092\" [ 0 ,0,1,1,0,1] -> [ 0 ,0,0,0,1,0] # In:\"\u610f\u5473\u8ad6\",\"\u3092\",\"\u305f\" Out:\"\u8ad6\u3058\" [ 0 ,0,0,1,1,0] -> [ 0 ,0,0,0,0,1] # In:\"\u3092\",\"\u8ad6\u3058\" \u51fa\u529b:\"\u305f\" \u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3068\u306a\u308a\u307e\u3059\u3002 CBOW \u306b\u305b\u3088 skip-gram \u306b\u305b\u3088\u5927\u898f\u6a21\u30b3\u30fc\u30d1\u30b9\uff0c\u4f8b\u3048\u3070\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u5168\u6587\u3092\u7528\u3044\u3066\u8a13\u7df4\u3092\u884c\u3044\u307e\u3059\u3002\u5468\u8fba\u306e\u5358\u8a9e\u3092\u3069\u306e\u7a0b\u5ea6\u53d6\u308b\u304b\u306f\u52dd\u624b\u306b\u6c7a\u3081\u307e\u3059\u3002 Mikolov \u304c\u985e\u63a8\u306b\u7528\u3044\u305f\u30c7\u30fc\u30bf\u4f8b\u3092\u4e0b\u56f3\u306b\u793a\u3057\u307e\u3057\u305f\u3002\u56fd\u540d\u3068\u5bfe\u5fdc\u3059\u308b\u9996\u90fd\u540d\uff0c\u56fd\u540d\u3068\u305d\u306e\u901a\u8ca8\u540d\uff0c\u306a\u3069\u306f\u610f\u5473\u7684\u95a2\u4fc2\u3067\u3059\u3002\u4e00\u65b9\u7f6b\u7dda\u4e0b\u65b9\u306f\u6587\u6cd5\u95a2\u4fc2\u3067\u3059\u3002 \u5f62\u5bb9\u8a5e\u304b\u3089\u526f\u8a5e\u5f62\u3092\u985e\u63a8\u3057\u305f\u308a\uff0c\u53cd\u610f\u8a9e\u3092\u985e\u63a8\u3057\u305f\u308a\uff0c\u6bd4\u8f03\u7d1a\uff0c\u904e\u53bb\u5206\u8a5e\uff0c\u56fd\u540d\u3068\u56fd\u6c11\uff0c\u904e\u53bb\u5f62\uff0c\u8907\u6570\u5f62\uff0c\u52d5\u8a5e\u306e 3 \u4eba\u79f0\u5358\u6570\u73fe\u5728\u5f62\u306a\u3069\u3067\u3059\u3002 From Milolov (2013) Tab. 1 \u3057\u3070\u3057\u3070\uff0c\u795e\u7d4c\u5fc3\u7406\u5b66\u3084\u8a8d\u77e5\u5fc3\u7406\u5b66\u3067\u306f\uff0c\u305d\u308c\u305e\u308c\u306e\u54c1\u8a5e\u5225\u306e\u51e6\u7406\u3092\u4eee\u5b9a\u3057\u305f\u308a\uff0c\u610f\u5473\u7684\u306a\u8131\u843d\u3092\u8003\u3048\u305f\u308a\u3059\u308b\u5834\u5408\u306b\uff0c\u7570\u306a\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u60f3\u5b9a\u3059\u308b\u3053\u3068\u304c\u884c\u308f\u308c\u307e\u3059\u3002 \u305d\u308c\u3089\u306e\u4eee\u5b9a\u3057\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u8133\u5185\u306b\u5bfe\u5fdc\u95a2\u4fc2\u304c\u5b58\u5728\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u795e\u7d4c\u5fc3\u7406\u5b66\u7684\u306b\u306f\u8aac\u660e\u3068\u3057\u3066\u5341\u5206\u3067\u3057\u3087\u3046\u3002 \u3068\u3053\u308d\u304c word2vec \u3067\u793a\u3057\u305f\u8868\u73fe\u3067\u306f\u4e00\u3064\u306e\u610f\u5473\u3068\u7d71\u8a9e\u3068\u306e\u8868\u73fe\u3092\u4e0e\u3048\u308b\u4e2d\u9593\u5c64\u306b\u5473\u65b9\u3092\u5909\u3048\u308b (PCA \u306a\u3069)\u3067\u63cf\u753b\u3057\u3066\u307f\u308c\u3070\uff0c\u7570\u306a\u308b\u8907\u6570\u306e\u8a00\u8a9e\u77e5\u8b58\u3092\u4e00\u3064\u306e\u8868\u8c61\u3067\u8868\u73fe\u3067\u304d\u308b\u3053\u3068\u304c\u793a\u5506\u3055\u308c\u307e\u3059\u3002 word2vec \u306b\u3088\u308b\u8868\u73fe\u304c\u8133\u5185\u306b\u5206\u6563\u3057\u3066\u3044\u308b\u3068\u8003\u3048\u308b\u3068\u30ab\u30c6\u30b4\u30ea\u30fc\u7279\u7570\u6027\u306e\u554f\u984c\u3084\u57fa\u672c\u6982\u5ff5\u512a\u4f4d\u6027\u306e\u554f\u984c\u3092\u3069\u3046\u6349\u3048\u308c\u3070\u826f\u3044\u306e\u304b\u306b\u3064\u3044\u3066\u793a\u5506\u306b\u5bcc\u3080\u3068\u8003\u3048\u307e\u3059\u3002 \u65e5\u672c\u8a9e\u306e\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u3092\u7528\u3044\u305f word2vec \u3068 NTT \u65e5\u672c\u8a9e\u306e\u8a9e\u5f59\u7279\u6027\u3068\u306e\u95a2\u9023\u306b\u95a2\u5fc3\u306e\u3042\u308b\u65b9\u306f \u65e5\u672c\u8a9e Wikipedia \u306e word2vec \u8868\u73fe\u3068\u8a9e\u5f59\u7279\u6027\u3068\u306e\u95a2\u4fc2, \u8fd1\u85e4\u30fb\u6d45\u5ddd (2017) \u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3055\u3089\u306a\u308b\u860a\u84c4 \u8ca0\u4f8b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0 \u00b6 Word2vec \u3092\u4f7f\u3063\u3066\u5927\u898f\u6a21\u30b3\u30fc\u30d1\u30b9\u3092\u5b66\u7fd2\u3055\u305b\u308b\u969b\u306b\uff0c\u5b66\u7fd2\u3055\u305b\u308b\u30c7\u30fc\u30bf\u4ee5\u5916\u306b\u5168\u304f\u95a2\u4fc2\u306e\u306a\u3044\u7d44\u307f\u5408\u308f\u305b\u3092\u30da\u30ca\u30eb\u30c6\u30a3\u30fc\u3068\u3057\u3066\u4e0e\u3048\u308b\u3053\u3068\u3067\u7cbe\u5ea6\u304c\u5411\u4e0a\u3057\u307e\u3059\u3002 \u767a\u5c55 \u6587\u7ae0\u57cb\u3081\u8fbc\u307f\u30e2\u30c7\u30eb\u3078 \u00b6 \u5358\u8a9e\u306e word2vec \u306b\u3088\u308b\u8868\u73fe\u306f 3 \u5c64\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u306e\u4e2d\u9593\u5c64\u306e\u6d3b\u6027\u5024\u3068\u3057\u3066\u8868\u73fe\u3055\u308c\u307e\u3059\u3002 \u5358\u8a9e\u3088\u308a\u5927\u304d\u306a\u307e\u3068\u307e\u308a\u306e\u610f\u5473\u8868\u73fe\uff0c\u305f\u3068\u3048\u3070\uff0c\u6587\uff0c\u6bb5\u843d\uff0c\u306a\u3069\u306e\u8868\u73fe\u3092\u3069\u306e\u3088\u3046\u306b\u5f97\u308b\u306e\u304b\u304c\u554f\u984c\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u3053\u3067\u8a73\u7d30\u306b\u306f\u89e6\u308c\u307e\u305b\u3093\u304c\uff0c\u6587\u8868\u73fe\u30d9\u30af\u30c8\u30eb\u306f\u5404\u5358\u8a9e\u8868\u73fe\u306e\u7dcf\u548c\u3067\u3042\u308b\u3068\u8003\u3048\u308b\u306e\u304c\u3082\u3063\u3068\u3082\u7c21\u5358\u306a\u8868\u73fe\u306b\u306a\u308a\u307e\u3059\u3002 \u3059\u306a\u308f\u3061\u6b21\u6587: 1 [ \"\u5f7c\" , \"\u306f\" , \"\u610f\u5473\u8ad6\" , \"\u3092\" , \"\u8ad6\u3058\" , \"\u305f\" ] \u306e\u6587\u8868\u73fe\u3092\u5f97\u308b\u305f\u3081\u306b\u306f\uff0c\u5404\u5358\u8a9e\u306e word2vec \u8868\u73fe\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\u3053\u3068\u304c\u884c\u308f\u308c\u307e\u3059\u3002 \u305f\u3060\u3057\uff0c\u5358\u7d14\u306b\u8db3\u3057\u5408\u308f\u305b\u305f\u306e\u3067\u306f BOW \u5358\u8a9e\u888b\u8868\u73fe\u3068\u540c\u3058\u3053\u3068\u3067\u3059\u306e\u3067\uff0c\u5358\u8a9e\u306e\u9806\u5e8f\u60c5\u5831\u304c\u5931\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u8fba\u308a\u3092\u3069\u3046\u6539\u5584\u3059\u308c\u3070\u826f\u3044\u306e\u304b\u304c\u8b70\u8ad6\u3055\u308c\u3066\u304d\u307e\u3057\u305f\u3002 \u6587\u732e \u00b6 word2vec \u30aa\u30ea\u30b8\u30ca\u30eb\u8ad6\u6587 2013\u5e74 Mikolov fastText \u9ad8\u901f\u6587\u57cb\u3081\u8fbc\u307f\u30e2\u30c7\u30eb \u305d\u306e\u767a\u5c55 \u6d45\u5ddd, \u5ca1, \u6960\u898b (2018)","title":"\u7b2c 7 \u56de 06\u6708 19 \u65e5"},{"location":"lect07/#iiia","text":"Shin Aasakawa , all rights reserved. Date: 19/Jun/2020 Appache 2.0 license","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA)"},{"location":"lect07/#01","text":"\u524d\u56de\u3067\u304d\u306a\u304b\u3063\u305f GAN \u306e\u30c7\u30e2 TL-GAN (transparent latent-space GAN) \u6f31\u77f3\u300c\u3053\u3053\u308d\u300d\u5192\u982d\u90e8\u5206\u3092\u6587\u5b57\u30d9\u30fc\u30b9\u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u8a00\u8a9e\u30e2\u30c7\u30eb javascript \u7248 \u65e5\u672c\u56fd\u61b2\u6cd5\u7b2c 9 \u6761\u3092\u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u7406\u89e3\u3059\u308b \u66f8\u753b\u306e\u30c7\u30e2 word2vec\u306e\u30c7\u30e2","title":"0.1 \u30c7\u30e2"},{"location":"lect07/#02","text":"\u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb (Recurrent Neural Networks, \u4ee5\u4e0b RNN) \u306f \u7cfb\u5217\u60c5\u5831\u51e6\u7406 (serial information processings) \u3092\u6271\u3046\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb \u3067\u3059\u3002 \u89b3\u5bdf\u3055\u308c\u305f\u8a3c\u62e0\u304b\u3089\u6b21\u306b\u751f\u3058\u308b\u4e8b\u8c61\u3092\u4e88\u60f3\u3059\u308b\u3053\u3068\u306f\uff0c\u751f\u7269\u306e\u751f\u5b58\u306b\u3068\u3063\u3066\u610f\u5473\u3042\u308b\u60c5\u5831\u51e6\u7406\u3067\u3042\u308b\u3068\u8003\u3048\u307e\u3059\u3002 \u305d\u306e\u9069\u7528\u7bc4\u56f2\u3092\u601d\u3044\u3064\u304f\u307e\u307e\u306b\u8003\u3048\u3066\u307f\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4e8b\u67c4\u304c\u542b\u307e\u308c\u308b\u3067\u3057\u3087\u3046\u3002 \u751f\u7269\u306e\u751f\u5b58\u6226\u7565 \u5236\u5fa1\uff0c\u4e88\u6e2c\u3002\u5929\u6c17\u4e88\u5831\uff0c\u30ed\u30b1\u30c3\u30c8\u306a\u3069\u306e\u5f3e\u9053\u5236\u5fa1 \u30c7\u30fc\u30bf\u51e6\u7406 \u672a\u6765\u4e88\u60f3\uff0cSF \u7684\uff0c\u5fc3\u7406\u5b66\u7684\uff0c\u54f2\u5b66\u7684\uff0c\u6b74\u53f2\u7684\u610f\u5473\u3042\u3044\u3082\u542b\u3081\u3066\u3002\u8eab\u8fd1\u306a\u4f8b\u3067\u306f\u5360\u3044\u3084\u7d4c\u6e08\u4e88\u6e2c\u3082\u542b\u307e\u308c\u307e\u3059 \u4e00\u65b9\uff0c\u6a5f\u68b0\u5b66\u7fd2\uff0c\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5206\u91ce\u3067\u306f\uff0c\u7cfb\u5217\u60c5\u5831\u51e6\u7406\u306e\u4e2d\u306e \u8a00\u8a9e\u30e2\u30c7\u30eb (Language models) \u3068\u3057\u3066\u983b\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u6628\u4eca\u306e \u81ea\u7136\u8a00\u8a9e\u51e6\u7406 (Natural Language Processings, \u4ee5\u4e0b NLP) \u3067\u306f \u6a5f\u68b0\u7ffb\u8a33 \u3084\u7a2e\u3005\u306e\u51e6\u7406\u306b\u63a1\u7528\u3055\u308c\u3066\u304d\u307e\u3057\u305f\u3002 2014 \u5e74\u4ee5\u964d\u306e\u8a71\u984c\u3068\u3057\u3066 \u6ce8\u610f (attention) \u3092\u8a00\u8a9e\u30e2\u30c7\u30eb\u306b\u53d6\u308a\u8fbc\u3093\u3067\u7cbe\u5ea6\u5411\u4e0a\u3092\u76ee\u6307\u3059\u52d5\u5411\u304c\u6d3b\u767a\u3067\u3059\u3002 \u6ce8\u610f \u3068 \u8a00\u8a9e \u3068\u306f\u3069\u3061\u3089\u3082 \u5fc3\u7406\u5b66\u5206\u91ce \u3067\u6ce8\u76ee\u3059\u3079\u304d\u8a71\u984c\u3067\u3057\u3087\u3046\u3002 RNN \u306e\u5fdc\u7528\u53ef\u80fd\u6027\u306f\u795e\u7d4c\u5fc3\u7406\u5b66\u306b\u3068\u3063\u3066\u4e00\u8003\u306e\u4fa1\u5024\u304c\u3042\u308b\u30e2\u30c7\u30eb\u3068\u8a00\u3048\u307e\u3059\u3002 2018 \u5e74\uff0c\u8907\u6570\u306e\u8a00\u8a9e\u8ab2\u984c\u3067\u4eba\u9593\u306e\u6210\u7e3e\u3092\u51cc\u99d5\u3059\u308b\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u30e2\u30c7\u30eb\u304c\u63d0\u6848\u3055\u308c\u307e\u3057\u305f\u3002 \u3053\u306e\u3053\u3068\u304b\u3089\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u30e2\u30c7\u30eb\u3092\u795e\u7d4c\u5fc3\u7406\u5b66\u306b\u5fdc\u7528\u3059\u308b\u6a5f\u904b\u306f\u719f\u3057\u3066\u3044\u308b\u3068\u8003\u3048\u307e\u3059\u3002","title":"0.2 \u518d\u5e30\u578b (\u30ea\u30ab\u30ec\u30f3\u30c8) \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb"},{"location":"lect07/#03","text":"\u624b\u66f8\u304d\u6587\u5b57\u8a8d\u8b58 Graves(2009) \u97f3\u58f0\u8a8d\u8b58 Graves (2013) , Grave and Jaitly (2014) \u624b\u66f8\u304d\u6587\u5b57\u751f\u6210 Graves (2013) \u7cfb\u5217\u5b66\u7fd2 Sutskever (2014) \u6a5f\u68b0\u7ffb\u8a33 Bahdanau (2014) \u6a5f\u68b0\u7ffb\u8a33 Luong (2015) \u753b\u50cf\u811a\u6ce8\u4ed8\u3051 Vinyals et. al(2014) \u6ce8\u610f\u3064\u304d\u753b\u50cf\u811a\u6ce8\u751f\u6210 \u69cb\u6587\u89e3\u6790 Vinayals et. al., (2014) \u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u751f\u6210 Zaremba (2015) \u5bfe\u8a71\u751f\u6210 Vinyals (2014) \u30cb\u30e5\u30fc\u30e9\u30eb\u30c1\u30e5\u30fc\u30ea\u30f3\u30b0\u30de\u30b7\u30f3 NTM Graves et. al, (2 014) \u4e16\u754c\u30e2\u30c7\u30eb Ha and Schmithuber (2018) ^about_world_model \u6211\u3005\u306f\u73fe\u5b9f\u4e16\u754c\u306e\u8868\u8c61\u3059\u308b\u30b3\u30f3\u30bb\u30d7\u30c8\u3092\u9078\u3093\u3067\u305d\u306e\u95a2\u4fc2\u3092\u4f7f\u3046\u3060\u3051\u3060(\u6d45\u5ddd\u62d9\u8a33)\u3068 \u30d5\u30a9\u30ec\u30b9\u30bf\u30fc \u306f\u8a00\u3063\u305f\u305d\u3046\u3067\u3059\u3002","title":"0.3 \u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6210\u679c"},{"location":"lect07/#04","text":"\u6d45\u5ddd\u4f38\u4e00 (2003) \u5358\u7d14\u518d\u5e30\u578b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5fc3\u7406\u5b66\u30e2\u30c7\u30eb\u3068\u3057\u3066\u306e\u5fdc\u7528\u53ef\u80fd\u6027, \u5fc3\u7406\u5b66\u8a55\u8ad6, 46(2), 274-287. \u6d45\u5ddd\u4f38\u4e00 (2016) \u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af, \u65e5\u672c\u4eba\u5de5\u77e5\u80fd\u5b66\u4f1a\u7de8\uff0c\u4eba\u5de5\u77e5\u80fd\u5b66\u4e8b\u5178\u65b0\u7248\uff0c\u5171\u7acb\u51fa\u7248 \u6d45\u5ddd\u4f38\u4e00 (2016) \u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3088\u308b\u6587\u6cd5\u5b66\u7fd2, \u65e5\u672c\u4eba\u5de5\u77e5\u80fd\u5b66\u4f1a\u7de8\uff0c\u4eba\u5de5\u77e5\u80fd\u5b66\u4e8b\u5178\u65b0\u7248\uff0c\u5171\u7acb\u51fa\u7248","title":"0.4 \u53c2\u8003\u6587\u732e"},{"location":"lect07/#1","text":"","title":"1. \u81ea\u7136\u8a00\u8a9e\u51e6\u7406"},{"location":"lect07/#11","text":"\u7b2c\u4e00\u6b21\u30d6\u30fc\u30e0 1960 \u5e74\u4ee3 \u6975\u5ea6\u306e\u697d\u89b3\u8ad6: \u8f9e\u66f8\u3092\u4e38\u5199\u3057\u3059\u308c\u3070\u7ffb\u8a33\u306f\u53ef\u80fd\u3060\u3068\u601d\u3063\u3066\u3044\u305f\uff0c\u3089\u3057\u3044... \u7b2c\u4e8c\u6b21\u30d6\u30fc\u30e0 \u7d71\u8a08\u7684\u81ea\u7136\u8a00\u8a9e\u51e6\u7406 \u7d71\u8a08\u7684\u8a00\u8a9e\u30e2\u30c7\u30eb statistical language model Chris Manning (\u30b9\u30bf\u30f3\u30d5\u30a9\u30fc\u30c9\u5927\u5b66) ) and Schutze (1999) \u8457\u3002\u5b9a\u756a\u306e\u6559\u79d1\u66f8 Fundations of Statistical Natural Language Processing , \u3042\u308b\u3044\u306f \u3053\u3061\u3089 \u3082\u3046\u4e00\u3064\u5b9a\u8a55\u306e\u6559\u79d1\u66f8 Jurafsky \u8457) \u3068 Martin \u8457 Speech and Language Processing \u306f \u6539\u8a02\u7248 \u304c\u51fa\u7248\u3055\u308c\u307e\u3057\u305f\u3002\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3088\u308b\u8a00\u8a9e\u30e2\u30c7\u30eb\u3082\u8f09\u3063\u3066\u3044\u307e\u3059\u3002","title":"1.1. \u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u524d\u53f2"},{"location":"lect07/#12","text":"BoW : Bag of Words \u5358\u8a9e\u306e\u888b\u3002\u3042\u308b\u6587\u7ae0\u3092\u8868\u73fe\u3059\u308b\u5834\u5408\u306b\uff0c\u5404\u5358\u8a9e\u306e\u8868\u73fe\u3092\u96c6\u3081\u3066\u888b\u8a70\u3081\u3057\u305f\u3068\u306e\u610f\u5473\u3002\u5f93\u3063\u3066\u8a9e\u9806\u304c\u8003\u616e\u3055\u308c\u307e\u305b\u3093\u3002\"\u72ac\u304c\u7537\u3092\u565b\u3093\u3060\" \u3068 \"\u7537\u304c\u72ac\u3092\u565b\u3093\u3060\" \u3067\u306f\u540c\u3058\u8868\u73fe\u306b\u306a\u308a\u307e\u3059\u3002LSA, LDA, fastText \u306a\u3069\u3082\u540c\u3058\u3088\u3046\u306a\u8868\u73fe\u3092\u4e0e\u3048\u307e\u3059\u3002 TF-IDF: \u5358\u8a9e\u983b\u5ea6 (Term Frequency) \u3068 \u9006(Inverse) \u6587\u66f8\u983b\u5ea6 (Document Frequency) \u3067\u6587\u66f8\u306e\u30d9\u30af\u30c8\u30eb\u8868\u73fe\u3092\u5b9a\u7fa9\u3059\u308b\u624b\u6cd5\u3067\u3059\u3002\u4f55\u5ea6\u3082\u51fa\u73fe\u3059\u308b\u5358\u8a9e\u306f\u91cd\u8981\u306a\u306e\u3067\u5358\u8a9e\u983b\u5ea6\u304c\u9ad8\u3044\u6587\u66f8\u306b\u306f\u610f\u5473\u304c\u3042\u308a\u307e\u3059\u3002\u4e00\u65b9\uff0c\u5168\u3066\u306e\u6587\u66f8\u306b\u51fa\u73fe\u3059\u308b\u5358\u8a9e\u306f\u91cd\u8981\u3068\u306f\u8a00\u3048\u306a\u3044\u306e\u3067\u5358\u8a9e\u306e\u51fa\u73fe\u308b\u6587\u66f8\u306e\u500b\u6570\u306e\u9006\u6570\u306e\u5bfe\u6570\u5909\u63db\u3092\u7528\u3044\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u3067\u304d\u305f\u6587\u7ae0\u8868\u73fe\u3092 TF-IDF \u3068\u8a00\u3044\u307e\u3059\u3002","title":"1.2. \u7528\u8a9e\u89e3\u8aac"},{"location":"lect07/#language-model","text":"\u6587\u732e\u3067\u306f\u8a00\u8a9e\u30e2\u30c7\u30eb\u3092 LM \u3068\u8868\u8a18\u3055\u308c\u308b\u3002 \u7d71\u8a08\u7684\u8a00\u8a9e\u30e2\u30c7\u30eb statistical language model \u3002\u8a00\u8a9e\u7cfb\u5217\u306b\u78ba\u7387\u3092\u4e0e\u3048\u308b\u30e2\u30c7\u30eb\u306e\u7dcf\u79f0\u3002\u826f\u3044\u8a00\u8a9e\u30e2\u30c7\u30eb LM \u306f\uff0c\u6709\u610f\u5473\u6587\u306b\u9ad8\u3044\u78ba\u7387\u3092\u4e0e\u3048\uff0c\u66d6\u6627\u306a\u6587\u306b\u306f\u4f4e\u3044\u78ba\u7387\u3092\u4e0e\u3048\u308b\u3002\u8a00\u8a9e\u30e2\u30c7\u30eb\u306f\u4eba\u5de5\u77e5\u80fd\u306e\u554f\u984c\u3002 n-gram \u8a00\u8a9e\u30e2\u30c7\u30eb \u6307\u6a19: BELU, perplexity \u8ab2\u984c: NER, POS, COL, Summary, QA, Translation","title":"\u8a00\u8a9e\u30e2\u30c7\u30eb Language model"},{"location":"lect07/#13-n-","text":"\u985e\u4f3c\u3057\u305f\u8a00\u8a9e\u5c65\u6b74 h \u306b\u3064\u3044\u3066, n-gram \u8a00\u8a9e\u30e2\u30c7\u30eb\u306f\u8a00\u8a9e\u5c65\u6b74 h \u306b\u3088\u3063\u3066\u8a00\u8a9e\u304c\u5b9a\u307e\u308b\u3053\u3068\u3092\u8a00\u3044\u307e\u3059\u3002 \u5b9f\u7528\u7684\u306b\u306f n-gram \u8a00\u8a9e\u30e2\u30c7\u30eb\u306f n \u8a9e\u306e\u5358\u8a9e\u7cfb\u5217\u30d1\u30bf\u30fc\u30f3\u3092\u8868\u8c61\u3059\u308b\u30e2\u30c7\u30eb\u3067\u3059\u3002 n-gram \u8a00\u8a9e\u30e2\u30c7\u30eb\u3067\u306f n \u306e\u6b21\u6570\u5897\u5927\u306b\u5f93\u3063\u3066\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u6307\u6570\u95a2\u6570\u7684\u306b\u5897\u5927\u3057\u307e\u3059\u3002 \u3059\u306a\u308f\u3061\u9ad8\u6b21 n \u30b0\u30e9\u30e0\u8a00\u8a9e\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u63a8\u5b9a\u306b\u5fc5\u8981\u306a\u8a00\u8a9e\u60c5\u5831\u306e\u30b3\u30fc\u30d1\u30b9\u30b5\u30a4\u30ba\u306f\uff0c\u6b21\u6570\u5897\u5927\u306b\u4f34\u3063\u3066\uff0c\u6025\u6fc0\u4e0d\u8db3\u3057\u307e\u3059 Wikipedia \u304b\u3089\u306e\u5f15\u7528\u3067\u306f\u6b21\u5f0f: p(w_1,\\dots,w_m)=\\prod_{i=1}^{m} P(w_i\\vert w_1,\\ldots,w_{i-1})\\simeq \\prod_{i=1}^{m}p(w_i\\vert w_{i-(n-1)},\\ldots,w_{i-1}) \u4e0a\u5f0f\u3067\u306f m \u3067\u3059\u304c\uff0c\u4f1d\u7d71\u7684\u306b n \u30b0\u30e9\u30e0\u3068\u547c\u3073\u307e\u3059\u3002 n=1 \u3067\u3042\u308c\u3070\u76f4\u524d\u306e 1 \u3064\u3092\u8003\u616e\u3057\u3066 \u6b21\u8a9e\u3092\u4e88\u6e2c\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u4f59\u8ac7[^gram] \u3067\u3059\u304c n=0 : \u30cc\u30eb\u30b0\u30e9\u30e0 null-gram n=1 : \u30e6\u30cb\u30b0\u30e9\u30e0 uni-gram n=2 : \u30d0\u30a4\u30b0\u30e9\u30e0 bi-gram n=3 : \u30c8\u30ea\u30b0\u30e9\u30e0 tri-gram \u306a\u3069\u3068\u547c\u3070\u308c\u307e\u3059\u3002 [^gram]: \u4e94\u6708\u877f\u3044\u3053\u3068\u3092\u8a00\u3048\u3070 Manning (1999, p.193) \u306b\u3088\u308b\u3068\u5358\u8a9e gram \u306f\u30ae\u30ea\u30b7\u30e3\u8a9e\u7531\u6765\u306e\u5358\u8a9e\u3060\u305d\u3046\u3067\u3059\u3002\u5f93\u3063\u3066 gram \u306b\u4ed8\u3051\u308b\u6570\u63a5\u982d\u8f9e\u3082\u30ae\u30ea\u30b7\u30e3\u8a9e\u3067\u3042\u308b\u6559\u990a\u3092\u6301\u3064\u3079\u304d\u3067\u3059\u3002\u305d\u3046\u3059\u308b\u3068 n=1 : mono-gram, n=2 : di-gram, n=4 : tetra-gram \u304c\u6559\u990a\u3067\u3059\u3002 n=3 \u306f\u30ae\u30ea\u30b7\u30e3\uff0c\u30ed\u30fc\u30de\u5171\u901a\u3067 tri-gram \u3067\u3059\u3002\u65e5\u5e38\u4f1a\u8a71\u3067\u306f n=4 \u3092\u30af\u30ef\u30c3\u30c9\u30b0\u30e9\u30e0(\u30e9\u30c6\u30f3\u8a9e\u7531\u6765)\u3084\u30d5\u30a9\u30fc\u30b0\u30e9\u30e0\u3068\u547c\u3076\u3053\u3068\u3082\u591a\u3044\u3067\u3059\u3002","title":"1.3. N-\u30b0\u30e9\u30e0\u8a00\u8a9e\u30e2\u30c7\u30eb"},{"location":"lect07/#14","text":"\u30b9\u30d1\u30fc\u30b9\u306a\u8a00\u8a9e\u5c65\u6b74 h \u306f\u4f4e\u6b21\u5143\u7a7a\u9593\u3078\u3068\u5c04\u5f71\u3055\u308c\u308b\u3002\u985e\u4f3c\u3057\u305f\u8a00\u8a9e\u5c65\u6b74\u306f\u7fa4\u5316\u3059\u308b \u985e\u4f3c\u306e\u8a00\u8a9e\u5c65\u6b74\u3092\u5171\u6709\u3059\u308b\u3053\u3068\u3067\uff0c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a00\u8a9e\u30e2\u30c7\u30eb\u306f\u9811\u5065 (\u8a13\u7df4\u30c7\u30fc\u30bf\u304b\u3089\u63a8\u5b9a\u3059\u3079\u304d\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5c11\u306a\u3044)\u3002","title":"1.4. \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a00\u8a9e\u30e2\u30c7\u30eb\u3042\u308b\u3044\u306f\u30df\u30b3\u30ed\u30d5\u9769\u547d"},{"location":"lect07/#15-nnlm-nnlm","text":"\u56f3: \u30d5\u30a3\u30fc\u30c9\u30d5\u30a9\u30ef\u30fc\u30c9\u578b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a00\u8a9e\u30e2\u30c7\u30eb NNLM [@2003Bengio],[@2007Schwenk].","title":"1.5 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a00\u8a9e\u30e2\u30c7\u30eb NNLM \u30d5\u30a3\u30fc\u30c9\u30d5\u30a9\u30ef\u30fc\u30c9\u578b NNLM"},{"location":"lect07/#rnnlm","text":"\u5165\u529b\u5c64 w \u3068\u51fa\u529b\u5c64 y \u306f\u540c\u4e00\u6b21\u5143\uff0c\u7dcf\u8a9e\u5f59\u6570\u306b\u4e00\u81f4\u3002(\u7d04\u4e00\u4e07\u8a9e\u304b\u308920\u4e07\u8a9e) \u4e2d\u9593\u5c64 s \u306f\u76f8\u5bfe\u7684\u306b\u4f4e\u6b21\u5143 (50\u304b\u30891000\u30cb\u30e5\u30fc\u30ed\u30f3) \u5165\u529b\u5c64\u304b\u3089\u4e2d\u9593\u5c64\u3078\u306e\u7d50\u5408\u4fc2\u6570\u884c\u5217 U \uff0c\u4e2d\u9593\u5c64\u304b\u3089\u51fa\u529b\u5c64\u3078\u306e\u7d50\u5408\u4fc2\u6570\u884c\u5217 V \uff0c \u518d\u5e30\u7d50\u5408\u4fc2\u6570\u884c\u5217 W \u304c\u306a\u3051\u308c\u3070\u30d0\u30a4\u30b0\u30e9\u30e0(2-\u30b0\u30e9\u30e0)\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a00\u8a9e\u30e2\u30c7\u30eb\u3068\u7b49\u3057\u3044","title":"\u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a00\u8a9e\u30e2\u30c7\u30eb RNNLM"},{"location":"lect07/#16-rnnlm-bptt","text":"2011 Mikolov Fig.3 \u518d\u5e30\u7d50\u5408\u4fc2\u6570\u884c\u5217 \\mathbf{W} \u3092\u6642\u9593\u5c55\u958b\u3057\uff0c\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u307f\u306a\u3057\u3066\u5b66\u7fd2\u3092\u884c\u3046 \u6642\u9593\u8cab\u901a\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u306f Backpropagation Through Time (BPTT) \u3068\u3044\u3044\u307e\u3059","title":"1.6. RNNLM \u306e\u5b66\u7fd2 \u6642\u9593\u8cab\u901a\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3 BPTT"},{"location":"lect07/#17-bptt","text":"\u56f3: \u30d0\u30c3\u30c1\u66f4\u65b0\u306e\u4f8b\u3002\u8d64\u3044\u77e2\u5370\u306f\u8aa4\u5dee\u52fe\u914d\u304c\u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u306e\u6642\u9593\u5c55\u958b\u3092\u9061\u3063\u3066\u3044\u304f\u69d8\u5b50\u3092\u793a\u3057\u3066\u3044\u308b\u3002","title":"1.7. \u6642\u9593\u8cab\u901a\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3 BPTT"},{"location":"lect07/#18","text":"Pros/Cons OOV problems\u3002OOV: Out of Vocabulary \u554f\u984c\u3002\u30bd\u30fc\u30b7\u30e3\u30eb\u30e1\u30c7\u30a3\u30a2\u306a\u3069\u3092\u6d3b\u7528\u3059\u308b\u5834\u5408\u4e0d\u53ef\u907f\u306e\u554f\u984c","title":"1.8. \u6587\u5b57\u30d9\u30fc\u30b9\u304b\u5358\u8a9e\u30d9\u30fc\u30b9\u304b\uff1f"},{"location":"lect07/#2","text":"","title":"2. \u518d\u5e30\u578b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af"},{"location":"lect07/#21-nettalk","text":"\u7cfb\u5217\u60c5\u5831\u51e6\u7406\u3092\u6271\u3063\u305f\u521d\u671f\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f8b\u3068\u3057\u3066 NETTalk \u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002 NETTalk[^NETTalk] \u306f\u6587\u5b57\u3092\u97f3\u8aad\u3059\u308b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3059\u3002\u4e0b\u56f3\u306e\u3088\u3046\u306a\u69cb\u6210\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u4e0b\u56f3\u306e\u3088\u3046\u306b\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8 7 \u6587\u5b57\u3092\u5165\u529b\u3057\u3066\uff0c\u7a7a\u767d\u306f\u30a2\u30f3\u30c0\u30fc\u30e9\u30a4\u30f3\u3067\u8868\u73fe\u3055\u308c\u3066\u3044\u307e\u3059\uff0c\u4e2d\u592e\u306e\u6587\u5b57\u306e\u767a\u97f3\u3092\u5b66\u7fd2\u3059\u308b 3 \u5c64\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3059\u3002NETTalk \u306f 7 \u6587\u5b57\u5e45\u306e\u7a93\u3092\u79fb\u52d5\u3055\u305b\u306a\u304c\u3089 \u9010\u6b21\u4e2d\u592e\u306e\u6587\u5b57\u306e\u767a\u97f3\u3092\u5b66\u7fd2\u3057\u307e\u3057\u305f\u3002\u305f\u3068\u3048\u3070 /I ate the apple/ \u3068\u3044\u3046\u6587\u7ae0\u3067\u306f \"the\" \u3092 \"\u30b6\" \u3067\u306f\u306a\u304f \"\u30b8\" \u3068\u767a\u97f3\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u5370\u5237\u5358\u8a9e\u306e\u8aad\u5b57\u904e\u7a0b\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u3067\u3042\u308b SM89[^SM89], PMSP96[^PMSP96] \u3067\u7528\u3044\u3089\u308c\u305f\u767a\u97f3\u8868\u73fe\u306f ARPABET \u306e\u4e9c\u7a2e\u3067\u3059\u3002Python \u3067\u306f nltk \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3068 ARPABET \u306e\u767a\u97f3\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059( ARPABET \u306e\u30c7\u30e2 )\u3002 [^NETTalk]: Sejnowski, T.J. and Rosenberg, C. R. (1987) Parallel Networks that Learn to Pronounce English Text, Complex Systems 1, 145-168. [^SM89]: Seidenberg, M. S. & McClelland, J. L. (1989). A distributed, developmetal model of word recognition and naming. Psychological Review, 96(4), 523\u2013568. [^PMSP96]: Plaut, D. C., McClelland, J. L., Seidenberg, M. S. & Patterson, K. (1996). Understanding normal and impaired word reading: Computational principles in quasi-regular domains. Psychological Review, 103, 56\u2013115. Sejnowski (1986) Fig. 2","title":"2.1. NETtalk"},{"location":"lect07/#22","text":"NETTalk \u3092\u5148\u304c\u3051\u3068\u3057\u3066 \u5358\u7d14\u518d\u5e30\u578b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af Simple Recurrent Neural networks (SRN) \u304c\u63d0\u6848\u3055\u308c\u307e\u3057\u305f\u3002 \u767a\u6848\u8005\u306e\u540d\u524d\u3067 Jordan \u30cd\u30c3\u30c8 [^JordanNet]\uff0c Elman \u30cd\u30c3\u30c8 [^ElmanNet] \u3068\u547c\u3070\u308c\u307e\u3059\u3002 [^JordanNet]: Joradn, M.I. (1986) Serial Order: A Parallel Distributed Processing Approach, UCSD tech report. [^ElmanNet]: Elman, J. L. (1990)Finding structure in time, Cognitive Science, 14, 179-211. Jordan \u30cd\u30c3\u30c8\u3082 Elman \u30cd\u30c3\u30c8\u3082\u4e0a\u4f4d\u5c64\u304b\u3089\u306e \u5e30\u9084\u4fe1\u53f7 \u3092\u6301\u3061\u307e\u3059\u3002\u3053\u308c\u3092 \u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u7d50\u5408 \u3068\u547c\u3073\uff0c\u4f4d\u7f6e\u6642\u523b\u524d\u306e\u72b6\u614b\u304c\u6b21\u306e\u6642\u523b\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002Jordan \u30cd\u30c3\u30c8\u3067\u306f\u4e00\u6642\u523b\u524d\u306e\u51fa\u529b\u5c64\u306e\u60c5\u5831\u304c\u7528\u3044\u3089\u308c\u307e\u3059(\u4e0b\u56f3)\u3002 \u56f3\uff1a\u30de\u30a4\u30b1\u30eb\u30fb\u30b8\u30e7\u30fc\u30c0\u30f3\u767a\u6848\u30b8\u30e7\u30fc\u30c0\u30f3\u30cd\u30c3\u30c8 [@1986Jordan] \u99c4\u83d3\u5b50\u83d3\u5b50 \u5f7c\uff08\u30de\u30a4\u30b1\u30eb\u30fb\u30b8\u30a7\u30d5\u30a7\u30ea\u30fc(\u30a8\u30a2\u30fc)\u30fb\u30b8\u30e7\u30fc\u30c0\u30f3\uff09 \u3067\u306f\u306a\u3044 :) \u30de\u30a4\u30b1\u30eb\u30fb\u30a2\u30fc\u30a6\u30a3\u30f3\u30fb\u30b8\u30e7\u30fc\u30c0\u30f3\u3002\u30df\u30b9\u30bf\u30fc\u6a5f\u68b0\u5b66\u7fd2[^jordan_ai_revolution_not_yet] [^jordan_ai_revolution_not_yet]: \u5f7c\u306f(\u3082\uff1f)\u795e\u69d8\u3067\u3059\u3002\u591a\u304f\u306e\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u63d0\u6848\u3057\u7d9a\u3051\u3066\u3044\u308b\u5f71\u97ff\u529b\u306e\u3042\u308b\u4eba\u3067\u3059\u3002\u9577\u3089\u304f\u6a5f\u68b0\u5b66\u7fd2\u306e\u56fd\u969b\u96d1\u8a8c\u306e\u7de8\u96c6\u9577\u3067\u3057\u305f\u30022018\u5e74 AI \u9769\u547d\u306f\u672a\u3060\u8d77\u3053\u3063\u3066\u3044\u306a\u3044 \u3068\u8a00\u3044\u51fa\u3057\u3066\u8b70\u8ad6\u3092\u547c\u3073\u307e\u3057\u305f\u3002 \u4e00\u65b9\uff0cElman \u30cd\u30c3\u30c8\u3067\u306f\u4e00\u6642\u523b\u524d\u306e\u4e2d\u9593\u5c64\u306e\u72b6\u614b\u304c\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u4fe1\u53f7\u3068\u3057\u3066\u7528\u3044\u3089\u308c\u307e\u3059\u3002 \u56f3\uff1a\u30b8\u30a7\u30d5\u30fb\u30a8\u30eb\u30de\u30f3\u767a\u6848\u306e\u30a8\u30eb\u30de\u30f3\u30cd\u30c3\u30c8[@lman1990],[@Elman1993] \u3069\u3061\u3089\u3082\u4e00\u6642\u523b\u524d\u306e\u72b6\u614b\u3092\u77ed\u671f\u8a18\u61b6\u3068\u3057\u3066\u4fdd\u6301\u3057\u3066\u5229\u7528\u3059\u308b\u306e\u3067\u3059\u304c\uff0c\u5b9f\u969b\u306e\u5b66\u7fd2\u3067\u306f\u4e00\u6642\u523b\u524d\u306e\u72b6\u614b\u3092\u30b3\u30d4\u30fc\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3060\u3051\u3067\uff0c\u5b9f\u969b\u306e\u5b66\u7fd2\u3067\u306f\u901a\u5e38\u306e \u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5 \u3059\u306a\u308f\u3061\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u6cd5\u304c\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u4e0a 2 \u3064\u306e\u56f3\u306b\u793a\u3057\u305f\u3068\u304a\u308a U \u3068 W \u3068\u306f\u5171\u306b\u4e2d\u9593\u5c64\u3078\u306e\u7d50\u5408\u4fc2\u6570\u3067\u3042\u308a\uff0cV \u306f\u4e2d\u9593\u5c64\u304b\u3089\u51fa\u529b\u5c64\u3078\u306e\u7d50\u5408\u4fc2\u6570\u3067\u3059\u3002Z=I \u3068\u66f8\u304d\u70b9\u7dda\u3067\u63cf\u304b\u308c\u3066\u3044\u308b\u77e2\u5370\u306f\u30b3\u30d4\u30fc\u3059\u308b\u3060\u3051\u3067\u3059\u306e\u3067\u5b66\u7fd2\u306f\u8d77\u3053\u308a\u307e\u305b\u3093\u3002\u3053\u306e\u3088\u3046\u306b\u8003\u3048\u308c\u3070 SRN \u306f 3 \u5c64\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002 SRN \u306f\u3053\u306e\u3088\u3046\u306a\u5358\u7d14\u306a\u69cb\u9020\u306b\u3082\u95a2\u308f\u3089\u305a \u30c1\u30e5\u30fc\u30ea\u30f3\u30b0\u5b8c\u5168 \u3067\u3042\u308d\u3046\u3068\u8a00\u308f\u308c\u3066\u304d\u307e\u3057\u305f\u3002 \u3059\u306a\u308f\u3061\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u8a08\u7b97\u53ef\u80fd\u306a\u554f\u984c\u306f\u3059\u3079\u3066\u8a08\u7b97\u3067\u304d\u308b\u304f\u3089\u3044\u5f37\u529b\u306a\u8a08\u7b97\u6a5f\u3060\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002 Jordan \u30cd\u30c3\u30c8\u306f\u51fa\u529b\u5c64\u306e\u60c5\u5831\u3092\u7528\u3044\u308b\u305f\u3081 \u904b\u52d5\u5236\u5fa1 \u306b Elan \u30cd\u30c3\u30c8\u306f\u5185\u90e8\u72b6\u614b\u3092\u5229\u7528\u3059\u308b\u305f\u3081 \u8a00\u8a9e\u51e6\u7406 \u306b \u305d\u308c\u305e\u308c\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u5f93\u3063\u3066 \u5931\u884c aparxia (no matter what kind of apraxia such as 'ideomotor' or 'conceptual')\uff0c \u884c\u70ba\u969c\u5bb3 \u306e\u30e2\u30c7\u30eb\u3092\u8003\u3048\u308b\u5834\u5408 Jordan \u30cd\u30c3\u30c8\u306f\u8003\u616e\u3059\u3079\u304d\u9078\u629e\u80a2\u306e\u5019\u88dc\u306e\u4e00\u3064\u3068\u306a\u308b\u3067\u3057\u3087\u3046\u3002","title":"2.2. \u5358\u7d14\u518d\u5e30\u578b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af"},{"location":"lect07/#23","text":"\u4e00\u6642\u523b\u524d\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3057\u3066\u5229\u7528\u3059\u308b SRN \u306f\u4e0b\u56f3\u5de6\u306e\u3088\u3046\u306b\u63cf\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u540c\u6642\u306b\u6642\u9593\u767a\u5c55\u3092\u8003\u616e\u3059\u308c\u3070\u4e0b\u56f3\u53f3\u306e\u3088\u3046\u306b\u63cf\u304f\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 Time unfoldings of recurrent neural networks \u4e0a\u56f3\u53f3\u3092\u982d\u90e8\u3092 90 \u5ea6\u53f3\u306b\u50be\u3051\u3066\u773a\u3081\u3066\u304f\u3060\u3055\u3044\u3002\u3042\u308b\u3044\u306f\u540c\u7fa9\u3067\u3059\u304c\u4e0a\u56f3\u53f3\u3092\u53cd\u6642\u8a08\u56de\u308a\u306b 90 \u5ea6\u56de\u8ee2\u3055\u305b\u305f\u30e1\u30f3\u30bf\u30eb\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u60f3\u50cf\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u306e\u3053\u3068\u304b\u3089 \"SRN \u3068\u306f\u6642\u9593\u65b9\u5411\u306b\u5c55\u958b\u3057\u305f\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3067\u3042\u308b\" \u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002","title":"2.3. \u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6642\u9593\u5c55\u958b"},{"location":"lect07/#24","text":"\u4e0b\u56f3\u306b \u30a8\u30eb\u30de\u30f3 \u304c\u7528\u3044\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u3092\u793a\u3057\u307e\u3057\u305f\u3002\u56f3\u4e2d\u306e\u6570\u5b57\u306f\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u6570\u3092\u8868\u3057\u307e\u3059\u3002\u5165\u529b\u5c64\u3068\u51fa\u529b\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u6570 26 \u3068\u306f\uff0c\u3082\u3061\u3044\u305f\u8a9e\u5f59\u6570\u304c 26 \u3067\u3042\u3063\u305f\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002 from [@Elman1991startingsmall] \u30a8\u30eb\u30de\u30f3\u306f\uff0c\u7cfb\u5217\u4e88\u6e2c\u8ab2\u984c\u306b\u3088\u3063\u3066\u6b21\u306e\u5358\u8a9e\u3092\u4e88\u60f3\u3059\u308b\u3053\u3068\u3092\u7e70\u308a\u8fd4\u3057\u5b66\u7fd2\u3055\u305b\u305f\u7d50\u679c\uff0c\u6587\u6cd5\u69cb\u9020\u304c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u7d50\u5408\u4fc2\u6570\u3068\u3057\u3066\u5b66\u7fd2\u3055\u308c\u308b\u3053\u3068\u3092\u793a\u3057\u307e\u3057\u305f\u3002Elman \u30cd\u30c3\u30c8\u306b\u3088\u3063\u3066\uff0c\u57cb\u3081\u8fbc\u307f\u6587\u306e\u51e6\u7406\uff0c\u6642\u5236\u306e\u4e00\u81f4\uff0c\u6027\u3084\u6570\u306e\u4e00\u81f4\uff0c\u9577\u8ddd\u96e2\u4f9d\u5b58\u306a\u3069\u3092\u6b63\u3057\u304f\u4e88\u6e2c\u3067\u304d\u308b\u3053\u3068\u304c\u793a\u3055\u308c\u307e\u3057\u305f(Elman, 1990, 1991, 1993)\u3002 S \\rightarrow NP VP \u201c.\u201d NP \\rightarrow PropN | N | N RC VP \\rightarrow V (NP) RC \\rightarrow who NP VP | who VP (NP) N \\rightarrow boy | girl | cat | dog | boys | girls | cats | dogs PropN \\rightarrow John | Mary | V \\rightarrow chase | feed | see | hear | walk | live | chases | feeds | seeds | hears | walks | lives \u3053\u308c\u3089\u306e\u898f\u5247\u306b\u306f\u3055\u3089\u306b 2 \u3064\u306e\u5236\u7d04\u304c\u3042\u308a\u307e\u3059\u3002 N \u3068 V \u306e\u6570\u304c\u4e00\u81f4\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 \u76ee\u7684\u8a9e\u3092\u53d6\u308b\u52d5\u8a5e\u306b\u5236\u9650\u304c\u3042\u308b\u3002\u4f8b\u3048\u3070hit, feed \u306f\u76f4\u63a5\u76ee\u7684\u8a9e\u304c\u5fc5\u305a\u5fc5\u8981\u3067\u3042\u308a\uff0csee \u3068hear \u306f\u76ee\u7684\u8a9e\u3092\u3068\u3063\u3066\u3082\u3068\u3089\u306a\u304f\u3066\u3082\u826f\u3044\u3002walk \u3068live \u3067\u306f\u76ee\u7684\u8a9e\u306f\u4e0d\u8981\u3067\u3042\u308b\u3002 \u6587\u7ae0\u306f 23 \u500b\u306e\u9805\u76ee\u304b\u3089\u69cb\u6210\u3055\u308c\uff0c8 \u500b\u306e\u540d\u8a5e\u3068 12 \u500b\u306e\u52d5\u8a5e\uff0c\u95a2\u4fc2\u4ee3\u540d\u8a5e who\uff0c\u53ca\u3073\u6587\u306e\u7d42\u7aef\u3092\u8868\u3059\u30d4\u30ea\u30aa\u30c9\u3067\u3059\u3002\u3053\u306e\u6587\u6cd5\u898f\u5247\u304b\u3089\u751f\u6210\u3055\u308c\u308b\u6587 S \u306f\uff0c\u540d\u8a5e\u53e5 NP \u3068\u52d5\u8a5e\u53e5 VP \u3068\u6700\u5f8c\u306b\u30d4\u30ea\u30aa\u30c9\u304b\u3089\u6210\u308a\u7acb\u3063\u3066\u3044\u308b\u3002 \u540d\u8a5e\u53e5 NP \u306f\u56fa\u6709\u540d\u8a5e PropN \u304b\u540d\u8a5e N \u304b\u540d\u8a5e\u306b\u95a2\u4fc2\u7bc0 RC \u304c\u4ed8\u52a0\u3057\u305f\u3082\u306e\u306e\u4f55\u308c\u304b\u3068\u306a\u308a\u307e\u3059\u3002 \u52d5\u8a5e\u53e5 VP \u306f\u52d5\u8a5e V \u3068\u540d\u8a5e\u53e5 NP \u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u304c\u540d\u8a5e\u53e5\u304c\u4ed8\u52a0\u3055\u308c\u308b\u304b\u5426\u304b\u306f\u52d5\u8a5e\u306e\u7a2e\u985e\u306b\u3088\u3063\u3066\u5b9a\u307e\u308b\u3002 \u95a2\u4fc2\u7bc0 RC \u306f\u95a2\u4fc2\u4ee3\u540d\u8a5e who \u3067\u59cb\u307e\u308a\uff0c\u540d\u8a5e\u53e5 NP \u3068\u52d5\u8a5e\u53e5 VP \u304b\uff0c\u3082\u3057\u304f\u306f\u52d5\u8a5e\u53e5\u3060\u3051\u306e\u3069\u3061\u3089\u304b\u304b\u304c\u7d9a\u304f\uff0c\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002 \u4e0b\u56f3\u306b\u8a13\u7df4\u5f8c\u306e\u4e2d\u9593\u5c64\u306e\u72b6\u614b\u3092\u4e3b\u6210\u5206\u5206\u6790\u306b\u304b\u3051\u305f\u7d50\u679c\u3092\u793a\u3057\u307e\u3057\u305f\u3002\"boy chases boy\", \"boy sees boy\", \u304a\u3088\u3073 \"boy walks\" \u3068\u3044\u3046\u6587\u3092\u9010\u6b21\u5165\u529b\u3057\u305f\u5834\u5408\u306e\u9077\u79fb\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002 \u540c\u3058\u6587\u578b\u306e\u6587\u7ae0\u306f\u540c\u3058\u3088\u3046\u306a\u72b6\u614b\u9077\u79fb\u3092\u8fbf\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002 \u4e0b\u56f3\u306f\u6587 \"boy chases boy who chases boy\" \u3092\u5165\u529b\u3057\u305f\u5834\u5408\u306e\u9077\u79fb\u56f3\u3067\u3059\u3002\u3053\u306e\u6587\u7ae0\u306b\u306f\u5358\u8a9e \"boy\" \u304c 3 \u5ea6\u51fa\u3066\u304d\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u304c\u7570\u306a\u308b\u3051\u308c\u3069\uff0c\u4ed6\u306e\u5358\u8a9e\u3068\u306f\u7570\u306a\u308b\u4f4d\u7f6e\u306b\u9644\u7f6e\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002 \u540c\u69d8\u306b 'chases\" \u304c 2 \u5ea6\u51fa\u3066\u304d\u307e\u3059\u304c\uff0c\u3084\u306f\u308a\u540c\u3058\u3088\u3046\u306a\u4f4d\u7f6e\u3067\uff0c\u304b\u3064\uff0c\u5225\u306e\u5358\u8a9e\u3068\u306f\u7570\u306a\u308b\u4f4d\u7f6e\u306b\u9644\u7f6e\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u540c\u69d8\u306b\u3057\u3066 \"boy who chases boy chases boy\" (\u7537\u306e\u5b50\u3092\u8ffd\u3044\u304b\u3051\u308b\u7537\u306e\u5b50\u304c\u7537\u306e\u5b50\u3092\u8ffd\u3044\u304b\u3051\u308b) \u306e\u72b6\u614b\u9077\u79fb\u56f3\u3092\u4e0b\u56f3\u306b\u793a\u3057\u307e\u3057\u305f\u3002 \u3055\u3089\u306b\u8907\u96d1\u306a\u6587\u7ae0\u4f8b \"boy chases boy who chases boy who chases boy\" \u306e\u72b6\u614b\u9077\u79fb\u56f3\u3092\u4e0b\u56f3\u306b\u5cf6\u3057\u307e\u3059\u3002 Elman \u30cd\u30c3\u30c8\u304c\u69cb\u6587\uff0c\u6587\u6cd5\u51e6\u7406\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u4e0a\u56f3\u306e\u3088\u3046\u306a\u4e2d\u9593\u5c64\u3067\u306e\u72b6\u614b\u9077\u79fb\u3067\u540c\u3058\u5358\u8a9e\u304c \u7570\u306a\u308b\u6587\u4f4d\u7f6e\u3067\u7570\u306a\u308b\u6587\u6cd5\u7684\u5f79\u5272\u3092\u62c5\u3063\u3066\u3044\u308b\u5834\u5408\u306b\uff0c\u5fae\u5999\u306b\u7570\u306a\u308b\u8868\u8c61\u3092\uff0c\u56f3\u306b\u5373\u3057\u3066\u3067\u8a00\u3048\u3070\uff0c \u540c\u3058\u5358\u8a9e\u3067\u306f\uff0c\u540c\u3058\u3088\u3046\u306a\u5834\u6240\u3092\u5360\u3081\u308b\u304c\uff0c\u305d\u306e\u6587\u6cd5\u7684\u5f79\u5272\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u4f4d\u7f6e\u3092\u5360\u3081\u308b\u3053\u3068\u304c \u793a\u5506\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u3053\u3068\u304b\u3089\u4e2d\u9593\u5c64\u306e\u72b6\u614b\u306f\u7570\u306a\u308b\u6587\u7ae0\u306e\u8868\u73fe\u3092\u7570\u306a\u308b\u4f4d\u7f6e\u3068\u3057\u3066\u8868\u73fe\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u8003\u3048\u3089\u308c\uff0c \u5f8c\u8ff0\u3059\u308b \u5358\u8a9e\u306e\u610f\u5473 \u3084 \u81ea\u52d5\u7ffb\u8a33 \u306a\u3069\u306b\u4f7f\u308f\u308c\u308b\u3053\u3068\u306b\u7e4b\u304c\u308a\u307e\u3059(\u6d45\u5ddd\u306e\u4e3b\u89b3\u534a\u5206\u4ee5\u4e0a)","title":"2.4. \u30a8\u30eb\u30de\u30f3\u30cd\u30c3\u30c8\u306b\u3088\u308b\u8a00\u8a9e\u30e2\u30c7\u30eb"},{"location":"lect07/#25-seq2sep","text":"\u4e0a\u8a18\u306e\u4e2d\u9593\u5c64\u306e\u72b6\u614b\u3092\u7d20\u76f4\u306b\u5fdc\u7528\u3059\u308b\u3068 \u6a5f\u68b0\u7ffb\u8a33 \u3084 \u5bfe\u8a71 \u306e\u30e2\u30c7\u30eb\u306b\u306a\u308a\u307e\u3059\u3002 \u4e0b\u56f3\u306f\u521d\u671f\u306e\u7ffb\u8a33\u30e2\u30c7\u30eb\u3067\u3042\u308b \"seq2seq\" \u306e\u6982\u5ff5\u56f3\u3092\u793a\u3057\u307e\u3057\u305f\u3002 \" <eos> \" \u306f\u6587\u672b end of sentence \u3092\u8868\u3057\u307e\u3059\u3002\u4e2d\u592e\u306e \" <eos> \" \u306e\u524d\u304c\u30bd\u30fc\u30b9\u8a00\u8a9e \u3067\u3042\u308a\uff0c\u4e2d\u592e\u306e \" <eos> \" \u306e\u5f8c\u306f\u30bf\u30fc\u30b2\u30c3\u30c8\u8a00\u8a9e\u306e\u8a00\u8a9e\u30e2\u30c7\u30eb\u3067\u3042\u308b SRN \u306e\u4e2d\u9593\u5c64\u3078\u306e \u5165\u529b\u3068\u3057\u3066\u7528\u3044\u307e\u3059\u3002 \u6ce8\u610f\u3059\u3079\u304d\u306f\uff0c\u30bd\u30fc\u30b9\u8a00\u8a9e\u306e\u6587\u7d42\u4e86\u6642\u306e\u4e2d\u9593\u5c64\u72b6\u614b\u306e\u307f\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u8a00\u8a9e\u306e\u6700\u521d\u306e\u4e2d\u9593\u5c64 \u306e\u5165\u529b\u306b\u7528\u3044\u308b\u3053\u3068\u3067\u3042\u308a\uff0c\u305d\u308c\u4ee5\u5916\u306e\u6642\u523b\u3067\u306f\u30bd\u30fc\u30b9\u8a00\u8a9e\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u8a00\u8a9e\u306f\u95a2\u4fc2\u304c \u306a\u3044\u3053\u3068\u3067\u3059\u3002\u9006\u306b\u8a00\u3048\u3070\u6700\u7d42\u6642\u523b\u306e\u4e2d\u9593\u5c64\u72b6\u614b\u304c\u30bd\u30fc\u30b9\u6587\u306e\u60c5\u5831\u5168\u3066\u3092\u542b\u3093\u3067\u3044\u308b\u3068 \u307f\u306a\u3059\u3053\u3068\u3067\u3059\u3002\u3053\u306e\u70b9\u3092\u6539\u5584\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3059\u3053\u3068\u304c 2014 \u5e74\u4ee5\u964d\u76db\u3093\u306b\u884c\u308f\u308c\u3066\u304d\u307e\u3057\u305f\u3002 \u9855\u8457\u306a\u4f8b\u304c\u5f8c\u8ff0\u3059\u308b \u53cc\u65b9\u5411 RNN \uff0c LSTM \u3092\u63a1\u7528\u3057\u305f\u308a\uff0c \u6ce8\u610f \u6a5f\u69cb\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u3067\u3057\u305f\u3002 From [@2014Sutskever_Sequence_to_Sequence] \\mbox{argmax}_{\\theta} \\left(-\\log p\\left(w_{t+1}\\right)\\right)=f\\left(w_{t}\\vert \\theta\\right)","title":"2.5. Seq2sep \u7ffb\u8a33\u30e2\u30c7\u30eb"},{"location":"lect07/#26-rnn","text":"\u53cc\u65b9\u5411 RNN \u3084 LSTM \u3092\u7d39\u4ecb\u3059\u308b\u524d\u306b\uff0c\u30ab\u30eb\u30d1\u30b7\u30fc\u306e\u30d6\u30ed\u30b0[^karpathy] \u304b\u3089\u4e0b\u56f3\u306b\u5f15\u7528\u3057\u307e\u3059\u3002 \u4e0b\u306e 2 \u3064\u56f3\u3067\u306f\u30d4\u30f3\u30af\u8272\u304c\u5165\u529b\u5c64\uff0c\u7dd1\u304c\u4e2d\u9593\u5c64\uff0c\u9752\u304c\u51fa\u529b\u5c64\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002 [^karpathy]: \u53bb\u5e74\u307e\u3067\u30b9\u30bf\u30f3\u30d5\u30a9\u30fc\u30c9\u5927\u5b66\u306e\u5927\u5b66\u9662\u751f\u3002\u73fe\u5728\u306f\u30b9\u30c6\u30e9\u81ea\u52d5\u8eca\uff0c\u30a4\u30fc\u30ed\u30f3\u30fb\u30de\u30b9\u30af\u304c\u793e\u9577\uff0c\u306e AI \u90e8\u9577\u3055\u3093\u3067\u3059\u3002\u56f3\u306f\u5f7c\u306e\u30d6\u30ed\u30b0\u304b\u3089\u5f15\u7528\u3067\u3059\u3002\u86c7\u8db3\u3067\u3059\u304c\u30d6\u30ed\u30b0\u306e\u30bf\u30a4\u30c8\u30eb\u304c unreasonable effectiveness of RNN \u3067\u3059\u3002\u904e\u53bb\u306e\u5049\u5927\u306a\u8ad6\u6587 Wiegner (1960), Hamming (1967), Halevy (2009) \u304b\u3089\u306e \u30d1\u30af\u30ea \u656c\u610f\u3092\u8868\u3057\u305f\u30aa\u30de\u30fc\u30b8\u30e5 \u3067\u3059\u3002\"unreasonable effectiveness of [science|mathematics|data]\" \\ldots www > RNN variations from http://karpathy.github.io/2015/05/21/rnn-effectiveness/ \u4e0a\u56f3\u6700\u5de6\u306f\u901a\u5e38\u306e\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u753b\u50cf\u8a8d\u8b58\uff0c\u5206\u985e\uff0c\u8b58\u5225\u554f\u984c\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002 \u4e0a\u56f3\u5de6\u304b\u3089 2 \u3064\u76ee\u306f\uff0c\u753b\u50cf\u304b\u3089\u306e\u6587\u7ae0\u751f\u6210 \u4e0a\u56f3\u4e2d\u592e\uff0c\u5de6\u304b\u3089 3 \u3064\u76ee\u306f\uff0c\u6975\u6027\u5206\u6790\uff0c\u6587\u7ae0\u306e\u30ec\u30d3\u30e5\u30fc\uff0c\u661f\u306e\u6570\u63a8\u5b9a \u4e0a\u56f3\u53f3\u304b\u3089 2 \u3064\u76ee\u306f\u7ffb\u8a33\u3084\u6587\u7ae0\u751f\u6210 \u4e0a\u56f3\u6700\u53f3\u306f\u30d3\u30c7\u30aa\u5206\u6790\uff0c\u30d3\u30c7\u30aa\u811a\u6ce8\u4ed8\u3051 \u306a\u3069\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u3053\u308c\u307e\u3067\u7406\u89e3\u3092\u4fc3\u9032\u3059\u308b\u76ee\u7684\u3067\u4e2d\u9593\u5c64\u3092\u305f\u3060\u4e00\u5c64\u3068\u3057\u3066\u63cf\u3044\u3066\u304d\u307e\u3057\u305f\u3002 \u3067\u3059\u304c\u304c\u4e2d\u9593\u5c64\u306f\u591a\u5c64\u5316\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306e\u65b9\u304c\u591a\u3044\u3053\u3068\uff0c\u4e2d\u9593\u5c64\u5404\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u306f 1024 \u7a0b\u5ea6\u307e\u3067\u7528\u3044\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u306f\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6570\u306f\u5404\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u304c 4 \u3064\u3067\u3042\u308b\u5834\u5408\u306e\u6570\u5024\u4f8b\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u5165\u529b\u5c64\u3067\u306f \u30ef\u30f3\u30db\u30c3\u30c8 \u8868\u73fe[^onehot] [^onehot]: \u30d9\u30af\u30c8\u30eb\u306e\u8981\u7d20\u306e\u3046\u3061\u4e00\u3064\u3060\u3051\u304c \"1\" \u3067\u3042\u308a\u4ed6\u306f\u5168\u3066 \"0\u201d \u3067\u3042\u308b\u758e\u306a\u30d9\u30af\u30c8\u30eb\u306e\u3053\u3068\u3002\u4e00\u3064\u3060\u3051\u304c \"\u71b1\u3044\" \u3042\u308b\u3044\u306f \"\u8f9b\u3044\" \u30d9\u30af\u30c8\u30eb\u3068\u547c\u3073\u307e\u3059\u3002\u4ee5\u524d\u306f one-of- k \u8868\u73fe (MacKay \u306e PRML \u306a\u3069) \u3068\u547c\u3070\u308c\u3066\u3044\u305f\u306e\u3067\u3059\u304c \u30ef\u30f3\u30db\u30c3\u30c8\u8868\u73fe\uff0c\u3042\u308b\u3044\u306f \u30ef\u30f3\u30db\u30c3\u30c8\u30d9\u30af\u30c8\u30eb (\u304a\u305d\u3089\u304f\u547d\u540d\u8005\u306f Begnio \u4e00\u6d3e)\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\u30ef\u30f3\u30db\u30c3\u30c8\u30d9\u30af\u30c8\u30eb\u3092\u5b66\u7fd2\u3055\u305b\u308b\u3068\u6642\u9593\u304c\u304b\u304b\u308b\u3068\u3044\u3046\u8a08\u7b97\u4e0a\u306e\u5f31\u70b9\u304c\u751f\u3058\u307e\u3059\u3002\u5178\u578b\u7684\u306a\u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5\u306b\u3088\u308b\u5b66\u7fd2\u3067\u306f\uff0c\u4e0b\u4f4d\u5c64\u306e\u5165\u529b\u5024\u306b\u7d50\u5408\u4fc2\u6570\u3092\u639b\u3051\u305f\u5024\u3067\u7d50\u5408\u4fc2\u6570\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\u5f93\u3063\u3066\uff0c\u4e0b\u4f4d\u5c64\u306e\u5024\u306e\u307b\u3068\u3093\u3069\u304c \"0\" \u3067\u3042\u308b\u30ef\u30f3\u30db\u30c3\u30c8\u30d9\u30af\u30c8\u30eb\u306f\u5b66\u7fd2\u52b9\u7387\u304c\u843d\u3061\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u3053\u3067 Elman \u306f\u30ef\u30f3\u30db\u30c3\u30c8\u30d9\u30af\u30c8\u30eb\u3092\u5b9f\u6570\u5024\u3092\u6301\u3064\u591a\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u306b\u5909\u63db\u3057\u3066\u304b\u3089\u7528\u3044\u308b\u3053\u3068\u3092\u884c\u3044\u307e\u3057\u305f\u3002\u4e0a\u306e\u30a8\u30eb\u30de\u30f3\u30cd\u30c3\u30c8\u306b\u3088\u308b\u6587\u6cd5\u5b66\u7fd2\u306b\u304a\u3044\u3066,\u30cb\u30e5\u30fc\u30ed\u30f3\u6570 10 \u306e\u5358\u8a9e\u57cb\u3081\u8fbc\u307f\u5c64\u3068\u66f8\u304b\u308c\u305f\u5c64\u304c\u3053\u308c\u306b\u8a72\u5f53\u3057\u307e\u3059\u3002\u5358\u8a9e\u57cb\u3081\u8fbc\u307f\u5c64\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u5b66\u7fd2\u52b9\u7387\u304c\u6539\u5584\u3057\uff0c\u5f8c\u306b\u793a\u3059 word2vec \u306a\u3069\u306e \u5206\u6563\u30d9\u30af\u30c8\u30eb\u30e2\u30c7\u30eb \u3078\u3068\u767a\u5c55\u3057\u307e\u3059\u3002 > RNN variations from http://karpathy.github.io/2015/05/21/rnn-effectiveness/ [@1991Siegelmann_RNN_universal] said Turing completeness of RNN.","title":"2.6. \u591a\u69d8\u306a RNN \u3068\u305d\u306e\u4e07\u80fd\u6027"},{"location":"lect07/#27-rnn-birnn","text":"RNN \u3092\u6539\u5584\u3059\u308b\u30e2\u30c7\u30eb\u3068\u3057\u3066 2 \u3064\u7d39\u4ecb\u3057\u307e\u3059\u3002\u4e00\u3064\u306f \u53cc\u65b9\u5411 RNN bidirectional RNN (BiRNN) \u3067 Shuster[^shuster]\uff0c\u5225\u306f LSTM \u3067\u3059\u3002\u3053\u3053\u3067\u306f BiRNN \u3092\u6271\u3044\u307e\u3059\u3002\u4e0b\u56f3\u306b BiRNN \u306e\u6982\u5ff5\u56f3\u3092\u793a\u3057\u307e\u3057\u305f\u3002 BiRNN \u306f RNN \u304c 2 \u3064\u9006\u65b9\u5411\u306b\u8d70\u3063\u3066\u3044\u3066\u4e92\u3044\u306b\u4ea4\u308f\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u3053\u306e\u610f\u5473\u3067\u306f\u6642\u9593\u3092\u9006\u5411\u304d\u306b\u8003\u3048\u308b\u3060\u3051\u306a\u306e\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u4e0a\u306e\u96e3\u3057\u3055\u306f\u6709\u308a\u307e\u305b\u3093\u3002 \u6642\u523b t \u3067\u306e\u51fa\u529b y(t) \u3092\u5f97\u308b\u305f\u3081\u306b\u306f\uff0c [0\\ldots,t-1] \u307e\u3067\u306e\u9806\u65b9\u6cd5 RNN \u3068 [T,\\ldots,t+1] \u307e\u3067\u306e\u9006\u65b9\u6cd5 RNN \u3092\u7528\u3044\u3066\u4e88\u6e2c\u3057\u307e\u3059\u3002 \u9006\u65b9\u6cd5 RNN \u306f\u672a\u6765\u304b\u3089\u904e\u53bb\u3092\u4e88\u6e2c\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u7269\u7406\u7684\u56e0\u679c\u5f8b\u306b\u9055\u53cd\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067 \u6c17\u6301\u3061\u60aa\u3044\u3068\u3082\u8a00\u3048\u307e\u3059\u3002\u3067\u3059\u304c\u82f1\u5358\u8a9e \"the\" \u306e\u767a\u97f3\u306f\u5f8c\u7d9a\u3059\u308b\u540d\u8a5e\u3092\u77e5\u3063\u3066\u3044\u308c\u3070\u767a\u97f3\u3092 \u4e88\u6e2c\u3059\u308b\u3053\u3068\u306f\u5bb9\u6613\u3067\u3059\u3002\u540c\u69d8\u306b\u30d5\u30e9\u30f3\u30b9\u8a9e\u306e\u5b9a\u51a0\u8a5e\u3092 \"\u30e9\" \u306b\u3059\u308b\u304b \"\u30eb\" \u306b\u3059\u308b\u304b\u306f \u5f8c\u7d9a\u3059\u308b\u540d\u8a5e\u306e\u6027\u304c\u5206\u304b\u3063\u3066\u3044\u308c\u3070\u5bb9\u6613\u3067\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3067\u306f BiRNN \u3092\u4f7f\u3046\u3068 \u7cbe\u5ea6\u5411\u4e0a\u304c\u671f\u5f85\u3055\u308c\u308b\u5834\u5408\u983b\u7528\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u306b\u306f\u795e\u7d4c\u5fc3\u7406\u5b66\u7684\u306a\u610f\u5473\u3065\u3051\u3068\u5de5\u5b66\u7684\u4fa1\u5024\u3068\u306e\u9f5f\u9f6c\uff0c\u4e56\u96e2\u304c \u3042\u308a\u307e\u3059\u3002 [^shuter]: \u63d0\u6848\u5f53\u6642 ATR \u3068 NICT \u6240\u5c5e\u306e\u535a\u58eb\u8ab2\u7a0b\u7814\u7a76\u54e1\u3002\u73fe\u5728\u306f Google \u6240\u5c5e\u3002 \u4e0b\u56f3\u306b BiRNN \u306e\u97f3\u58f0\u8a8d\u8b58\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u7528\u3044\u305f\u6027\u80fd\u6bd4\u8f03\u3092\u793a\u3057\u307e\u3057\u305f\u3002\u56f3\u4e2d\u3067\u306f \"BiRNN\" \u304c \"BRNN\" \u3068\u8868\u8a18\u3055\u308c\u3066\u3044\u307e\u3059\u3002 Shuster (1997) Fig.1, Tab. 2","title":"2.7. \u53cc\u65b9\u5411 RNN BiRNN"},{"location":"lect07/#28","text":"\u4e0a\u3067\u306f RNN \u306f\u6642\u9593\u65b9\u5411\u3067\u306e\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0(\u6df1\u5c64\u5b66\u7fd2)\u3067\u3042\u308b\u3068\u8aac\u660e\u3057\u307e\u3057\u305f\u3002 \u3067\u3059\u304c\u904e\u53bb\u306e\u60c5\u5831\u3092\u7528\u3044\u308b\u305f\u3081\u306b\uff0c\u4e00\u6642\u523b\u524d\uff0c\u3059\u306a\u308f\u3061\u76f4\u524d\u306e\u60c5\u5831\u3067\u306f\u306a\u304f\u904e\u53bb\u306e\u3042\u308b\u6642\u70b9\u3067\u306e\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3066\u304a\u3044\u3066\u4f7f\u3044\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307es\u3002\u82f1\u8a9e\u306e\u95a2\u4fc2\u4ee3\u540d\u8a5e\u7bc0\u3092\u540d\u8a5e\u306e\u4fee\u98fe\u306b\u7528\u3044\u308b\u3088\u3046\u306a \u4e2d\u592e\u57cb\u3081\u8fbc\u307f\u6587 \u3067\u306f\uff0c \u4e3b\u8a9e\u3068\u52d5\u8a5e\u3068\u306e\u9593\u3067\u6642\u5236\u306e\u4e00\u81f4\u304c\u5fc5\u8981\u3067\u3059\u304c\uff0c\u4e3b\u8a9e\u306e\u5f8c\u306b\u95a2\u4fc2\u4ee3\u540d\u8a5e\u7bc0\u304c\u57cb\u3081\u8fbc\u307e\u308c\u308b\u3068\uff0c\u4e3b\u8a9e\u306e\u6642\u5236\u3084\u6570\u3092 \u899a\u3048\u3066\u304a\u304f\u5fc5\u8981\u304c\u751f\u3058\u307e\u3059\u3002 \u6587 \"boy that girls chase plays the guitar\" \u3067\u306f\u95a2\u4fc2\u4ee3\u540d\u8a5e\u7bc0\u5185\u306e\u4e3b\u8a9e \"girls\" \u304c\u8907\u6570\u5f62\u3067\u3059\u3002 \u3053\u306e\u8907\u6570\u5f62 \"girls\" \u306b\u5f15\u304d\u3065\u3089\u308c\u3066\u52d5\u8a5e \"plays\" \u3092 \"play\" \u3068\u3057\u3066\u306f\u6b63\u3057\u3044\u6587\u6cd5\u306b\u306a\u308a\u307e\u305b\u3093\u3002 \u3053\u306e\u3088\u3046\u306b\u904e\u53bb\u306e\u60c5\u5831\u3092\u899a\u3048\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092 \u9577\u8ddd\u96e2\u4f9d\u5b58 long term dependency \u3068\u8a00\u3044\u307e\u3059\u3002SRN \u306f\u9577\u8ddd\u96e2\u4f9d\u5b58\u89e3\u6d88\u306e\u305f\u3081\u306b\u5b66\u7fd2\u6642\u9593\u304c\u9577\u304f\u306a\u308b\u3068\u3044\u3046\u554f\u984c\u70b9\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u308c\u306f\u4e2d\u9593\u5c64\u306e\u5185\u5bb9\u304c\u6642\u3005\u523b\u3005\u5909\u5316\u3057\u7d9a\u3051\u308b\u305f\u3081\uff0c\u7279\u5b9a\u306e\u5185\u5bb9\u3092\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u56f0\u96e3\u306b\u306a\u308b\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002 \u3053\u306e\u9577\u8ddd\u96e2\u4f9d\u5b58\u89e3\u6d88\u304c\u96e3\u3057\u3044\u3068\u3044\u3046\u77ed\u6240\u306f\uff0c\u8a18\u61b6\u5185\u5bb9\u3092\u4fdd\u6301\u3057\u3066\u304a\u304f\u5225\u306e\u5834\u6240\uff0c\u77ed\u671f\u8a18\u61b6\u30d0\u30c3\u30d5\u30a1\u3092\u7528\u610f\u3059\u308b\u306a\u3069\u306e\u89e3\u6d88\u65b9\u6cd5\u3082\u5b58\u5728\u3057\u307e\u3059\u3002\u4e00\u65b9\uff0c\u77ed\u671f\u8a18\u61b6\u3092\u4fdd\u6301\u3059\u308b\u6a5f\u69cb\u3092\u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5185\u306b\u7d44\u307f\u8fbc\u3080\u3068\u3044\u3046\u8003\u3048\u65b9\u3082\u3042\u308a\u307e\u3059\u3002\u5f8c\u8005\u306e\u8003\u3048\u65b9\u3092\u5b9f\u73fe\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u6b21\u306b\u7d39\u4ecb\u3059\u308b\u9577=\u77ed\u671f\u8a18\u61b6\u30e2\u30c7\u30eb\u304c\u3042\u308a\u307e\u3059\u3002 Schematic description of a long term dependency","title":"2.8. \u9577\u8ddd\u96e2\u4f9d\u5b58"},{"location":"lect07/#29-lstm","text":"\u9577=\u77ed\u671f\u8a18\u61b6 (Long Short-Term Memory: LSTM, henceforth) \u306f\u30b7\u30e5\u30df\u30c3\u30c8\u30d5\u30fc\u30d0\u30fc (Shumithuber, J.) \u4e00\u6d3e\u306b\u3088\u308a\u63d0\u6848\u3055\u308c\u305f\u9577\u8ddd\u96e2\u4f9d\u5b58\u89e3\u6d88\u306e\u305f\u3081\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u3067\u3059\u3002 \u9577\u8ddd\u96e2\u4f9d\u5b58\u3092\u89e3\u6d88\u3059\u308b\u305f\u3081\u306b\u306f\uff0c\u3042\u308b\u5185\u5bb9\u3092\u4fdd\u6301\u3057\u7d9a\u3051\u3066\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u305d\u306e\u5185\u5bb9\u3092\u8868\u51fa\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u3053\u3068\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\uff0c\u30cb\u30e5\u30fc\u30ed\u30f3\u3078\u306e\u5165\u529b\u306b\u9580 (gate) \u3092\u7f6e\u304f\u3053\u3068\u304c\u63d0\u6848\u3055\u308c\u307e\u3057\u305f\u3002 \u4e0b\u56f3\u306b\u9577=\u77ed\u671f\u8a18\u61b6\u30e2\u30c7\u30eb\u306e\u6982\u5ff5\u56f3\u3092\u793a\u3057\u307e\u3057\u305f\u3002 LSTM from [@2016Asakawa_AIdict] \u4e0a\u56f3\u306e LSTM \u306f\u4e00\u3064\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306b\u8a72\u5f53\u3057\u307e\u3059\u3002\u3053\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306b\u306f 3 \u3064\u306e\u30b2\u30fc\u30c8(gate, \u9580) \u304c\u4ed8\u3044\u3066\u3044\u307e\u3059\u3002 3 \u3064\u306e\u30b2\u30fc\u30c8\u306f\u4ee5\u4e0b\u306e\u540d\u524d\u3067\u547c\u3070\u308c\u307e\u3059\u3002 \u5165\u529b\u30b2\u30fc\u30c8 input gate \u51fa\u529b\u30b2\u30fc\u30c8 output gate \u5fd8\u5374\u30b2\u30fc\u30c8 forget gate \u5404\u30b2\u30fc\u30c8\u306e\u4f4d\u7f6e\u3092\u4e0a\u56f3\u3067\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5165\u529b\u30b2\u30fc\u30c8\u3068\u51fa\u529b\u30b2\u30fc\u30c8\u304c\u9589\u3058\u3066\u3044\u308c\u3070\uff0c\u30bb\u30eb\u306e\u5185\u5bb9(\u3053\u308c\u307e\u3067\u306f\u4e2d\u9593\u5c64\u306e\u72b6\u614b\u3068\u547c\u3093\u3067\u304d\u307e\u3057\u305f)\u304c\u4fdd\u6301\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u51fa\u529b\u30b2\u30fc\u30c8\u304c\u958b\u3044\u3066\u3044\u308b\u5834\u5408\u306b\u306f\uff0c\u30bb\u30eb\u5185\u5bb9\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\u4e00\u65b9\u51fa\u529b\u30b2\u30fc\u30c8\u304c\u9589\u3058\u3066\u3044\u308c\u3070\u305d\u306e\u30bb\u30eb\u5185\u5bb9\u306f\u51fa\u529b\u3055\u308c\u307e\u305b\u3093\u3002\u3053\u306e\u3088\u3046\u306b\u5165\u529b\u30b2\u30fc\u30c8\u3068\u51fa\u529b\u30b2\u30fc\u30c8\u306f\u30bb\u30eb\u5185\u5bb9\u306e\u5165\u51fa\u529b\u306b\u95a2\u4e0e\u3057\u307e\u3059\u3002 \u5fd8\u5374\u30b2\u30fc\u30c8\u306f\u30bb\u30eb\u5185\u5bb9\u306e\u4fdd\u6301\u306b\u95a2\u4e0e\u3057\u307e\u3059\u3002\u5fd8\u5374\u30b2\u30fc\u30c8\u304c\u958b\u3044\u3066\u3044\u308c\u3070\u4e00\u6642\u523b\u524d\u306e\u30bb\u30eb\u5185\u5bb9\u304c\u4fdd\u6301\u3055\u308c\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u53cd\u5bfe\u306b\u5fd8\u5374\u30b2\u30fc\u30c8\u304c\u9589\u3058\u3066\u3044\u308c\u3070\u4e00\u6642\u523b\u524d\u306e\u30bb\u30eb\u5185\u5bb9\u306f\u7834\u68c4\u3055\u308c\u307e\u3059\u3002\u5168\u30bb\u30eb\u306e\u5fd8\u5374\u30b2\u30fc\u30c8\u304c\u5168\u9589\u306a\u3089\u3070\u901a\u5e38\u306e\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3042\u308b\u3053\u3068\u3068\u540c\u7fa9\u3067\u3059\u3002\u3059\u306a\u308f\u3061\u8a18\u61b6\u5185\u5bb9\u3092\u4fdd\u6301\u3057\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002SRN \u3067\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u4fe1\u53f7\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\u30bb\u30eb\u3078\u306e\u5165\u529b\u306f\uff0c \u4e0b\u5c64\u304b\u3089\u306e\u4fe1\u53f7\uff0c \u4e0a\u5c64\u304b\u3089\u306e\u4fe1\u53f7, \u3059\u306a\u308f\u3061 Jordan \u30cd\u30c3\u30c8\u306e\u5e30\u9084\u4fe1\u53f7 \u81ea\u5206\u81ea\u8eab\u306e\u5185\u5bb9\uff0c\u3059\u306a\u308f\u3061 Elman \u30cd\u30c3\u30c8\u306e\u5e30\u9084\u4fe1\u53f7 \u304c\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u3053\u308c\u3089\u5165\u529b\u4fe1\u53f7\u304c \u5165\u529b\u4fe1\u53f7\u305d\u306e\u3082\u306e \u5165\u529b\u30b2\u30fc\u30c8\u306e\u958b\u9589\u5236\u5fa1\u7528\u4fe1\u53f7 \u51fa\u529b\u30b2\u30fc\u30c8\u306e\u958b\u9589\u5236\u5fa1\u7528\u4fe1\u53f7 \u5fd8\u5374\u30b2\u30fc\u30c8\u306e\u958b\u9589\u5236\u5fa1\u7528\u4fe1\u53f7 \u3068\u3044\u3046 4 \u7a2e\u985e\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u5f93\u3063\u3066 LSTM \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u306f SRN \u306b\u6bd4\u3079\u3066 4 \u500d\u306b\u306a\u308a\u307e\u3059\u3002 LSTM \u306b\u9650\u3089\u305a\u4e00\u822c\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u51fa\u529b\u306b\u306f\u975e\u7dda\u5f62\u95a2\u6570\u304c\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u4ee3\u8868\u7684\u306a\u975e\u7dda\u5f62\u51fa\u529b\u95a2\u6570\u3068\u3057\u3066\u306f\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002 \u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570[^sigmoid]: f(x)=\\left[1+e^{-x}\\right]^{-1} \u30cf\u30a4\u30d1\u30fc\u30dc\u30ea\u30c3\u30af\u30bf\u30f3\u30b8\u30a7\u30f3\u30c8\u95a2\u6570: f(x)=\\left(e^{x}-e^{-x}\\right)/\\left(e^{x}+e^{-x}\\right) \u6574\u6d41\u7dda\u5f62\u30e6\u30cb\u30c3\u30c8\u95a2\u6570: f(x)=\\max\\left(0,x\\right) [^sigmoid]: 1980 \u5e74\u4ee3\u306b\u7528\u3044\u3089\u308c\u305f\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u304c\u7528\u3044\u3089\u308c\u308b\u3053\u3068\u306f\u307b\u3068\u3093\u3069\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u7406\u7531\u306f\u53ce\u675f\u304c\u9045\u3044\u304b\u3089\u3067\u3059[@1999LeCun] \u3053\u306e\u4e2d\u3067\uff0c\u30bb\u30eb\u306e\u51fa\u529b\u95a2\u6570\u3068\u3057\u3066 2. \u306e\u30cf\u30a4\u30d1\u30fc\u30dc\u30ea\u30c3\u30af\u30bf\u30f3\u30b8\u30a7\u30f3\u30c8\u95a2\u6570\u304c\uff0c\u30b2\u30fc\u30c8\u306e\u51fa\u529b\u95a2\u6570\u306b\u306f\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002\u305d\u306e\u7406\u7531\u306f\u30cf\u30a4\u30d1\u30fc\u30dc\u30ea\u30c3\u30af\u30bf\u30f3\u30b8\u30a7\u30f3\u30c8\u95a2\u6570\u306e\u65b9\u304c\u53ce\u675f\u304c\u65e9\u3044\u3053\u3068\uff0c\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u306f\u5024\u57df\u304c [0,1] \u3067\u3042\u308b\u305f\u3081\u30b2\u30fc\u30c8\u306e\u958b\u9589\u306b\u76f4\u63a5\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002 Le Cun, Y. Bottou, L., Orr, G. B, Muller K-R. (1988) Efficient BackProp, in Orr, G. and Muller, K. (Eds.) Neural Networks: tricks and trade, Springer.","title":"2.9. \u9577=\u77ed\u671f\u8a18\u61b6 LSTM"},{"location":"lect07/#210-lstm","text":"\u4ee5\u4e0b\u306e\u753b\u50cf\u306f http://kybele.psych.cornell.edu/~edelman/Psych-2140/week-2-2.html \u3088\u308a\u306e\u5f15\u7528\u3067\u3059\u3002 \u30a6\u30df\u30a6\u30b7\u306e\u30a8\u30e9\u5f15\u3063\u8fbc\u3081\u53cd\u5fdc\u6642\u306b\uff0c\u30cb\u30e5\u30fc\u30ed\u30f3\u3078\u306e\u5165\u529b\u4fe1\u53f7\u3067\u306f\u306a\u304f\uff0c\u5165\u529b\u4fe1\u53f7\u3092\u4fee\u98fe\u3059\u308b\u7d50\u5408 \u304c\u5b58\u5728\u3057\u307e\u3059\u3002\u4e0b\u56f3\u53c2\u7167\u3002 \u30a2\u30e1\u30d5\u30e9\u30b7 (Aplysia) \u306e\u30a8\u30e9\u5f15\u3063\u8fbc\u3081\u53cd\u5fdc(a.k.a. \u9632\u5fa1\u53cd\u5fdc)\u306e\u6a21\u5f0f\u56f3[^seaslang] [^seaslang]: from http://kybele.psych.cornell.edu/~edelman/Psych-2140/week-2-2.html \u306e 222\u30da\u30fc\u30b8\u3088\u308a \u753b\u50cf\u306f\u305d\u308c\u305e\u308c http://kybele.psych.cornell.edu/~edelman/Psych-2140/shunting-inhibition.jpg http://kybele.psych.cornell.edu/~edelman/Psych-2140/C87-fig2.25.jpg http://kybele.psych.cornell.edu/~edelman/Psych-2140/C87-fig2.24.jpg \u307e\u305f\u53e4\u304f\u306f PDP \u306e\u30d0\u30a4\u30d6\u30eb\u306b\u3082\u30b7\u30b0\u30de\u30d1\u30a4\u30e6\u30cb\u30c3\u30c8 ( \\sigma\\pi units) \u3068\u3057\u3066\u65e2\u8ff0\u304c\u898b\u3089\u308c\u307e\u3059\u3002\u5404\u30e6\u30cb\u30c3\u30c8\u3092\u639b\u3051\u7b97 ( \\pi ) \u3057\u3066\u304b\u3089\u8db3\u3057\u7b97 ( \\sum ) \u3059\u308b\u306e\u3067\u3053\u306e\u3088\u3046\u306b\u547d\u540d\u3055\u308c\u305f\u306e\u3067\u3057\u3087\u3046\u3002 From [@PDPbook] chaper 7","title":"2.10. LSTM \u306b\u304a\u3051\u308b\u30b2\u30fc\u30c8\u306e\u751f\u7406\u5b66\u7684\u5bfe\u5fdc\u7269 "},{"location":"lect07/#211","text":"\u4ee5\u4e0a\u3067\u4eca\u56de\u306e\u7279\u5225\u4f01\u753b\u306e\u76ee\u6a19\u3067\u3042\u308b\u753b\u50cf\u3068\u8a00\u8a9e\u3068\u306e\u30de\u30eb\u30c1\u30e2\u30fc\u30c0\u30eb\u7d71\u5408\u3078\u5411\u3051\u3066\u306e\u6e96\u5099\u304c\u307b\u307c\u51fa\u63c3\u3044\u307e\u3057\u305f\u3002 2014 \u5e74\u306b\u63d0\u6848\u3055\u308c\u305f\u30cb\u30e5\u30fc\u30e9\u30eb\u753b\u50cf\u811a\u6ce8\u4ed8\u3051\u306e\u30e2\u30c7\u30eb\u3092\u4e0b\u56f3\u306b\u793a\u3057\u307e\u3059\u3002 [@2014Vinyals_Bengio_Show_and_Tell] \u753b\u50cf\u306b\u5bfe\u3057\u3066\u6ce8\u610f\u3092\u4ed8\u52a0\u3057\u305f\u811a\u6ce8\u4ed8\u3051\u30e2\u30c7\u30eb\u306e\u51fa\u529b\u4f8b\u3092\u4e0b\u56f3\u306b\u793a\u3057\u307e\u3059\u3002 \u5404\u753b\u50cf\u5bfe\u306f\u53f3\u304c\u5165\u529b\u753b\u50cf\u3067\u3042\u308a\uff0c\u5de6\u306f\u305d\u306e\u5165\u529b\u753b\u50cf\u306e\u811a\u6ce8\u4ed8\u3051\u3067\u3042\u308b\u5358\u8a9e\u3092\u51fa\u529b\u3057\u3066\u3044\u308b\u969b\u306b\u3069\u3053\u306b\u6ce8\u610f\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u767d\u8272\u3067\u8868\u3057\u3066\u3044\u307e\u3059\u3002 [@2015Xu_Bengio_NIC_attention]","title":"2.11. \u753b\u50cf\u3068\u8a00\u8a9e\u3068\u306e\u878d\u5408\u3078\u5411\u3051\u3066"},{"location":"lect07/#3","text":"\u3053\u3053\u3067\u306f\u610f\u5473\u8ad6\u306e\u7814\u7a76\u53f2\u3092\u5fc3\u7406\u5b66\u95a2\u9023\u9818\u57df\u306b\u7d5e\u3063\u3066\u307e\u3068\u3081\u308b\u3053\u3068\u3092\u8a66\u307f\u307e\u3059\u3002 \u610f\u5473\u306b\u3064\u3044\u3066\u306e\u8a00\u53ca\u306f\u8a00\u8a9e\u5b66\u8005 Firth \u3055\u3089\u306b\u9061\u308c\u3070 Witgenstein \u307e\u3067\u8fbf\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u3067\u3059\u304c\u3053\u3053\u3067\u306f\u76f4\u63a5\u95a2\u9023\u3059\u308b\u7814\u7a76\u3068\u3057\u3066\u4ee5\u4e0b\u3092\u3068\u308a\u3052\u307e\u3059 \u7b2c 1 \u4e16\u4ee3 \u610f\u5473\u5fae\u5206\u6cd5 Osgood \u7b2c 2 \u4e16\u4ee3 \u6f5c\u5728\u610f\u5473\u89e3\u6790 Ladauer \u7b2c 3 \u4e16\u4ee3 \u6f5c\u5728\u30c7\u30a3\u30ec\u30af\u30ea\u914d\u7f6e\uff0c\u30c8\u30d4\u30c3\u30af\u30e2\u30c7\u30eb \u7b2c 4 \u4e16\u4ee3 \u5206\u6563\u57cb\u3081\u8fbc\u307f\u30e2\u30c7\u30eb word2vec \u3068\u305d\u306e\u5f8c\u7d99\u30e2\u30c7\u30eb \u6700\u8fd1\u306e\u5c55\u958b","title":"3. \u610f\u5473\u8ad6"},{"location":"lect07/#31-1952-semantics-differential-sd","text":"\u30c1\u30e3\u30fc\u30eb\u30ba\u30fb\u30aa\u30ba\u30b0\u30c3\u30c9\u306b\u3088\u3063\u3066\u63d0\u6848\u3055\u308c\u305f\u610f\u5473\u5fae\u5206\u6cd5\u306f\uff0c\u88ab\u9a13\u8005\u306b\u5bfe\u8c61\u3092\u8a55\u4fa1\u3055\u305b\u308b\u969b\u306b\u5f62\u5bb9\u8a5e\u5bfe\u3092\u7528\u3044\u307e\u3059\u3002 \u5f62\u5bb9\u8a5e\u5bfe\u306f 5 \u4ef6\u6cd5\u3042\u308b\u3044\u306f\u305d\u306e\u4ed6\u306e\u5909\u7a2e\u306b\u3088\u3063\u3066\u8a55\u4fa1\u3055\u308c\u307e\u3059\u3002 \u5f97\u3089\u308c\u305f\u7d50\u679c\u3092 \u8a55\u4fa1\u5bfe\u8c61 X \u5f62\u5bb9\u8a5e\u5bfe\u306e\u884c\u5217\u306b\u3057\u307e\u3059\u3002 \u3059\u306a\u308f\u3061\u8a55\u4fa1\u5bfe\u8c61\u8005\u306e\u5e73\u5747\u3092\u6c42\u3081\u3066\u5f97\u305f\u884c\u5217\u3092 \u56fa\u6709\u5024\u5206\u89e3 \uff0c\u6b63\u78ba\u306b\u306f\u56e0\u5b50\u5206\u6790 FA \u3092\u884c\u3044\u307e\u3059\u3002 \u6700\u5927\u56fa\u6709\u5024\u304b\u3089\u9806\u306b\u6e80\u8db3\u306e\u884c\u304f\u307e\u3067\u6c42\u3081\u307e\u3059\u3002 \u56fa\u6709\u5024\u884c\u5217\u3078\u306e\u5c04\u5f71\u884c\u5217\u3092\u56e0\u5b50\u8ca0\u8377\u91cf\u3068\u547c\u3073\u307e\u3059\u3002\u5f97\u3089\u308c\u305f\u7d50\u679c\u3092\u4e0b\u56f3\u306b\u793a\u3057\u307e\u3057\u305f\u3002 From Osgood (1952) Tab. 1 \u4e0a\u56f3\u3067\u306f\uff0c50 \u5bfe\u306e\u5f62\u5bb9\u8a5e\u5bfe\u306b\u3088\u3063\u3066\u5bfe\u8c61\u3092\u8a55\u4fa1\u3057\u305f\u5024\u304c\u63cf\u304b\u308c\u3066\u3044\u307e\u3059\u3002 \u56e0\u5b50\u5206\u6790(FA) \u5f62\u5bb9\u8a5e\u5bfe\u306b\u3088\u308b\u591a\u6bb5\u968e\u8a55\u5b9a From Osgood (1952) Fig.2 \u610f\u5473\u5fae\u5206\u6cd5\u306b\u304a\u3044\u3066\u306f\uff0c\u7814\u7a76\u8005\u306e\u7528\u610f\u3057\u305f\u5f62\u5bb9\u8a5e\u5bfe\u306e\u95a2\u4fc2\u306b\u4f9d\u5b58\u3057\u3066\u5bfe\u8c61\u3068\u306a\u308b\u6982\u5ff5\u3084\u30e2\u30ce\uff0c\u30b3\u30c8\u304c\u6c7a\u307e\u308a\u307e\u3059\u3002 \u5f93\u3063\u3066\u7814\u7a76\u8005\u306e\u60f3\u5b9a\u3057\u3066\u3044\u306a\u3044\u6982\u5ff5\u7a7a\u9593\u306b\u3064\u3044\u3066\u306f\u8a00\u53ca\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u70b9\u304c\u554f\u984c\u70b9\u3068\u3057\u3066\u6307\u6458\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u3053\u3068\u306f\u8a55\u4fa1\u5bfe\u8c61\u304c\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u308b\u554f\u984c\u3067\u3042\u308c\u3070\u7cbe\u5ea6\u826f\u304f\u6e2c\u5b9a\u3067\u304d\u308b\u3068\u3044\u3046\u9577\u6240\u306e\u88cf\u8fd4\u3057\u3067\u3059\u3002 \u4e00\u822c\u7684\u306a\u610f\u5473\uff0c\u5bfe\u8c61\u8005\u304c\u6301\u3063\u3066\u3044\u308b\u610f\u5473\u7a7a\u9593\u5168\u4f53\u3092\u8003\u3048\u308b\u305f\u3081\u306b\u306f\uff0c50 \u500b\u306e\u5f62\u5bb9\u8a5e\u5bfe\u3067\u306f\u6349\u3048\u304d\u308c\u306a\u3044\u3053\u3068\u3082\u610f\u5473\u3057\u307e\u3059\u3002\u5f93\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5206\u91ce\u306b\u9069\u7528\u3059\u308b\u5834\u5408\u306b\u306f\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3068\u8a00\u3048\u307e\u3059 \u795e\u7d4c\u5fc3\u7406\u5b66\u7684\u306a\u75c7\u72b6\u3067\u3042\u308b \u610f\u5473\u75f4\u5446 semantic dimentia \u3092\u6271\u3046\u5834\u5408 \u5165\u8a66\u554f\u984c\u306a\u3069\u306e\u4e00\u822c\u77e5\u8b58\u3092\u8a55\u4fa1\u3057\u305f\u3044\u5834\u5408 \u4e00\u822c\u8a00\u8a9e\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408","title":"3.1. 1952 \u5e74 \u610f\u5473\u5fae\u5206\u6cd5 Semantics Differential (SD)"},{"location":"lect07/#32-1997-latent-semantic-analysis-lsa-lsi","text":"\u6f5c\u5728\u610f\u5473\u5206\u6790 : \u7279\u7570\u5024\u5206\u89e3(SVD) \u306f\uff0c\u5f53\u6642\u5897\u5927\u3057\u3064\u3064\u3042\u3063\u305f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u8a08\u7b97\u8cc7\u6e90\u3092\u80cc\u666f\u306b\u4e00\u822c\u610f\u5473\u8ad6\u306b\u8e0f\u307f\u8fbc\u3080\u5148\u97ad\u3092\u3064\u3051\u305f\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3059\u306a\u308f\u3061\u5148\u4ee3\u306e\u610f\u5473\u5fae\u5206\u6cd5\u304c\u6301\u3064\u554f\u984c\u70b9\u3067\u3042\u308b\uff0c\u8a55\u4fa1\u65b9\u6cd5\u304c 50 \u5bfe\u306e\u5f62\u5bb9\u8a5e\u3067\u3042\u308b\u3053\u3068\uff0c 50 \u3092\u3044\u304f\u3089\u5897\u3084\u3057\u3066\u3082\uff0c\u7d50\u5c40\u306f\u7814\u7a76\u8005\u306e\u6063\u610f\u6027\u304c\u6392\u9664\u3067\u304d\u306a\u3044\u3053\u3068\uff0c\u8a55\u4fa1\u8005\u304c\u4eba\u9593\u3067\u3042\u308b\u305f\u3081\u5927\u91cf\u306e\u8a55\u4fa1\u5bfe\u8c61\u3092\u8a55\u4fa1\u3055\u305b\u308b\u3053\u3068\u306f\uff0c \u5fc3\u7406\u5b9f\u9a13\u53c2\u52a0\u8005\u306e\u62d8\u675f\u6642\u9593\u3092\u9577\u304f\u3059\u308b\u305f\u3081\u73fe\u5b9f\u7684\u306b\u306f\u4e0d\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u89e3\u6d88\u3059\u308b\u305f\u3081\u306b\uff0c\u8f9e\u66f8\u305d\u306e\u3082\u306e\u3092\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u89e3\u6790\u3059\u308b\u3068\u3044\u3046\u624b\u6cd5\u3092\u63a1\u7528\u3057\u307e\u3057\u305f\u3002 \u8f9e\u66f8\u306e\u9805\u76ee\u3068\u305d\u306e\u9805\u76ee\u306e\u8a18\u8ff0\u5185\u5bb9\u3068\u3092\u8003\u3048\u307e\u3059 \u7279\u5b9a\u306e\u8f9e\u66f8\u9805\u9805\u76ee\u306b\u306f\u3069\u306e\u5358\u8a9e\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u3044\u308b\u306e\u304b\u3068\u3044\u3046\u5171\u8d77\u884c\u5217 \u5185\u5bb9 \\times \u5358\u8a9e \u3092 \u8003\u3048\uff0c\u3053\u306e\u884c\u5217\u306b\u3064\u3044\u3066 \u7279\u7570\u5024\u5206\u89e3 \u3092\u884c\u3044\u307e\u3059\u3002 Osgood \u306e\u610f\u5473\u5fae\u5206\u6cd5\u3067\u7528\u3044\u3089\u308c\u305f\u884c\u5217\u306e\u30b5\u30a4\u30ba\u3068\u6bd4\u8f03\u3059\u308b\u3068\uff0c\u5358\u8a9e\u6570\u304c\u6570\u4e07\uff0c\u9805\u76ee\u6570\u306f\u6570\u4e07\u304b\u3089\u6570\u5341\u4e07\u306b\u5897\u52a0\u3057\u3066\u3044\u307e\u3059\u3002 \u6570\u306e\u5897\u52a0\u306f\u7db2\u7f85\u3059\u308b\u7bc4\u56f2\u306e\u62e1\u5927\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u4e0b\u56f3\u306f\u6301\u3061\u3089\u308c\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u4f8b\u3092\u793a\u3057\u305f\u3082\u306e\u3067\u3059\u3002 From Landauer and Duman (1997) Fig. A2 LSA (LSI) \u306e\u554f\u984c\u70b9\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u56f3\u3092\u898b\u3066\u304f\u3060\u3055\u3044 From Landauer and Dumas (1997) Fig.3 \u4e0a\u56f3\u306f\uff0c\u5f97\u3089\u308c\u305f\u7d50\u679c\u3092\u5143\u306b\u985e\u7fa9\u8a9e\u30c6\u30b9\u30c8\u3092\u554f\u3044\u305f\u5834\u5408\u306b\u7279\u7570\u5024\u5206\u89e3\u3067\u5f97\u3089\u308c\u308b\u6b21\u5143\u6570\u3092\u6a2a\u8ef8\u306b\uff0c\u6b63\u89e3\u7387\u3092\u7e26\u8ef8\u306b\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u56f3\u3067\u3059\u3002 \u6b21\u5143\u3092\u4e0a\u3052\u308b\u3068\u6210\u7e3e\u306e\u5411\u4e0a\u304c\u8a8d\u3081\u3089\u308c\u307e\u3059\u3002 \u3067\u3059\u304c\uff0c\u3042\u308b\u7a0b\u5ea6 300 \u4ee5\u4e0a\u306e\u6b21\u5143\u3092\u62bd\u51fa\u3057\u3066\u3082\u8fd4\u3063\u3066\u6210\u7e3e\u304c\u4f4e\u4e0b\u3059\u308b\u3053\u3068\u304c\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u6b21\u5143\u6570\u3092\u5897\u3084\u3059\u3053\u3068\u3067\u672c\u6765\u306e\u985e\u7fa9\u8a9e\u691c\u67fb\u306b\u5fc5\u8981\u306a\u77e5\u8b58\u4ee5\u5916\u306e\u60c5\u5831\u304c\u542b\u307e\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u63a8\u5bdf\u3055\u308c\u307e\u3059\u3002","title":"3.2. 1997 \u5e74 \u6f5c\u5728\u610f\u5473\u5206\u6790 Latent Semantic Analysis (LSA, LSI)"},{"location":"lect07/#33-2003-latent-direchlet-allocation-lda","text":"\u6f5c\u5728\u30c7\u30a3\u30ec\u30af\u30ea\u914d\u7f6e Latent Direchlet Allocation: LDA[^LDA] \u306f LSA (LSI) \u3092\u78ba\u7387\u7684\u306b\u62e1\u5f35\u3057\u305f\u30e2\u30c7\u30eb\u3067\u3042\u308b\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3059\u306a\u308f\u3061 LDA \u3067\u306f\u5358\u8a9e\u3068\u9805\u76ee\u3068\u306e\u95a2\u4fc2\u306b\u78ba\u7387\u7684\u306a\u751f\u6210\u30e2\u30c7\u30eb\u3092\u4eee\u5b9a\u3057\u307e\u3059\u3002 [^LDA]: \u4f1d\u7d71\u7684\u306a\u7d71\u8a08\u5b66\u306b\u304a\u3044\u3066\u306f Fischer \u306e\u7dda\u5f62\u5224\u5225\u5206\u6790\u3092 LDA \u3068\u8868\u8a18\u3057\u307e\u3059\u3002\u3067\u3059\u304c\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\uff0c\u3059\u306a\u308f\u3061\u7d71\u8a08\u5b66\u306e\u4e00\u5206\u91ce\u3067\u306f\u8fd1\u5e74\u306e\u6f5c\u5728\u30c7\u30a3\u30ec\u30af\u30ea\u914d\u7f6e\u306e\u6210\u529f\u306b\u3088\u308a LDA \u3068\u672a\u5b9a\u7fa9\u3067\u8868\u8a18\u3055\u308c\u305f\u5834\u5408\u306b\u306f\u6f5c\u5728\u30c7\u30a3\u30af\u30ec\u30af\u30ea\u914d\u7f6e\u3092\u6307\u3059\u3053\u3068\u304c\u591a\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u305d\u306e\u7406\u7531\u3068\u3057\u3066\u306f\uff0c\u5bfe\u8c61\u3068\u306a\u308b\u9805\u76ee\uff0c\u3057\u3070\u3057\u3070 \u30c8\u30d4\u30c3\u30af \u3068\u8a00\u3044\u8868\u3059\u3068\uff0c\u9805\u76ee\u306e\u8aac\u660e\u306b\u7528\u3044\u3089\u308c\u308b\u5358\u8a9e\u3068\u306e\u9593\u306b\uff0c\u6c7a\u5b9a\u8ad6\u7684\u306a\u95a2\u4fc2\u3092\u4eee\u5b9a\u3057\u306a\u3044\u3068\u8003\u3048\u308b\u3053\u3068\u306b\u3088\u308a\u307e\u3059\u3002\u78ba\u7387\u7684\u306a\u95a2\u4fc2\u3092\u4eee\u5b9a\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u67d4\u8edf\u306a\u95a2\u4fc2\u3092\u30e2\u30c7\u30eb\u5316\u304c\u53ef\u80fd\u3067\u3042\u308b\u304b\u3089\u3067\u3059\u3002 \u4f8b\u3048\u3070\uff0c\u3042\u308b\u6982\u5ff5\uff0c\u8a71\u984c(\u30c8\u30d4\u30c3\u30af) \"\u795e\u7d4c\" \u3092\u8aac\u660e\u3059\u308b\u5834\u5408\u3092\u8003\u3048\u307e\u3059\u3002 \"\u795e\u7d4c\" \u3092\u8aac\u660e\u3059\u308b\u306b\u306f\u591a\u69d8\u306a\u8868\u73fe\u3084\u8aac\u660e\u304c\u53ef\u80fd\u3067\u3059\u3002 \"\u795e\u7d4c\" \u3092\u8aac\u660e\u3059\u308b\u6587\u7ae0\u3092\u6570\u591a\u304f\u96c6\u3081\u3066\u308b\u3068\uff0c\u5358\u8a9e \"\u8133\" \u306f\u9ad8\u983b\u5ea6\u3067\u51fa\u73fe\u3059\u308b\u3068\u4e88\u60f3\u3067\u304d\u307e\u3059\u3002 \u540c\u69d8\u306b\u3057\u3066 \"\u7d30\u80de\" \u3084 \"\u8133\" \u3082\u9ad8\u983b\u5ea6\u3067\u89b3\u5bdf\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\u3068\u3053\u308d\u304c\u5358\u8a9e \"\u72ac\" \u306f\u4f4e\u983b\u5ea6\u3067\u3057\u3087\u3046\u3002 \u5358\u8a9e \"\u30a2\u30e1\u30d5\u30e9\u30b7\" \u3084 \"\u30a4\u30ab\" \u306f\u5834\u5408\u306b\u3088\u308a\u3051\u308a\u3067\u3057\u3087\u3046\u3002\u3069\u3061\u3089\u3082\u795e\u7d4c\u751f\u7406\u5b66\u306e\u767a\u5c55\u306b\u8ca2\u732e\u3057\u305f\u5b9f\u9a13\u52d5\u7269\u3067\u3059\u304b\u3089\u5358\u8a9e \"\u30a2\u30e1\u30d5\u30e9\u30b7\" \u3084 \"\u30a4\u30ab\" \u304c\u51fa\u73fe\u3059\u308b\u6587\u7ae0\u3082\u3042\u308c\u3070\uff0c\u5358\u8a9e \"\u8133\u6897\u585e\" \u3084\u5358\u8a9e \"\u5931\u8a9e\" \u3068\u540c\u6642\u306b\u51fa\u73fe\u3059\u308b\u78ba\u7387\u3082\u3042\u308a\u3048\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306b\u8003\u3048\u308b\u3068\u78ba\u7387\u7684\u306b\u8003\u3048\u305f\u65b9\u304c\u826f\u3044\u5834\u5408\u304c\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002","title":"3.3. 2003 \u5e74 \u6f5c\u5728\u30c7\u30a3\u30ec\u30af\u30ea\u914d\u7f6e Latent Direchlet Allocation (LDA)"},{"location":"lect07/#_1","text":"\u3082\u3046\u4e00\u70b9\uff0c\u30ce\u30f3\u30d1\u30e9\u30e1\u30c8\u30ea\u30c3\u30af\u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002 parametric model \u306f\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u3092\u7528\u3044\u305f\u30e2\u30c7\u30eb\u307b\u3069\u306e\u610f\u5473\u3067\u3059\u3002 \u5fc3\u7406\u7d71\u8a08\u5b66\u306e\u53e4\u5178\u7684\u306a\u6559\u79d1\u66f8\u3067\u306f\uff0c\u30ce\u30f3\u30d1\u30e9\u30e1\u30c8\u30ea\u30c3\u30af\u691c\u5b9a\u3068\u306f\u6bcd\u96c6\u56e3\u5206\u5e03\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u4f9d\u5b58 \u3057\u306a\u3044 \u7d71\u8a08\u7684\u691c\u5b9a\u3068\u3044\u3046\u610f\u5473\u3067\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u4e00\u65b9 LDA \u306e\u5834\u5408\u306b\u306f\u63a8\u5b9a\u3059\u3079\u304d\u5206\u5e03\u306e\u30d1\u30e9\u30e1\u30fc\u30bf(\u306e\u6570)\u3092 \u4e8b\u524d\u306b\u5b9a\u3081\u306a\u3044 \u3068\u3044\u3046\u610f\u5473\u3067 \u30ce\u30f3\u30d1\u30e9\u30e1\u30c8\u30ea\u30c3\u30af \u306a\u30e2\u30c7\u30eb\u3067\u3042\u308b\u3068\u8a00\u3044\u307e\u3059\u3002 \u3059\u306a\u308f\u3061\u3042\u308b\u8a71\u984c(\u30c8\u30d4\u30c3\u30af)\u3068\u305d\u308c\u3092\u8aac\u660e\u3059\u308b\u5358\u8a9e\u306e\u51fa\u73fe\u78ba\u7387\u306b\u3064\u3044\u3066\uff0c\u53d6\u308a\u6271\u3046\u73fe\u8c61\u306e\u8907\u96d1\u3055\u306b\u5fdc\u3058\u3066\u30e2\u30c7\u30eb\u3092\u8a18\u8ff0\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u3092\u9069\u5fdc\u7684\u306b\u5897\u3084\u3057\u3066\u884c\u304f\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002 \u6570\u5b66\u7684\u65e2\u8ff0\u306f\u7701\u7565\u3057\u307e\u3059\u304c\uff0c \u30d9\u30fc\u30bf\u5206\u5e03 \u3092\u7528\u3044\u308b\u3068\u533a\u9593 [a,b] \u306e\u9593\u3092\u3068\u308b\u5206\u5e03\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3088\u308a\u5206\u5e03\u304c\u67d4\u8edf\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\u30d9\u30fc\u30bf\u5206\u5e03\u306e\u591a\u6b21\u5143\u62e1\u5f35\u3092 \u30c7\u30a3\u30af\u30af\u30ea\u5206\u5e03 \u3068\u8a00\u3044\u307e\u3059\u3002 \u78ba\u7387\u7a7a\u9593\u306b\u5bfe\u3057\u3066\u4e00\u5b9a\u306e\u6210\u7d04\u3092\u4ed8\u3057\u305f\u8868\u73fe\u3092\u30b7\u30f3\u30d7\u30ec\u30c3\u30af\u30b9\u3068\u8a00\u3063\u305f\u308a\u3057\u307e\u3059\u3002 \u305f\u3068\u3048\u3070\u3058\u3083\u3093\u3051\u3093\u3067\u5bfe\u6226\u76f8\u624b\u304c\uff0c\u30b0\u30fc\uff0c\u30c1\u30e7\u30ad\uff0c\u30d1\u30fc \u306e\u3044\u305a\u308c\u304b\u3092\u51fa\u3059\u78ba\u7387\u306f\uff0c2 \u3064\u304c\u5206\u304b\u308c\u3070 3 \u3064\u76ee\u306e\u624b\u306f\u81ea\u305a\u3068\u5206\u304b\u3063\u3066\u304d\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u95a2\u4fc2\u306f 3 \u3064\u306e\u624b\u306e\u78ba\u7387\u5206\u5e03\u3067\u30c7\u30a3\u30af\u30af\u30ea\u5206\u5e03\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u4e0b\u56f3\u306f\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u304b\u3089\u6301\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u3053\u306e\u56f3\u306f\u305d\u306e\u3088\u3046\u306a\u3058\u3083\u3093\u3051\u3093\u306e\u624b\u306e\u51fa\u73fe\u78ba\u7387\u3092\u30c7\u30a3\u30ec\u30af\u30ea\u5206\u5e03\u3068\u3057\u3066\u8868\u73fe\u3057\u305f\u4f8b\u3060\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044\u3002 \u591a\u6b21\u5143\u30c7\u30a3\u30ec\u30af\u30ea\u5206\u5e03(\u591a\u6b21\u5143\u30d9\u30fc\u30bf\u5206\u5e03) \u306b\u3088\u308b\u30ce\u30f3\u30d1\u30e9\u30e1\u30c8\u30ea\u30c3\u30af\u63a8\u5b9a \u56f3\u306f https://en.wikipedia.org/wiki/Dirichlet_distribution \u3088\u308a \u30c8\u30d4\u30c3\u30af\u6bce\u306e\u5358\u8a9e\u306e\u51fa\u73fe\u78ba\u7387\u3082\u4e0a\u56f3\u3068\u540c\u3058\u67a0\u7d44\u307f\u3067\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u304b\u3064\uff0c\u4e0a\u56f3\u3067\u306f\u3068\u308a\u3046\u308b\u5024\u304c 3 \u3064\u306e\u5834\u5408\u3067\u3059\u304c\uff0c\u8a71\u984c\u304c\u8907\u96d1\u306b\u306a\u308c\u3070\u9069\u5fdc\u7684\u306b\u9078\u629e\u80a2\u306e\u6570\uff0c\u3059\u306a\u308f\u3061\u30c7\u30a3\u30ec\u30af\u30ea\u5206\u5e03\u306e\u6b21\u5143\u6570\u304c\u5897\u52a0\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002","title":"\u30c7\u30a3\u30ec\u30af\u30ea\u5206\u5e03"},{"location":"lect07/#_2","text":"\u3042\u3089\u304b\u3058\u3081\u5b9a\u3081\u3089\u308c\u305f\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u7528\u3044\u3066\u5206\u5e03\u3092\u8a18\u8ff0\u3059\u308b\u306e\u3067\u306f\u306a\u304f\uff0c \u89e3\u304f\u3079\u304d\u554f\u984c\u306e\u8907\u96d1\u3055\u306b\u5fdc\u3058\u3066\u9069\u5fdc\u7684\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u3092\u5b9a\u3081\u308b\u3053\u3068\u306b\u5bfe\u5fdc\u3057\u3066\uff0c LDA \u3042\u308b\u3044\u306f\u30c8\u30d4\u30c3\u30af\u30e2\u30c7\u30eb\u306e\u56f3\u793a\u65b9\u6cd5\u3068\u3057\u3066 \u30d7\u30ec\u30fc\u30c8\u8868\u8a18 plate notation \u304c\u3042\u308a\u307e\u3059\u3002 \u4e0b\u56f3\u306b\u30d7\u30ec\u30fc\u30c8\u8868\u8a18\u306e\u4f8b\u3092\u793a\u3057\u307e\u3057\u305f\u3002 \u30d7\u30ec\u30fc\u30c8\u8868\u8a18: \u30ce\u30f3\u30d1\u30e9\u30e1\u30c8\u30ea\u30c3\u30af\u30e2\u30c7\u30eb\u306e\u8868\u73fe\u306b\u7528\u3044\u3089\u308c\u308b \u4e38\u306f\u78ba\u7387\u5909\u6570 \u77e2\u5370\u306f\u78ba\u7387\u7684\u4f9d\u5b58\u95a2\u4fc2\u3092\u8868\u73fe \u89b3\u6e2c\u5909\u6570\u306f\u5f71\u4ed8\u304d(\u6587\u732e\u306b\u3088\u3063\u3066\u306f\u4e8c\u91cd\u4e38) \u30d7\u30ec\u30fc\u30c8\u306f\u7e70\u308a\u8fd4\u3057\u3092\u8868\u3059 Y \u304b\u3089\u30d1\u30e9\u30e1\u30fc\u30bf X \u304c\u751f\u6210\u3055\u308c\u308b\u5834\u5408\uff0c\u77e2\u5370\u3092\u4f7f\u3063\u3066\u305d\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u8868\u73fe\u3057\u307e\u3059\u3002\u30ce\u30f3\u30d1\u30e9\u30e1\u30c8\u30ea\u30c3\u30af\u30e2\u30c7\u30eb\u306e\u5834\u5408\uff0c\u77e2\u5370\u306e\u6570\u3092\u4e88\u3081\u5b9a\u3081\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081\u77e2\u5370\u3092\u591a\u6570\u63cf\u304f\u306e\u304c\u7169\u96d1\u306a\u306e\u3067\uff0c\u4e00\u3064\u306e\u7bb1\u4ee3\u7528\u3057\u3066\u8868\u73fe\u3057\u307e\u3059\u3002 \u3053\u308c\u304c\u30d7\u30ec\u30fc\u30c8\u8868\u8a18\u306b\u306a\u308a\u307e\u3059\u3002 \u89b3\u6e2c\u53ef\u80fd\u306a\u5909\u6570\u3092\u30b0\u30ec\u30fc\uff0c\u307e\u305f\u306f\u4e8c\u91cd\u4e38\u3067\u8868\u3057\uff0c\u89b3\u6e2c\u4e0d\u80fd\u306a\uff0c\u985e\u63a8\u3059\u3079\u304d\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u767d\u4e38\u3067\u8868\u8a18\u3057\u307e\u3059\u3002 \u5b9f\u969b\u306b\u306f\u89b3\u6e2c\u4e0d\u53ef\u80fd\u306a\u6f5c\u5728\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u89b3\u6e2c\u30c7\u30fc\u30bf\u304b\u3089\u985e\u63a8\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u5927\u307e\u304b\u306a\u30eb\u30fc\u30eb\u3068\u3057\u3066\uff0c\u6f5c\u5728\u5909\u6570\u3092\u30ae\u30ea\u30b7\u30e3\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u8868\u8a18\uff0c\u89b3\u6e2c\u3055\u308c\u308b\u5909\u6570\u306f\u30ed\u30fc\u30de\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u8868\u8a18\u306e\u5834\u5408\u304c\u591a\u3044\u3067\u3059\u304c\uff0c\u4e00\u822c\u5247\u3067\u3059\u306e\u3067\u4f8b\u5916\u3082\u3042\u308a\u307e\u3059\u3002 \u4e0b\u56f3\u306b\u6f5c\u5728\u30c7\u30a3\u30ec\u30af\u30ea\u914d\u7f6e LDA \u306e\u30d7\u30ec\u30fc\u30c8\u8868\u8a18\u3092\u793a\u3057\u307e\u3057\u305f\u3002","title":"\u30d7\u30ec\u30fc\u30c8\u8868\u8a18"},{"location":"lect07/#_3","text":"\u30c8\u30d4\u30c3\u30af\u30e2\u30c7\u30eb\u306e\u8981\u70b9\u3092\u307e\u3068\u3081\u305f\u4e0b\u56f3\u306f\u3053\u308c\u307e\u3067\u306e\u8aac\u660e\u3092\u3059\u3079\u3066\u542b\u3093\u3067\u3044\u307e\u3059\u3002 \u51fa\u5178: \u30d6\u30e9\u30a4\u306e\u30b9\u30e9\u30a4\u30c9(2009)\u3088\u308a\uff0c\u6587\u7ae0\u306f\u8a71\u984c(\u30c8\u30d4\u30c3\u30af)\u306e\u6df7\u5408 \u5404\u6587\u7ae0\u306f\u305d\u306e\u8a71\u984c\u304b\u3089\u6587\u7ae0\u304c\u751f\u6210\u3055\u308c\u305f\u3068\u8003\u3048\u308b \u8208\u5473\u6df1\u3044\u5fdc\u7528\u4f8b\u3068\u3057\u3066 Mochihashi \u3089(2009) \u306e\u793a\u3057\u305f\u6559\u5e2b\u306a\u3057\u5b66\u7fd2\u306b\u3088\u308b\u65e5\u672c\u8a9e\u5206\u304b\u3061\u66f8\u304d\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002 \u4e0b\u56f3\u306f\u6e90\u6c0f\u7269\u8a9e\u3092\u30c8\u30d4\u30c3\u30af\u30e2\u30c7\u30eb\u306b\u3088\u308a\u5206\u304b\u3061\u66f8\u304d\u3055\u305b\u305f\u4f8b\u3067\u3059\u3002\u3069\u3053\u306b\u7a7a\u767d\u3092\u633f\u5165\u3059\u308b\u3068\u6587\u5b57\u9593\u306e\u96a3\u63a5\u95a2\u4fc2\u3092\u8868\u73fe\u3067\u304d\u308b\u304b\u3092\u30c8\u30d4\u30c3\u30af\u30e2\u30c7\u30eb\u3067\u89e3\u304f\u3053\u3068\u3092\u8003\u3048\u305f\u5834\u5408\uff0c\u7a7a\u767d\u306e\u633f\u5165\u4f4d\u7f6e\u304c\u78ba\u7387\u7684\u306b\u5b9a\u307e\u308b\u3068\u4eee\u5b9a\u3057\u3066\u5c45\u307e\u3059\u3002 Mochihashi \u3089\u306f\uff0c\u30eb\u30a4\u30b9\u30fb\u30ad\u30e3\u30ed\u30eb\u306e\u5c0f\u8aac \"\u4e0d\u601d\u8b70\u306e\u56fd\u306e\u30a2\u30ea\u30b9\" \u539f\u6587\u304b\u3089\u7a7a\u767d\u3092\u53d6\u308a\u9664\u304d\uff0c \u6587\u5b57\u9593\u306e\u96a3\u63a5\u95a2\u4fc2\u304b\u3089\u6587\u5b57\u306e\u533a\u5207\u308a\uff0c\u3059\u306a\u308f\u3061\u7a7a\u767d\u3092\u63a8\u5b9a\u3059\u308b\u3053\u3068\u3092\u8a66\u307f\u307e\u3057\u305f\u3002\u7d50\u679c\u3092\u4e0b\u56f3\u306b\u793a\u3057\u307e\u3057\u305f\u3002","title":"\u30c8\u30d4\u30c3\u30af\u3068\u5358\u8a9e\u306e\u95a2\u4fc2"},{"location":"lect07/#_4","text":"Blei, Jordan (2003) Latent Dirichlet Allocation \u539f\u8457\u8ad6\u6587 \u767a\u5c55\u30e2\u30c7\u30eb: \u4e2d\u83ef\u30ec\u30b9\u30c8\u30e9\u30f3\u904e\u7a0b CRP \u30a4\u30f3\u30c9\u98df\u5802\u904e\u7a0b IBP","title":"\u539f\u8457\u8ad6\u6587"},{"location":"lect07/#r","text":"https://cran.r-project.org/web/packages/lda/index.html https://cran.r-project.org/web/packages/topicmodels/index.html","title":"R \u306b\u3088\u308b\u5b9f\u88c5"},{"location":"lect07/#34-2013-word2vec","text":"\u30df\u30b3\u30ed\u30d5 \u304a\u306a\u3058\u304f\u30df\u30b3\u30ed\u30d5 \u30df\u30b3\u30ed\u30d5\u306f word2vec \u306b\u3088\u308a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3088\u308b\u610f\u5473\u5b9f\u88c5\u3092\u793a\u3057\u307e\u3057\u305f\u3002 \u30ef\u30fc\u30c9\u30c4\u30fc\u30d9\u30c3\u30af\u3068\u767a\u97f3\u3057\u307e\u3059\u3002 Word2vec \u306f\u5b9f\u88c5\u306b 2 \u7a2e\u985e\u3042\u30ea\u307e\u3059\u3002\u305d\u308c\u305e\u308c CBOW \u3068 skip-gram \u3068\u547d\u540d\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \"\u30b7\u30fc\u30dc\u30a6\" \u307e\u305f\u306f \"\u30b7\u30fc\u30d0\u30a6\" \u3068\u65e5\u672c\u4eba\u306f\u8a00\u3063\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3088\u3046\u3067\u3059\u3002 \u6709\u540d\u306a \"king\" - \"man\" + \"woman\" = \"queen\" \u306e\u30a2\u30ca\u30ed\u30b8\u30fc\u3092\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u55a7\u4f1d\u3055\u308c\u307e\u3057\u305f\u3002 \u4e0b\u56f3\u5de6\u306f\u610f\u5473\u7684\u306a\u30a2\u30ca\u30ed\u30b8\u30fc\u304c\u30d9\u30af\u30c8\u30eb\u306e\u5411\u304d\u3068\u3057\u3066\u8868\u73fe\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30d9\u30af\u30c8\u30eb\u306f\u65b9\u5411\u3068\u5927\u304d\u3055\u3092\u6301\u3063\u3066\u3044\u308b\u77e2\u5370\u3067\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\u77e2\u5370\u306e\u539f\u70b9\u3092\u79fb\u52d5\u3059\u308b \u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\u305f\u3068\u3048\u3070 \"MAN\" \u304b\u3089 \"WOMAN\" \u3078\u5411\u304b\u3046\u77e2\u5370\u3092\u5e73\u884c\u79fb\u52d5\u3057\u3066 \"KING\" \u307e\u3067 \u6301\u3063\u3066\u304f\u308b\u3068\uff0c\u305d\u306e\u77e2\u5370\u306f \"QUEEN\" \u3092\u91cd\u306a\u308b\u3053\u3068\u304c\u4e88\u60f3\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u304c\u30a2\u30ca\u30ed\u30b8\u30fc\u554f\u984c\u306e\u89e3\u653e\u306e\u76f4\u611f\u7684\u8aac\u660e\u306b\u306a\u308a\u307e\u3059\u3002 \u4e0a\u56f3\u53f3\u306f\u540c\u3058 word2vec \u3067\u3067\u304d\u305f\u7a7a\u9593\u306b\u5bfe\u3057\u3066\uff0c\u7d71\u8a9e\u95a2\u4fc2 syntax \u3092\u89e3\u304b\u305b\u305f\u5834\u5408\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002 \"KING\" \u304b\u3089 \"KINGS\" \u3078\u5411\u304b\u3046\u77e2\u5370\u3092 \"QUEEN\" \u307e\u3067\u6301\u3063\u3066\u304f\u308b\u3068 \"QUEENS\" \u306b\u91cd\u306a\u308b \u3053\u3068\u304c\u898b\u3066\u53d6\u308c\u307e\u3059\u3002 \u3053\u306e\u3053\u3068\u304b\u3089\u4e0a\u56f3\u53f3\u306e\u8d64\u77e2\u5370\u3067\u793a\u3055\u308c\u305f\u30d9\u30af\u30c8\u30eb\u306f \u8907\u6570\u5f62 \u3078\u306e\u5909\u63db\u3068\u3044\u3046\u7d71\u8a9e\u60c5\u5831\uff0c \u6587\u6cd5\u60c5\u5831\u3092\u8868\u73fe\u3057\u3066\u3044\u308b\u3068\u307f\u306a\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u4f1d\u7d71\u7684\u306a\u8a00\u8a9e\u5b66\u306e\u77e5\u8b58\u3067\u306f\uff0c\u7d71\u8a9e\u69cb\u9020\u3068\u610f\u5473\u69cb\u9020\u306f\u5225\u500b\u306b\u53d6\u308a\u7d44\u3080\u8ab2\u984c\u3067\u3042\u308b\u3068\u8003\u3048\u3089\u308c\u3066\u304d\u307e\u3057\u305f\u3002 \u3068\u3053\u308d\u304c word2vec \u304c\u793a\u3059\u610f\u5473\u7a7a\u9593\u306f\u305d\u306e\u3088\u3046\u306a\u533a\u5225\u3092\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u304b\u5426\u304b\u306b\u3064\u3044\u3066 \u554f\u984c\u3092\u63d0\u8d77\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u601d\u308f\u308c\u307e\u3059\u3002 \u9006\u306b\u4e00\u3064\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3042\u308c\u3070\uff0c\u5206\u5272\u3057\u3066\u6271\u3046\u610f\u5473\u304c\u3042\u308b\u306e\u304b\u3069\u3046\u304b\u3092\u8003\u3048\u308b\u5207\u3063\u639b\u3051\u306b\u306a\u308b\u3068\u8003\u3048\u307e\u3059\u3002 \u3082\u3046\u4e00\u3064\u9762\u767d\u3044\u7d50\u679c\u3092\u4e0b\u56f3\u306b\u793a\u3057\u307e\u3059\u3002\u4e0b\u56f3\u306f word2vec \u306b\u3088\u3063\u3066\u4e16\u754c\u306e\u56fd\u3068\u305d\u306e\u9996\u90fd\u3068\u306e\u95a2\u4fc2\u3092\u4e3b\u6210\u5206\u5206\u6790 PCA \u3067 2 \u6b21\u5143\u306b\u63cf\u753b\u3057\u305f\u56f3\u3067\u3059\u3002 \u6a2a\u8ef8\u306f\u56fd\u3068\u9996\u90fd\u3068\u306e\u95a2\u4fc2\u3092\u8868\u73fe\u3057\u3066\u3044\u308b\u3068\u307f\u306a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u7e26\u8ef8\u306f\u4e0b\u304b\u3089\u4e0a\u306b\u5411\u304b\u3063\u3066 \u304a\u304a\u307e\u304b\u306b\u30e6\u30fc\u30e9\u30b7\u30a2\u5927\u9678\u3092\u897f\u304b\u3089\u6771\u3078\u6a2a\u65ad\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u914d\u7f6e\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u610f\u5473\u3092\u8868\u73fe\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u306f\uff0c\u89e3\u91c8\u306b\u3088\u3063\u3066\uff0c\u3053\u306e\u5834\u5408 PCA \u306b\u3088\u3063\u3066 2 \u6b21\u5143\u306b\u56f3\u793a\u3057\u3066\u307f\u308b\u3068 \u5927\u307e\u304b\u306b\u6211\u3005\u306e\u77e5\u8b58\u3092\u8868\u73fe\u3067\u304d\u308b\u3053\u3068\u3092\u793a\u5506\u3057\u3066\u3044\u308b\u3068\u8003\u3048\u307e\u3059\u3002 word2vec \u306e\u5b9f\u88c5\u306b\u306f 2 \u7a2e\u985e\u3042\u308a\u307e\u3059\u3002\u3069\u3061\u3089\u3092\u4f7f\u3063\u3066\u3082\u540c\u3058\u3088\u3046\u306a\u7d50\u679c\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 CBOW: Continous Bog of Words \u9023\u7d9a\u5358\u8a9e\u888b skip-gram: \u30b9\u30ad\u30c3\u30d7\u30b0\u30e9\u30e0 \u4e21\u8005\u306f\u53cd\u5bfe\u306e\u95a2\u4fc2\u306b\u306a\u308a\u307e\u3059\u3002\u4e0b\u56f3\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 From Mikolov (2013) Fig. 1 CBOW \u3082 skip-gram \u3082 3 \u5c64\u306b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3059\u3002\u305d\u306e\u4e2d\u9593\u5c64\u306b\u73fe\u308c\u305f\u8868\u73fe\u3092 \u30d9\u30af\u30c8\u30eb\u57cb\u3081\u8fbc\u307f\u30e2\u30c7\u30eb \u3042\u308b\u3044\u306f \u5358\u8a9e\u57cb\u3081\u8fbc\u307f\u30e2\u30c7\u30eb \u3068\u8a00\u3063\u305f\u308a\u3057\u307e\u3059\u3002 CBOW \u30e2\u30c7\u30eb\u306f\u5468\u8fba\u306e\u5358\u8a9e\u306e\u5358\u8a9e\u888b\u8a70\u3081\u8868\u73fe\u304b\u3089\u4e2d\u592e\u306e\u5358\u8a9e\u3092\u4e88\u6e2c\u3059\u308b\u30e2\u30c7\u30eb\u3067\u3059\u3002 skip-gram \u306f\u4e2d\u5fc3\u306e\u5358\u8a9e\u304b\u3089\u5468\u8fba\u306e\u5358\u8a9e\u888b\u8a70\u8868\u73fe\u3092\u4e88\u6e2c\u3059\u308b\u30e2\u30c7\u30eb\u3067\u3059\u3002 \u305f\u3068\u3048\u3070\uff0c\u6b21\u306e\u6587\u7ae0\u3092\u8003\u3048\u307e\u3059\u3002 1 [ \"\u5f7c\" , \"\u306f\" , \"\u610f\u5473\u8ad6\" , \"\u3092\" , \"\u8ad6\u3058\" , \"\u305f\" ] \u8868\u8a18\u3092\u7c21\u6f54\u306b\u3059\u308b\u305f\u3081\u5404\u5358\u8a9e\u306b ID \u3092\u3075\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002 1 { \"\u5f7c\" : 0 , \"\u306f\" : 1 , \"\u610f\u5473\u8ad6\" : 2 , \"\u3092\" : 3 , \"\u8ad6\u3058\" : 4 , \"\u305f\" : 5 } \u3059\u308b\u3068\u4e0a\u8a18\u4f8b\u6587\u306f 1 [ 0 , 1 , 2 , 3 , 4 , 5 ] \u3068\u8868\u73fe\u3055\u308c\u307e\u3059\u3002 \u30a6\u30a3\u30f3\u30c9\u30a6\u5e45\u304c\u30d7\u30e9\u30b9\u30de\u30a4\u30ca\u30b9 2 \u3067\u3042\u308b CBOW \u30e2\u30c7\u30eb\u3067\u306f 3 \u5c64\u306e\u591a\u5c64\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3 \u306e\u5165\u51fa\u529b\u95a2\u4fc2\u306f\uff0c\u5165\u529b\u304c 4 \u6b21\u5143\u30d9\u30af\u30c8\u30eb\uff0c\u51fa\u529b\u3082 4 \u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3068\u306a\u308a\u307e\u3059\u3002 \u6587\u306e\u5883\u754c\u3092\u7121\u8996\u3059\u308c\u3070\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5165\u51fa\u529b\u95a2\u4fc2\u3068\u307f\u306a\u305b\u307e\u3059\u3002 1 2 3 4 5 6 [ 0 ,1,1,0,0,0] -> [ 1 ,0,0,0,0,0] # In:\"\u306f\",\"\u610f\u5473\u8ad6\" Out:\"\u5f7c\" [ 1 ,0,1,1,0,0] -> [ 0 ,1,0,0,0,0] # In:\"\u5f7c\",\"\u610f\u5473\u8ad6\",\"\u3092\" Out:\"\u306f\" [ 1 ,1,0,1,1,0] -> [ 0 ,0,1,0,0,0] # In:\"\u5f7c\",\"\u306f\",\"\u3092\",\"\u8ad6\u3058\" Out:\"\u610f\u5473\u8ad6\" [ 0 ,1,1,0,1,1] -> [ 0 ,0,0,1,0,0] # In:\"\u306f\",\"\u610f\u5473\u8ad6\",\"\u8ad6\u3058\",\"\u305f\" Out:\"\u3092\" [ 0 ,0,1,1,0,1] -> [ 0 ,0,0,0,1,0] # In:\"\u610f\u5473\u8ad6\",\"\u3092\",\"\u305f\" Out:\"\u8ad6\u3058\" [ 0 ,0,0,1,1,0] -> [ 0 ,0,0,0,0,1] # In:\"\u3092\",\"\u8ad6\u3058\" \u51fa\u529b:\"\u305f\" \u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3068\u306a\u308a\u307e\u3059\u3002 CBOW \u306b\u305b\u3088 skip-gram \u306b\u305b\u3088\u5927\u898f\u6a21\u30b3\u30fc\u30d1\u30b9\uff0c\u4f8b\u3048\u3070\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u5168\u6587\u3092\u7528\u3044\u3066\u8a13\u7df4\u3092\u884c\u3044\u307e\u3059\u3002\u5468\u8fba\u306e\u5358\u8a9e\u3092\u3069\u306e\u7a0b\u5ea6\u53d6\u308b\u304b\u306f\u52dd\u624b\u306b\u6c7a\u3081\u307e\u3059\u3002 Mikolov \u304c\u985e\u63a8\u306b\u7528\u3044\u305f\u30c7\u30fc\u30bf\u4f8b\u3092\u4e0b\u56f3\u306b\u793a\u3057\u307e\u3057\u305f\u3002\u56fd\u540d\u3068\u5bfe\u5fdc\u3059\u308b\u9996\u90fd\u540d\uff0c\u56fd\u540d\u3068\u305d\u306e\u901a\u8ca8\u540d\uff0c\u306a\u3069\u306f\u610f\u5473\u7684\u95a2\u4fc2\u3067\u3059\u3002\u4e00\u65b9\u7f6b\u7dda\u4e0b\u65b9\u306f\u6587\u6cd5\u95a2\u4fc2\u3067\u3059\u3002 \u5f62\u5bb9\u8a5e\u304b\u3089\u526f\u8a5e\u5f62\u3092\u985e\u63a8\u3057\u305f\u308a\uff0c\u53cd\u610f\u8a9e\u3092\u985e\u63a8\u3057\u305f\u308a\uff0c\u6bd4\u8f03\u7d1a\uff0c\u904e\u53bb\u5206\u8a5e\uff0c\u56fd\u540d\u3068\u56fd\u6c11\uff0c\u904e\u53bb\u5f62\uff0c\u8907\u6570\u5f62\uff0c\u52d5\u8a5e\u306e 3 \u4eba\u79f0\u5358\u6570\u73fe\u5728\u5f62\u306a\u3069\u3067\u3059\u3002 From Milolov (2013) Tab. 1 \u3057\u3070\u3057\u3070\uff0c\u795e\u7d4c\u5fc3\u7406\u5b66\u3084\u8a8d\u77e5\u5fc3\u7406\u5b66\u3067\u306f\uff0c\u305d\u308c\u305e\u308c\u306e\u54c1\u8a5e\u5225\u306e\u51e6\u7406\u3092\u4eee\u5b9a\u3057\u305f\u308a\uff0c\u610f\u5473\u7684\u306a\u8131\u843d\u3092\u8003\u3048\u305f\u308a\u3059\u308b\u5834\u5408\u306b\uff0c\u7570\u306a\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u60f3\u5b9a\u3059\u308b\u3053\u3068\u304c\u884c\u308f\u308c\u307e\u3059\u3002 \u305d\u308c\u3089\u306e\u4eee\u5b9a\u3057\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u8133\u5185\u306b\u5bfe\u5fdc\u95a2\u4fc2\u304c\u5b58\u5728\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u795e\u7d4c\u5fc3\u7406\u5b66\u7684\u306b\u306f\u8aac\u660e\u3068\u3057\u3066\u5341\u5206\u3067\u3057\u3087\u3046\u3002 \u3068\u3053\u308d\u304c word2vec \u3067\u793a\u3057\u305f\u8868\u73fe\u3067\u306f\u4e00\u3064\u306e\u610f\u5473\u3068\u7d71\u8a9e\u3068\u306e\u8868\u73fe\u3092\u4e0e\u3048\u308b\u4e2d\u9593\u5c64\u306b\u5473\u65b9\u3092\u5909\u3048\u308b (PCA \u306a\u3069)\u3067\u63cf\u753b\u3057\u3066\u307f\u308c\u3070\uff0c\u7570\u306a\u308b\u8907\u6570\u306e\u8a00\u8a9e\u77e5\u8b58\u3092\u4e00\u3064\u306e\u8868\u8c61\u3067\u8868\u73fe\u3067\u304d\u308b\u3053\u3068\u304c\u793a\u5506\u3055\u308c\u307e\u3059\u3002 word2vec \u306b\u3088\u308b\u8868\u73fe\u304c\u8133\u5185\u306b\u5206\u6563\u3057\u3066\u3044\u308b\u3068\u8003\u3048\u308b\u3068\u30ab\u30c6\u30b4\u30ea\u30fc\u7279\u7570\u6027\u306e\u554f\u984c\u3084\u57fa\u672c\u6982\u5ff5\u512a\u4f4d\u6027\u306e\u554f\u984c\u3092\u3069\u3046\u6349\u3048\u308c\u3070\u826f\u3044\u306e\u304b\u306b\u3064\u3044\u3066\u793a\u5506\u306b\u5bcc\u3080\u3068\u8003\u3048\u307e\u3059\u3002 \u65e5\u672c\u8a9e\u306e\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u3092\u7528\u3044\u305f word2vec \u3068 NTT \u65e5\u672c\u8a9e\u306e\u8a9e\u5f59\u7279\u6027\u3068\u306e\u95a2\u9023\u306b\u95a2\u5fc3\u306e\u3042\u308b\u65b9\u306f \u65e5\u672c\u8a9e Wikipedia \u306e word2vec \u8868\u73fe\u3068\u8a9e\u5f59\u7279\u6027\u3068\u306e\u95a2\u4fc2, \u8fd1\u85e4\u30fb\u6d45\u5ddd (2017) \u3092\u3054\u89a7\u304f\u3060\u3055\u3044","title":"3.4. 2013 \u5e74 word2vec, \u5358\u8a9e\u57cb\u3081\u8fbc\u307f, \u30d9\u30af\u30c8\u30eb\u57cb\u3081\u8fbc\u307f\u30e2\u30c7\u30eb"},{"location":"lect07/#_5","text":"Word2vec \u3092\u4f7f\u3063\u3066\u5927\u898f\u6a21\u30b3\u30fc\u30d1\u30b9\u3092\u5b66\u7fd2\u3055\u305b\u308b\u969b\u306b\uff0c\u5b66\u7fd2\u3055\u305b\u308b\u30c7\u30fc\u30bf\u4ee5\u5916\u306b\u5168\u304f\u95a2\u4fc2\u306e\u306a\u3044\u7d44\u307f\u5408\u308f\u305b\u3092\u30da\u30ca\u30eb\u30c6\u30a3\u30fc\u3068\u3057\u3066\u4e0e\u3048\u308b\u3053\u3068\u3067\u7cbe\u5ea6\u304c\u5411\u4e0a\u3057\u307e\u3059\u3002","title":"\u3055\u3089\u306a\u308b\u860a\u84c4 \u8ca0\u4f8b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0"},{"location":"lect07/#_6","text":"\u5358\u8a9e\u306e word2vec \u306b\u3088\u308b\u8868\u73fe\u306f 3 \u5c64\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u306e\u4e2d\u9593\u5c64\u306e\u6d3b\u6027\u5024\u3068\u3057\u3066\u8868\u73fe\u3055\u308c\u307e\u3059\u3002 \u5358\u8a9e\u3088\u308a\u5927\u304d\u306a\u307e\u3068\u307e\u308a\u306e\u610f\u5473\u8868\u73fe\uff0c\u305f\u3068\u3048\u3070\uff0c\u6587\uff0c\u6bb5\u843d\uff0c\u306a\u3069\u306e\u8868\u73fe\u3092\u3069\u306e\u3088\u3046\u306b\u5f97\u308b\u306e\u304b\u304c\u554f\u984c\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u3053\u3067\u8a73\u7d30\u306b\u306f\u89e6\u308c\u307e\u305b\u3093\u304c\uff0c\u6587\u8868\u73fe\u30d9\u30af\u30c8\u30eb\u306f\u5404\u5358\u8a9e\u8868\u73fe\u306e\u7dcf\u548c\u3067\u3042\u308b\u3068\u8003\u3048\u308b\u306e\u304c\u3082\u3063\u3068\u3082\u7c21\u5358\u306a\u8868\u73fe\u306b\u306a\u308a\u307e\u3059\u3002 \u3059\u306a\u308f\u3061\u6b21\u6587: 1 [ \"\u5f7c\" , \"\u306f\" , \"\u610f\u5473\u8ad6\" , \"\u3092\" , \"\u8ad6\u3058\" , \"\u305f\" ] \u306e\u6587\u8868\u73fe\u3092\u5f97\u308b\u305f\u3081\u306b\u306f\uff0c\u5404\u5358\u8a9e\u306e word2vec \u8868\u73fe\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\u3053\u3068\u304c\u884c\u308f\u308c\u307e\u3059\u3002 \u305f\u3060\u3057\uff0c\u5358\u7d14\u306b\u8db3\u3057\u5408\u308f\u305b\u305f\u306e\u3067\u306f BOW \u5358\u8a9e\u888b\u8868\u73fe\u3068\u540c\u3058\u3053\u3068\u3067\u3059\u306e\u3067\uff0c\u5358\u8a9e\u306e\u9806\u5e8f\u60c5\u5831\u304c\u5931\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u8fba\u308a\u3092\u3069\u3046\u6539\u5584\u3059\u308c\u3070\u826f\u3044\u306e\u304b\u304c\u8b70\u8ad6\u3055\u308c\u3066\u304d\u307e\u3057\u305f\u3002","title":"\u767a\u5c55 \u6587\u7ae0\u57cb\u3081\u8fbc\u307f\u30e2\u30c7\u30eb\u3078"},{"location":"lect07/#_7","text":"word2vec \u30aa\u30ea\u30b8\u30ca\u30eb\u8ad6\u6587 2013\u5e74 Mikolov fastText \u9ad8\u901f\u6587\u57cb\u3081\u8fbc\u307f\u30e2\u30c7\u30eb \u305d\u306e\u767a\u5c55 \u6d45\u5ddd, \u5ca1, \u6960\u898b (2018)","title":"\u6587\u732e"},{"location":"lect08/","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA) \u00b6 Shin Aasakawa , all rights reserved. Date: 26/Jun/2020 Appache 2.0 license \u672c\u65e5\u306e\u8ab2\u984c \u5b9f\u7fd2 \u00b6 word2vec\u306e\u5148\u9031\u306e\u518d\u9332 BERT \u306e\u6ce8\u610f\u306e\u8996\u899a\u5316 \u65e5\u672c\u8a9e BERT \u306e\u5b9f\u7fd2 \u96d1\u8ac7\uff0c\u4f59\u8ac7 \u00b6 \u9ce5\u306e\u7ffc\u3084\u7fbd\u306e\u69cb\u9020\u3068\u7a7a\u3092\u98db\u3076\u305f\u3081\u306e\u4ed5\u7d44\u307f\u306e\u89e3\u660e\u3068\u98db\u884c\u6a5f\u3068\u306e\u95a2\u4fc2\u306b\u3064\u3044\u3066\u3002 \u9ce5\u985e\u3084\u6606\u866b\u306e\u7fc5\u3068\u98db\u884c\u6a5f\u3068\u306e\u5bfe\u6bd4\u306f\uff0c\u4eba\u9593\u306e\u8133\u306b\u5bbf\u308b\u77e5\u6027\u3068\uff0c\u4eba\u5de5\u77e5\u80fd\uff0c\u3042\u308b\u3044\u306f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u3068\u306e\u5bfe\u6bd4\u304c\u306a\u3055\u308c\u307e\u3059\u3002 \u8abf\u3079\u308b\u9650\u308a \u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30d5\u30a3\u30c3\u30af\u30fb\u30a2\u30e1\u30ea\u30ab\u30f3 \u306b\u63b2\u8f09\u3055\u308c\u305f Ford \u3068 Hayes \u306e\u8a18\u4e8b\u304c\u51fa\u5178\u306e\u3088\u3046\u3067\u3059\u3002 \u3053\u306e\u8a18\u4e8b\u306b\u3088\u308c\u3070\uff0c\u9ce5\u306e\u7fbd\u306e\u69cb\u9020\u306e\u7814\u7a76\u3060\u3051\u304b\u3089\u306f\uff0c\u98db\u884c\u6a5f\u306f\u751f\u307e\u308c\u306a\u304b\u3063\u305f\u3002\u98db\u884c\u6a5f\u3092\u5b9f\u7528\u5316\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u5b9f\u9a13\u306f\u300c\u4eba\u5de5\u7ffc\u300d\u306e\u98a8\u6d1e\u5b9f\u9a13\u3067\u3057\u305f\u3002 \u98db\u884c\u6a5f\u306e\u5b9f\u73fe\u304c\u3082\u305f\u3089\u3057\u305f\u3082\u306e\u306f\uff0c\u7a7a\u529b\u5b66\u306e\u7406\u89e3\uff0c\u9ce5\u306e\u7fbd\u3068\u98db\u884c\u6a5f\u3068\u98db\u884c\u3059\u308b\u3053\u3068\u306b\u3064\u3044\u3066\u306e\u6df1\u3044\u7406\u89e3\u3067\u3057\u305f\u3002 \u9ce5\u306e\u7fbd\u306e\u89e3\u5256\u5b66\u306f\uff0c\u3064\u304e\u306f\u304e\uff0c\u4ed8\u3051\u8db3\u3057\u304b\u3089\u6210\u308b\u9032\u5316\u306e\u7523\u7269\u3067\u3042\u308b\u7fbd\u306f\uff0c\u304b\u3048\u3063\u3066\u98db\u884c\u306e\u672c\u8cea\u3092\u6349\u3048\u306b\u304f\u304b\u3063\u305f\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002 \u300c\u9ce5\u306e\u7fbd\u300d\u3068\u300c\u4eba\u5de5\u306e\u7ffc\u300d\u3068\u306e\u95a2\u4fc2\u3092\uff0c\u300c\u4eba\u9593\u306e\u8133\u300d\u3042\u308b\u3044\u306f\u8133\u306b\u5bbf\u308b\u77e5\u6027\u3068\u300c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u300d\u306b\u7f6e\u304d\u63db\u3048\u3066\u8003\u3048\u308c\u3070\uff0c \u4eba\u9593\u306e\u77e5\u6027\u3092\uff0c\u5fae\u306b\u5165\u308a\u969b\u306b\u5165\u308a\u8abf\u3079\u308b\u3053\u3068\uff0c\u305d\u3053\u304b\u3089\u4e00\u65e6\u96e2\u308c\u3066\uff0c\u5225\u306e\u6750\u6599\u3092\u7528\u3044\u305f\u5b9f\u9a13\u3092\u884c\u3046\u3053\u3068\u3067\uff0c \u4eba\u9593\u3068\u52d5\u7269\u3068\u6a5f\u68b0\u306e\u5168\u3066\u306b\u5171\u901a\u3059\u308b\u77e5\u6027\u306b\u3064\u3044\u3066\u6df1\u3044\u7406\u89e3\u304c\u5f97\u3089\u308c\u308b\u3060\u308d\u3046\uff0c\u3068\u524d\u8ff0\u306e Ford \u3068 Hayes \u306f\u66f8\u3044\u3066\u3044\u307e\u3059\u3002 Ford, K. and Hayes, P. (1998) On Computational Wings: Rethinking the Goals of Artificial Intelligence, Scientific American, 9(4), 79-83. \u5fa9\u7fd2 \u00b6 Seq2sep \u7ffb\u8a33\u30e2\u30c7\u30eb \u00b6 \u4e2d\u9593\u5c64\u306e\u6700\u7d42\u6642\u523b\u306e\u72b6\u614b\u306b\u6587\u8868\u73fe\u304c\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\u3068\u3059\u308b\u3068\uff0c\u3053\u308c\u3092\u5fdc\u7528\u3059\u308b\u3070 \u6a5f\u68b0\u7ffb\u8a33 \u3084 \u5bfe\u8a71 \u306e\u30e2\u30c7\u30eb\u306b\u306a\u308b\u3002 \u521d\u671f\u306e\u7ffb\u8a33\u30e2\u30c7\u30eb\u3067\u3042\u308b \"seq2seq\" \u306e\u6982\u5ff5\u56f3\u3092\u793a\u3057\u305f\u3002 \"eos\" \u306f\u6587\u672b end of sentence \u3092\u8868\u3059\u3002 \u4e2d\u592e\u306e \"eos\" \u306e\u524d\u304c\u30bd\u30fc\u30b9\u8a00\u8a9e\u3067\u3042\u308a\uff0c\u4e2d\u592e\u306e \"eos\" \u306e\u5f8c\u306f\u30bf\u30fc\u30b2\u30c3\u30c8\u8a00\u8a9e\u306e\u8a00\u8a9e\u30e2\u30c7\u30eb\u3067\u3042\u308b\u5358\u7d14\u518d\u5e30\u578b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u4e2d\u9593\u5c64\u3078\u306e\u5165\u529b\u3068\u3057\u3066\u7528\u3044\u3089\u308c\u308b\u3002 \u6ce8\u610f\u3059\u3079\u304d\u306f\uff0c\u30bd\u30fc\u30b9\u8a00\u8a9e\u306e\u6587\u7d42\u4e86\u6642\u306e\u4e2d\u9593\u5c64\u72b6\u614b\u306e\u307f\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u8a00\u8a9e\u306e\u6700\u521d\u306e\u4e2d\u9593\u5c64\u306e\u5165\u529b\u306b\u7528\u3044\u308b\u3053\u3068\u3067\u3042\u308a\uff0c \u305d\u308c\u4ee5\u5916\u306e\u6642\u523b\u3067\u306f\u30bd\u30fc\u30b9\u8a00\u8a9e\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u8a00\u8a9e\u306f\u95a2\u4fc2\u304c\u306a\u3044\u3002 \u9006\u306b\u8a00\u3048\u3070\u6700\u7d42\u6642\u523b\u306e\u4e2d\u9593\u5c64\u72b6\u614b\u304c\u30bd\u30fc\u30b9\u6587\u306e\u60c5\u5831\u5168\u3066\u3092\u542b\u3093\u3067\u3044\u308b\u3068\u307f\u306a\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u3053\u306e\u70b9\u3092\u6539\u5584\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3059\u3053\u3068\u304c 2014 \u5e74\u4ee5\u964d\u76db\u3093\u306b\u306a\u3063\u305f\u3002 \u9855\u8457\u306a\u4f8b\u304c\u5f8c\u8ff0\u3059\u308b \u53cc\u65b9\u5411 RNN , LSTM \u3092\u63a1\u7528\u3057\u305f\u308a\uff0c \u6ce8\u610f \u6a5f\u69cb\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u3067\u3042\u3063\u305f\u3002 From [2014Sutskever_Sequence_to_Sequence] From [@2014Sutskever_Sequence_to_Sequence] Fig. 2 From [@2014Sutskever_Sequence_to_Sequence] Fig. 2 \u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc \u304c\u63d0\u5531\u3057\u305f \u81ea\u5df1\u6ce8\u610f \u00b6 \u5c02\u9580\u7528\u8a9e\u3068\u3057\u3066\u306f\uff0c \u591a\u982d=\u81ea\u5df1\u6ce8\u610f Multi-Head Self-Attention (\u4ee5\u4e0b MHSA \u3068\u8868\u8a18)\u3068\u547c\u3073\u307e\u3059\u3002 \u591a\u982d\u3068\u306f\u4f55\u304b\uff0c\u306a\u305c \u81ea\u5df1 \u304c\u3064\u304f\u6ce8\u610f\u306a\u306e\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Left: [@2017Vaswani_transformer], Right: [@2019Ramachandran_attention_vision] \u4e0a\u56f3\uff0c\u30af\u30a8\u30ea\uff0c\u30ad\u30fc\uff0c\u30d0\u30ea\u30e5\u30fc \u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u82f1\u5358\u8a9e\u306e\u610f\u5473\u3069\u304a\u308a\u306b\u89e3\u91c8\u3059\u308c\u3070\uff0c\u554f\u3044\u5408\u308f\u305b\uff0c\u30ad\u30fc\uff08\u9375\uff09\uff0c\u5024\uff0c\u3068\u306a\u308a\u307e\u3059\u3002 \u3064\u307e\u308a\uff0c\u3042\u308b\u554f\u3044\u5408\u308f\u305b\u306b\u5bfe\u3057\u3066\uff0c\u30ad\u30fc\u3092\u4e0e\u3048\u3066\uff0c\u305d\u306e\u7b54\u3048\u3068\u306a\u308b\u5024\u3092\u5f97\u308b\u3053\u3068\u3002 \u3053\u306e\u64cd\u4f5c\u3092\u5165\u529b\u60c5\u5831\u304b\u3089\u4f5c\u308a\u51fa\u3057\u3066\u7b54\u3048\u3092\u51fa\u529b\u3059\u308b\u4ed5\u7d44\u307f\u306b\uff0c\u30ef\u30f3\u30db\u30c3\u30c8\u8868\u73fe\u3092\u4f7f\u3046\u3053\u3068\u304c\u30dd\u30a4\u30f3\u30c8 \u4e0b\u56f3\u5de6\u306f\u4e0a\u56f3\u53f3\u3068\u540c\u3058\u3082\u306e\u3067\u3059\u3002\u3053\u306e\u4e0b\u56f3\u53f3\u3092\u8907\u6570\u500b\u675f\u306d\u308b\u3068\u4e0b\u56f3\u4e2d\u592e\u306b\u306a\u308a\u307e\u3059\u3002 \u4e0b\u56f3\u4e2d\u592e\u306e Scaled Dot-Product Attention \u3068\u66f8\u304b\u308c\u305f\u53f3\u8107\u306b\u5c0f\u3055\u304f h \u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u306e h \u3068\u306f \u30d8\u30c3\u30c9 \u306e\u610f\u5473\u3067\u3059\u3002 \u4e0b\u56f3\u4e2d\u592e\u3092 1 \u3064\u306e\u5358\u4f4d\u3068\u3057\u3066\uff0c\u6b21\u306b\u6765\u308b\u60c5\u5831\u3068\u9023\u7d50\u3055\u305b\u307e\u3059\u3002\u3053\u308c\u304c\u4e0b\u56f3\u53f3\u3067\u3059\u3002 \u5148\u9031\u306e\u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u306f\uff0c\u4e2d\u9593\u5c64\u306e\u72b6\u614b\u304c\u6b21\u306e\u6642\u523b\u306e\u51e6\u7406\u306b\u7d99\u7d9a\u3057\u3066\u7528\u3044\u3089\u308c\u3066\u3044\u307e\u3057\u305f\u3002 \u3068\u3053\u308d\u304c \u591a\u982d=\u81ea\u5df1\u6ce8\u610f MHSA \u3067\u306f\u4e00\u3064\u524d\u306e\u5165\u529b\u60c5\u5831\u3092\uff0c\u73fe\u5728\u306e\u6642\u523b\u306e\u60c5\u5831\u306b\u5bfe\u3059\u308b\u30af\u30a8\u30ea\u3068\u30ad\u30fc\u306e\u3088\u3046\u306b\u6271\u3063\u3066\u60c5\u5831\u3092\u51e6\u7406\u3057\u307e\u3059\u3002 \u4e0b\u56f3\u53f3\u306e\u4e0b\u304b\u3089\u5165\u529b\u3055\u308c\u308b\u60c5\u5831\u306f\uff0cinput \u3068 output \u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u3055\u3089\u306b output \u306e\u4e0b\u306b\u306f (Shifted right) \u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u3059\u306a\u308f\u3061\uff0c\u6642\u7cfb\u5217\u60c5\u5831\u3092\u4e00\u6642\u523b\u5206\u3060\u3051\u53f3\u306b\u305a\u3089\u3057\uff08\u30b7\u30d5\u30c8\uff09\u3055\u305b\u3066\u9010\u6b21\u60c5\u5831\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002 \u4e0b\u56f3\u53f3\u306e\u4e0b\u304b\u3089\u5165\u529b\u3055\u308c\u308b\u60c5\u5831\u306f\uff0cembedding \u3064\u307e\u308a\u57cb\u3081\u8fbc\u307f\u8868\u73fe \u3068 \u4f4d\u7f6e\u7b26\u53f7\u5316 position embedding \u304c\u8db3\u3057\u5408\u308f\u3055\u308c\u305f\u3082\u306e\u3067\u3059\u3002\u57cb\u3081\u8fbc\u307f\u8868\u73fe\u3068\u306f\u5148\u9031 word2vec \u3067\u89e6\u308c\u305f\u30d9\u30af\u30c8\u30eb\u3067\u8868\u73fe\u3055\u308c\u305f\uff0c\u5358\u8a9e\uff08\u3042\u308b\u3044\u306f\u305d\u308c\u305e\u308c\u306e\u9805\u76ee\uff09\u306e \u610f\u5473\u8868\u73fe \u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002 \u5c11\u3057\u3060\u3051\u307e\u3068\u3081\u308b\u3068: \u81ea\u7136\u8a00\u8a9e\u51e6\u7406\uff0c\u753b\u50cf\u51e6\u7406\uff0c\u5f37\u5316\u5b66\u7fd2\uff0c\u30e1\u30bf\u5b66\u7fd2\u306e 4 \u5206\u91ce\u3067\u307b\u307b\u540c\u69d8\u306e \u591a\u982d\u81ea\u5df1\u6ce8\u610f MHSA \u304c\u53d6\u308a\u5165\u308c\u3089\u308c\u3066\u3044\u308b\u3002 \u30af\u30a8\u30ea\uff0c\u30ad\u30fc\uff0c\u30d0\u30ea\u30e5\u30fc \u306e\u91cd\u307f\u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u304c MHSA \u306e\u5b66\u7fd2\u3067\u3042\u308b\u3002 \u5f93\u6765\u624b\u6cd5\u3067\u3042\u308b \u7573\u307f\u8fbc\u307f \u3084 LSTM \u3092 MHSA \u3067\u7f6e\u304d\u63db\u3048\u308b\u52d5\u304d\u304c\u3042\u308b\u3002 BERT \u306e\u7279\u5fb4 \u00b6 \u4e0a\u8a18\u306e\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u306b\u57fa\u3065\u3044\u3066 BERT \u304c\u63d0\u6848\u3055\u308c\u307e\u3057\u305f\u3002 BERT \u306f B idirectional E ncoder R epresentations from T ransformers \u304b\u3089\u547d\u540d\u3057\u305f\u3068\u539f\u8457\u8ad6\u6587\u306b\u306f\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002 \u3067\u3059\u304c\uff0c\u3053\u306e\u539f\u8457\u8ad6\u6587\u306e\u76f4\u524d\u306b\u63d0\u6848\u3055\u308c\u305f\u30e2\u30c7\u30eb\u306b ELMo \u304c\u3042\u3063\u305f\u305f\u3081\uff0c\u3053\u3058\u3064\u3051\u305f\uff0c\u3075\u3056\u3051\u305f\u547d\u540d\u3067\u3057\u3087\u3046\u3002 \u3082\u3061\u308d\u3093 ELMo (\u3053\u3061\u3089\u306f E mbeddings from L anguage Mo dels \u304b\u3089\u547d\u540d\u3055\u308c\u307e\u3057\u305f)\u3082 BERT \u3082\u30bb\u30b5\u30df\u30b9\u30c8\u30ea\u30fc\u30c8\u306b\u51fa\u3066\u304f\u308b\u30ad\u30e3\u30e9\u30af\u30bf\u3067\u3059\u3002 BERT \u306e\u7279\u5fb4\u3092 3 \u3064\u306b\u307e\u3068\u3081\u308b\u3068\u4ee5\u4e0b\u306e\u901a\u308a \u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc Transformer \u306b\u57fa\u3065\u304f \u591a\u982d\u81ea\u5df1\u6ce8\u610f (MHSA) \u3092\u4f7f\u3063\u305f\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb 2 \u3064\u306e\u4e8b\u524d\u8a13\u7df4: \u30de\u30b9\u30af\u5316\u8a00\u8a9e\u30e2\u30c7\u30eb \u3068 \u6b21\u6587\u4e88\u6e2c\u8ab2\u984c \u3092\u7528\u3044\u308b \u4e8b\u524d\u8a13\u7df4\u6e08\u306e\u30e2\u30c7\u30eb\u3092\u7528\u3044\u3066\uff0c\u89e3\u304f\u3079\u304d\u8ab2\u984c\u306e\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066 \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0 Fine tuning \u3092\u65bd\u3059 \u500b\u5225\u306e\u8ab2\u984c\u306f\u4e0b\u6d41\u8ab2\u984c down stream tasks \u3068\u547c\u3070\u308c\u307e\u3059\u3002\u4e0a\u6d41 \u3068 \u4e0b\u6d41 \u3068\u306e\u533a\u5225\u306f\uff0c\u6700\u521d\u306b\u884c\u3046\u4e8b\u524d\u8a13\u7df4\u306e\u3053\u3068\u3092\u6642\u9593\u7684\u306b\u5148\u884c\u3059\u308b\u306e\u3067\u4e0a\u6d41\uff0c\u305d\u306e\u5f8c\u306e\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u305d\u308c\u305e\u308c\u306e\u8ab2\u984c\u306e\u3053\u3068\u3092\u4e0b\u6d41\u8ab2\u984c\u3068\u547c\u3093\u3067\u3044\u307e\u3059\u3002 \u8907\u6570\u306e\u8ab2\u984c\u306b\u5bfe\u3057\u3066\u500b\u5225\u306b\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u306b\u3088\u308a\uff0c\u8907\u6570\u306e\u4e0b\u6d41\u8ab2\u984c\u3067\u6027\u80fd\u5411\u4e0a\u304c\u8a8d\u3081\u3089\u308c\u307e\u3057\u305f\u3002 GLUE \u30b9\u30b3\u30a2\u30dc\u30fc\u30c9 , SuperGLUE \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 BERT \u306e\u5165\u529b\u8868\u73fe \u00b6 \u4e0a\u306e\u56f3\u306b\u3082\u3042\u3063\u305f\u3068\u304a\u308a BERT \u3067\u306f\u5165\u529b\u60c5\u5831\u304c\u57cb\u3081\u8fbc\u307f\u8868\u73fe\u3060\u3051\u3067\u306a\u304f\uff0c\u4f4d\u7f6e\u7b26\u53f7\u5316\u5668\u306e\u60c5\u5831\u304c\u52a0\u7b97\u3055\u308c\u307e\u3059\u3002 BERT \u3067\u306f\uff0c\u57cb\u3081\u8fbc\u307f\u8868\u73fe\u3068\u4f4d\u7f6e\u7b26\u53f7\u5316\u5668\u306e\u60c5\u5831\u306b\u52a0\u3048\u3066\uff0c\u30bb\u30b0\u30e1\u30f3\u30c8\u57cb\u3081\u8fbc\u307f segment embeddings \u3082\u52a0\u3048\u305f\u60c5\u5831\u304c\u5165\u529b\u60c5\u5831\u3068\u306a\u308a\u307e\u3059\u3002\u4e0b\u56f3\u53c2\u7167 \u57cb\u3081\u8fbc\u307f\u30c8\u30fc\u30af\u30f3\u306e\u7dcf\u548c\uff0c\u4f4d\u7f6e\u7b26\u53f7\u5668\uff0c\u5206\u96e2\u57cb\u3081\u8fbc\u307f\u306e 3 \u8005 From [@2018BERT] Fig. 2 \u4e0a\u56f3\u3067\u306f\uff0c\u4e0b 3 \u884c\u304c\u5165\u529b\u60c5\u5831\u3092\u69cb\u6210\u3059\u308b 3 \u3064\u306e\u8981\u7d20\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u4e0a\uff08\u30d4\u30f3\u30af\u8272\uff09\u304c\u5408\u7b97\u3057\u305f\u5165\u529b\u60c5\u5831\u306b\u306a\u308a\u307e\u3059\u3002 3 \u3064\u306e\u5165\u529b\u60c5\u5831\u3068\u306f\u305d\u308c\u305e\u308c\uff0c\u4e0b\u304b\u3089 \u4f4d\u7f6e\u7b26\u53f7\u5316\u5668 \uff08\u8584\u7070\u8272\uff09\uff0c\u30bb\u30b0\u30e1\u30f3\u30c8\u57cb\u3081\u8fbc\u307f (\u6de1\u7dd1)\uff0c\u30c8\u30fc\u30af\u30f3\u57cb\u3081\u8fbc\u307f (\u6de1\u9ec4) \u3067\u3059\u3002 \u4f4d\u7f6e\u7b26\u53f7\u5668 Position encoders \u00b6 \u4e0a\u8ff0\u306e\u3088\u3046\u306b\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u306e\u5165\u529b\u306b\u306f\uff0c\u5358\u8a9e\u57cb\u3081\u8fbc\u307f\u8868\u73fe\u306b\u52a0\u3048\u3066\uff0c\u4f4d\u7f6e\u7b26\u53f7\u5668\u306e\u4fe1\u53f7\u3082\u52a0\u7b97\u3055\u308c\u307e\u3059\u3002 \u4f4d\u7f6e\u7b26\u53f7\u5668\u306b\u3088\u308b\u4f4d\u7f6e\u8868\u73fe\u306f\uff0ci \u756a\u76ee\u306e\u4f4d\u7f6e\u60c5\u5831\u3092\u30ef\u30f3\u30db\u30c3\u30c8\u8868\u73fe\u3059\u308b\u306e\u3067\u306f\u306a\u304f\uff0c\u5468\u6ce2\u6570\u9818\u57df\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3067\u5468\u671f\u60c5\u5831\u3092\u8868\u73fe\u3059\u308b\u8a66\u307f\u3068\u898b\u306a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4f4d\u7f6e\u7b26\u53f7\u5316\u306b\u7528\u3044\u3089\u308c\u308b\u7b26\u53f7\u5316\u3002\u4f4d\u7f6e\u60c5\u5831\u3092\u5468\u6ce2\u6570\u60c5\u5831\u3078\u5909\u63db\u3057\u3066\u7528\u3044\u3066\u3044\u307e\u3059\u3002 \u4f4d\u7f6e\u60c5\u5831\u3092\u5468\u6ce2\u6570\u60c5\u5831\u3078\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u826f\u3044\u3053\u3068\u306a\u306e\u304b\uff0c\u3069\u3046\u306a\u306e\u304b\uff0c\u306f\u8b70\u8ad6\u3055\u308c\u3066\u3044\u308b\u6700\u4e2d\u3067\u3059\u3002 \u4e00\u3064\u306e\u7814\u7a76\u30c6\u30fc\u30de\u3067\u3082\u3042\u308a\u307e\u3059\u3002 \u6570\u5b66\u7684\u306a\u8aac\u660e\u306f \u30d5\u30fc\u30ea\u30a8\u5909\u63db \u3092\u8abf\u3079\u3066\u304f\u3060\u3055\u3044\u3002\u4efb\u610f\u306e\u95a2\u6570 y=f(x) \u3067\u306f x \u306f\u4f4d\u7f6e\u60c5\u5831\u3092\u8868\u3057\u3066\u3044\u308b\u3068\u307f\u306a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5f93\u3063\u3066\uff0c\u4f4d\u7f6e x \u3092\u4e0e\u3048\u308b\u3068\u5bfe\u5fdc\u3059\u308b\u5024 y \u304c\u5f97\u3089\u308c\u308b\u3053\u3068\u3092\u8868\u3057\u3066\u3044\u308b\u5f0f\u304c y=f(x) \u3067\u3059\u3002 \u3053\u308c\u306b\u5bfe\u3057\u3066\uff0c\u4efb\u610f\u306e\u60c5\u5831\u306f\u5468\u6ce2\u6570\uff0c\u3059\u306a\u308f\u3061\uff0c\u6ce2\u306e\u91cd\u306d\u5408\u308f\u305b\u3068\u3057\u3066\u8868\u73fe\u3067\u304d\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u5468\u6ce2\u6570\u3092\u91cd\u306d\u5408\u308f\u305b\u308b\u3068\u5143\u306e\u95a2\u6570\u306b\u306a\u308a\u307e\u3059\u3002 \u53cd\u5bfe\u306b\uff0c\u3042\u308b\u5468\u6ce2\u6570\u306e\u5024\u306f\uff0c\u95a2\u6570 f(x) \u3092\u5468\u6ce2\u6570\u3078\u5909\u63db\u3057\u305f\u3068\u304d\u306e\u7279\u5b9a\u306e\u5468\u6ce2\u6570\u6210\u5206\u3068\u3057\u3066\u8868\u73fe\u3067\u304d\u307e\u3059\u3002 BERT \u306b\u304a\u3051\u308b\u4f4d\u7f6e\u7b26\u53f7\u5316\u5668\u306f\u4f4d\u7f6e\u60c5\u5831\u3092\u6ce2\u306e\u6210\u5206\u3068\u3057\u3066\u8868\u73fe\u3057\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306b\u3057\u3066\u3067\u304d\u305f\u5024\u3092\u5165\u529b\u5074\u3068\u51fa\u529b\u5074\u3067\u4e0b\u56f3\u306e\u3088\u3046\u306b\u9023\u7d50\u3055\u305b\u305f\u3082\u306e\u304c\u4ee5\u4e0b\u306e\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u3067\u3059\u3002 From [@2017Vaswani_transformer] Fig. 1 \u3053\u308c\u307e\u3067\u898b\u3066\u304d\u305f\u3088\u3046\u306b\uff0c\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u3067\u306f\u5165\u529b\u4fe1\u53f7\u306b\u57fa\u3065\u3044\u3066\u60c5\u5831\u306e\u5909\u63db\u304c\u884c\u306a\u308f\u308c\u308b\u3002 \u3053\u306e\u610f\u5473\u3067\u306f\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u306b\u304a\u3051\u308b \u591a\u982d \u81ea\u5df1\u6ce8\u610f MHSA \u3068\u306f\u30dc\u30c8\u30e0\u30a2\u30c3\u30d7\u6ce8\u610f\u306e\u5909\u5f62\u3067\u3042\u308b\u3068\u307f\u306a\u3057\u3046\u308b\u3002 \u9006\u8a00\u3059\u308c\u3070\uff0cRNN \u306e\u3088\u3046\u306b\u904e\u53bb\u306e\u5c65\u6b74\u3092\u3059\u3079\u3066\u4fdd\u6301\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\uff0c\u7cfb\u5217\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\uff0cposition encoders \u306b\u983c\u3063\u3066\u3044\u308b\u5074\u9762\u304c\u6307\u6458\u3067\u304d\u308b\u3002 BERT \u306e\u4e8b\u524d\u8a13\u7df4: \u30de\u30b9\u30af\u5316\u8a00\u8a9e\u30e2\u30c7\u30eb \u00b6 \u5168\u5165\u529b\u7cfb\u5217\u306e\u3046\u3061 15% \u3092\u30e9\u30f3\u30c0\u30e0\u306b [MASK] \u30c8\u30fc\u30af\u30f3\u3067\u7f6e\u304d\u63db\u3048\u308b \u5165\u529b\u306f\u30aa\u30ea\u30b8\u30ca\u30eb\u7cfb\u5217\u3092 [MASK] \u30c8\u30fc\u30af\u30f3\u3067\u7f6e\u304d\u63db\u3048\u305f\u7cfb\u5217 \u30e9\u30d9\u30eb: \u30aa\u30ea\u30b8\u30ca\u30eb\u7cfb\u5217\u306e [MASK] \u90e8\u5206\u306b\u306e\u6b63\u3057\u3044\u30e9\u30d9\u30eb\u3092\u4e88\u6e2c 80%: \u30aa\u30ea\u30b8\u30ca\u30eb\u5165\u529b\u7cfb\u5217\u3092 [MASK] \u3067\u7f6e\u63db 10%: [MASK] \u306e\u4f4d\u7f6e\u306e\u5358\u8a9e\u3092\u30e9\u30f3\u30c0\u30e0\u306a\u7121\u95a2\u9023\u8a9e\u3067\u7f6e\u304d\u63db\u3048\u308b 10%: \u30aa\u30ea\u30b8\u30ca\u30eb\u7cfb\u5217 BERT \u306e\u4e8b\u524d\u8a13\u7df4: \u6b21\u6587\u4e88\u6e2c\u8ab2\u984c \u00b6 \u8a00\u8a9e\u30e2\u30c7\u30eb\u306e\u6b20\u70b9\u3092\u88dc\u5b8c\u3059\u308b\u76ee\u7684\uff0c\u6b21\u306e\u6587\u3092\u4e88\u6e2c [SEP] \u30c8\u30fc\u30af\u30f3\u3067\u533a\u5207\u3089\u308c\u305f 2 \u6587\u5165\u529b \u5165\u529b: the man went to the store [SEP] he bought a gallon of milk. \u30e9\u30d9\u30eb: IsNext \u5165\u529b: the man went to the store [SEP] penguins are flightless birds. \u30e9\u30d9\u30eb: NotNext BERT: \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0 \u00b6 (a), (b) \u306f\u6587\u30ec\u30d9\u30eb\u8ab2\u984c\uff0c (c),(d)\u306f\u30c8\u30fc\u30af\u30f3\u30ec\u30d9\u30eb\u8ab2\u984c, E: \u5165\u529b\u57cb\u3081\u8fbc\u307f\u8868\u73fe, T_i : \u30c8\u30fc\u30af\u30f3 i \u306e\u6587\u8108\u8868\u8c61\u3002 From [@2018BERT] Fig.3 GLUE: General Language Understanding Evaluation \u00b6 CoLA : \u5165\u529b\u6587\u304c\u82f1\u8a9e\u3068\u3057\u3066\u6b63\u3057\u3044\u304b\u5426\u304b\u3092\u5224\u5b9a SST-2 : \u30b9\u30bf\u30f3\u30d5\u30a9\u30fc\u30c9\u5927\u306b\u3088\u308b\u6620\u753b\u30ec\u30d3\u30e5\u30fc\u306e\u6975\u6027\u5224\u65ad MRPC : \u30de\u30a4\u30af\u30ed\u30bd\u30d5\u30c8\u306e\u8a00\u3044\u63db\u3048\u30b3\u30fc\u30d1\u30b9\u30022\u6587 \u304c\u7b49\u3057\u3044\u304b\u5426\u304b\u3092\u5224\u5b9a STS-B : \u30cb\u30e5\u30fc\u30b9\u306e\u898b\u51fa\u3057\u6587\u306e\u985e\u4f3c\u5ea6\u30925\u6bb5\u968e\u3067\u8a55\u5b9a QQP : 2 \u3064\u306e\u8cea\u554f\u6587\u306e\u610f\u5473\u304c\u7b49\u4fa1\u304b\u3092\u5224\u5b9a MNLI : 2 \u5165\u529b\u6587\u304c\u610f\u5473\u7684\u306b\u542b\u610f\uff0c\u77db\u76fe\uff0c\u4e2d\u7acb\u3092\u5224\u5b9a QNLI : 2 \u5165\u529b\u6587\u304c\u610f\u5473\u7684\u306b\u542b\u610f\uff0c\u77db\u76fe\uff0c\u4e2d\u7acb\u3092\u5224\u5b9a RTE : MNLI \u306b\u4f3c\u305f2\u3064\u306e\u5165\u529b\u6587\u306e\u542b\u610f\u3092\u5224\u5b9a WNI : \u30a6\u30a3\u30ce\u30b0\u30e9\u30c3\u30c9\u4f1a\u8a71\u30c1\u30e3\u30ec\u30f3\u30b8 \u305d\u306e\u4ed6 SQuAD : \u30b9\u30bf\u30f3\u30d5\u30a9\u30fc\u30c9\u5927\u306b\u3088\u308b Q and A \u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u304b\u3089\u62bd\u51fa\u3057\u305f\u6587 RACE : \u4e2d\u5b66\u5165\u8a66\uff0c\u9ad8\u6821\u5165\u8a66\u306b\u76f8\u5f53\u3059\u308b\u30c6\u30b9\u30c8\u591a\u80a2\u9078\u629e\u56de\u7b54 BERT \u30e2\u30c7\u30eb\u306e\u8a73\u7d30 \u00b6 \u30c7\u30fc\u30bf: Wikipedia (2.5B words) + BookCorpus (800M words) \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba: 131,072 words (1024 sequences * 128 length or 256 sequences * 512 length) \u8a13\u7df4\u6642\u9593: 1M steps (~40 epochs) \u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0: AdamW, 1e-4 learning rate, linear decay BERT-Base: 12 \u5c64, \u5404\u5c64 768 \u30cb\u30e5\u30fc\u30ed\u30f3, 12 \u591a\u982d\u6ce8\u610f BERT-Large: 24 \u5c64, \u5404\u5c64 1024 \u30cb\u30e5\u30fc\u30ed\u30f3, 16 \u591a\u982d\u6ce8\u610f 4x4 / 8x8 TPU \u3067 4 \u65e5\u9593 CoLA \u30b5\u30f3\u30d7\u30eb \u00b6 1 \u306f\u6b63\u3057\u3044\u82f1\u6587\uff0c0 \u306f\u975e\u6587 1 They drank the pub dry. 0 They drank the pub . 1 The professor talked us into a stupor. 0 The professor talked us . 1 We yelled ourselves hoarse. 0 We yelled ourselves . SST-2 \u30b5\u30f3\u30d7\u30eb \u00b6 0 \u306f\u4f4e\u8a55\u4fa1\uff0c1 \u306f\u9ad8\u8a55\u4fa1 hide new secretions from the parental units 0 contains no wit , only labored gags 0 that loves its characters and communicates something rather beautiful about human nature 1 remains utterly satisfied to remain the same throughout 0 on the worst revenge-of-the-nerds clich\u00e9s the filmmakers could dredge up 0 that's far too tragic to merit such superficial treatment 0 MRPC \u30b5\u30f3\u30d7\u30eb \u00b6 1 \u65871: \"Please, keep doing your homework,\" said Bavelier, the mother of three. \u65872: \"Please, keep doing your homework,\" said Bavelier, the mother of 6-year-old twins and a 2-year old. 1 \u65871: While Mr. Qurei is widely respected and has a long history of negotiating with the Israelis, he cannot expect such a warm welcome. \u65872: While Qureia is respected and has a history of negotiating with the Israelis, a warm welcome is not expected. 1 \u65871: \"Nobody wants to go to war with anybody about anything ... it 's always very much a last resort thing and one to be avoided,\" Mr Howard told Sydney radio. \u65872: \"We don't want to go to war with anybody . . . it's always very much a last resort, and one to be avoided. 0 \u65871: GMT, Tab shares were up 19 cents, or 4.4% , at A 4.56, having earlier set a record high of A 4.57. \u65872: Tab shares jumped 20 cents, or 4.6%, to set a record closing high at A $4.57. 0 \u65871: Martin, 58, will be freed today after serving two thirds of his five-year sentence for the manslaughter of 16-year-old Fred Barras. \u65872: Martin served two thirds of a five-year sentence for the manslaughter of Barras and for wounding Fearon. SST-B \u30b5\u30f3\u30d7\u30eb \u00b6 \u6700\u5f8c\u306e\u6570\u5024\u304c\u8a55\u4fa1\u5024 A plane is taking off. An air plane is taking off. 5.000 A man is playing a large flute. A man is playing a flute. 3.800 A man is spreading shreded cheese on a pizza. A man is spreading shredded cheese on an uncooked pizza. 3.800 Three men are playing chess. Two men are playing chess. 2.600 A man is playing the cello. A man seated is playing the cello. 4.250 Some men are fighting. Two men are fighting. 4.250 A man is smoking. A man is skating 0.5000 QQP \u30b5\u30f3\u30d7\u30eb \u00b6 0 \u306f\u7570\u306a\u308b\u3068\u5224\u65ad\uff0c 1 \u306f\u540c\u3058\u3068\u5224\u65ad\u3059\u3079\u304d\u6587 0 How is the life of a math student? Could you describe your own experiences? Which level of prepration is enough for the exam jlpt5? 1 How do I control my horny emotions? How do you control your horniness? 0 What causes stool color to change to yellow? What can cause stool to come out as little balls? 0 1 What can one do after MBBS? What do i do after my MBBS? 0 Where can I find a power outlet for my laptop at Melbourne Airport? Would a second airport in Sydney, Australia be needed if a high-speed rail link was created between Melbourne and Sydney? 0 How not to feel guilty since I am Muslim and I'm conscious we won't have sex together? I don't beleive I am bulimic, but I force throw up at least once a day after I eat something and feel guilty. Should I tell somebody, and if so who? MNLI \u30b5\u30f3\u30d7\u30eb \u00b6 \u77db\u76fe Met my first girlfriend that way. I didn\u2019t meet my first girlfriend until later. \u4e2d\u7acb 8 million in relief in the form of emergency housing. The 8 million dollars for emergency housing was still not enough to solve the problem. \u4e2d\u7acb Now, as children tend their gardens, they have a new appreciation of their relationship to the land, their cultural heritage, and their community. All of the children love working in their gardens. \u542b\u610f At 8:34, the Boston Center controller received a third transmission from American 11 The Boston Center controller got a third transmission from American 11. \u4e2d\u7acb I am a lacto-vegetarian. I enjoy eating cheese too much to abstain from dairy. \u77db\u76fe someone else noticed it and i said well i guess that\u2019s true and it was somewhat melodious in other words it wasn\u2019t just you know it was really funny No one noticed and it wasn\u2019t funny at all. \u4e8b\u524d\u8a13\u7df4\u3068\u30de\u30eb\u30c1\u8ab2\u984c\u5b66\u7fd2 \u00b6 From [@2019Liu_mt-dnn] Fig. 1 \u591a\u8a00\u8a9e\u5bfe\u5fdc \u00b6 From [@2019Lample_Cross-lingual] Fig. 1 BERT \u306e\u767a\u5c55 \u00b6 From https://towardsdatascience.com/a-review-of-bert-based-models-4ffdc0f15d58 BERT: \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u624b\u7d9a\u304d\u306b\u3088\u308b\u6027\u80fd\u6bd4\u8f03 \u00b6 \u30de\u30b9\u30af\u5316\u8a00\u8a9e\u30e2\u30c7\u30eb\u306e\u30de\u30b9\u30af\u5316\u5272\u5408\u306e\u9055\u3044\u306b\u3088\u308b\u6027\u80fd\u6bd4\u8f03 \u30de\u30b9\u30af\u5316\u8a00\u8a9e\u30e2\u30c7\u30eb\u306e\u30de\u30b9\u30af\u5316\u5272\u5408\u306f \u30de\u30b9\u30af\u30c8\u30fc\u30af\u30f3:\u30e9\u30f3\u30c0\u30e0\u7f6e\u63db:\u30aa\u30ea\u30b8\u30ca\u30eb=80:10:10 \u3060\u3051\u3067\u306a\u304f\uff0c \u4ed6\u306e\u5272\u5408\u3067\u8a13\u7df4\u3057\u305f\u5834\u5408\u306e 2 \u7a2e\u985e\u4e0b\u6d41\u8ab2\u984c\uff0c MNLI \u3068 NER \u3067\u5909\u5316\u3059\u308b\u304b\u3092\u4e0b\u56f3 \\ref{fig:2019devlin_mask_method21} \u306b\u793a\u3057\u305f\u3002 80:10:10 \u306e\u6027\u80fd\u304c\u6700\u3082\u9ad8\u3044\u304c\u5927\u304d\u306a\u9055\u3044\u304c\u3042\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3088\u3046\u3067\u3042\u308b\u3002 BERT: \u30e2\u30c7\u30eb\u30b5\u30a4\u30ba\u6bd4\u8f03 \u00b6 \u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u306b\u3088\u308b\u6027\u80fd\u6bd4\u8f03 \u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u3092\u5897\u52a0\u3055\u305b\u3066\u5927\u304d\u306a\u30e2\u30c7\u30eb\u306b\u3059\u308c\u3070\u7cbe\u5ea6\u5411\u4e0a\u304c\u671f\u5f85\u3067\u304d\u308b\u3002 \u4e0b\u56f3\u3067\u306f\uff0c\u6a2a\u8ef8\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u3067 MNLI \u306f\u9752\u3068 MRPC \u306f\u8d64 \u3067\u63cf\u304b\u308c\u3066\u3044\u308b\u3002 \u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u5897\u52a0\u306b\u4f34\u3044\u7cbe\u5ea6\u5411\u4e0a\u304c\u8a8d\u3081\u3089\u308c\u308b\u3002 \u56f3\u306b\u63cf\u304b\u308c\u305f\u7bc4\u56f2\u3067\u306f\u7cbe\u5ea6\u304c\u5929\u4e95\u306b\u9054\u3057\u3066\u3044\u308b\u8a33\u3067\u306f\u306a\u3044\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u304c\u5897\u52a0\u3059\u308c\u3070\u7cbe\u5ea6\u306f\u5411\u4e0a\u3057\u3066\u3044\u308b\u3068\u8a8d\u3081\u3089\u308c\u308b\u3002 BERT: \u30e2\u30c7\u30eb\u5358\u65b9\u5411\uff0c\u53cc\u65b9\u5411\u30e2\u30c7\u30eb\u6bd4\u8f03 \u00b6 \u8a00\u8a9e\u30e2\u30c7\u30eb\u306e\u76f8\u9055\u306b\u3088\u308b\u6027\u80fd\u6bd4\u8f03 \u8a00\u8a9e\u30e2\u30c7\u30eb\u3092\u30de\u30b9\u30af\u5316\u8a00\u8a9e\u30e2\u30c7\u30eb\u304b\u6b21\u5358\u8a9e\u4e88\u6e2c\u306e\u5f93\u6765\u578b\u306e\u8a00\u8a9e\u30e2\u30c7\u30eb\u306b\u3088\u308b\u304b\u306e\u76f8\u9055\u306b\u3088\u308b\u6027\u80fd\u6bd4\u8f03\u3092 \u4e0b\u56f3 \\ref{fig:2019devlin_directionality19} \u306b\u793a\u3057\u305f\u3002 \u6a2a\u8ef8\u306b\u306f\u8a13\u7df4\u30b9\u30c6\u30c3\u30d7\u3067\u3042\u308b\u3002\u8a13\u7df4\u304c\u9032\u3080\u3053\u3068\u3067\u30de\u30b9\u30af\u5316\u8a00\u8a9e\u30e2\u30c7\u30eb\u3068\u306e\u5dee\u306f 2 \u30d1\u30fc\u30bb\u30f3\u30c8\u3067\u306f\u3042\u308b\u304c\u8a8d\u3081\u3089\u308c\u308b\u3088\u3046\u3067\u3042\u308b\u3002 BERT: \u4e8b\u524d\u8a13\u7df4\u6bd4\u8f03 \u00b6 \u4e8b\u524d\u8a13\u7df4\u306e\u52b9\u679c\u6bd4\u8f03 \u56f3\u306b\u306f\u4e8b\u524d\u8a13\u7df4\u306e\u6bd4\u8f03\u3092\u793a\u3057\u3055\u308c\u3066\u3044\u308b\u3002 \u5168\u3066\u306e\u4e8b\u524d\u8a13\u7df4\u3092\u7528\u3044\u305f\u5834\u5408\u304c\u9752\uff0c\u6b21\u6587\u8a13\u7df4\u3092\u9664\u3044\u305f\u5834\u5408\u304c\u8d64\uff0c\u5f93\u6765\u578b\u8a00\u8a9e\u30e2\u30c7\u30eb\u3067\u6b21\u6587\u4e88\u6e2c\u8ab2\u984c\u3092\u3057\u305f\u5834\u5408\u3092\u9ec4\uff0c \u5f93\u6765\u578b\u8a00\u8a9e\u30e2\u30c7\u30eb\u3067\u6b21\u6587\u4e88\u6e2c\u8ab2\u984c\u306a\u3057\u3092\u7dd1\u3067\u63cf\u304b\u308c\u3066\u3044\u308b\u30024 \u7a2e\u985e\u306e\u4e0b\u6d41\u8ab2\u984c\u306f MNLI, QNLI, MRPC, SQuAD \u3067\u3042\u308b\u3002 \u4e0b\u6d41\u306e\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u8ab2\u984c\u3054\u3068\u306b\u7cbe\u5ea6\u304c\u5206\u304b\u308c\u308b\u3088\u3046\u3067\u3042\u308b\u3002 \u5404\u30e2\u30c7\u30eb\u306e\u7279\u5fb4 \u00b6 RoBERTa: BERT \u306e\u8a13\u7df4\u30b3\u30fc\u30d1\u30b9\u3092\u5de8\u5927 (173GB) \u306b\u3057\uff0c\u30df\u30cb\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3092\u5927\u304d\u3057\u305f XLNet: \u9806\u5217\u8a00\u8a9e\u30e2\u30c7\u30eb\u30022 \u30b9\u30c8\u30ea\u30fc\u30e0\u6ce8\u610f MT-DNN: BERT \u30d9\u30fc\u30b9 \u306e\u8ee2\u79fb\u5b66\u7fd2\u306b\u91cd\u304d\u3092\u304a\u3044\u305f\u30e2\u30c7\u30eb GPT-2: BERT \u306b\u57fa\u3065\u304f\u3002\u4eba\u9593\u8d85\u3048\u3057\u3066 2019 \u5e74 2 \u6708\u6642\u70b9\u3067\u708e\u4e0a\u9a12\u304e BERT: Transformer\u306b\u57fa\u3065\u304f\u8a00\u8a9e\u30e2\u30c7\u30eb\u3002 \u30de\u30b9\u30af\u5316\u8a00\u8a9e\u30e2\u30c7\u30eb \u3068 \u6b21\u6587\u4e88\u6e2c \u306b\u57fa\u3065\u304f \u4e8b\u524d\u8a13\u7df4\uff0c\u5404\u4e0b\u6d41\u8ab2\u984c\u3092\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3002\u4e8b\u524d\u8a13\u7df4\u3055\u308c\u305f\u30e2\u30c7\u30eb\u306f\u4e00\u822c\u516c\u958b\u6e08\u3002 DistillBERT: BERT \u306e\u84b8\u7559\u7248 ELMo: \u53cc\u65b9\u5411 RNN \u306b\u3088\u308b\u6587\u57cb\u3081\u8fbc\u307f\u8868\u73fe Transformer: \u81ea\u5df1\u6ce8\u610f\u306b\u57fa\u3065\u304f\u8a00\u8a9e\u30e2\u30c7\u30eb\u3002\u591a\u982d\u6ce8\u610f\uff0c\u4f4d\u7f6e\u7b26\u53f7\u5668. BERT: \u57cb\u3081\u8fbc\u307f\u30e2\u30c7\u30eb\u306b\u3088\u308b\u69cb\u6587\u89e3\u6790 \u00b6 BERT \u306e\u69cb\u6587\u89e3\u6790\u80fd\u529b\u3092\u4e0b\u56f3\u793a\u3057\u305f\u3002 \u5404\u5358\u8a9e\u306e\u5171\u901a\u7a7a\u9593\u306b\u5c04\u5f71\u3057\uff0c \u5358\u8a9e\u9593\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u69cb\u6587\u89e3\u6790\u6728\u3068\u540c\u7b49\u306e\u8868\u73fe\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u5831\u544a\u3055\u308c\u3066\u3044\u308b[@2019HewittManning_structural]\u3002 BERT \u306b\u3088\u308b\u69cb\u6587\u89e3\u6790\u6728\u3092\u518d\u73fe\u3059\u308b\u5c04\u5f71\u7a7a\u9593 From https://github.com/john-hewitt/structural-probes word2vec \u306b\u304a\u3044\u3066\u5358\u8a9e\u9593\u306e\u8ddd\u96e2\u306f\u5185\u7a4d\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002 \u3053\u306e\u3053\u3068\u304b\u3089\uff0c\u6587\u7ae0\u3092\u69cb\u6210\u3059\u308b\u5358\u8a9e\u3067\u5f35\u3089\u308c\u308b\u7dda\u5f62\u5185\u7a4d\u7a7a\u9593\u5185\u306e\u8ddd\u96e2\u304c\u69cb\u6587\u89e3\u6790\u6728\u3092\u4e0e\u3048\u308b\u3068\u898b\u306a\u3059\u3053\u3068\u306f\u4e0d\u81ea\u7136\u3067\u306f\u306a\u3044\u3068\u4e88\u60f3\u3067\u304d\u307e\u3059\u3002 \u305d\u3053\u3067\u69cb\u6587\u89e3\u6790\u6728\u3092\u518d\u73fe\u3059\u308b\u3088\u3046\u306a\u5c04\u5f71\u5909\u63db\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308c\u3070 BERT \u3092\u7528\u3044\u3066\u69cb\u6587\u89e3\u6790\u304c\u53ef\u80fd\u3068\u306a\u308b\u3067\u3057\u3087\u3046\u3002 \u4f8b\u3048\u3070\u4e0a\u56f3\u306b\u304a\u3051\u308b chef \u3068 store \u3068 was \u306e\u8ddd\u96e2\u3092\u89e3\u6790\u6728\u3092\u53cd\u6620\u3059\u308b\u3088\u3046\u306a\u7a7a\u9593\u3092\u898b\u3064\u3051\u51fa\u3059\u3053\u3068\u306b\u76f8\u5f53\u3057\u307e\u3059 \u5177\u4f53\u7684\u306b\u306f\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u64cd\u4f5c\u3092\u3057\u3066\u3044\u307e\u3059: \u6587\u7ae0\u306b\u73fe\u308c\u308b\u5168\u30c8\u30fc\u30af\u30f3\u3092\u8868\u3059\u30d9\u30af\u30c8\u30eb\u3092 BERT \u3088\u308a\u6c42\u3081\u308b\u3002 \u3059\u306a\u308f\u3061 BERT \u5168\u4e2d\u9593\u5c64\u30e6\u30cb\u30c3\u30c8\u6d3b\u6027\u5024\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u5168\u3066\u306e\u5024\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u30d9\u30af\u30c8\u30eb\u7fa4 2 \u306e\u30d9\u30af\u30c8\u30eb\u304c\u5f35\u308b\u90e8\u5206\u7a7a\u9593\u306b\u5168\u30c8\u30fc\u30af\u30f3\u3092\u5c04\u5f71\u3059\u308b\u3002 3 \u306e\u90e8\u5206\u7a7a\u9593\u5185\u3067\u30c8\u30fc\u30af\u30f3\u9593\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u308b\u3002 \u5404\u30c8\u30fc\u30af\u30f3\u3092\u77ed\u3044\u9806\u306b\u30b0\u30e9\u30d5\u3067\u7d50\u3076 BERT \u5b9f\u88c5 \u00b6 BERT \u5b9f\u88c5\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u305f\u3002 \u73fe\u5728\u914d\u5e03\u3055\u308c\u3066\u3044\u308b BERT-base \u3042\u308b\u3044\u306f\u6027\u80fd\u304c\u826f\u3044 BERT-large \u306f\u5404\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u3068\u5168\u4f53\u306e\u5c64\u6570\u3067\u3042\u308b\u3002 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u914d\u5e03\u5148\u306f https://github.com/google-research/bert \u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u8ad6\u6587\u306f https://arxiv.org/abs/1810.04805 \u30c7\u30fc\u30bf: Wikipedia (2.5B words) + BookCorpus (800M words) \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba: 131,072 words (1024 sequences \\times 128 length or 256 sequences \\times 512 length) \u8a13\u7df4\u30b9\u30c6\u30c3\u30d7: 1M steps (40 epochs) \u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0: AdamW, 1e-4 learning rate, linear decay BERT-Base: 12 \u5c64, \u5404\u5c64 768 \u30cb\u30e5\u30fc\u30ed\u30f3, 12 \u591a\u982d\u6ce8\u610f BERT-Large: 24 \u5c64, \u5404\u5c64 1024 \u30cb\u30e5\u30fc\u30ed\u30f3, 16 \u591a\u982d\u6ce8\u610f \u8a13\u7df4\u6642\u9593: 4x4 / 8x8 \u306e TPU \u3067 4 \u65e5\u9593 LSTM \u3068\u306e\u7570\u540c \u00b6 \u5de6: LSTM (\u6d45\u5ddd, 2015) \u3088\u308a\uff0c\u53f3: \u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc[@2017Vaswani_transformer] \u5165\u529b\u30b2\u30fc\u30c8\u3068\u5165\u529b \u306f Q, K \u3068\u540c\u4e00\u8996\uff0c\u51fa\u529b\u30b2\u30fc\u30c8\u3068 V \u3068\u306f\u540c\u4e00\u8996\u53ef\u80fd\uff1f Relationship between self-attention and convolution \u00b6 From [@2020cordonnier_attention_and_convolution] \u307e\u3068\u3081 \u00b6 MHSA \u306f \u7573\u307f\u8fbc\u307f \u3068\u540c\u7b49\u306e\u80fd\u529b\u304c\u3042\u308a\u305d\u3046\u3067\u3042\u308b\u3002 Reformer \u306b\u898b\u3089\u308c\u308b\u3088\u3046\u306b position encodings \u3092\u5de5\u592b\u3059\u308b\u4f59\u5730\u306f\u6b8b\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u601d\u308f\u308c\u308b\u3002","title":"\u7b2c 8 \u56de 06\u6708 26 \u65e5"},{"location":"lect08/#iiia","text":"Shin Aasakawa , all rights reserved. Date: 26/Jun/2020 Appache 2.0 license \u672c\u65e5\u306e\u8ab2\u984c","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA)"},{"location":"lect08/#_1","text":"word2vec\u306e\u5148\u9031\u306e\u518d\u9332 BERT \u306e\u6ce8\u610f\u306e\u8996\u899a\u5316 \u65e5\u672c\u8a9e BERT \u306e\u5b9f\u7fd2","title":"\u5b9f\u7fd2"},{"location":"lect08/#_2","text":"\u9ce5\u306e\u7ffc\u3084\u7fbd\u306e\u69cb\u9020\u3068\u7a7a\u3092\u98db\u3076\u305f\u3081\u306e\u4ed5\u7d44\u307f\u306e\u89e3\u660e\u3068\u98db\u884c\u6a5f\u3068\u306e\u95a2\u4fc2\u306b\u3064\u3044\u3066\u3002 \u9ce5\u985e\u3084\u6606\u866b\u306e\u7fc5\u3068\u98db\u884c\u6a5f\u3068\u306e\u5bfe\u6bd4\u306f\uff0c\u4eba\u9593\u306e\u8133\u306b\u5bbf\u308b\u77e5\u6027\u3068\uff0c\u4eba\u5de5\u77e5\u80fd\uff0c\u3042\u308b\u3044\u306f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u3068\u306e\u5bfe\u6bd4\u304c\u306a\u3055\u308c\u307e\u3059\u3002 \u8abf\u3079\u308b\u9650\u308a \u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30d5\u30a3\u30c3\u30af\u30fb\u30a2\u30e1\u30ea\u30ab\u30f3 \u306b\u63b2\u8f09\u3055\u308c\u305f Ford \u3068 Hayes \u306e\u8a18\u4e8b\u304c\u51fa\u5178\u306e\u3088\u3046\u3067\u3059\u3002 \u3053\u306e\u8a18\u4e8b\u306b\u3088\u308c\u3070\uff0c\u9ce5\u306e\u7fbd\u306e\u69cb\u9020\u306e\u7814\u7a76\u3060\u3051\u304b\u3089\u306f\uff0c\u98db\u884c\u6a5f\u306f\u751f\u307e\u308c\u306a\u304b\u3063\u305f\u3002\u98db\u884c\u6a5f\u3092\u5b9f\u7528\u5316\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u5b9f\u9a13\u306f\u300c\u4eba\u5de5\u7ffc\u300d\u306e\u98a8\u6d1e\u5b9f\u9a13\u3067\u3057\u305f\u3002 \u98db\u884c\u6a5f\u306e\u5b9f\u73fe\u304c\u3082\u305f\u3089\u3057\u305f\u3082\u306e\u306f\uff0c\u7a7a\u529b\u5b66\u306e\u7406\u89e3\uff0c\u9ce5\u306e\u7fbd\u3068\u98db\u884c\u6a5f\u3068\u98db\u884c\u3059\u308b\u3053\u3068\u306b\u3064\u3044\u3066\u306e\u6df1\u3044\u7406\u89e3\u3067\u3057\u305f\u3002 \u9ce5\u306e\u7fbd\u306e\u89e3\u5256\u5b66\u306f\uff0c\u3064\u304e\u306f\u304e\uff0c\u4ed8\u3051\u8db3\u3057\u304b\u3089\u6210\u308b\u9032\u5316\u306e\u7523\u7269\u3067\u3042\u308b\u7fbd\u306f\uff0c\u304b\u3048\u3063\u3066\u98db\u884c\u306e\u672c\u8cea\u3092\u6349\u3048\u306b\u304f\u304b\u3063\u305f\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002 \u300c\u9ce5\u306e\u7fbd\u300d\u3068\u300c\u4eba\u5de5\u306e\u7ffc\u300d\u3068\u306e\u95a2\u4fc2\u3092\uff0c\u300c\u4eba\u9593\u306e\u8133\u300d\u3042\u308b\u3044\u306f\u8133\u306b\u5bbf\u308b\u77e5\u6027\u3068\u300c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u300d\u306b\u7f6e\u304d\u63db\u3048\u3066\u8003\u3048\u308c\u3070\uff0c \u4eba\u9593\u306e\u77e5\u6027\u3092\uff0c\u5fae\u306b\u5165\u308a\u969b\u306b\u5165\u308a\u8abf\u3079\u308b\u3053\u3068\uff0c\u305d\u3053\u304b\u3089\u4e00\u65e6\u96e2\u308c\u3066\uff0c\u5225\u306e\u6750\u6599\u3092\u7528\u3044\u305f\u5b9f\u9a13\u3092\u884c\u3046\u3053\u3068\u3067\uff0c \u4eba\u9593\u3068\u52d5\u7269\u3068\u6a5f\u68b0\u306e\u5168\u3066\u306b\u5171\u901a\u3059\u308b\u77e5\u6027\u306b\u3064\u3044\u3066\u6df1\u3044\u7406\u89e3\u304c\u5f97\u3089\u308c\u308b\u3060\u308d\u3046\uff0c\u3068\u524d\u8ff0\u306e Ford \u3068 Hayes \u306f\u66f8\u3044\u3066\u3044\u307e\u3059\u3002 Ford, K. and Hayes, P. (1998) On Computational Wings: Rethinking the Goals of Artificial Intelligence, Scientific American, 9(4), 79-83.","title":"\u96d1\u8ac7\uff0c\u4f59\u8ac7"},{"location":"lect08/#_3","text":"","title":"\u5fa9\u7fd2"},{"location":"lect08/#seq2sep","text":"\u4e2d\u9593\u5c64\u306e\u6700\u7d42\u6642\u523b\u306e\u72b6\u614b\u306b\u6587\u8868\u73fe\u304c\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\u3068\u3059\u308b\u3068\uff0c\u3053\u308c\u3092\u5fdc\u7528\u3059\u308b\u3070 \u6a5f\u68b0\u7ffb\u8a33 \u3084 \u5bfe\u8a71 \u306e\u30e2\u30c7\u30eb\u306b\u306a\u308b\u3002 \u521d\u671f\u306e\u7ffb\u8a33\u30e2\u30c7\u30eb\u3067\u3042\u308b \"seq2seq\" \u306e\u6982\u5ff5\u56f3\u3092\u793a\u3057\u305f\u3002 \"eos\" \u306f\u6587\u672b end of sentence \u3092\u8868\u3059\u3002 \u4e2d\u592e\u306e \"eos\" \u306e\u524d\u304c\u30bd\u30fc\u30b9\u8a00\u8a9e\u3067\u3042\u308a\uff0c\u4e2d\u592e\u306e \"eos\" \u306e\u5f8c\u306f\u30bf\u30fc\u30b2\u30c3\u30c8\u8a00\u8a9e\u306e\u8a00\u8a9e\u30e2\u30c7\u30eb\u3067\u3042\u308b\u5358\u7d14\u518d\u5e30\u578b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u4e2d\u9593\u5c64\u3078\u306e\u5165\u529b\u3068\u3057\u3066\u7528\u3044\u3089\u308c\u308b\u3002 \u6ce8\u610f\u3059\u3079\u304d\u306f\uff0c\u30bd\u30fc\u30b9\u8a00\u8a9e\u306e\u6587\u7d42\u4e86\u6642\u306e\u4e2d\u9593\u5c64\u72b6\u614b\u306e\u307f\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u8a00\u8a9e\u306e\u6700\u521d\u306e\u4e2d\u9593\u5c64\u306e\u5165\u529b\u306b\u7528\u3044\u308b\u3053\u3068\u3067\u3042\u308a\uff0c \u305d\u308c\u4ee5\u5916\u306e\u6642\u523b\u3067\u306f\u30bd\u30fc\u30b9\u8a00\u8a9e\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u8a00\u8a9e\u306f\u95a2\u4fc2\u304c\u306a\u3044\u3002 \u9006\u306b\u8a00\u3048\u3070\u6700\u7d42\u6642\u523b\u306e\u4e2d\u9593\u5c64\u72b6\u614b\u304c\u30bd\u30fc\u30b9\u6587\u306e\u60c5\u5831\u5168\u3066\u3092\u542b\u3093\u3067\u3044\u308b\u3068\u307f\u306a\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u3053\u306e\u70b9\u3092\u6539\u5584\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3059\u3053\u3068\u304c 2014 \u5e74\u4ee5\u964d\u76db\u3093\u306b\u306a\u3063\u305f\u3002 \u9855\u8457\u306a\u4f8b\u304c\u5f8c\u8ff0\u3059\u308b \u53cc\u65b9\u5411 RNN , LSTM \u3092\u63a1\u7528\u3057\u305f\u308a\uff0c \u6ce8\u610f \u6a5f\u69cb\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u3067\u3042\u3063\u305f\u3002 From [2014Sutskever_Sequence_to_Sequence] From [@2014Sutskever_Sequence_to_Sequence] Fig. 2 From [@2014Sutskever_Sequence_to_Sequence] Fig. 2","title":"Seq2sep \u7ffb\u8a33\u30e2\u30c7\u30eb"},{"location":"lect08/#_4","text":"\u5c02\u9580\u7528\u8a9e\u3068\u3057\u3066\u306f\uff0c \u591a\u982d=\u81ea\u5df1\u6ce8\u610f Multi-Head Self-Attention (\u4ee5\u4e0b MHSA \u3068\u8868\u8a18)\u3068\u547c\u3073\u307e\u3059\u3002 \u591a\u982d\u3068\u306f\u4f55\u304b\uff0c\u306a\u305c \u81ea\u5df1 \u304c\u3064\u304f\u6ce8\u610f\u306a\u306e\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Left: [@2017Vaswani_transformer], Right: [@2019Ramachandran_attention_vision] \u4e0a\u56f3\uff0c\u30af\u30a8\u30ea\uff0c\u30ad\u30fc\uff0c\u30d0\u30ea\u30e5\u30fc \u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u82f1\u5358\u8a9e\u306e\u610f\u5473\u3069\u304a\u308a\u306b\u89e3\u91c8\u3059\u308c\u3070\uff0c\u554f\u3044\u5408\u308f\u305b\uff0c\u30ad\u30fc\uff08\u9375\uff09\uff0c\u5024\uff0c\u3068\u306a\u308a\u307e\u3059\u3002 \u3064\u307e\u308a\uff0c\u3042\u308b\u554f\u3044\u5408\u308f\u305b\u306b\u5bfe\u3057\u3066\uff0c\u30ad\u30fc\u3092\u4e0e\u3048\u3066\uff0c\u305d\u306e\u7b54\u3048\u3068\u306a\u308b\u5024\u3092\u5f97\u308b\u3053\u3068\u3002 \u3053\u306e\u64cd\u4f5c\u3092\u5165\u529b\u60c5\u5831\u304b\u3089\u4f5c\u308a\u51fa\u3057\u3066\u7b54\u3048\u3092\u51fa\u529b\u3059\u308b\u4ed5\u7d44\u307f\u306b\uff0c\u30ef\u30f3\u30db\u30c3\u30c8\u8868\u73fe\u3092\u4f7f\u3046\u3053\u3068\u304c\u30dd\u30a4\u30f3\u30c8 \u4e0b\u56f3\u5de6\u306f\u4e0a\u56f3\u53f3\u3068\u540c\u3058\u3082\u306e\u3067\u3059\u3002\u3053\u306e\u4e0b\u56f3\u53f3\u3092\u8907\u6570\u500b\u675f\u306d\u308b\u3068\u4e0b\u56f3\u4e2d\u592e\u306b\u306a\u308a\u307e\u3059\u3002 \u4e0b\u56f3\u4e2d\u592e\u306e Scaled Dot-Product Attention \u3068\u66f8\u304b\u308c\u305f\u53f3\u8107\u306b\u5c0f\u3055\u304f h \u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u306e h \u3068\u306f \u30d8\u30c3\u30c9 \u306e\u610f\u5473\u3067\u3059\u3002 \u4e0b\u56f3\u4e2d\u592e\u3092 1 \u3064\u306e\u5358\u4f4d\u3068\u3057\u3066\uff0c\u6b21\u306b\u6765\u308b\u60c5\u5831\u3068\u9023\u7d50\u3055\u305b\u307e\u3059\u3002\u3053\u308c\u304c\u4e0b\u56f3\u53f3\u3067\u3059\u3002 \u5148\u9031\u306e\u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u306f\uff0c\u4e2d\u9593\u5c64\u306e\u72b6\u614b\u304c\u6b21\u306e\u6642\u523b\u306e\u51e6\u7406\u306b\u7d99\u7d9a\u3057\u3066\u7528\u3044\u3089\u308c\u3066\u3044\u307e\u3057\u305f\u3002 \u3068\u3053\u308d\u304c \u591a\u982d=\u81ea\u5df1\u6ce8\u610f MHSA \u3067\u306f\u4e00\u3064\u524d\u306e\u5165\u529b\u60c5\u5831\u3092\uff0c\u73fe\u5728\u306e\u6642\u523b\u306e\u60c5\u5831\u306b\u5bfe\u3059\u308b\u30af\u30a8\u30ea\u3068\u30ad\u30fc\u306e\u3088\u3046\u306b\u6271\u3063\u3066\u60c5\u5831\u3092\u51e6\u7406\u3057\u307e\u3059\u3002 \u4e0b\u56f3\u53f3\u306e\u4e0b\u304b\u3089\u5165\u529b\u3055\u308c\u308b\u60c5\u5831\u306f\uff0cinput \u3068 output \u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u3055\u3089\u306b output \u306e\u4e0b\u306b\u306f (Shifted right) \u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u3059\u306a\u308f\u3061\uff0c\u6642\u7cfb\u5217\u60c5\u5831\u3092\u4e00\u6642\u523b\u5206\u3060\u3051\u53f3\u306b\u305a\u3089\u3057\uff08\u30b7\u30d5\u30c8\uff09\u3055\u305b\u3066\u9010\u6b21\u60c5\u5831\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002 \u4e0b\u56f3\u53f3\u306e\u4e0b\u304b\u3089\u5165\u529b\u3055\u308c\u308b\u60c5\u5831\u306f\uff0cembedding \u3064\u307e\u308a\u57cb\u3081\u8fbc\u307f\u8868\u73fe \u3068 \u4f4d\u7f6e\u7b26\u53f7\u5316 position embedding \u304c\u8db3\u3057\u5408\u308f\u3055\u308c\u305f\u3082\u306e\u3067\u3059\u3002\u57cb\u3081\u8fbc\u307f\u8868\u73fe\u3068\u306f\u5148\u9031 word2vec \u3067\u89e6\u308c\u305f\u30d9\u30af\u30c8\u30eb\u3067\u8868\u73fe\u3055\u308c\u305f\uff0c\u5358\u8a9e\uff08\u3042\u308b\u3044\u306f\u305d\u308c\u305e\u308c\u306e\u9805\u76ee\uff09\u306e \u610f\u5473\u8868\u73fe \u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002 \u5c11\u3057\u3060\u3051\u307e\u3068\u3081\u308b\u3068: \u81ea\u7136\u8a00\u8a9e\u51e6\u7406\uff0c\u753b\u50cf\u51e6\u7406\uff0c\u5f37\u5316\u5b66\u7fd2\uff0c\u30e1\u30bf\u5b66\u7fd2\u306e 4 \u5206\u91ce\u3067\u307b\u307b\u540c\u69d8\u306e \u591a\u982d\u81ea\u5df1\u6ce8\u610f MHSA \u304c\u53d6\u308a\u5165\u308c\u3089\u308c\u3066\u3044\u308b\u3002 \u30af\u30a8\u30ea\uff0c\u30ad\u30fc\uff0c\u30d0\u30ea\u30e5\u30fc \u306e\u91cd\u307f\u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u304c MHSA \u306e\u5b66\u7fd2\u3067\u3042\u308b\u3002 \u5f93\u6765\u624b\u6cd5\u3067\u3042\u308b \u7573\u307f\u8fbc\u307f \u3084 LSTM \u3092 MHSA \u3067\u7f6e\u304d\u63db\u3048\u308b\u52d5\u304d\u304c\u3042\u308b\u3002","title":"\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc \u304c\u63d0\u5531\u3057\u305f \u81ea\u5df1\u6ce8\u610f"},{"location":"lect08/#bert","text":"\u4e0a\u8a18\u306e\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u306b\u57fa\u3065\u3044\u3066 BERT \u304c\u63d0\u6848\u3055\u308c\u307e\u3057\u305f\u3002 BERT \u306f B idirectional E ncoder R epresentations from T ransformers \u304b\u3089\u547d\u540d\u3057\u305f\u3068\u539f\u8457\u8ad6\u6587\u306b\u306f\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002 \u3067\u3059\u304c\uff0c\u3053\u306e\u539f\u8457\u8ad6\u6587\u306e\u76f4\u524d\u306b\u63d0\u6848\u3055\u308c\u305f\u30e2\u30c7\u30eb\u306b ELMo \u304c\u3042\u3063\u305f\u305f\u3081\uff0c\u3053\u3058\u3064\u3051\u305f\uff0c\u3075\u3056\u3051\u305f\u547d\u540d\u3067\u3057\u3087\u3046\u3002 \u3082\u3061\u308d\u3093 ELMo (\u3053\u3061\u3089\u306f E mbeddings from L anguage Mo dels \u304b\u3089\u547d\u540d\u3055\u308c\u307e\u3057\u305f)\u3082 BERT \u3082\u30bb\u30b5\u30df\u30b9\u30c8\u30ea\u30fc\u30c8\u306b\u51fa\u3066\u304f\u308b\u30ad\u30e3\u30e9\u30af\u30bf\u3067\u3059\u3002 BERT \u306e\u7279\u5fb4\u3092 3 \u3064\u306b\u307e\u3068\u3081\u308b\u3068\u4ee5\u4e0b\u306e\u901a\u308a \u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc Transformer \u306b\u57fa\u3065\u304f \u591a\u982d\u81ea\u5df1\u6ce8\u610f (MHSA) \u3092\u4f7f\u3063\u305f\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb 2 \u3064\u306e\u4e8b\u524d\u8a13\u7df4: \u30de\u30b9\u30af\u5316\u8a00\u8a9e\u30e2\u30c7\u30eb \u3068 \u6b21\u6587\u4e88\u6e2c\u8ab2\u984c \u3092\u7528\u3044\u308b \u4e8b\u524d\u8a13\u7df4\u6e08\u306e\u30e2\u30c7\u30eb\u3092\u7528\u3044\u3066\uff0c\u89e3\u304f\u3079\u304d\u8ab2\u984c\u306e\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066 \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0 Fine tuning \u3092\u65bd\u3059 \u500b\u5225\u306e\u8ab2\u984c\u306f\u4e0b\u6d41\u8ab2\u984c down stream tasks \u3068\u547c\u3070\u308c\u307e\u3059\u3002\u4e0a\u6d41 \u3068 \u4e0b\u6d41 \u3068\u306e\u533a\u5225\u306f\uff0c\u6700\u521d\u306b\u884c\u3046\u4e8b\u524d\u8a13\u7df4\u306e\u3053\u3068\u3092\u6642\u9593\u7684\u306b\u5148\u884c\u3059\u308b\u306e\u3067\u4e0a\u6d41\uff0c\u305d\u306e\u5f8c\u306e\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u305d\u308c\u305e\u308c\u306e\u8ab2\u984c\u306e\u3053\u3068\u3092\u4e0b\u6d41\u8ab2\u984c\u3068\u547c\u3093\u3067\u3044\u307e\u3059\u3002 \u8907\u6570\u306e\u8ab2\u984c\u306b\u5bfe\u3057\u3066\u500b\u5225\u306b\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u306b\u3088\u308a\uff0c\u8907\u6570\u306e\u4e0b\u6d41\u8ab2\u984c\u3067\u6027\u80fd\u5411\u4e0a\u304c\u8a8d\u3081\u3089\u308c\u307e\u3057\u305f\u3002 GLUE \u30b9\u30b3\u30a2\u30dc\u30fc\u30c9 , SuperGLUE \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"BERT \u306e\u7279\u5fb4"},{"location":"lect08/#bert_1","text":"\u4e0a\u306e\u56f3\u306b\u3082\u3042\u3063\u305f\u3068\u304a\u308a BERT \u3067\u306f\u5165\u529b\u60c5\u5831\u304c\u57cb\u3081\u8fbc\u307f\u8868\u73fe\u3060\u3051\u3067\u306a\u304f\uff0c\u4f4d\u7f6e\u7b26\u53f7\u5316\u5668\u306e\u60c5\u5831\u304c\u52a0\u7b97\u3055\u308c\u307e\u3059\u3002 BERT \u3067\u306f\uff0c\u57cb\u3081\u8fbc\u307f\u8868\u73fe\u3068\u4f4d\u7f6e\u7b26\u53f7\u5316\u5668\u306e\u60c5\u5831\u306b\u52a0\u3048\u3066\uff0c\u30bb\u30b0\u30e1\u30f3\u30c8\u57cb\u3081\u8fbc\u307f segment embeddings \u3082\u52a0\u3048\u305f\u60c5\u5831\u304c\u5165\u529b\u60c5\u5831\u3068\u306a\u308a\u307e\u3059\u3002\u4e0b\u56f3\u53c2\u7167 \u57cb\u3081\u8fbc\u307f\u30c8\u30fc\u30af\u30f3\u306e\u7dcf\u548c\uff0c\u4f4d\u7f6e\u7b26\u53f7\u5668\uff0c\u5206\u96e2\u57cb\u3081\u8fbc\u307f\u306e 3 \u8005 From [@2018BERT] Fig. 2 \u4e0a\u56f3\u3067\u306f\uff0c\u4e0b 3 \u884c\u304c\u5165\u529b\u60c5\u5831\u3092\u69cb\u6210\u3059\u308b 3 \u3064\u306e\u8981\u7d20\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u4e0a\uff08\u30d4\u30f3\u30af\u8272\uff09\u304c\u5408\u7b97\u3057\u305f\u5165\u529b\u60c5\u5831\u306b\u306a\u308a\u307e\u3059\u3002 3 \u3064\u306e\u5165\u529b\u60c5\u5831\u3068\u306f\u305d\u308c\u305e\u308c\uff0c\u4e0b\u304b\u3089 \u4f4d\u7f6e\u7b26\u53f7\u5316\u5668 \uff08\u8584\u7070\u8272\uff09\uff0c\u30bb\u30b0\u30e1\u30f3\u30c8\u57cb\u3081\u8fbc\u307f (\u6de1\u7dd1)\uff0c\u30c8\u30fc\u30af\u30f3\u57cb\u3081\u8fbc\u307f (\u6de1\u9ec4) \u3067\u3059\u3002","title":"BERT \u306e\u5165\u529b\u8868\u73fe"},{"location":"lect08/#position-encoders","text":"\u4e0a\u8ff0\u306e\u3088\u3046\u306b\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u306e\u5165\u529b\u306b\u306f\uff0c\u5358\u8a9e\u57cb\u3081\u8fbc\u307f\u8868\u73fe\u306b\u52a0\u3048\u3066\uff0c\u4f4d\u7f6e\u7b26\u53f7\u5668\u306e\u4fe1\u53f7\u3082\u52a0\u7b97\u3055\u308c\u307e\u3059\u3002 \u4f4d\u7f6e\u7b26\u53f7\u5668\u306b\u3088\u308b\u4f4d\u7f6e\u8868\u73fe\u306f\uff0ci \u756a\u76ee\u306e\u4f4d\u7f6e\u60c5\u5831\u3092\u30ef\u30f3\u30db\u30c3\u30c8\u8868\u73fe\u3059\u308b\u306e\u3067\u306f\u306a\u304f\uff0c\u5468\u6ce2\u6570\u9818\u57df\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3067\u5468\u671f\u60c5\u5831\u3092\u8868\u73fe\u3059\u308b\u8a66\u307f\u3068\u898b\u306a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4f4d\u7f6e\u7b26\u53f7\u5316\u306b\u7528\u3044\u3089\u308c\u308b\u7b26\u53f7\u5316\u3002\u4f4d\u7f6e\u60c5\u5831\u3092\u5468\u6ce2\u6570\u60c5\u5831\u3078\u5909\u63db\u3057\u3066\u7528\u3044\u3066\u3044\u307e\u3059\u3002 \u4f4d\u7f6e\u60c5\u5831\u3092\u5468\u6ce2\u6570\u60c5\u5831\u3078\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u826f\u3044\u3053\u3068\u306a\u306e\u304b\uff0c\u3069\u3046\u306a\u306e\u304b\uff0c\u306f\u8b70\u8ad6\u3055\u308c\u3066\u3044\u308b\u6700\u4e2d\u3067\u3059\u3002 \u4e00\u3064\u306e\u7814\u7a76\u30c6\u30fc\u30de\u3067\u3082\u3042\u308a\u307e\u3059\u3002 \u6570\u5b66\u7684\u306a\u8aac\u660e\u306f \u30d5\u30fc\u30ea\u30a8\u5909\u63db \u3092\u8abf\u3079\u3066\u304f\u3060\u3055\u3044\u3002\u4efb\u610f\u306e\u95a2\u6570 y=f(x) \u3067\u306f x \u306f\u4f4d\u7f6e\u60c5\u5831\u3092\u8868\u3057\u3066\u3044\u308b\u3068\u307f\u306a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5f93\u3063\u3066\uff0c\u4f4d\u7f6e x \u3092\u4e0e\u3048\u308b\u3068\u5bfe\u5fdc\u3059\u308b\u5024 y \u304c\u5f97\u3089\u308c\u308b\u3053\u3068\u3092\u8868\u3057\u3066\u3044\u308b\u5f0f\u304c y=f(x) \u3067\u3059\u3002 \u3053\u308c\u306b\u5bfe\u3057\u3066\uff0c\u4efb\u610f\u306e\u60c5\u5831\u306f\u5468\u6ce2\u6570\uff0c\u3059\u306a\u308f\u3061\uff0c\u6ce2\u306e\u91cd\u306d\u5408\u308f\u305b\u3068\u3057\u3066\u8868\u73fe\u3067\u304d\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u5468\u6ce2\u6570\u3092\u91cd\u306d\u5408\u308f\u305b\u308b\u3068\u5143\u306e\u95a2\u6570\u306b\u306a\u308a\u307e\u3059\u3002 \u53cd\u5bfe\u306b\uff0c\u3042\u308b\u5468\u6ce2\u6570\u306e\u5024\u306f\uff0c\u95a2\u6570 f(x) \u3092\u5468\u6ce2\u6570\u3078\u5909\u63db\u3057\u305f\u3068\u304d\u306e\u7279\u5b9a\u306e\u5468\u6ce2\u6570\u6210\u5206\u3068\u3057\u3066\u8868\u73fe\u3067\u304d\u307e\u3059\u3002 BERT \u306b\u304a\u3051\u308b\u4f4d\u7f6e\u7b26\u53f7\u5316\u5668\u306f\u4f4d\u7f6e\u60c5\u5831\u3092\u6ce2\u306e\u6210\u5206\u3068\u3057\u3066\u8868\u73fe\u3057\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306b\u3057\u3066\u3067\u304d\u305f\u5024\u3092\u5165\u529b\u5074\u3068\u51fa\u529b\u5074\u3067\u4e0b\u56f3\u306e\u3088\u3046\u306b\u9023\u7d50\u3055\u305b\u305f\u3082\u306e\u304c\u4ee5\u4e0b\u306e\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u3067\u3059\u3002 From [@2017Vaswani_transformer] Fig. 1 \u3053\u308c\u307e\u3067\u898b\u3066\u304d\u305f\u3088\u3046\u306b\uff0c\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u3067\u306f\u5165\u529b\u4fe1\u53f7\u306b\u57fa\u3065\u3044\u3066\u60c5\u5831\u306e\u5909\u63db\u304c\u884c\u306a\u308f\u308c\u308b\u3002 \u3053\u306e\u610f\u5473\u3067\u306f\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u306b\u304a\u3051\u308b \u591a\u982d \u81ea\u5df1\u6ce8\u610f MHSA \u3068\u306f\u30dc\u30c8\u30e0\u30a2\u30c3\u30d7\u6ce8\u610f\u306e\u5909\u5f62\u3067\u3042\u308b\u3068\u307f\u306a\u3057\u3046\u308b\u3002 \u9006\u8a00\u3059\u308c\u3070\uff0cRNN \u306e\u3088\u3046\u306b\u904e\u53bb\u306e\u5c65\u6b74\u3092\u3059\u3079\u3066\u4fdd\u6301\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\uff0c\u7cfb\u5217\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\uff0cposition encoders \u306b\u983c\u3063\u3066\u3044\u308b\u5074\u9762\u304c\u6307\u6458\u3067\u304d\u308b\u3002","title":"\u4f4d\u7f6e\u7b26\u53f7\u5668 Position encoders"},{"location":"lect08/#bert_2","text":"\u5168\u5165\u529b\u7cfb\u5217\u306e\u3046\u3061 15% \u3092\u30e9\u30f3\u30c0\u30e0\u306b [MASK] \u30c8\u30fc\u30af\u30f3\u3067\u7f6e\u304d\u63db\u3048\u308b \u5165\u529b\u306f\u30aa\u30ea\u30b8\u30ca\u30eb\u7cfb\u5217\u3092 [MASK] \u30c8\u30fc\u30af\u30f3\u3067\u7f6e\u304d\u63db\u3048\u305f\u7cfb\u5217 \u30e9\u30d9\u30eb: \u30aa\u30ea\u30b8\u30ca\u30eb\u7cfb\u5217\u306e [MASK] \u90e8\u5206\u306b\u306e\u6b63\u3057\u3044\u30e9\u30d9\u30eb\u3092\u4e88\u6e2c 80%: \u30aa\u30ea\u30b8\u30ca\u30eb\u5165\u529b\u7cfb\u5217\u3092 [MASK] \u3067\u7f6e\u63db 10%: [MASK] \u306e\u4f4d\u7f6e\u306e\u5358\u8a9e\u3092\u30e9\u30f3\u30c0\u30e0\u306a\u7121\u95a2\u9023\u8a9e\u3067\u7f6e\u304d\u63db\u3048\u308b 10%: \u30aa\u30ea\u30b8\u30ca\u30eb\u7cfb\u5217","title":"BERT \u306e\u4e8b\u524d\u8a13\u7df4: \u30de\u30b9\u30af\u5316\u8a00\u8a9e\u30e2\u30c7\u30eb"},{"location":"lect08/#bert_3","text":"\u8a00\u8a9e\u30e2\u30c7\u30eb\u306e\u6b20\u70b9\u3092\u88dc\u5b8c\u3059\u308b\u76ee\u7684\uff0c\u6b21\u306e\u6587\u3092\u4e88\u6e2c [SEP] \u30c8\u30fc\u30af\u30f3\u3067\u533a\u5207\u3089\u308c\u305f 2 \u6587\u5165\u529b \u5165\u529b: the man went to the store [SEP] he bought a gallon of milk. \u30e9\u30d9\u30eb: IsNext \u5165\u529b: the man went to the store [SEP] penguins are flightless birds. \u30e9\u30d9\u30eb: NotNext","title":"BERT \u306e\u4e8b\u524d\u8a13\u7df4: \u6b21\u6587\u4e88\u6e2c\u8ab2\u984c"},{"location":"lect08/#bert_4","text":"(a), (b) \u306f\u6587\u30ec\u30d9\u30eb\u8ab2\u984c\uff0c (c),(d)\u306f\u30c8\u30fc\u30af\u30f3\u30ec\u30d9\u30eb\u8ab2\u984c, E: \u5165\u529b\u57cb\u3081\u8fbc\u307f\u8868\u73fe, T_i : \u30c8\u30fc\u30af\u30f3 i \u306e\u6587\u8108\u8868\u8c61\u3002 From [@2018BERT] Fig.3","title":"BERT: \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0"},{"location":"lect08/#glue-general-language-understanding-evaluation","text":"CoLA : \u5165\u529b\u6587\u304c\u82f1\u8a9e\u3068\u3057\u3066\u6b63\u3057\u3044\u304b\u5426\u304b\u3092\u5224\u5b9a SST-2 : \u30b9\u30bf\u30f3\u30d5\u30a9\u30fc\u30c9\u5927\u306b\u3088\u308b\u6620\u753b\u30ec\u30d3\u30e5\u30fc\u306e\u6975\u6027\u5224\u65ad MRPC : \u30de\u30a4\u30af\u30ed\u30bd\u30d5\u30c8\u306e\u8a00\u3044\u63db\u3048\u30b3\u30fc\u30d1\u30b9\u30022\u6587 \u304c\u7b49\u3057\u3044\u304b\u5426\u304b\u3092\u5224\u5b9a STS-B : \u30cb\u30e5\u30fc\u30b9\u306e\u898b\u51fa\u3057\u6587\u306e\u985e\u4f3c\u5ea6\u30925\u6bb5\u968e\u3067\u8a55\u5b9a QQP : 2 \u3064\u306e\u8cea\u554f\u6587\u306e\u610f\u5473\u304c\u7b49\u4fa1\u304b\u3092\u5224\u5b9a MNLI : 2 \u5165\u529b\u6587\u304c\u610f\u5473\u7684\u306b\u542b\u610f\uff0c\u77db\u76fe\uff0c\u4e2d\u7acb\u3092\u5224\u5b9a QNLI : 2 \u5165\u529b\u6587\u304c\u610f\u5473\u7684\u306b\u542b\u610f\uff0c\u77db\u76fe\uff0c\u4e2d\u7acb\u3092\u5224\u5b9a RTE : MNLI \u306b\u4f3c\u305f2\u3064\u306e\u5165\u529b\u6587\u306e\u542b\u610f\u3092\u5224\u5b9a WNI : \u30a6\u30a3\u30ce\u30b0\u30e9\u30c3\u30c9\u4f1a\u8a71\u30c1\u30e3\u30ec\u30f3\u30b8 \u305d\u306e\u4ed6 SQuAD : \u30b9\u30bf\u30f3\u30d5\u30a9\u30fc\u30c9\u5927\u306b\u3088\u308b Q and A \u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u304b\u3089\u62bd\u51fa\u3057\u305f\u6587 RACE : \u4e2d\u5b66\u5165\u8a66\uff0c\u9ad8\u6821\u5165\u8a66\u306b\u76f8\u5f53\u3059\u308b\u30c6\u30b9\u30c8\u591a\u80a2\u9078\u629e\u56de\u7b54","title":"GLUE: General Language Understanding Evaluation"},{"location":"lect08/#bert_5","text":"\u30c7\u30fc\u30bf: Wikipedia (2.5B words) + BookCorpus (800M words) \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba: 131,072 words (1024 sequences * 128 length or 256 sequences * 512 length) \u8a13\u7df4\u6642\u9593: 1M steps (~40 epochs) \u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0: AdamW, 1e-4 learning rate, linear decay BERT-Base: 12 \u5c64, \u5404\u5c64 768 \u30cb\u30e5\u30fc\u30ed\u30f3, 12 \u591a\u982d\u6ce8\u610f BERT-Large: 24 \u5c64, \u5404\u5c64 1024 \u30cb\u30e5\u30fc\u30ed\u30f3, 16 \u591a\u982d\u6ce8\u610f 4x4 / 8x8 TPU \u3067 4 \u65e5\u9593","title":"BERT \u30e2\u30c7\u30eb\u306e\u8a73\u7d30"},{"location":"lect08/#cola","text":"1 \u306f\u6b63\u3057\u3044\u82f1\u6587\uff0c0 \u306f\u975e\u6587 1 They drank the pub dry. 0 They drank the pub . 1 The professor talked us into a stupor. 0 The professor talked us . 1 We yelled ourselves hoarse. 0 We yelled ourselves .","title":"CoLA \u30b5\u30f3\u30d7\u30eb"},{"location":"lect08/#sst-2","text":"0 \u306f\u4f4e\u8a55\u4fa1\uff0c1 \u306f\u9ad8\u8a55\u4fa1 hide new secretions from the parental units 0 contains no wit , only labored gags 0 that loves its characters and communicates something rather beautiful about human nature 1 remains utterly satisfied to remain the same throughout 0 on the worst revenge-of-the-nerds clich\u00e9s the filmmakers could dredge up 0 that's far too tragic to merit such superficial treatment 0","title":"SST-2 \u30b5\u30f3\u30d7\u30eb"},{"location":"lect08/#mrpc","text":"1 \u65871: \"Please, keep doing your homework,\" said Bavelier, the mother of three. \u65872: \"Please, keep doing your homework,\" said Bavelier, the mother of 6-year-old twins and a 2-year old. 1 \u65871: While Mr. Qurei is widely respected and has a long history of negotiating with the Israelis, he cannot expect such a warm welcome. \u65872: While Qureia is respected and has a history of negotiating with the Israelis, a warm welcome is not expected. 1 \u65871: \"Nobody wants to go to war with anybody about anything ... it 's always very much a last resort thing and one to be avoided,\" Mr Howard told Sydney radio. \u65872: \"We don't want to go to war with anybody . . . it's always very much a last resort, and one to be avoided. 0 \u65871: GMT, Tab shares were up 19 cents, or 4.4% , at A 4.56, having earlier set a record high of A 4.57. \u65872: Tab shares jumped 20 cents, or 4.6%, to set a record closing high at A $4.57. 0 \u65871: Martin, 58, will be freed today after serving two thirds of his five-year sentence for the manslaughter of 16-year-old Fred Barras. \u65872: Martin served two thirds of a five-year sentence for the manslaughter of Barras and for wounding Fearon.","title":"MRPC \u30b5\u30f3\u30d7\u30eb"},{"location":"lect08/#sst-b","text":"\u6700\u5f8c\u306e\u6570\u5024\u304c\u8a55\u4fa1\u5024 A plane is taking off. An air plane is taking off. 5.000 A man is playing a large flute. A man is playing a flute. 3.800 A man is spreading shreded cheese on a pizza. A man is spreading shredded cheese on an uncooked pizza. 3.800 Three men are playing chess. Two men are playing chess. 2.600 A man is playing the cello. A man seated is playing the cello. 4.250 Some men are fighting. Two men are fighting. 4.250 A man is smoking. A man is skating 0.5000","title":"SST-B \u30b5\u30f3\u30d7\u30eb"},{"location":"lect08/#qqp","text":"0 \u306f\u7570\u306a\u308b\u3068\u5224\u65ad\uff0c 1 \u306f\u540c\u3058\u3068\u5224\u65ad\u3059\u3079\u304d\u6587 0 How is the life of a math student? Could you describe your own experiences? Which level of prepration is enough for the exam jlpt5? 1 How do I control my horny emotions? How do you control your horniness? 0 What causes stool color to change to yellow? What can cause stool to come out as little balls? 0 1 What can one do after MBBS? What do i do after my MBBS? 0 Where can I find a power outlet for my laptop at Melbourne Airport? Would a second airport in Sydney, Australia be needed if a high-speed rail link was created between Melbourne and Sydney? 0 How not to feel guilty since I am Muslim and I'm conscious we won't have sex together? I don't beleive I am bulimic, but I force throw up at least once a day after I eat something and feel guilty. Should I tell somebody, and if so who?","title":"QQP \u30b5\u30f3\u30d7\u30eb"},{"location":"lect08/#mnli","text":"\u77db\u76fe Met my first girlfriend that way. I didn\u2019t meet my first girlfriend until later. \u4e2d\u7acb 8 million in relief in the form of emergency housing. The 8 million dollars for emergency housing was still not enough to solve the problem. \u4e2d\u7acb Now, as children tend their gardens, they have a new appreciation of their relationship to the land, their cultural heritage, and their community. All of the children love working in their gardens. \u542b\u610f At 8:34, the Boston Center controller received a third transmission from American 11 The Boston Center controller got a third transmission from American 11. \u4e2d\u7acb I am a lacto-vegetarian. I enjoy eating cheese too much to abstain from dairy. \u77db\u76fe someone else noticed it and i said well i guess that\u2019s true and it was somewhat melodious in other words it wasn\u2019t just you know it was really funny No one noticed and it wasn\u2019t funny at all.","title":"MNLI \u30b5\u30f3\u30d7\u30eb"},{"location":"lect08/#_5","text":"From [@2019Liu_mt-dnn] Fig. 1","title":"\u4e8b\u524d\u8a13\u7df4\u3068\u30de\u30eb\u30c1\u8ab2\u984c\u5b66\u7fd2"},{"location":"lect08/#_6","text":"From [@2019Lample_Cross-lingual] Fig. 1","title":"\u591a\u8a00\u8a9e\u5bfe\u5fdc"},{"location":"lect08/#bert_6","text":"From https://towardsdatascience.com/a-review-of-bert-based-models-4ffdc0f15d58","title":"BERT \u306e\u767a\u5c55"},{"location":"lect08/#bert_7","text":"\u30de\u30b9\u30af\u5316\u8a00\u8a9e\u30e2\u30c7\u30eb\u306e\u30de\u30b9\u30af\u5316\u5272\u5408\u306e\u9055\u3044\u306b\u3088\u308b\u6027\u80fd\u6bd4\u8f03 \u30de\u30b9\u30af\u5316\u8a00\u8a9e\u30e2\u30c7\u30eb\u306e\u30de\u30b9\u30af\u5316\u5272\u5408\u306f \u30de\u30b9\u30af\u30c8\u30fc\u30af\u30f3:\u30e9\u30f3\u30c0\u30e0\u7f6e\u63db:\u30aa\u30ea\u30b8\u30ca\u30eb=80:10:10 \u3060\u3051\u3067\u306a\u304f\uff0c \u4ed6\u306e\u5272\u5408\u3067\u8a13\u7df4\u3057\u305f\u5834\u5408\u306e 2 \u7a2e\u985e\u4e0b\u6d41\u8ab2\u984c\uff0c MNLI \u3068 NER \u3067\u5909\u5316\u3059\u308b\u304b\u3092\u4e0b\u56f3 \\ref{fig:2019devlin_mask_method21} \u306b\u793a\u3057\u305f\u3002 80:10:10 \u306e\u6027\u80fd\u304c\u6700\u3082\u9ad8\u3044\u304c\u5927\u304d\u306a\u9055\u3044\u304c\u3042\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3088\u3046\u3067\u3042\u308b\u3002","title":"BERT: \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u624b\u7d9a\u304d\u306b\u3088\u308b\u6027\u80fd\u6bd4\u8f03"},{"location":"lect08/#bert_8","text":"\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u306b\u3088\u308b\u6027\u80fd\u6bd4\u8f03 \u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u3092\u5897\u52a0\u3055\u305b\u3066\u5927\u304d\u306a\u30e2\u30c7\u30eb\u306b\u3059\u308c\u3070\u7cbe\u5ea6\u5411\u4e0a\u304c\u671f\u5f85\u3067\u304d\u308b\u3002 \u4e0b\u56f3\u3067\u306f\uff0c\u6a2a\u8ef8\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u3067 MNLI \u306f\u9752\u3068 MRPC \u306f\u8d64 \u3067\u63cf\u304b\u308c\u3066\u3044\u308b\u3002 \u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u5897\u52a0\u306b\u4f34\u3044\u7cbe\u5ea6\u5411\u4e0a\u304c\u8a8d\u3081\u3089\u308c\u308b\u3002 \u56f3\u306b\u63cf\u304b\u308c\u305f\u7bc4\u56f2\u3067\u306f\u7cbe\u5ea6\u304c\u5929\u4e95\u306b\u9054\u3057\u3066\u3044\u308b\u8a33\u3067\u306f\u306a\u3044\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u304c\u5897\u52a0\u3059\u308c\u3070\u7cbe\u5ea6\u306f\u5411\u4e0a\u3057\u3066\u3044\u308b\u3068\u8a8d\u3081\u3089\u308c\u308b\u3002","title":"BERT: \u30e2\u30c7\u30eb\u30b5\u30a4\u30ba\u6bd4\u8f03"},{"location":"lect08/#bert_9","text":"\u8a00\u8a9e\u30e2\u30c7\u30eb\u306e\u76f8\u9055\u306b\u3088\u308b\u6027\u80fd\u6bd4\u8f03 \u8a00\u8a9e\u30e2\u30c7\u30eb\u3092\u30de\u30b9\u30af\u5316\u8a00\u8a9e\u30e2\u30c7\u30eb\u304b\u6b21\u5358\u8a9e\u4e88\u6e2c\u306e\u5f93\u6765\u578b\u306e\u8a00\u8a9e\u30e2\u30c7\u30eb\u306b\u3088\u308b\u304b\u306e\u76f8\u9055\u306b\u3088\u308b\u6027\u80fd\u6bd4\u8f03\u3092 \u4e0b\u56f3 \\ref{fig:2019devlin_directionality19} \u306b\u793a\u3057\u305f\u3002 \u6a2a\u8ef8\u306b\u306f\u8a13\u7df4\u30b9\u30c6\u30c3\u30d7\u3067\u3042\u308b\u3002\u8a13\u7df4\u304c\u9032\u3080\u3053\u3068\u3067\u30de\u30b9\u30af\u5316\u8a00\u8a9e\u30e2\u30c7\u30eb\u3068\u306e\u5dee\u306f 2 \u30d1\u30fc\u30bb\u30f3\u30c8\u3067\u306f\u3042\u308b\u304c\u8a8d\u3081\u3089\u308c\u308b\u3088\u3046\u3067\u3042\u308b\u3002","title":"BERT: \u30e2\u30c7\u30eb\u5358\u65b9\u5411\uff0c\u53cc\u65b9\u5411\u30e2\u30c7\u30eb\u6bd4\u8f03"},{"location":"lect08/#bert_10","text":"\u4e8b\u524d\u8a13\u7df4\u306e\u52b9\u679c\u6bd4\u8f03 \u56f3\u306b\u306f\u4e8b\u524d\u8a13\u7df4\u306e\u6bd4\u8f03\u3092\u793a\u3057\u3055\u308c\u3066\u3044\u308b\u3002 \u5168\u3066\u306e\u4e8b\u524d\u8a13\u7df4\u3092\u7528\u3044\u305f\u5834\u5408\u304c\u9752\uff0c\u6b21\u6587\u8a13\u7df4\u3092\u9664\u3044\u305f\u5834\u5408\u304c\u8d64\uff0c\u5f93\u6765\u578b\u8a00\u8a9e\u30e2\u30c7\u30eb\u3067\u6b21\u6587\u4e88\u6e2c\u8ab2\u984c\u3092\u3057\u305f\u5834\u5408\u3092\u9ec4\uff0c \u5f93\u6765\u578b\u8a00\u8a9e\u30e2\u30c7\u30eb\u3067\u6b21\u6587\u4e88\u6e2c\u8ab2\u984c\u306a\u3057\u3092\u7dd1\u3067\u63cf\u304b\u308c\u3066\u3044\u308b\u30024 \u7a2e\u985e\u306e\u4e0b\u6d41\u8ab2\u984c\u306f MNLI, QNLI, MRPC, SQuAD \u3067\u3042\u308b\u3002 \u4e0b\u6d41\u306e\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u8ab2\u984c\u3054\u3068\u306b\u7cbe\u5ea6\u304c\u5206\u304b\u308c\u308b\u3088\u3046\u3067\u3042\u308b\u3002","title":"BERT: \u4e8b\u524d\u8a13\u7df4\u6bd4\u8f03"},{"location":"lect08/#_7","text":"RoBERTa: BERT \u306e\u8a13\u7df4\u30b3\u30fc\u30d1\u30b9\u3092\u5de8\u5927 (173GB) \u306b\u3057\uff0c\u30df\u30cb\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3092\u5927\u304d\u3057\u305f XLNet: \u9806\u5217\u8a00\u8a9e\u30e2\u30c7\u30eb\u30022 \u30b9\u30c8\u30ea\u30fc\u30e0\u6ce8\u610f MT-DNN: BERT \u30d9\u30fc\u30b9 \u306e\u8ee2\u79fb\u5b66\u7fd2\u306b\u91cd\u304d\u3092\u304a\u3044\u305f\u30e2\u30c7\u30eb GPT-2: BERT \u306b\u57fa\u3065\u304f\u3002\u4eba\u9593\u8d85\u3048\u3057\u3066 2019 \u5e74 2 \u6708\u6642\u70b9\u3067\u708e\u4e0a\u9a12\u304e BERT: Transformer\u306b\u57fa\u3065\u304f\u8a00\u8a9e\u30e2\u30c7\u30eb\u3002 \u30de\u30b9\u30af\u5316\u8a00\u8a9e\u30e2\u30c7\u30eb \u3068 \u6b21\u6587\u4e88\u6e2c \u306b\u57fa\u3065\u304f \u4e8b\u524d\u8a13\u7df4\uff0c\u5404\u4e0b\u6d41\u8ab2\u984c\u3092\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3002\u4e8b\u524d\u8a13\u7df4\u3055\u308c\u305f\u30e2\u30c7\u30eb\u306f\u4e00\u822c\u516c\u958b\u6e08\u3002 DistillBERT: BERT \u306e\u84b8\u7559\u7248 ELMo: \u53cc\u65b9\u5411 RNN \u306b\u3088\u308b\u6587\u57cb\u3081\u8fbc\u307f\u8868\u73fe Transformer: \u81ea\u5df1\u6ce8\u610f\u306b\u57fa\u3065\u304f\u8a00\u8a9e\u30e2\u30c7\u30eb\u3002\u591a\u982d\u6ce8\u610f\uff0c\u4f4d\u7f6e\u7b26\u53f7\u5668.","title":"\u5404\u30e2\u30c7\u30eb\u306e\u7279\u5fb4"},{"location":"lect08/#bert_11","text":"BERT \u306e\u69cb\u6587\u89e3\u6790\u80fd\u529b\u3092\u4e0b\u56f3\u793a\u3057\u305f\u3002 \u5404\u5358\u8a9e\u306e\u5171\u901a\u7a7a\u9593\u306b\u5c04\u5f71\u3057\uff0c \u5358\u8a9e\u9593\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u69cb\u6587\u89e3\u6790\u6728\u3068\u540c\u7b49\u306e\u8868\u73fe\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u5831\u544a\u3055\u308c\u3066\u3044\u308b[@2019HewittManning_structural]\u3002 BERT \u306b\u3088\u308b\u69cb\u6587\u89e3\u6790\u6728\u3092\u518d\u73fe\u3059\u308b\u5c04\u5f71\u7a7a\u9593 From https://github.com/john-hewitt/structural-probes word2vec \u306b\u304a\u3044\u3066\u5358\u8a9e\u9593\u306e\u8ddd\u96e2\u306f\u5185\u7a4d\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002 \u3053\u306e\u3053\u3068\u304b\u3089\uff0c\u6587\u7ae0\u3092\u69cb\u6210\u3059\u308b\u5358\u8a9e\u3067\u5f35\u3089\u308c\u308b\u7dda\u5f62\u5185\u7a4d\u7a7a\u9593\u5185\u306e\u8ddd\u96e2\u304c\u69cb\u6587\u89e3\u6790\u6728\u3092\u4e0e\u3048\u308b\u3068\u898b\u306a\u3059\u3053\u3068\u306f\u4e0d\u81ea\u7136\u3067\u306f\u306a\u3044\u3068\u4e88\u60f3\u3067\u304d\u307e\u3059\u3002 \u305d\u3053\u3067\u69cb\u6587\u89e3\u6790\u6728\u3092\u518d\u73fe\u3059\u308b\u3088\u3046\u306a\u5c04\u5f71\u5909\u63db\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308c\u3070 BERT \u3092\u7528\u3044\u3066\u69cb\u6587\u89e3\u6790\u304c\u53ef\u80fd\u3068\u306a\u308b\u3067\u3057\u3087\u3046\u3002 \u4f8b\u3048\u3070\u4e0a\u56f3\u306b\u304a\u3051\u308b chef \u3068 store \u3068 was \u306e\u8ddd\u96e2\u3092\u89e3\u6790\u6728\u3092\u53cd\u6620\u3059\u308b\u3088\u3046\u306a\u7a7a\u9593\u3092\u898b\u3064\u3051\u51fa\u3059\u3053\u3068\u306b\u76f8\u5f53\u3057\u307e\u3059 \u5177\u4f53\u7684\u306b\u306f\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u64cd\u4f5c\u3092\u3057\u3066\u3044\u307e\u3059: \u6587\u7ae0\u306b\u73fe\u308c\u308b\u5168\u30c8\u30fc\u30af\u30f3\u3092\u8868\u3059\u30d9\u30af\u30c8\u30eb\u3092 BERT \u3088\u308a\u6c42\u3081\u308b\u3002 \u3059\u306a\u308f\u3061 BERT \u5168\u4e2d\u9593\u5c64\u30e6\u30cb\u30c3\u30c8\u6d3b\u6027\u5024\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u5168\u3066\u306e\u5024\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u30d9\u30af\u30c8\u30eb\u7fa4 2 \u306e\u30d9\u30af\u30c8\u30eb\u304c\u5f35\u308b\u90e8\u5206\u7a7a\u9593\u306b\u5168\u30c8\u30fc\u30af\u30f3\u3092\u5c04\u5f71\u3059\u308b\u3002 3 \u306e\u90e8\u5206\u7a7a\u9593\u5185\u3067\u30c8\u30fc\u30af\u30f3\u9593\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u308b\u3002 \u5404\u30c8\u30fc\u30af\u30f3\u3092\u77ed\u3044\u9806\u306b\u30b0\u30e9\u30d5\u3067\u7d50\u3076","title":"BERT: \u57cb\u3081\u8fbc\u307f\u30e2\u30c7\u30eb\u306b\u3088\u308b\u69cb\u6587\u89e3\u6790"},{"location":"lect08/#bert_12","text":"BERT \u5b9f\u88c5\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u305f\u3002 \u73fe\u5728\u914d\u5e03\u3055\u308c\u3066\u3044\u308b BERT-base \u3042\u308b\u3044\u306f\u6027\u80fd\u304c\u826f\u3044 BERT-large \u306f\u5404\u5c64\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u3068\u5168\u4f53\u306e\u5c64\u6570\u3067\u3042\u308b\u3002 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u914d\u5e03\u5148\u306f https://github.com/google-research/bert \u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u8ad6\u6587\u306f https://arxiv.org/abs/1810.04805 \u30c7\u30fc\u30bf: Wikipedia (2.5B words) + BookCorpus (800M words) \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba: 131,072 words (1024 sequences \\times 128 length or 256 sequences \\times 512 length) \u8a13\u7df4\u30b9\u30c6\u30c3\u30d7: 1M steps (40 epochs) \u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0: AdamW, 1e-4 learning rate, linear decay BERT-Base: 12 \u5c64, \u5404\u5c64 768 \u30cb\u30e5\u30fc\u30ed\u30f3, 12 \u591a\u982d\u6ce8\u610f BERT-Large: 24 \u5c64, \u5404\u5c64 1024 \u30cb\u30e5\u30fc\u30ed\u30f3, 16 \u591a\u982d\u6ce8\u610f \u8a13\u7df4\u6642\u9593: 4x4 / 8x8 \u306e TPU \u3067 4 \u65e5\u9593","title":"BERT \u5b9f\u88c5"},{"location":"lect08/#lstm","text":"\u5de6: LSTM (\u6d45\u5ddd, 2015) \u3088\u308a\uff0c\u53f3: \u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc[@2017Vaswani_transformer] \u5165\u529b\u30b2\u30fc\u30c8\u3068\u5165\u529b \u306f Q, K \u3068\u540c\u4e00\u8996\uff0c\u51fa\u529b\u30b2\u30fc\u30c8\u3068 V \u3068\u306f\u540c\u4e00\u8996\u53ef\u80fd\uff1f","title":"LSTM \u3068\u306e\u7570\u540c"},{"location":"lect08/#relationship-between-self-attention-and-convolution","text":"From [@2020cordonnier_attention_and_convolution]","title":"Relationship between self-attention and convolution"},{"location":"lect08/#_8","text":"MHSA \u306f \u7573\u307f\u8fbc\u307f \u3068\u540c\u7b49\u306e\u80fd\u529b\u304c\u3042\u308a\u305d\u3046\u3067\u3042\u308b\u3002 Reformer \u306b\u898b\u3089\u308c\u308b\u3088\u3046\u306b position encodings \u3092\u5de5\u592b\u3059\u308b\u4f59\u5730\u306f\u6b8b\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u601d\u308f\u308c\u308b\u3002","title":"\u307e\u3068\u3081"},{"location":"lect09/","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA) \u00b6 Shin Aasakawa , all rights reserved. Date: 03/Jul/2020 Appache 2.0 license \u7b2c 09 \u56de \u81ea\u52d5\u7ffb\u8a33, \u6587\u7ae0\u8981\u7d04, \u8ee2\u79fb\u5b66\u7fd2, \u30de\u30eb\u30c1\u30e2\u30fc\u30c0\u30eb\u5b66\u7fd2, \u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd2 \u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd2\uff0c\u8ee2\u79fb\u5b66\u7fd2 \u00b6 \u5b66\u7fd2\u3057\u305f\u3053\u3068\u304c\u3089\u3092\u5fdc\u7528\u3059\u308b\u3053\u3068\u306f\u8ce2\u3055\u306e\u5c3a\u5ea6\u3067\u3057\u3087\u3046 \u305f\u3068\u3048\u3070\uff0c\u6620\u753b \u30ab\u30e9\u30c6\u30ad\u30c3\u30c9 (1984)\u3067\u306f\uff0c\u30df\u30e4\u30ae\u5148\u751f\u306f\u30c0\u30cb\u30a8\u30eb\u3055\u3093\u306b\u8eca\u306e\u30ef\u30c3\u30af\u30b9\u304c\u3051\u3084\u5e8a\u6383\u9664\u3092\u6559\u3048\u307e\u3057\u305f :-) \u30ef\u30c3\u30af\u30b9\u304c\u3051\u3084\u5e8a\u78e8\u304d\u306f\u7a7a\u624b\u306e\u6280\u8853\u7fd2\u5f97\u306b\u3068\u3063\u3066\u5fc5\u8981\u306a\u6280\u80fd\u3067\u3042\u3063\u305f\u3068\u3044\u3046\u30aa\u30c1\u3067\u3059\u3002 \u5b9f\u7fd2\u30d5\u30a1\u30a4\u30eb \u00b6 \u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd22 \u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd23 \u753b\u50cf\u811a\u6ce8\u4ed8\u3051 \u985e\u7fa9\u8a9e \u985e\u7fa9\u753b\u50cf \u6587\u7ae0\u304b\u3089\u306e\u753b\u50cf\u691c\u7d22 __\u72ac__\u3092\u691c\u7d22 \u7b11\u9854\u306e\u5c11\u5e74 \u3092\u691c\u7d22 \u30de\u30fc\u30ac\u30ec\u30c3\u30c8 \u30df\u30c3\u30c1\u30a7\u30eb\u306b\u3088\u308b\u30bd\u30fc\u30b7\u30e3\u30eb\u30e1\u30c7\u30a3\u30a2\u3092\u7528\u3044\u305f\u30e1\u30f3\u30bf\u30eb\u30d8\u30eb\u30b9\u306e\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd2 arXiv \u8ad6\u6587 One neural network, many uses \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9 An Overview of Multi-Task Learning in Deep Neural Networks \u4e0a\u306e arXiv Hard parameter sharing \u00b6 \u5de6:\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd2, \u53f3:\u8ee2\u79fb\u5b66\u7fd2, \u3044\u305a\u308c\u3082 Sebastuan Ruder \u306e\u30d6\u30ed\u30b0\u3088\u308a Soft parameter sharing \u00b6 In soft parameter sharing on the other hand, each task has its own model with its own parameters. The distance between the parameters of the model is then regularized in order to encourage the parameters to be similar. [8] for instance use the l2 norm for regularization, while [9] use the trace norm. [8]: Duong, L., Cohn, T., Bird, S., & Cook, P. (2015). Low Resource Dependency Parsing: Cross-lingual Parameter Sharing in a Neural Network Parser. Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing (Short Papers), 845\u2013850. [9]: Yang, Y., & Hospedales, T. M. (2017). Trace Norm Regularised Deep Multi-Task Learning. In Workshop track - ICLR 2017. Retrieved from http://arxiv.org/abs/1606.04038 Recent work on MTL for Deep Learning \u00b6 Deep Relationship Networks \u00b6 A Deep Relationship Network with shared convolutional and task-specific fully connected layers with matrix priors (Long and Wang, 2015). Long, M., & Wang, J. (2015). Learning Multiple Tasks with Deep Relationship Networks. arXiv Preprint arXiv:1506.02117. Retrieved from http://arxiv.org/abs/1506.02117 \u21a9\ufe0e Fully-Adaptive Feature Sharing \u00b6 The widening procedure for fully-adaptive feature sharing (Lu et al., 2016). Lu, Y., Kumar, A., Zhai, S., Cheng, Y., Javidi, T., & Feris, R. (2016). Fully-adaptive Feature Sharing in Multi-Task Networks with Applications in Person Attribute Classification. Retrieved from http://arxiv.org/abs/1611.05377 Cross-stitch Networks \u00b6 Cross-stitch networks for two tasks (Misra et al., 2016). Misra, I., Shrivastava, A., Gupta, A., & Hebert, M. (2016). Cross-stitch Networks for Multi-task Learning. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. https://doi.org/10.1109/CVPR.2016.433 A Joint Many-Task Model \u00b6 A Joint Many-Task Model (Hashimoto et al., 2016). Weighting losses with uncertainty \u00b6 Uncertainty-based loss function weighting for multi-task learning (Kendall et al., 2017). Kendall, A., Gal, Y., & Cipolla, R. (2017). Multi-Task Learning Using Uncertainty to Weigh Losses for Scene Geometry and Semantics. Retrieved from http://arxiv.org/abs/1705.07115 Sluice Networks \u00b6 A sluice network for two tasks (Ruder et al., 2017). Ruder, S., Bingel, J., Augenstein, I., & S\u00f8gaard, A. (2017). Sluice networks: Learning what to share between loosely related tasks. Retrieved from http://arxiv.org/abs/1705.08142","title":"\u7b2c 9 \u56de 07\u6708 03 \u65e5"},{"location":"lect09/#iiia","text":"Shin Aasakawa , all rights reserved. Date: 03/Jul/2020 Appache 2.0 license \u7b2c 09 \u56de \u81ea\u52d5\u7ffb\u8a33, \u6587\u7ae0\u8981\u7d04, \u8ee2\u79fb\u5b66\u7fd2, \u30de\u30eb\u30c1\u30e2\u30fc\u30c0\u30eb\u5b66\u7fd2, \u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd2","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA)"},{"location":"lect09/#_1","text":"\u5b66\u7fd2\u3057\u305f\u3053\u3068\u304c\u3089\u3092\u5fdc\u7528\u3059\u308b\u3053\u3068\u306f\u8ce2\u3055\u306e\u5c3a\u5ea6\u3067\u3057\u3087\u3046 \u305f\u3068\u3048\u3070\uff0c\u6620\u753b \u30ab\u30e9\u30c6\u30ad\u30c3\u30c9 (1984)\u3067\u306f\uff0c\u30df\u30e4\u30ae\u5148\u751f\u306f\u30c0\u30cb\u30a8\u30eb\u3055\u3093\u306b\u8eca\u306e\u30ef\u30c3\u30af\u30b9\u304c\u3051\u3084\u5e8a\u6383\u9664\u3092\u6559\u3048\u307e\u3057\u305f :-) \u30ef\u30c3\u30af\u30b9\u304c\u3051\u3084\u5e8a\u78e8\u304d\u306f\u7a7a\u624b\u306e\u6280\u8853\u7fd2\u5f97\u306b\u3068\u3063\u3066\u5fc5\u8981\u306a\u6280\u80fd\u3067\u3042\u3063\u305f\u3068\u3044\u3046\u30aa\u30c1\u3067\u3059\u3002","title":"\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd2\uff0c\u8ee2\u79fb\u5b66\u7fd2"},{"location":"lect09/#_2","text":"\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd22 \u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd23 \u753b\u50cf\u811a\u6ce8\u4ed8\u3051 \u985e\u7fa9\u8a9e \u985e\u7fa9\u753b\u50cf \u6587\u7ae0\u304b\u3089\u306e\u753b\u50cf\u691c\u7d22 __\u72ac__\u3092\u691c\u7d22 \u7b11\u9854\u306e\u5c11\u5e74 \u3092\u691c\u7d22 \u30de\u30fc\u30ac\u30ec\u30c3\u30c8 \u30df\u30c3\u30c1\u30a7\u30eb\u306b\u3088\u308b\u30bd\u30fc\u30b7\u30e3\u30eb\u30e1\u30c7\u30a3\u30a2\u3092\u7528\u3044\u305f\u30e1\u30f3\u30bf\u30eb\u30d8\u30eb\u30b9\u306e\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd2 arXiv \u8ad6\u6587 One neural network, many uses \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9 An Overview of Multi-Task Learning in Deep Neural Networks \u4e0a\u306e arXiv","title":"\u5b9f\u7fd2\u30d5\u30a1\u30a4\u30eb"},{"location":"lect09/#hard-parameter-sharing","text":"\u5de6:\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd2, \u53f3:\u8ee2\u79fb\u5b66\u7fd2, \u3044\u305a\u308c\u3082 Sebastuan Ruder \u306e\u30d6\u30ed\u30b0\u3088\u308a","title":"Hard parameter sharing"},{"location":"lect09/#soft-parameter-sharing","text":"In soft parameter sharing on the other hand, each task has its own model with its own parameters. The distance between the parameters of the model is then regularized in order to encourage the parameters to be similar. [8] for instance use the l2 norm for regularization, while [9] use the trace norm. [8]: Duong, L., Cohn, T., Bird, S., & Cook, P. (2015). Low Resource Dependency Parsing: Cross-lingual Parameter Sharing in a Neural Network Parser. Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing (Short Papers), 845\u2013850. [9]: Yang, Y., & Hospedales, T. M. (2017). Trace Norm Regularised Deep Multi-Task Learning. In Workshop track - ICLR 2017. Retrieved from http://arxiv.org/abs/1606.04038","title":"Soft parameter sharing"},{"location":"lect09/#recent-work-on-mtl-for-deep-learning","text":"","title":"Recent work on MTL for Deep Learning"},{"location":"lect09/#deep-relationship-networks","text":"A Deep Relationship Network with shared convolutional and task-specific fully connected layers with matrix priors (Long and Wang, 2015). Long, M., & Wang, J. (2015). Learning Multiple Tasks with Deep Relationship Networks. arXiv Preprint arXiv:1506.02117. Retrieved from http://arxiv.org/abs/1506.02117 \u21a9\ufe0e","title":"Deep Relationship Networks"},{"location":"lect09/#fully-adaptive-feature-sharing","text":"The widening procedure for fully-adaptive feature sharing (Lu et al., 2016). Lu, Y., Kumar, A., Zhai, S., Cheng, Y., Javidi, T., & Feris, R. (2016). Fully-adaptive Feature Sharing in Multi-Task Networks with Applications in Person Attribute Classification. Retrieved from http://arxiv.org/abs/1611.05377","title":"Fully-Adaptive Feature Sharing"},{"location":"lect09/#cross-stitch-networks","text":"Cross-stitch networks for two tasks (Misra et al., 2016). Misra, I., Shrivastava, A., Gupta, A., & Hebert, M. (2016). Cross-stitch Networks for Multi-task Learning. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. https://doi.org/10.1109/CVPR.2016.433","title":"Cross-stitch Networks"},{"location":"lect09/#a-joint-many-task-model","text":"A Joint Many-Task Model (Hashimoto et al., 2016).","title":"A Joint Many-Task Model"},{"location":"lect09/#weighting-losses-with-uncertainty","text":"Uncertainty-based loss function weighting for multi-task learning (Kendall et al., 2017). Kendall, A., Gal, Y., & Cipolla, R. (2017). Multi-Task Learning Using Uncertainty to Weigh Losses for Scene Geometry and Semantics. Retrieved from http://arxiv.org/abs/1705.07115","title":"Weighting losses with uncertainty"},{"location":"lect09/#sluice-networks","text":"A sluice network for two tasks (Ruder et al., 2017). Ruder, S., Bingel, J., Augenstein, I., & S\u00f8gaard, A. (2017). Sluice networks: Learning what to share between loosely related tasks. Retrieved from http://arxiv.org/abs/1705.08142","title":"Sluice Networks"},{"location":"lect10/","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA) \u00b6 Shin Aasakawa , all rights reserved. Date: 10/Jul/2020 Appache 2.0 license \u7b2c 10 \u56de \u5f37\u5316\u5b66\u7fd2, \u4e88\u6e2c\u5831\u916c\u8aa4\u5dee, \u30b2\u30fc\u30e0AI, \u7d4c\u6e08\u5b66 \u00b6 AlphaGo \u306e\u6a21\u5f0f\u56f3\uff0c\u539f\u8457\u8ad6\u6587\u3088\u308a AlphaGoZero \u306e\u30bb\u30eb\u30d5\u30d7\u30ec\u30a4\uff0c\u539f\u8457\u8ad6\u6587\u3088\u308a \u5b9f\u7fd2\u30d5\u30a1\u30a4\u30eb \u00b6 \u30e9\u30f3\u30c0\u30e0\u63a2\u7d22 \u65b9\u7b56\u52fe\u914d\u6cd5 SARSA Q\u5b66\u7fd2 REINFORCE.js \u4ee5\u4e0b\u306e\u30c7\u30e2\u306f\uff0c OpenAI \u63d0\u4f9b\u306e\u5f37\u5316\u5b66\u7fd2\u74b0\u5883 gym \u3092\u7528\u3044\u3066\u3044\u307e\u3059\u3002 \u5012\u7acb\u632f\u5b50 (cartpole) Colaboratory \u4e0a\u3067 gym \u3092 \u52d5\u4f5c\u3055\u305b\u308b\u305f\u3081\u306b\u306f StarAI \u306e\u958b\u767a\u3057\u305f\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u74b0\u5883 \u304c\u5fc5\u8981\u3067\u3059\u3002 \u5f37\u5316\u5b66\u7fd2\uff0c\u6761\u4ef6\u4ed8\u3051\u306e\u53e4\u5178 \u00b6 \u30d1\u30d6\u30ed\u30d5 (Ivan Petrovich Pavlov; 1849/Sep/14-1936/Feb/27)\u53e4\u5178\u7684\u6761\u4ef6\u3065\u3051 1904 \u5e74\u30ce\u30fc\u30d9\u30eb\u533b\u5b66\u751f\u7406\u5b66\u8cde \u30b9\u30ad\u30ca\u30fc (Burrhus Frederic Skinner; 1904/Mar/20-1990/Aug/18) \u9053\u5177\u7684\u6761\u4ef6\u4ed8\u3051\uff0c \u30aa\u30da\u30e9\u30f3\u30c8\u6761\u4ef6\u3065\u3051\uff0c \u30b9\u30ad\u30ca\u30fc\u7bb1, Skinner(1938) Fig.1, page 39 \u3088\u308a Sutton and Barto \u306e\u5f37\u5316\u5b66\u7fd2 \u521d\u7248 1998\u5e74 , \u7b2c2\u7248 2018\u5e74 , \u521d\u7248\u306f\u7ffb\u8a33\u3042\u308a \uff0c\u7b2c2\u7248\u306f pdf \u30d5\u30a1\u30a4\u30eb\u3067 \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u53ef\u80fd Ian Pavlov Burrhus Frederic Skinner Richard S. Sutton, Andrew G. Barto \u5f37\u5316\u5b66\u7fd2\u3068\u306f\u4f55\u304b\uff1f \u00b6 Sutton & Barto (2018) Fig. 3.2 \u3092\u6539\u5909 \u5f37\u5316\u5b66\u7fd2\u3068\u3044\u3046\u8a00\u8449\u306f\u53e4\u3044\u8a00\u8449\u3067\u3059\u304c\u6a5f\u68b0\u5b66\u7fd2\u306e\u6587\u8108\u3067\u306f\uff0c \u74b0\u5883\u3068\u305d\u306e\u74b0\u5883\u306b\u304a\u304b\u308c\u305f\u52d5\u4f5c\u4e3b\uff08\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3068\u8a00\u3063\u305f\u308a\uff0c\u30ed\u30dc\u30c3\u30c8\u30b7\u30b9\u30c6\u30e0\u3060\u3063\u305f\u308a\u3057\u307e\u3059\uff09\u304c\uff0c \u74b0\u5883\u3068\u76f8\u4e92\u4f5c\u7528\u3057\u306a\u304c\u3089\u3088\u308a\u826f\u3044\u884c\u52d5\u3092\u5f62\u6210\u3059\u308b\u305f\u3081\u306e\u30e2\u30c7\u30eb\u3067\u3059\u3002 \u52d5\u4f5c\u4e3b\u306f\uff0c\u74b0\u5883\u304b\u3089\u53d7\u3051\u53d6\u3063\u305f\u73fe\u5728\u306e\u72b6\u614b\u3092\u5206\u6790\u3057\u3066\uff0c \u6b21\u306b\u3068\u308b\u3079\u304d\u884c\u52d5\u3092\u9078\u629e\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u5c06\u6765\u306b\u6e21\u3063\u3066\u5831\u916c\u304c\u6700\u5927\u3068\u306a\u308b\u3088\u3046\u306a\u884c\u52d5\u3092\u5b66\u7fd2\u3059\u308b\u624b\u6cd5\u306e\u4e00\u3064\u3067\u3059\u3002 2015 \u5e74\u306b\u306f\uff0cGoogle\u5098\u4e0b\u306e\u30c7\u30fc\u30d7\u30de\u30a4\u30f3\u30c9\u3068\u3044\u3046\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u30c1\u30fc\u30e0\u304c\u958b\u767a\u3057\u305f\u56f2\u7881\u30d7\u30ed\u30b0\u30e9\u30e0AlphaGo\u304c\u30d7\u30ed\u68cb\u58eb\u306e\u30a4\u30fb\u30bb\u30c9\u30eb\u6c0f\u306b\u52dd\u5229\u3057\u8a71\u984c\u306b\u306a\u308a\u307e\u3057\u305f\u3002 AlphaGo \u306f\u5f37\u5316\u5b66\u7fd2\u3092\u57fa\u672c\u6280\u8853\u306e\u4e00\u3064\u3068\u3057\u3066\u7528\u3044\u3066\u3044\u307e\u3059\u3002 \u5f37\u5316\u5b66\u7fd2(1): \u57fa\u790e \u5f37\u5316\u5b66\u7fd2(2): \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3068\u74b0\u5883 \u5f37\u5316\u5b66\u7fd2(3): \u76ee\u6a19\u3068\u5831\u916c \u5f37\u5316\u5b66\u7fd2(4): \u30de\u30eb\u30b3\u30d5\u6c7a\u5b9a\u904e\u7a0b \u5f37\u5316\u5b66\u7fd2(5): \u4fa1\u5024\u53cd\u5fa9\uff0c\u65b9\u7b56\u53cd\u5fa9 \u5f37\u5316\u5b66\u7fd2(6): \u5f37\u5316\u5b66\u7fd2(7): \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3068\u74b0\u5883\uff0c\u30de\u30eb\u30b3\u30d5\u6c7a\u5b9a\u904e\u7a0b MDP\uff0cPOMDP\uff0c\u52b9\u7528\u95a2\u6570\uff0c\u30d9\u30eb\u30de\u30f3\u65b9\u7a0b\u5f0f\uff0c\u63a2\u7d22\u3068\u5229\u7528\u306e\u30b8\u30ec\u30f3\u30de\uff0cSARSA: \u4fa1\u5024\uff0c\u65b9\u7b56\uff0cQ \u5b66\u7fd2\uff0c\u30e2\u30c7\u30eb\u30d9\u30fc\u30b9\u5bfe\u30e2\u30c7\u30eb\u30d5\u30ea\u30fc\uff0c\u30a2\u30af\u30bf\u30fc=\u30af\u30ea\u30c6\u30a3\u30c3\u30af: \u6df1\u5c64 Q \u5b66\u7fd2: \u30b2\u30fc\u30e0 AI \u3078 (AlphaGo\uff0cAlphaGoZero\uff0cOpenAI five): \u30bb\u30eb\u30d5\u30d7\u30ec\u30a4: \u6700\u8fd1\u306e\u767a\u5c55 A3C\uff0cRainbow\uff0cRDT\uff0cWorld model: \u8907\u96d1\u306a\u72b6\u6cc1\u3092\u3069\u3046\u7406\u89e3\u3057\u3066\u89e3\u6c7a\u3059\u308b\u306e\u304b\uff1f \u00b6 \u5f37\u5316\u5b66\u7fd2\u3068\u3044\u3046\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u304c\u3042\u308b\u308f\u3051\u3067\u306f\u306a\u3044 \u52d5\u7684\u3067\u8907\u96d1\u306a\u74b0\u5883\u306b\u5bfe\u51e6 \\rightarrow \u5f37\u5316\u5b66\u7fd2 + DL \\rightarrow \u4e00\u822c\u4eba\u5de5\u77e5\u80fd\u3078\u306e\u790e DQN ATARI\u306e\u30d3\u30c7\u30aa\u30b2\u30fc\u30e0, https://www.nature.com/articles/nature14236 AlphaGo \u56f2\u7881, https://www.nature.com/articles/nature16961 AlphaGoZero \u56f2\u7881, https://www.nature.com/articles/nature24270 Deep Q Network \u00b6 DQN\u306e\u6a21\u5f0f\u56f3, \u539f\u8457\u8ad6\u6587\u3088\u308a Q \u5b66\u7fd2 Q learning \u306b DNN \u3092\u63a1\u7528 CNN \u304c LeNet, @1998LeCun \u305d\u3046\u3067\u3042\u3063\u305f\u3088\u3046\u306b\uff0c\u5f37\u5316\u5b66\u7fd2 RL \u3082\u6614\u304b\u3089\u306e\u6280\u8853 @Sutton_and_Barto1998 \u3067\u306f\u306a\u305c\uff0c\u4eca\u306b\u306a\u3063\u3066\u56f2\u7881\u3084\u81ea\u52d5\u904b\u8ee2\u306b\u5fdc\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u304b\uff1f \\Rightarrow \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u80fd\u529b, \u30c7\u30fc\u30bf\u898f\u6a21\uff0c\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6539\u826f, \u30a8\u30b3\u30b7\u30b9\u30c6\u30e0(ArXiv, Linux, Git, ROS, AMT, TensorFlow) YouTube \u4e0a\u3067\u306e\u30c7\u30e2\u52d5\u753b \u00b6 \u30d6\u30ed\u30c3\u30af\u5d29\u3057: https://www.youtube.com/watch?v=V1eYniJ0Rnk \u30b9\u30da\u30fc\u30b9\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc: https://www.youtube.com/watch?v=W2CAghUiofY DQN \u306e\u52d5\u753b \u30b9\u30da\u30fc\u30b9\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc DQN \u306e\u52d5\u753b \u30d6\u30ed\u30c3\u30af\u5d29\u3057 DQN \u7d50\u679c \u00b6 \u4eba\u9593\u306b\u306f\u3067\u304d\u3066\u5f37\u5316\u5b66\u7fd2\u306b\u306f\u96e3\u3057\u3044\u3053\u3068 \u00b6 Montenzuma's Revenge \u306e\u52d5\u753b https://www.youtube.com/watch?v=Klxxg9JM5tY Private Eys \u306e\u52d5\u753b https://www.youtube.com/watch?v=OfyS-Wj1M78 \u3059\u3067\u306b\u7d50\u679c\u304c\u53e4\u3044\u306e\u3067\u3059\u304c Rainbow \u306e\u6027\u80fd \u3059\u3067\u306b\u7d50\u679c\u304c\u53e4\u3044\u306e\u3067\u3059\u304c Rainbow \u306e\u6027\u80fd \u30ab\u30eb\u30d1\u30b7\u30fc\u306e\u30d6\u30ed\u30b0 http://karpathy.github.io/2016/05/31/rl/","title":"\u7b2c 10 \u56de 07\u6708 17 \u65e5"},{"location":"lect10/#iiia","text":"Shin Aasakawa , all rights reserved. Date: 10/Jul/2020 Appache 2.0 license","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA)"},{"location":"lect10/#10-ai","text":"AlphaGo \u306e\u6a21\u5f0f\u56f3\uff0c\u539f\u8457\u8ad6\u6587\u3088\u308a AlphaGoZero \u306e\u30bb\u30eb\u30d5\u30d7\u30ec\u30a4\uff0c\u539f\u8457\u8ad6\u6587\u3088\u308a","title":"\u7b2c 10 \u56de \u5f37\u5316\u5b66\u7fd2, \u4e88\u6e2c\u5831\u916c\u8aa4\u5dee, \u30b2\u30fc\u30e0AI, \u7d4c\u6e08\u5b66"},{"location":"lect10/#_1","text":"\u30e9\u30f3\u30c0\u30e0\u63a2\u7d22 \u65b9\u7b56\u52fe\u914d\u6cd5 SARSA Q\u5b66\u7fd2 REINFORCE.js \u4ee5\u4e0b\u306e\u30c7\u30e2\u306f\uff0c OpenAI \u63d0\u4f9b\u306e\u5f37\u5316\u5b66\u7fd2\u74b0\u5883 gym \u3092\u7528\u3044\u3066\u3044\u307e\u3059\u3002 \u5012\u7acb\u632f\u5b50 (cartpole) Colaboratory \u4e0a\u3067 gym \u3092 \u52d5\u4f5c\u3055\u305b\u308b\u305f\u3081\u306b\u306f StarAI \u306e\u958b\u767a\u3057\u305f\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u74b0\u5883 \u304c\u5fc5\u8981\u3067\u3059\u3002","title":"\u5b9f\u7fd2\u30d5\u30a1\u30a4\u30eb"},{"location":"lect10/#_2","text":"\u30d1\u30d6\u30ed\u30d5 (Ivan Petrovich Pavlov; 1849/Sep/14-1936/Feb/27)\u53e4\u5178\u7684\u6761\u4ef6\u3065\u3051 1904 \u5e74\u30ce\u30fc\u30d9\u30eb\u533b\u5b66\u751f\u7406\u5b66\u8cde \u30b9\u30ad\u30ca\u30fc (Burrhus Frederic Skinner; 1904/Mar/20-1990/Aug/18) \u9053\u5177\u7684\u6761\u4ef6\u4ed8\u3051\uff0c \u30aa\u30da\u30e9\u30f3\u30c8\u6761\u4ef6\u3065\u3051\uff0c \u30b9\u30ad\u30ca\u30fc\u7bb1, Skinner(1938) Fig.1, page 39 \u3088\u308a Sutton and Barto \u306e\u5f37\u5316\u5b66\u7fd2 \u521d\u7248 1998\u5e74 , \u7b2c2\u7248 2018\u5e74 , \u521d\u7248\u306f\u7ffb\u8a33\u3042\u308a \uff0c\u7b2c2\u7248\u306f pdf \u30d5\u30a1\u30a4\u30eb\u3067 \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u53ef\u80fd Ian Pavlov Burrhus Frederic Skinner Richard S. Sutton, Andrew G. Barto","title":"\u5f37\u5316\u5b66\u7fd2\uff0c\u6761\u4ef6\u4ed8\u3051\u306e\u53e4\u5178"},{"location":"lect10/#_3","text":"Sutton & Barto (2018) Fig. 3.2 \u3092\u6539\u5909 \u5f37\u5316\u5b66\u7fd2\u3068\u3044\u3046\u8a00\u8449\u306f\u53e4\u3044\u8a00\u8449\u3067\u3059\u304c\u6a5f\u68b0\u5b66\u7fd2\u306e\u6587\u8108\u3067\u306f\uff0c \u74b0\u5883\u3068\u305d\u306e\u74b0\u5883\u306b\u304a\u304b\u308c\u305f\u52d5\u4f5c\u4e3b\uff08\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3068\u8a00\u3063\u305f\u308a\uff0c\u30ed\u30dc\u30c3\u30c8\u30b7\u30b9\u30c6\u30e0\u3060\u3063\u305f\u308a\u3057\u307e\u3059\uff09\u304c\uff0c \u74b0\u5883\u3068\u76f8\u4e92\u4f5c\u7528\u3057\u306a\u304c\u3089\u3088\u308a\u826f\u3044\u884c\u52d5\u3092\u5f62\u6210\u3059\u308b\u305f\u3081\u306e\u30e2\u30c7\u30eb\u3067\u3059\u3002 \u52d5\u4f5c\u4e3b\u306f\uff0c\u74b0\u5883\u304b\u3089\u53d7\u3051\u53d6\u3063\u305f\u73fe\u5728\u306e\u72b6\u614b\u3092\u5206\u6790\u3057\u3066\uff0c \u6b21\u306b\u3068\u308b\u3079\u304d\u884c\u52d5\u3092\u9078\u629e\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u5c06\u6765\u306b\u6e21\u3063\u3066\u5831\u916c\u304c\u6700\u5927\u3068\u306a\u308b\u3088\u3046\u306a\u884c\u52d5\u3092\u5b66\u7fd2\u3059\u308b\u624b\u6cd5\u306e\u4e00\u3064\u3067\u3059\u3002 2015 \u5e74\u306b\u306f\uff0cGoogle\u5098\u4e0b\u306e\u30c7\u30fc\u30d7\u30de\u30a4\u30f3\u30c9\u3068\u3044\u3046\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u30c1\u30fc\u30e0\u304c\u958b\u767a\u3057\u305f\u56f2\u7881\u30d7\u30ed\u30b0\u30e9\u30e0AlphaGo\u304c\u30d7\u30ed\u68cb\u58eb\u306e\u30a4\u30fb\u30bb\u30c9\u30eb\u6c0f\u306b\u52dd\u5229\u3057\u8a71\u984c\u306b\u306a\u308a\u307e\u3057\u305f\u3002 AlphaGo \u306f\u5f37\u5316\u5b66\u7fd2\u3092\u57fa\u672c\u6280\u8853\u306e\u4e00\u3064\u3068\u3057\u3066\u7528\u3044\u3066\u3044\u307e\u3059\u3002 \u5f37\u5316\u5b66\u7fd2(1): \u57fa\u790e \u5f37\u5316\u5b66\u7fd2(2): \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3068\u74b0\u5883 \u5f37\u5316\u5b66\u7fd2(3): \u76ee\u6a19\u3068\u5831\u916c \u5f37\u5316\u5b66\u7fd2(4): \u30de\u30eb\u30b3\u30d5\u6c7a\u5b9a\u904e\u7a0b \u5f37\u5316\u5b66\u7fd2(5): \u4fa1\u5024\u53cd\u5fa9\uff0c\u65b9\u7b56\u53cd\u5fa9 \u5f37\u5316\u5b66\u7fd2(6): \u5f37\u5316\u5b66\u7fd2(7): \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3068\u74b0\u5883\uff0c\u30de\u30eb\u30b3\u30d5\u6c7a\u5b9a\u904e\u7a0b MDP\uff0cPOMDP\uff0c\u52b9\u7528\u95a2\u6570\uff0c\u30d9\u30eb\u30de\u30f3\u65b9\u7a0b\u5f0f\uff0c\u63a2\u7d22\u3068\u5229\u7528\u306e\u30b8\u30ec\u30f3\u30de\uff0cSARSA: \u4fa1\u5024\uff0c\u65b9\u7b56\uff0cQ \u5b66\u7fd2\uff0c\u30e2\u30c7\u30eb\u30d9\u30fc\u30b9\u5bfe\u30e2\u30c7\u30eb\u30d5\u30ea\u30fc\uff0c\u30a2\u30af\u30bf\u30fc=\u30af\u30ea\u30c6\u30a3\u30c3\u30af: \u6df1\u5c64 Q \u5b66\u7fd2: \u30b2\u30fc\u30e0 AI \u3078 (AlphaGo\uff0cAlphaGoZero\uff0cOpenAI five): \u30bb\u30eb\u30d5\u30d7\u30ec\u30a4: \u6700\u8fd1\u306e\u767a\u5c55 A3C\uff0cRainbow\uff0cRDT\uff0cWorld model:","title":"\u5f37\u5316\u5b66\u7fd2\u3068\u306f\u4f55\u304b\uff1f"},{"location":"lect10/#_4","text":"\u5f37\u5316\u5b66\u7fd2\u3068\u3044\u3046\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30e2\u30c7\u30eb\u304c\u3042\u308b\u308f\u3051\u3067\u306f\u306a\u3044 \u52d5\u7684\u3067\u8907\u96d1\u306a\u74b0\u5883\u306b\u5bfe\u51e6 \\rightarrow \u5f37\u5316\u5b66\u7fd2 + DL \\rightarrow \u4e00\u822c\u4eba\u5de5\u77e5\u80fd\u3078\u306e\u790e DQN ATARI\u306e\u30d3\u30c7\u30aa\u30b2\u30fc\u30e0, https://www.nature.com/articles/nature14236 AlphaGo \u56f2\u7881, https://www.nature.com/articles/nature16961 AlphaGoZero \u56f2\u7881, https://www.nature.com/articles/nature24270","title":"\u8907\u96d1\u306a\u72b6\u6cc1\u3092\u3069\u3046\u7406\u89e3\u3057\u3066\u89e3\u6c7a\u3059\u308b\u306e\u304b\uff1f"},{"location":"lect10/#deep-q-network","text":"DQN\u306e\u6a21\u5f0f\u56f3, \u539f\u8457\u8ad6\u6587\u3088\u308a Q \u5b66\u7fd2 Q learning \u306b DNN \u3092\u63a1\u7528 CNN \u304c LeNet, @1998LeCun \u305d\u3046\u3067\u3042\u3063\u305f\u3088\u3046\u306b\uff0c\u5f37\u5316\u5b66\u7fd2 RL \u3082\u6614\u304b\u3089\u306e\u6280\u8853 @Sutton_and_Barto1998 \u3067\u306f\u306a\u305c\uff0c\u4eca\u306b\u306a\u3063\u3066\u56f2\u7881\u3084\u81ea\u52d5\u904b\u8ee2\u306b\u5fdc\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u304b\uff1f \\Rightarrow \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u80fd\u529b, \u30c7\u30fc\u30bf\u898f\u6a21\uff0c\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6539\u826f, \u30a8\u30b3\u30b7\u30b9\u30c6\u30e0(ArXiv, Linux, Git, ROS, AMT, TensorFlow)","title":"Deep Q Network"},{"location":"lect10/#youtube","text":"\u30d6\u30ed\u30c3\u30af\u5d29\u3057: https://www.youtube.com/watch?v=V1eYniJ0Rnk \u30b9\u30da\u30fc\u30b9\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc: https://www.youtube.com/watch?v=W2CAghUiofY DQN \u306e\u52d5\u753b \u30b9\u30da\u30fc\u30b9\u30a4\u30f3\u30d9\u30fc\u30c0\u30fc DQN \u306e\u52d5\u753b \u30d6\u30ed\u30c3\u30af\u5d29\u3057","title":"YouTube \u4e0a\u3067\u306e\u30c7\u30e2\u52d5\u753b"},{"location":"lect10/#dqn","text":"","title":"DQN \u7d50\u679c"},{"location":"lect10/#_5","text":"Montenzuma's Revenge \u306e\u52d5\u753b https://www.youtube.com/watch?v=Klxxg9JM5tY Private Eys \u306e\u52d5\u753b https://www.youtube.com/watch?v=OfyS-Wj1M78 \u3059\u3067\u306b\u7d50\u679c\u304c\u53e4\u3044\u306e\u3067\u3059\u304c Rainbow \u306e\u6027\u80fd \u3059\u3067\u306b\u7d50\u679c\u304c\u53e4\u3044\u306e\u3067\u3059\u304c Rainbow \u306e\u6027\u80fd \u30ab\u30eb\u30d1\u30b7\u30fc\u306e\u30d6\u30ed\u30b0 http://karpathy.github.io/2016/05/31/rl/","title":"\u4eba\u9593\u306b\u306f\u3067\u304d\u3066\u5f37\u5316\u5b66\u7fd2\u306b\u306f\u96e3\u3057\u3044\u3053\u3068"},{"location":"lect11/","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA) \u00b6 Shin Aasakawa , all rights reserved. Date: 03/Jul/2020 Appache 2.0 license \u7b2c 11 \u56de \u753b\u50cf\u8a8d\u8b58\u3068\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3068\u306e\u878d\u5408, \u8cea\u7591\u5fdc\u7b54\u751f\u6210, \u6b21\u5143\u5727\u7e2e, \u4f5c\u52d5\u8a18\u61b6, \u624b\u7d9a\u304d\u8a18\u61b6","title":"\u7b2c 11 \u56de 07\u6708 24 \u65e5"},{"location":"lect11/#iiia","text":"Shin Aasakawa , all rights reserved. Date: 03/Jul/2020 Appache 2.0 license \u7b2c 11 \u56de \u753b\u50cf\u8a8d\u8b58\u3068\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3068\u306e\u878d\u5408, \u8cea\u7591\u5fdc\u7b54\u751f\u6210, \u6b21\u5143\u5727\u7e2e, \u4f5c\u52d5\u8a18\u61b6, \u624b\u7d9a\u304d\u8a18\u61b6","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA)"},{"location":"lect12/","text":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA) \u00b6 Shin Aasakawa , all rights reserved. Date: 24/Jun/2020 Appache 2.0 license \u5de5\u4e8b\u4e2d under construction \u7b2c 12 \u56de \u7cbe\u795e\u533b\u5b66(\u7d71\u5408\u5931\u8abf\u75c7, \u5f37\u8feb\u795e\u7d4c\u75c7, \u4f9d\u5b58\u75c7, \u5e7b\u899a\u5e7b\u8074), \u795e\u7d4c\u5fc3\u7406\u5b66(\u610f\u5473\u75f4\u5446, \u76f8\u8c8c\u5931\u8a8d, \u5931\u8a9e, \u5931\u884c) \u8b1d\u8f9e: \u6700\u5f8c\u307e\u3067\u6765\u3066\u304f\u3060\u3055\u3063\u305f\u7686\u69d8\u306b\u611f\u8b1d\u3044\u305f\u3057\u307e\u3059 \u53c2\u8003\u6587\u732e \u00b6 \u611f\u60c5\u3068\u306f\u305d\u3082\u305d\u3082\u4f55\u306a\u306e\u304b \uff0c\u4e7e \u654f\u90ce, \u30df\u30cd\u30eb\u30f4\u30a1\u66f8\u623f\uff0c2018 \u8a08\u7b97\u8ad6\u7684\u7cbe\u795e\u533b\u5b66 , \u56fd\u91cc\uff0c\u7247\u5e73\uff0c\u6c96\u6751\uff0c\u5c71\u4e0b, \u52c1\u8349\u66f8\u623f, 2019 \u6700\u7d42\u8a66\u9a13\u554f\u984c \u8cc7\u6599 \u00b6 \u771f\u306eAI\u3078\u306e\u9375\u3092\u63e1\u308b\u5929\u624d\u795e\u7d4c\u79d1\u5b66\u8005 YouTube (\u81ea\u7531\u30a8\u30cd\u30eb\u30ae\u30fc\u306e\u6700\u5c0f\u5316) = (\u4e88\u6e2c\u8aa4\u5dee\u3092\u6700\u5c0f\u5316\u3059\u308b\u3088\u3046\u306b\u4fe1\u5ff5\u3092\u66f8\u304d\u63db\u3048\u4e88\u6e2c\u3092\u6700\u9069\u5316)+(\u4e88\u6e2c\u8aa4\u5dee)\u3092\u6700\u5c0f\u5316\u3059\u308b\u3088\u3046\u306a\u884c\u52d5\u3092\u3068\u308b) (\u81ea\u7531\u30a8\u30cd\u30eb\u30ae\u30fc) = (\u5185\u90e8\u30a8\u30cd\u30eb\u30ae\u30fc)-(\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc) \u4e7e(2018, p. 134) \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u7269\u7406\u5b66\u30e1\u30bf\u30d5\u30a1\u30fc \u00b6 2019\u5e74\u5ea6\u99d2\u6fa4\u5927\u5b66\u6587\u5b66\u90e8\u958b\u8b1b\u79d1\u76ee\uff0c\u5fc3\u7406\u5b66\u7279\u8b1b IIIA \u306f\uff0c\u6587\u5316\uff0c\u601d\u60f3\uff0c\u306b\u95a2\u3059\u308b\u8b70\u8ad6\u3092\u3059\u308b\u79d1\u76ee\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u307e\u3057\u3066\u3084\uff0c\u6587\u58c7\uff0c\u8a00\u8ad6\u754c\uff0c\u306a\u3069\u306b\u5bfe\u3059\u308b\u3044\u304b\u306a\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3082\u542b\u3080\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 However, all of you must think about \u30bd\u30fc\u30ab\u30eb\u4e8b\u4ef6 , and \u77e5\u306e\u6b3a\u779e \u305f\u3060 \u9a19\u3055\u308c\u306a\u3044 \u3088\u3046\u306b\u3057\u305f\u3044\u3068\u9858\u3046\u3060\u3051\u3067\u3059\u3002 \u4e0a\u8a18\u306b\u5bfe\u3059\u308b\u7cbe\u4e00\u676f\u306e\u8a00\u3044\u8a33 \u00b6 \u6211\u3005\u306e\u8133\u306f\u6570\u591a\u306e\u795e\u7d4c\u7d30\u80de\u304b\u3089\u6210\u308a\u7acb\u3063\u3066\u3044\u308b\u3002\u5f93\u3063\u3066\uff0c\u6211\u3005\u306e\u601d\u60f3\uff0c\u884c\u52d5\uff0c\u8003\u3048\u65b9\uff0c\u4fe1\u5ff5\uff0c\u62bd\u8c61\u7684\u601d\u8003\uff0c\u306a\u3069\u306f\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u50cd\u304d\u306b\u790e\u3092\u7f6e\u304f\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u4e00\u65b9\uff0c\u30d6\u30e9\u30fc\u30a8\uff0c\u30b1\u30d7\u30e9\u30fc\uff0c\u30ac\u30ea\u30ec\u30a4\uff0c\u30cb\u30e5\u30fc\u30c8\u30f3\u3068\u7d9a\u304f\u53e4\u5178\u7269\u7406\u5b66\u306e\u8b5c\u7cfb\u3068\uff0c\u7269\u8cea\u304c\u5206\u5b50\uff0c\u539f\u5b50\uff0c\u7d20\u7c92\u5b50\u3067\u306a\u308a\u305f\u3063\u3066\u3044\u308b\u3068\u3044\u3046 \u30ad\u30c3\u30ba\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8\u3088\u308a https://www2.kek.jp/kids/class/particle/class01-02.html \u305f\u3068\u3048\u3070\uff0c\u30c0\u30a4\u30a8\u30c3\u30c8\u3092\u3057\u3066 5Kg \u6e1b\u91cf\u306b\u6210\u529f\u3057\u305f\u3068\u3044\u3046\u53cb\u4eba A \u304c\uff0c5g \u75e9\u305b\u305f\u3068\u3044\u3046\u3068 \u982d\u304a\u304b\u3057\u3044 \u3068\u601d\u3046\u3067\u3057\u3087\u3046\u3002\u9f3b\u3092\u304b\u3093\u3060\u3089 5g \u304f\u3089\u3044\u6e1b\u308b\u3067\u3057\u3087\u3046\u3002 \u540c\u3058\u3088\u3046\u306b\uff0c\u5065\u5eb7\u306e\u305f\u3081\u306b\u6bce\u65e5 5Km \u8d70\u3063\u3066\u3044\u308b\u3068\u3044\u3046\u53cb\u4eba B \u304c\u6bce\u65e5 5Mm=5000Km (5 * 10^3)m \u8d70\u3063\u3066\u3044\u308b\u3068\u8a00\u3044\u59cb\u3081\u305f\u3089 \u982d\u304a\u304b\u3057\u3044 \u3068\u601d\u3046\u3067\u3057\u3087\u3046\u3002 \u5358\u4f4d\u304c K=1000=10^3 \u7570\u306a\u308b\u3068\u5225\u6b21\u5143\u306e\u8a71\u3068\u8003\u3048\u306a\u3044\u3068 \u982d\u304a\u304b\u3057\u3044 \u306e\u3067\u3059\u3002\u6771\u4eac\u304b\u3089\u30a4\u30f3\u30c9\u306e\u30b3\u30eb\u30ab\u30bf\u307e\u3067\u306e\u8ddd\u96e2\u304c\u304a\u3088\u305d 5167Km \u307b\u3069\u3060\u305d\u3046\u3067\u3059 \u7d71\u8a08\u7269\u7406\u5b66\uff0c\u7c21\u5358\u306b\u3044\u3048\u3070\u5358\u306b\u7d71\u8a08\u306e\u76ee\u7684\u306f\uff0c\u5de8\u8996\u7684\u306a\u7269\u4f53\uff0c\u3059\u306a\u308f\u3061\u81a8\u5927\u306a\u6570\u306e\u500b\u5225\u7684\u306a\u7c92\u5b50 --- \u539f\u5b50\u3084\u5206\u5b50 --- \u304b\u3089\u306a\u308b\u7269\u4f53\u306e\u3076\u308b\u307e\u3044\u3084\u6027\u8cea\u3092\u652f\u914d\u3057\u3066\u3044\u308b\u7279\u5225\u306a\u578b\u306e\u6cd5\u5247\u3092\u7814\u7a76\u3059\u308b\u3053\u3068\u3067\u3042\u308b \u30e9\u30f3\u30c0\u30a6\uff0c\u30ea\u30d7\u30b7\u30c3\u30c4\uff0c(1957) \u7d71\u8a08\u7269\u7406\u5b66 \u4e0a\u8a18\u306e\u3088\u3046\u306a\u7d71\u8a08\u7269\u7406\u5b66\uff0c\u71b1\u529b\u5b66\u3067\u8b70\u8ad6\u3055\u308c\u3066\u304d\u305f\u3088\u3046\u306a\u30df\u30af\u30ed\u306a\u7cfb(\u7c92\u5b50\u306e\u6cd5\u5247)\u3068\u30de\u30af\u30ed\u306a\u7cfb(\u7269\u4f53\u306e\u3075\u308b\u307e\u3044)\u306e\u30a2\u30ca\u30ed\u30b8\u30fc\u304c\uff0c\u795e\u7d4c\u7d30\u80de\u3068\u77e5\u7684\u6d3b\u52d5\u3068\u306e\u9593\u3067\u3082\u6210\u308a\u7acb\u3064\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3044\u3046 \u6de1\u3044\u671f\u5f85 \u3002 accuracy \u3068 precision \u00b6 \u5206\u985e\u554f\u984c\u306e\u7cbe\u5ea6\u306e\u6307\u6a19\u306e\u4e00\u3064\u3067\u3082\u3042\u308b\u6df7\u540c\u884c\u5217\u306e\u4e2d\u3067\u6b63\u3057\u3044\u7d44\u307f\u5408\u308f\u305b\u306e\u3082\u306e\u3092\u9078\u3079 \u3002\u3053\u3053\u3067\u306f\u5c0f\u6570\u7b2c3\u4f4d\u4ee5\u4e0b\u306f\u5207\u308a\u6368\u3066\u3066\u3044\u308b\u3002 \u305f\u3060\u3057\uff0cA \u306f\u6b63\u89e3\u7387, B \u306f\u9069\u5408\u7387, C \u306f\u518d\u73fe\u7387, D \u306f F \u5024\u3068\u3059\u308b\u3002 A: 0.866 , B: 0.896 , C: 0.928 , D: 0.900 A: 0.928 , B: 0.900 , C: 0.896 , D: 0.866 A: 0.896 , B: 0.866 , C: 0.900 , D: 0.928 A: 0.900 , B: 0.928 , C: 0.866 , D: 0.896 \u89e3\u8aac: \u00b6 \u6b63\u89e3\u306f 4 accuracy (13+14)(13+2+1+14) precision 13/(13+1) recall 13/(13+2) F1 (2 * precision * recall)/(precision + recall) \u8a08\u7b97\u8ad6\u7684\u7cbe\u795e\u533b\u5b66: \u5e7b\u306e\u5668\u5b98\u3068\u3057\u3066\u306e\u8133 (Friston, 2014) \u00b6 \u8133\u6a5f\u80fd\u306e\u7406\u8ad6\u7684\u67a0\u7d44\u307f\u306b\u3088\u308b\u5b9a\u5f0f\u5316: \u4e3b\u89b3\u7684\u4fe1\u5ff5\u3084\u884c\u52d5\u3092\uff0c\u5f62\u5f0f\u7684\u306a\u8a08\u7b97\u8ad6\u7684\u67a0\u7d44\u307f\uff0c\u3059\u306a\u308f\u3061\u795e\u7d4c\u751f\u7406\u5b66\u306b\u57fa\u3065\u304f\u30b7\u30ca\u30d7\u30b9\u6a5f\u69cb\u306e\u30ec\u30d9\u30eb\u3067\u6349\u3048\u308b \u30a2\u30af\u30c6\u30a3\u30d6\uff08\u30d9\u30a4\u30b8\u30a2\u30f3\uff09\u63a8\u8ad6\u3068\u4e88\u6e2c\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0 \u81ea\u9589\u75c7\u306e\u504f\u3063\u305f\u5fc3\u3084\u7d71\u5408\u5931\u8abf\u75c7\u306e\u5186\u6ed1\u8ffd\u8de1\u773c\u7403\u904b\u52d5\u7570\u5e38 Hierarchical neuronal message passing system that underlies predictive coding Neuronal activity encodes expectations about the causes of sensory input, and these expectations minimise prediction error. Minimisation relies on recurrent neuronal interactions between different levels of the cortical hierarchy. Within this model, the available evidence suggests that superficial pyramidal cells (red triangles) compare expectations (at each level) with top-down predictions from deep pyramidal cells (black triangles) at higher levels. Predictive coding model in the force-matching illusion \u529b\u5b66\u7684\u30a8\u30cd\u30eb\u30ae\u30fc = \u904b\u52d5\u30a8\u30cd\u30eb\u30ae\u30fc + \u4f4d\u7f6e\u30a8\u30cd\u30eb\u30ae\u30fc(\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb) E = K + U\\\\ E = \\frac{1}{2}mv^2 + mgh \u7d71\u8a08\u7269\u7406\u5b66: \u5de8\u8996\u7684\u306a\u7269\u4f53\uff0c\u3059\u306a\u308f\u3061\u83ab\u5927\u306a\u6570\u306e\u500b\u5225\u7684\u306a\u7c92\u5b50\uff0c\u539f\u5b50\u3084\u5206\u5b50\uff0c\u304b\u3089\u306a\u308b\u7269\u4f53\u306e\u3075\u308b\u307e\u3044\u3084\u3063\u6027\u8cea\u3092\u652f\u914d\u3057\u3066\u3044\u308b\u7279\u5225\u306a\u578b\u306e\u6cd5\u5247\u6027\u3092\u7814\u7a76\u3059\u308b\u5b66\u554f\u5206\u91ce \u71b1\u529b\u5b66\u7b2c\u4e00\u6cd5\u5247 \u30a8\u30cd\u30eb\u30ae\u30fc\u4fdd\u5b58\u5247 \u71b1\u529b\u5b66\u7b2c\u4e8c\u6cd5\u5247 \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306f\u5897\u5927\u3059\u308b \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u00b6 \u71b1\u529b\u5b66\u7684\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3068\u60c5\u5831\u8ad6\u7684\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u304c\u5b58\u5728\u3059\u308b\u304c\u5f0f\u306f\u540c\u3058\u3067\u3042\u308b\u3002 (\u71b1)\u529b\u5b66\u7684\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc \u00b6 \u81ea\u7531\u30a8\u30cd\u30eb\u30ae\u30fc\u539f\u7406 \u30d8\u30eb\u30e0\u30db\u30eb\u30c4\u306e\u81ea\u7531\u30a8\u30cd\u30eb\u30ae\u30fc: F = U - TS F \u306f\u30d8\u30eb\u30e0\u30db\u30eb\u30c4\u306e\u81ea\u7531\u30a8\u30cd\u30eb\u30ae\u30fc\uff0c T \u306f\u6e29\u5ea6\uff0c S \u306f\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3067\u3042\u308b\u3002 https://kotobank.jp/word/%E8%87%AA%E7%94%B1%E3%82%A8%E3%83%8D%E3%83%AB%E3%82%AE%E3%83%BC-76745 \u71b1\u529b\u5b66\u306e\u7b2c\u4e00\u6cd5\u5247 \u30a8\u30cd\u30eb\u30ae\u30fc\u4fdd\u5b58\u5247 \u71b1\u529b\u5b66\u306e\u7b2c\u4e8c\u6cd5\u5247 \u30ae\u30d6\u30b9\u306e\u81ea\u7531\u30a8\u30cd\u30eb\u30ae\u30fc G = F + pV","title":"\u7b2c 12 \u56de 07\u6708 ?? \u65e5"},{"location":"lect12/#iiia","text":"Shin Aasakawa , all rights reserved. Date: 24/Jun/2020 Appache 2.0 license \u5de5\u4e8b\u4e2d under construction \u7b2c 12 \u56de \u7cbe\u795e\u533b\u5b66(\u7d71\u5408\u5931\u8abf\u75c7, \u5f37\u8feb\u795e\u7d4c\u75c7, \u4f9d\u5b58\u75c7, \u5e7b\u899a\u5e7b\u8074), \u795e\u7d4c\u5fc3\u7406\u5b66(\u610f\u5473\u75f4\u5446, \u76f8\u8c8c\u5931\u8a8d, \u5931\u8a9e, \u5931\u884c) \u8b1d\u8f9e: \u6700\u5f8c\u307e\u3067\u6765\u3066\u304f\u3060\u3055\u3063\u305f\u7686\u69d8\u306b\u611f\u8b1d\u3044\u305f\u3057\u307e\u3059","title":"\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u5fc3\u7406\u5b66\u7684\u89e3\u91c8 (\u5fc3\u7406\u5b66\u7279\u8b1bIIIA)"},{"location":"lect12/#_1","text":"\u611f\u60c5\u3068\u306f\u305d\u3082\u305d\u3082\u4f55\u306a\u306e\u304b \uff0c\u4e7e \u654f\u90ce, \u30df\u30cd\u30eb\u30f4\u30a1\u66f8\u623f\uff0c2018 \u8a08\u7b97\u8ad6\u7684\u7cbe\u795e\u533b\u5b66 , \u56fd\u91cc\uff0c\u7247\u5e73\uff0c\u6c96\u6751\uff0c\u5c71\u4e0b, \u52c1\u8349\u66f8\u623f, 2019 \u6700\u7d42\u8a66\u9a13\u554f\u984c","title":"\u53c2\u8003\u6587\u732e"},{"location":"lect12/#_2","text":"\u771f\u306eAI\u3078\u306e\u9375\u3092\u63e1\u308b\u5929\u624d\u795e\u7d4c\u79d1\u5b66\u8005 YouTube (\u81ea\u7531\u30a8\u30cd\u30eb\u30ae\u30fc\u306e\u6700\u5c0f\u5316) = (\u4e88\u6e2c\u8aa4\u5dee\u3092\u6700\u5c0f\u5316\u3059\u308b\u3088\u3046\u306b\u4fe1\u5ff5\u3092\u66f8\u304d\u63db\u3048\u4e88\u6e2c\u3092\u6700\u9069\u5316)+(\u4e88\u6e2c\u8aa4\u5dee)\u3092\u6700\u5c0f\u5316\u3059\u308b\u3088\u3046\u306a\u884c\u52d5\u3092\u3068\u308b) (\u81ea\u7531\u30a8\u30cd\u30eb\u30ae\u30fc) = (\u5185\u90e8\u30a8\u30cd\u30eb\u30ae\u30fc)-(\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc) \u4e7e(2018, p. 134)","title":"\u8cc7\u6599"},{"location":"lect12/#_3","text":"2019\u5e74\u5ea6\u99d2\u6fa4\u5927\u5b66\u6587\u5b66\u90e8\u958b\u8b1b\u79d1\u76ee\uff0c\u5fc3\u7406\u5b66\u7279\u8b1b IIIA \u306f\uff0c\u6587\u5316\uff0c\u601d\u60f3\uff0c\u306b\u95a2\u3059\u308b\u8b70\u8ad6\u3092\u3059\u308b\u79d1\u76ee\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u307e\u3057\u3066\u3084\uff0c\u6587\u58c7\uff0c\u8a00\u8ad6\u754c\uff0c\u306a\u3069\u306b\u5bfe\u3059\u308b\u3044\u304b\u306a\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3082\u542b\u3080\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 However, all of you must think about \u30bd\u30fc\u30ab\u30eb\u4e8b\u4ef6 , and \u77e5\u306e\u6b3a\u779e \u305f\u3060 \u9a19\u3055\u308c\u306a\u3044 \u3088\u3046\u306b\u3057\u305f\u3044\u3068\u9858\u3046\u3060\u3051\u3067\u3059\u3002","title":"\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u7269\u7406\u5b66\u30e1\u30bf\u30d5\u30a1\u30fc"},{"location":"lect12/#_4","text":"\u6211\u3005\u306e\u8133\u306f\u6570\u591a\u306e\u795e\u7d4c\u7d30\u80de\u304b\u3089\u6210\u308a\u7acb\u3063\u3066\u3044\u308b\u3002\u5f93\u3063\u3066\uff0c\u6211\u3005\u306e\u601d\u60f3\uff0c\u884c\u52d5\uff0c\u8003\u3048\u65b9\uff0c\u4fe1\u5ff5\uff0c\u62bd\u8c61\u7684\u601d\u8003\uff0c\u306a\u3069\u306f\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u50cd\u304d\u306b\u790e\u3092\u7f6e\u304f\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u4e00\u65b9\uff0c\u30d6\u30e9\u30fc\u30a8\uff0c\u30b1\u30d7\u30e9\u30fc\uff0c\u30ac\u30ea\u30ec\u30a4\uff0c\u30cb\u30e5\u30fc\u30c8\u30f3\u3068\u7d9a\u304f\u53e4\u5178\u7269\u7406\u5b66\u306e\u8b5c\u7cfb\u3068\uff0c\u7269\u8cea\u304c\u5206\u5b50\uff0c\u539f\u5b50\uff0c\u7d20\u7c92\u5b50\u3067\u306a\u308a\u305f\u3063\u3066\u3044\u308b\u3068\u3044\u3046 \u30ad\u30c3\u30ba\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8\u3088\u308a https://www2.kek.jp/kids/class/particle/class01-02.html \u305f\u3068\u3048\u3070\uff0c\u30c0\u30a4\u30a8\u30c3\u30c8\u3092\u3057\u3066 5Kg \u6e1b\u91cf\u306b\u6210\u529f\u3057\u305f\u3068\u3044\u3046\u53cb\u4eba A \u304c\uff0c5g \u75e9\u305b\u305f\u3068\u3044\u3046\u3068 \u982d\u304a\u304b\u3057\u3044 \u3068\u601d\u3046\u3067\u3057\u3087\u3046\u3002\u9f3b\u3092\u304b\u3093\u3060\u3089 5g \u304f\u3089\u3044\u6e1b\u308b\u3067\u3057\u3087\u3046\u3002 \u540c\u3058\u3088\u3046\u306b\uff0c\u5065\u5eb7\u306e\u305f\u3081\u306b\u6bce\u65e5 5Km \u8d70\u3063\u3066\u3044\u308b\u3068\u3044\u3046\u53cb\u4eba B \u304c\u6bce\u65e5 5Mm=5000Km (5 * 10^3)m \u8d70\u3063\u3066\u3044\u308b\u3068\u8a00\u3044\u59cb\u3081\u305f\u3089 \u982d\u304a\u304b\u3057\u3044 \u3068\u601d\u3046\u3067\u3057\u3087\u3046\u3002 \u5358\u4f4d\u304c K=1000=10^3 \u7570\u306a\u308b\u3068\u5225\u6b21\u5143\u306e\u8a71\u3068\u8003\u3048\u306a\u3044\u3068 \u982d\u304a\u304b\u3057\u3044 \u306e\u3067\u3059\u3002\u6771\u4eac\u304b\u3089\u30a4\u30f3\u30c9\u306e\u30b3\u30eb\u30ab\u30bf\u307e\u3067\u306e\u8ddd\u96e2\u304c\u304a\u3088\u305d 5167Km \u307b\u3069\u3060\u305d\u3046\u3067\u3059 \u7d71\u8a08\u7269\u7406\u5b66\uff0c\u7c21\u5358\u306b\u3044\u3048\u3070\u5358\u306b\u7d71\u8a08\u306e\u76ee\u7684\u306f\uff0c\u5de8\u8996\u7684\u306a\u7269\u4f53\uff0c\u3059\u306a\u308f\u3061\u81a8\u5927\u306a\u6570\u306e\u500b\u5225\u7684\u306a\u7c92\u5b50 --- \u539f\u5b50\u3084\u5206\u5b50 --- \u304b\u3089\u306a\u308b\u7269\u4f53\u306e\u3076\u308b\u307e\u3044\u3084\u6027\u8cea\u3092\u652f\u914d\u3057\u3066\u3044\u308b\u7279\u5225\u306a\u578b\u306e\u6cd5\u5247\u3092\u7814\u7a76\u3059\u308b\u3053\u3068\u3067\u3042\u308b \u30e9\u30f3\u30c0\u30a6\uff0c\u30ea\u30d7\u30b7\u30c3\u30c4\uff0c(1957) \u7d71\u8a08\u7269\u7406\u5b66 \u4e0a\u8a18\u306e\u3088\u3046\u306a\u7d71\u8a08\u7269\u7406\u5b66\uff0c\u71b1\u529b\u5b66\u3067\u8b70\u8ad6\u3055\u308c\u3066\u304d\u305f\u3088\u3046\u306a\u30df\u30af\u30ed\u306a\u7cfb(\u7c92\u5b50\u306e\u6cd5\u5247)\u3068\u30de\u30af\u30ed\u306a\u7cfb(\u7269\u4f53\u306e\u3075\u308b\u307e\u3044)\u306e\u30a2\u30ca\u30ed\u30b8\u30fc\u304c\uff0c\u795e\u7d4c\u7d30\u80de\u3068\u77e5\u7684\u6d3b\u52d5\u3068\u306e\u9593\u3067\u3082\u6210\u308a\u7acb\u3064\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3044\u3046 \u6de1\u3044\u671f\u5f85 \u3002","title":"\u4e0a\u8a18\u306b\u5bfe\u3059\u308b\u7cbe\u4e00\u676f\u306e\u8a00\u3044\u8a33"},{"location":"lect12/#accuracy-precision","text":"\u5206\u985e\u554f\u984c\u306e\u7cbe\u5ea6\u306e\u6307\u6a19\u306e\u4e00\u3064\u3067\u3082\u3042\u308b\u6df7\u540c\u884c\u5217\u306e\u4e2d\u3067\u6b63\u3057\u3044\u7d44\u307f\u5408\u308f\u305b\u306e\u3082\u306e\u3092\u9078\u3079 \u3002\u3053\u3053\u3067\u306f\u5c0f\u6570\u7b2c3\u4f4d\u4ee5\u4e0b\u306f\u5207\u308a\u6368\u3066\u3066\u3044\u308b\u3002 \u305f\u3060\u3057\uff0cA \u306f\u6b63\u89e3\u7387, B \u306f\u9069\u5408\u7387, C \u306f\u518d\u73fe\u7387, D \u306f F \u5024\u3068\u3059\u308b\u3002 A: 0.866 , B: 0.896 , C: 0.928 , D: 0.900 A: 0.928 , B: 0.900 , C: 0.896 , D: 0.866 A: 0.896 , B: 0.866 , C: 0.900 , D: 0.928 A: 0.900 , B: 0.928 , C: 0.866 , D: 0.896","title":"accuracy \u3068 precision"},{"location":"lect12/#_5","text":"\u6b63\u89e3\u306f 4 accuracy (13+14)(13+2+1+14) precision 13/(13+1) recall 13/(13+2) F1 (2 * precision * recall)/(precision + recall)","title":"\u89e3\u8aac:"},{"location":"lect12/#friston-2014","text":"\u8133\u6a5f\u80fd\u306e\u7406\u8ad6\u7684\u67a0\u7d44\u307f\u306b\u3088\u308b\u5b9a\u5f0f\u5316: \u4e3b\u89b3\u7684\u4fe1\u5ff5\u3084\u884c\u52d5\u3092\uff0c\u5f62\u5f0f\u7684\u306a\u8a08\u7b97\u8ad6\u7684\u67a0\u7d44\u307f\uff0c\u3059\u306a\u308f\u3061\u795e\u7d4c\u751f\u7406\u5b66\u306b\u57fa\u3065\u304f\u30b7\u30ca\u30d7\u30b9\u6a5f\u69cb\u306e\u30ec\u30d9\u30eb\u3067\u6349\u3048\u308b \u30a2\u30af\u30c6\u30a3\u30d6\uff08\u30d9\u30a4\u30b8\u30a2\u30f3\uff09\u63a8\u8ad6\u3068\u4e88\u6e2c\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0 \u81ea\u9589\u75c7\u306e\u504f\u3063\u305f\u5fc3\u3084\u7d71\u5408\u5931\u8abf\u75c7\u306e\u5186\u6ed1\u8ffd\u8de1\u773c\u7403\u904b\u52d5\u7570\u5e38 Hierarchical neuronal message passing system that underlies predictive coding Neuronal activity encodes expectations about the causes of sensory input, and these expectations minimise prediction error. Minimisation relies on recurrent neuronal interactions between different levels of the cortical hierarchy. Within this model, the available evidence suggests that superficial pyramidal cells (red triangles) compare expectations (at each level) with top-down predictions from deep pyramidal cells (black triangles) at higher levels. Predictive coding model in the force-matching illusion \u529b\u5b66\u7684\u30a8\u30cd\u30eb\u30ae\u30fc = \u904b\u52d5\u30a8\u30cd\u30eb\u30ae\u30fc + \u4f4d\u7f6e\u30a8\u30cd\u30eb\u30ae\u30fc(\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb) E = K + U\\\\ E = \\frac{1}{2}mv^2 + mgh \u7d71\u8a08\u7269\u7406\u5b66: \u5de8\u8996\u7684\u306a\u7269\u4f53\uff0c\u3059\u306a\u308f\u3061\u83ab\u5927\u306a\u6570\u306e\u500b\u5225\u7684\u306a\u7c92\u5b50\uff0c\u539f\u5b50\u3084\u5206\u5b50\uff0c\u304b\u3089\u306a\u308b\u7269\u4f53\u306e\u3075\u308b\u307e\u3044\u3084\u3063\u6027\u8cea\u3092\u652f\u914d\u3057\u3066\u3044\u308b\u7279\u5225\u306a\u578b\u306e\u6cd5\u5247\u6027\u3092\u7814\u7a76\u3059\u308b\u5b66\u554f\u5206\u91ce \u71b1\u529b\u5b66\u7b2c\u4e00\u6cd5\u5247 \u30a8\u30cd\u30eb\u30ae\u30fc\u4fdd\u5b58\u5247 \u71b1\u529b\u5b66\u7b2c\u4e8c\u6cd5\u5247 \u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306f\u5897\u5927\u3059\u308b","title":"\u8a08\u7b97\u8ad6\u7684\u7cbe\u795e\u533b\u5b66: \u5e7b\u306e\u5668\u5b98\u3068\u3057\u3066\u306e\u8133 (Friston, 2014)"},{"location":"lect12/#_6","text":"\u71b1\u529b\u5b66\u7684\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3068\u60c5\u5831\u8ad6\u7684\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u304c\u5b58\u5728\u3059\u308b\u304c\u5f0f\u306f\u540c\u3058\u3067\u3042\u308b\u3002","title":"\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc"},{"location":"lect12/#_7","text":"\u81ea\u7531\u30a8\u30cd\u30eb\u30ae\u30fc\u539f\u7406 \u30d8\u30eb\u30e0\u30db\u30eb\u30c4\u306e\u81ea\u7531\u30a8\u30cd\u30eb\u30ae\u30fc: F = U - TS F \u306f\u30d8\u30eb\u30e0\u30db\u30eb\u30c4\u306e\u81ea\u7531\u30a8\u30cd\u30eb\u30ae\u30fc\uff0c T \u306f\u6e29\u5ea6\uff0c S \u306f\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3067\u3042\u308b\u3002 https://kotobank.jp/word/%E8%87%AA%E7%94%B1%E3%82%A8%E3%83%8D%E3%83%AB%E3%82%AE%E3%83%BC-76745 \u71b1\u529b\u5b66\u306e\u7b2c\u4e00\u6cd5\u5247 \u30a8\u30cd\u30eb\u30ae\u30fc\u4fdd\u5b58\u5247 \u71b1\u529b\u5b66\u306e\u7b2c\u4e8c\u6cd5\u5247 \u30ae\u30d6\u30b9\u306e\u81ea\u7531\u30a8\u30cd\u30eb\u30ae\u30fc G = F + pV","title":"(\u71b1)\u529b\u5b66\u7684\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc"},{"location":"nothotdog/","text":"\u6df1\u5c64\u5b66\u7fd2\u306e\u5fdc\u7528\u4f8b not hotdog \u00b6 2017\u5e74\u30a2\u30e1\u30ea\u30ab\u5408\u8846\u56fd\u306e\u30b1\u30fc\u30d6\u30eb\u30c6\u30ec\u30d3\u306e\u30c1\u30e3\u30f3\u30cd\u30eb HBO \u306e\u30b3\u30e1\u30c7\u30a3\u30fc\u756a\u7d44 \u30b7\u30ea\u30b3\u30f3\u30d0\u30ec\u30fc \u306b\u304a\u3044\u3066\uff0c\u30b7\u30fc\u30ba\u30f3 4 \u306e\u30a8\u30d4\u30bd\u30fc\u30c9 4 \u3067\u306f\uff0c \u30b8\u30df\u30fc\u6b27\u967d (\u4e2d\u56fd\u540d:\u6b50\u967d\u842c\u6210)\u304c\u30db\u30c3\u30c8\u30c9\u30c3\u30b0\u304b\u30db\u30c3\u30c8\u30c9\u30c3\u30b0\u3067\u306f\u306a\u3044\u304b\u3092\u898b\u5206\u3051\u308b\u30a2\u30d7\u30ea not hotdog \u3092\u4f5c\u308a\uff0c iOS , Andoroid \u30a2\u30d7\u30ea\u3068\u3057\u3066\u516c\u958b\u3055\u308c\u307e\u3057\u305f\u3002(\u6b8b\u5ff5\u306a\u304c\u3089\u65e5\u672c\u304b\u3089\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093)\u3053\u3053\u3067\u7528\u3044\u3089\u308c\u305f\u6280\u8853\u304c\u6df1\u5c64\u5b66\u7fd2\u3067\u3059\u3002\u3061\u306a\u307f\u306b\u3053\u306e\u30a2\u30d7\u30ea\u306f2018\u5e74\u5ea6\u306e \u30a8\u30df\u30fc\u8cde \u306b \u30ce\u30df\u30cd\u30fc\u30c8 \u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u306e\u6280\u8853\u306e\u30ab\u30e9\u30af\u30ea\u3092\u63a2\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u3087\u3046\u3002 https://youtu.be/vIci3C4JkL0 \u3053\u306e\u30a2\u30d7\u30ea\u306f\u30db\u30c3\u30c8\u30c9\u30c3\u30b0\u304b\u305d\u3046\u3067\u306a\u3044\u304b\u3092\u8a8d\u8b58\u3057\u307e\u3059\u3002 from https://twitter.com/david__kha/status/865093285886304256/photo/1 https://pbs.twimg.com/media/DAFtwTZU0AENB2p.jpg \u4ee5\u524d CNN \u306e\u4eba\u6c17\u30c8\u30fc\u30af\u756a\u7d44\u3067\u30e1\u30a4\u30f3\u30ad\u30e3\u30b9\u30c8\u3092\u3064\u3068\u3081\u305f \u30e9\u30ea\u30fc\u30fb\u30ad\u30f3\u30b0 \u306e\u756a\u7d44 \u30e9\u30ea\u30fc\u30fb\u30ad\u30f3\u30b0\u30ca\u30a6 \u3067\u3082\u53d6\u308a\u4e0a\u3052\u3089\u308c\u3066\u3044\u307e\u3059\u3002 https://youtu.be/s1G-cmx_zrg not hotdog \u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u306f \u3053\u3061\u3089 https://www.seefoodtechnologies.com/nothotdog/","title":"\u6df1\u5c64\u5b66\u7fd2\u306e\u5fdc\u7528\u4f8b not hotdog"},{"location":"nothotdog/#not-hotdog","text":"2017\u5e74\u30a2\u30e1\u30ea\u30ab\u5408\u8846\u56fd\u306e\u30b1\u30fc\u30d6\u30eb\u30c6\u30ec\u30d3\u306e\u30c1\u30e3\u30f3\u30cd\u30eb HBO \u306e\u30b3\u30e1\u30c7\u30a3\u30fc\u756a\u7d44 \u30b7\u30ea\u30b3\u30f3\u30d0\u30ec\u30fc \u306b\u304a\u3044\u3066\uff0c\u30b7\u30fc\u30ba\u30f3 4 \u306e\u30a8\u30d4\u30bd\u30fc\u30c9 4 \u3067\u306f\uff0c \u30b8\u30df\u30fc\u6b27\u967d (\u4e2d\u56fd\u540d:\u6b50\u967d\u842c\u6210)\u304c\u30db\u30c3\u30c8\u30c9\u30c3\u30b0\u304b\u30db\u30c3\u30c8\u30c9\u30c3\u30b0\u3067\u306f\u306a\u3044\u304b\u3092\u898b\u5206\u3051\u308b\u30a2\u30d7\u30ea not hotdog \u3092\u4f5c\u308a\uff0c iOS , Andoroid \u30a2\u30d7\u30ea\u3068\u3057\u3066\u516c\u958b\u3055\u308c\u307e\u3057\u305f\u3002(\u6b8b\u5ff5\u306a\u304c\u3089\u65e5\u672c\u304b\u3089\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093)\u3053\u3053\u3067\u7528\u3044\u3089\u308c\u305f\u6280\u8853\u304c\u6df1\u5c64\u5b66\u7fd2\u3067\u3059\u3002\u3061\u306a\u307f\u306b\u3053\u306e\u30a2\u30d7\u30ea\u306f2018\u5e74\u5ea6\u306e \u30a8\u30df\u30fc\u8cde \u306b \u30ce\u30df\u30cd\u30fc\u30c8 \u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u306e\u6280\u8853\u306e\u30ab\u30e9\u30af\u30ea\u3092\u63a2\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u3087\u3046\u3002 https://youtu.be/vIci3C4JkL0 \u3053\u306e\u30a2\u30d7\u30ea\u306f\u30db\u30c3\u30c8\u30c9\u30c3\u30b0\u304b\u305d\u3046\u3067\u306a\u3044\u304b\u3092\u8a8d\u8b58\u3057\u307e\u3059\u3002 from https://twitter.com/david__kha/status/865093285886304256/photo/1 https://pbs.twimg.com/media/DAFtwTZU0AENB2p.jpg \u4ee5\u524d CNN \u306e\u4eba\u6c17\u30c8\u30fc\u30af\u756a\u7d44\u3067\u30e1\u30a4\u30f3\u30ad\u30e3\u30b9\u30c8\u3092\u3064\u3068\u3081\u305f \u30e9\u30ea\u30fc\u30fb\u30ad\u30f3\u30b0 \u306e\u756a\u7d44 \u30e9\u30ea\u30fc\u30fb\u30ad\u30f3\u30b0\u30ca\u30a6 \u3067\u3082\u53d6\u308a\u4e0a\u3052\u3089\u308c\u3066\u3044\u307e\u3059\u3002 https://youtu.be/s1G-cmx_zrg not hotdog \u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u306f \u3053\u3061\u3089 https://www.seefoodtechnologies.com/nothotdog/","title":"\u6df1\u5c64\u5b66\u7fd2\u306e\u5fdc\u7528\u4f8b not hotdog"},{"location":"psychological_intelligence/","text":"\u77e5\u80fd Intelligence \u3068\u306f\u4f55\u304b\uff1f \u00b6 https://en.wikipedia.org/wiki/Intelligence \u77e5\u6027\u3068\u3044\u3046\u5358\u8a9e\u306f\uff0c\u30e9\u30c6\u30f3\u8a9e\u306e intelligentia \u3042\u308b\u3044\u306f intell\u0113ctus \u306b\u7531\u6765 \u4e2d\u4e16\u306b\u65bc\u3044\u3066\u306f\uff0c\u970a\u9b42\u306e\u4e0d\u6ec5\u8aac\u3068\u95a2\u4fc2 \u30d9\u30fc\u30b3\u30f3\uff0c\u30db\u30c3\u30d6\u30b9\uff0c\u30ed\u30c3\u30af\uff0c\u30d2\u30e5\u30fc\u30e0\u3089\u54f2\u5b66\u8005\u306f\u3053\u308c\u3092\u5426\u5b9a\u3002\u54f2\u5b66\u8005\u306f\u4f7f\u308f\u306a\u304f\u306a\u3063\u305f \u4ee3\u308f\u308a\u306b\u5fc3\u7406\u5b66\u8005\u305f\u3061\u304c\u4f7f\u7528 \u77e5\u80fd\u3068\u306f\uff0c\u63a8\u8ad6\uff0c\u8a08\u753b\uff0c\u554f\u984c\u89e3\u6c7a\uff0c\u62bd\u8c61\u7684\u601d\u8003\uff0c\u8907\u96d1\u306a\u6982\u5ff5\u306e\u7406\u89e3\uff0c\u7fd2\u5f97\u306e\u901f\u3055\uff0c\u7d4c\u9a13\u304b\u3089\u306e\u5b66\u7fd2\u306a\u3069\u3092\u542b\u3080\u4e00\u822c\u7684\u80fd\u529b\u3067\u3042\u308a\u3002\u5358\u306b\u8aad\u66f8\u306b\u3088\u308b\u77e5\u8b58\u3084\u72ed\u7fa9\u306e\u5b66\u8853\u7684\u6280\u80fd\u3084\u8a66\u9a13\u306b\u5408\u683c\u3059\u308b\u6280\u80fd\u3067\u306f\u306a\u304f\uff0c\u5468\u56f2\u3092 \u628a\u63e1 \u3057\uff0c\u3082\u306e\u3054\u3068\u3092 \u7406\u89e3 \u3057\uff0c\u4f55\u3092\u3059\u308c\u3070\u3088\u3044\u306e\u304b\u3092 \u898b\u3064\u3051\u308b \u3053\u3068\u3067\u3042\u308b\u3002Linda(2006) \u4eba\u306f\u305d\u308c\u305e\u308c\uff0c\u8907\u96d1\u306a\u8003\u3048\u3092\u7406\u89e3\u3057\uff0c\u74b0\u5883\u3078\u52b9\u679c\u7684\u306b\u9069\u5fdc\u3057\uff0c\u7d4c\u9a13\u304b\u3089\u5b66\u3073\uff0c\u7a2e\u3005\u306e\u63a8\u8ad6\u3092\u3057\uff0c\u8003\u3048\u308b\u3053\u3068\u3067\u969c\u5bb3\u3092\u514b\u670d\u3057\u3088\u3046\u3068\u3059\u308b\u80fd\u529b\u306b\u304a\u3044\u3066\uff0c\u7570\u306a\u3063\u3066\u3044\u308b\u3002\u3053\u306e\u500b\u4eba\u5dee\u306f\u5927\u304d\u3044\u304c\uff0c\u4e00\u8cab\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3002\u500b\u4eba\u306e\u8133\u529b\u306f\u5834\u5408\u306b\u3088\u308a\uff0c\u9818\u57df\u306b\u3088\u308a\uff0c\u57fa\u6e96\u306b\u3088\u308a\u7570\u306a\u308b\u3002\u300c\u77e5\u6027\u300d\u3092\u5b9a\u7fa9\u3059\u308b\u8a66\u307f\u306f\u3053\u306e\u3088\u3046\u306a\u73fe\u8c61\u3092\u660e\u78ba\u5316\u3057\uff0c\u4f53\u7cfb\u5316\u3059\u308b\u3082\u306e\u3067\u3042\u308b\u3002\u591a\u304f\u306e\u5206\u91ce\u3067\u89e3\u660e\u3055\u308c\u3066\u304d\u305f\u304c\uff0c\u91cd\u8981\u306a\u554f\u984c\u306b\u5bfe\u3057\u3066\u672a\u3060\u660e\u78ba\u306b\u56de\u7b54\u3092\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u305a\uff0c\u540c\u610f\u304c\u3048\u3089\u308c\u3066\u3044\u306a\u3044\u3002Nisser et. al(2006) \u30ac\u30fc\u30c9\u30ca\u30fc Gardner \u306e\u30de\u30eb\u30c1\u77e5\u80fd\u30e2\u30c7\u30eb (model of multiple intelligence) \u00b6 1) \u97f3\u697d-\u30ea\u30ba\u30e0 (Musical-Rhythmic), 2) \u8996\u899a-\u7a7a\u9593 (Visual-Spatial), 3) \u53e3\u982d-\u8a00\u8a9e (Verbal-Linguistic), 4) \u8ad6\u7406-\u6570\u5b66 (Logical-Mathematical), 5) \u8eab\u4f53-\u904b\u52d5 (Bodily-Kinesthetic), 6) \u4eba\u306e\u9593\u306e (Interpersonal), 7) \u500b\u4eba\u5185\u3067\u306e (Intrapersonal), 8) \u81ea\u7136\u7684 (Naturalistic) Critic: Waterhouse, Lynn (2006). \"Multiple Intelligences, the Mozart Effect, and Emotional Intelligence: A critical review\". Educational Psychologist. 41 (4): 207\u2013225. \u5834\u5f53\u305f\u308a\u7684\u306a\u5b9a\u7fa9\u3068\u6279\u5224\u3055\u308c\u308b \u30ae\u30eb\u30d5\u30a9\u30fc\u30c9\u306e\u77e5\u80fd\u69cb\u9020\u30e2\u30c7\u30eb (Guilford model of structure of intellect) \u00b6 https://www.instructionaldesign.org/theories/intellect/ https://en.wikipedia.org/wiki/J._P._Guilford 6 \u3064\u306e\u64cd\u4f5c(\u8a8d\u77e5\uff0c\u8a18\u61b6\u4fdd\u6301\uff0c\u8a18\u61b6\u691c\u7d22\uff0c\u7523\u51fa\u591a\u69d8\u6027\uff0c\u5747\u4e00\u8868\u51fa\u6027\uff0c\u8a55\u4fa1)\uff0c 6 \u3064\u306e\u51fa\u529b(\u5358\u4f4d\uff0c\u8907\u6570\u5358\u4f4d\uff0c\u5358\u4f4d\u9593\u306e\u95a2\u4fc2\uff0c\u30b7\u30b9\u30c6\u30e0\uff0c\u5909\u5f62\uff0c\u542b\u610f) , 5 \u3064\u306e\u5185\u5bb9(\u8996\u899a\u7684\uff0c\u8074\u899a\u7684\uff0c\u8a18\u53f7\u7684\uff0c\u610f\u5473\u7684\uff0c\u884c\u52d5\u7684)\u3067\u77e5\u80fd\u3092\u8a18\u8ff0 \u30b9\u30bf\u30f3\u30d0\u30fc\u30b0\u306e 3 \u77e5\u80fd (Sternberg of Triarchic theory of intelligence) \u00b6 https://en.wikipedia.org/wiki/Triarchic_theory_of_intelligence \u30e1\u30bf\u6210\u5206 \u9042\u884c\u6210\u5206 \u77e5\u8b58\u7372\u5f97\u6210\u5206 \u4e00\u822c\u77e5\u80fd\u56e0\u5b50 ( g factor) \u00b6 https://en.wikipedia.org/wiki/G_factor_(psychometrics) \u77e5\u80fd\u691c\u67fb\uff0c\u77e5\u80fd\u6307\u6570 \u00b6 \u3048\uff1f","title":"\u5fc3\u7406\u5b66\u8005\u306e\u8003\u3048\u305f\u77e5\u80fd"},{"location":"psychological_intelligence/#intelligence","text":"https://en.wikipedia.org/wiki/Intelligence \u77e5\u6027\u3068\u3044\u3046\u5358\u8a9e\u306f\uff0c\u30e9\u30c6\u30f3\u8a9e\u306e intelligentia \u3042\u308b\u3044\u306f intell\u0113ctus \u306b\u7531\u6765 \u4e2d\u4e16\u306b\u65bc\u3044\u3066\u306f\uff0c\u970a\u9b42\u306e\u4e0d\u6ec5\u8aac\u3068\u95a2\u4fc2 \u30d9\u30fc\u30b3\u30f3\uff0c\u30db\u30c3\u30d6\u30b9\uff0c\u30ed\u30c3\u30af\uff0c\u30d2\u30e5\u30fc\u30e0\u3089\u54f2\u5b66\u8005\u306f\u3053\u308c\u3092\u5426\u5b9a\u3002\u54f2\u5b66\u8005\u306f\u4f7f\u308f\u306a\u304f\u306a\u3063\u305f \u4ee3\u308f\u308a\u306b\u5fc3\u7406\u5b66\u8005\u305f\u3061\u304c\u4f7f\u7528 \u77e5\u80fd\u3068\u306f\uff0c\u63a8\u8ad6\uff0c\u8a08\u753b\uff0c\u554f\u984c\u89e3\u6c7a\uff0c\u62bd\u8c61\u7684\u601d\u8003\uff0c\u8907\u96d1\u306a\u6982\u5ff5\u306e\u7406\u89e3\uff0c\u7fd2\u5f97\u306e\u901f\u3055\uff0c\u7d4c\u9a13\u304b\u3089\u306e\u5b66\u7fd2\u306a\u3069\u3092\u542b\u3080\u4e00\u822c\u7684\u80fd\u529b\u3067\u3042\u308a\u3002\u5358\u306b\u8aad\u66f8\u306b\u3088\u308b\u77e5\u8b58\u3084\u72ed\u7fa9\u306e\u5b66\u8853\u7684\u6280\u80fd\u3084\u8a66\u9a13\u306b\u5408\u683c\u3059\u308b\u6280\u80fd\u3067\u306f\u306a\u304f\uff0c\u5468\u56f2\u3092 \u628a\u63e1 \u3057\uff0c\u3082\u306e\u3054\u3068\u3092 \u7406\u89e3 \u3057\uff0c\u4f55\u3092\u3059\u308c\u3070\u3088\u3044\u306e\u304b\u3092 \u898b\u3064\u3051\u308b \u3053\u3068\u3067\u3042\u308b\u3002Linda(2006) \u4eba\u306f\u305d\u308c\u305e\u308c\uff0c\u8907\u96d1\u306a\u8003\u3048\u3092\u7406\u89e3\u3057\uff0c\u74b0\u5883\u3078\u52b9\u679c\u7684\u306b\u9069\u5fdc\u3057\uff0c\u7d4c\u9a13\u304b\u3089\u5b66\u3073\uff0c\u7a2e\u3005\u306e\u63a8\u8ad6\u3092\u3057\uff0c\u8003\u3048\u308b\u3053\u3068\u3067\u969c\u5bb3\u3092\u514b\u670d\u3057\u3088\u3046\u3068\u3059\u308b\u80fd\u529b\u306b\u304a\u3044\u3066\uff0c\u7570\u306a\u3063\u3066\u3044\u308b\u3002\u3053\u306e\u500b\u4eba\u5dee\u306f\u5927\u304d\u3044\u304c\uff0c\u4e00\u8cab\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3002\u500b\u4eba\u306e\u8133\u529b\u306f\u5834\u5408\u306b\u3088\u308a\uff0c\u9818\u57df\u306b\u3088\u308a\uff0c\u57fa\u6e96\u306b\u3088\u308a\u7570\u306a\u308b\u3002\u300c\u77e5\u6027\u300d\u3092\u5b9a\u7fa9\u3059\u308b\u8a66\u307f\u306f\u3053\u306e\u3088\u3046\u306a\u73fe\u8c61\u3092\u660e\u78ba\u5316\u3057\uff0c\u4f53\u7cfb\u5316\u3059\u308b\u3082\u306e\u3067\u3042\u308b\u3002\u591a\u304f\u306e\u5206\u91ce\u3067\u89e3\u660e\u3055\u308c\u3066\u304d\u305f\u304c\uff0c\u91cd\u8981\u306a\u554f\u984c\u306b\u5bfe\u3057\u3066\u672a\u3060\u660e\u78ba\u306b\u56de\u7b54\u3092\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u305a\uff0c\u540c\u610f\u304c\u3048\u3089\u308c\u3066\u3044\u306a\u3044\u3002Nisser et. al(2006)","title":"\u77e5\u80fd Intelligence \u3068\u306f\u4f55\u304b\uff1f"},{"location":"psychological_intelligence/#gardner-model-of-multiple-intelligence","text":"1) \u97f3\u697d-\u30ea\u30ba\u30e0 (Musical-Rhythmic), 2) \u8996\u899a-\u7a7a\u9593 (Visual-Spatial), 3) \u53e3\u982d-\u8a00\u8a9e (Verbal-Linguistic), 4) \u8ad6\u7406-\u6570\u5b66 (Logical-Mathematical), 5) \u8eab\u4f53-\u904b\u52d5 (Bodily-Kinesthetic), 6) \u4eba\u306e\u9593\u306e (Interpersonal), 7) \u500b\u4eba\u5185\u3067\u306e (Intrapersonal), 8) \u81ea\u7136\u7684 (Naturalistic) Critic: Waterhouse, Lynn (2006). \"Multiple Intelligences, the Mozart Effect, and Emotional Intelligence: A critical review\". Educational Psychologist. 41 (4): 207\u2013225. \u5834\u5f53\u305f\u308a\u7684\u306a\u5b9a\u7fa9\u3068\u6279\u5224\u3055\u308c\u308b","title":"\u30ac\u30fc\u30c9\u30ca\u30fc Gardner \u306e\u30de\u30eb\u30c1\u77e5\u80fd\u30e2\u30c7\u30eb (model of multiple intelligence)"},{"location":"psychological_intelligence/#guilford-model-of-structure-of-intellect","text":"https://www.instructionaldesign.org/theories/intellect/ https://en.wikipedia.org/wiki/J._P._Guilford 6 \u3064\u306e\u64cd\u4f5c(\u8a8d\u77e5\uff0c\u8a18\u61b6\u4fdd\u6301\uff0c\u8a18\u61b6\u691c\u7d22\uff0c\u7523\u51fa\u591a\u69d8\u6027\uff0c\u5747\u4e00\u8868\u51fa\u6027\uff0c\u8a55\u4fa1)\uff0c 6 \u3064\u306e\u51fa\u529b(\u5358\u4f4d\uff0c\u8907\u6570\u5358\u4f4d\uff0c\u5358\u4f4d\u9593\u306e\u95a2\u4fc2\uff0c\u30b7\u30b9\u30c6\u30e0\uff0c\u5909\u5f62\uff0c\u542b\u610f) , 5 \u3064\u306e\u5185\u5bb9(\u8996\u899a\u7684\uff0c\u8074\u899a\u7684\uff0c\u8a18\u53f7\u7684\uff0c\u610f\u5473\u7684\uff0c\u884c\u52d5\u7684)\u3067\u77e5\u80fd\u3092\u8a18\u8ff0","title":"\u30ae\u30eb\u30d5\u30a9\u30fc\u30c9\u306e\u77e5\u80fd\u69cb\u9020\u30e2\u30c7\u30eb (Guilford model of structure of intellect)"},{"location":"psychological_intelligence/#3-sternberg-of-triarchic-theory-of-intelligence","text":"https://en.wikipedia.org/wiki/Triarchic_theory_of_intelligence \u30e1\u30bf\u6210\u5206 \u9042\u884c\u6210\u5206 \u77e5\u8b58\u7372\u5f97\u6210\u5206","title":"\u30b9\u30bf\u30f3\u30d0\u30fc\u30b0\u306e 3 \u77e5\u80fd (Sternberg of Triarchic theory of intelligence)"},{"location":"psychological_intelligence/#g-factor","text":"https://en.wikipedia.org/wiki/G_factor_(psychometrics)","title":"\u4e00\u822c\u77e5\u80fd\u56e0\u5b50 (g factor)"},{"location":"psychological_intelligence/#_1","text":"\u3048\uff1f","title":"\u77e5\u80fd\u691c\u67fb\uff0c\u77e5\u80fd\u6307\u6570"},{"location":"python_modules/","text":"1980 \u5e74\u4ee3\u5f8c\u534a\u306b\u6559\u80b2\u7528\u304a\u3088\u3073\u30b9\u30af\u30ea\u30d7\u30c8\u7528\u306e\u8a00\u8a9e\u3068\u3057\u3066\u8003\u6848\u3055\u308c\u305f Python \u306f\u3001\u305d\u308c \u4ee5\u6765\u3001\u5b66\u754c\u3084\u7523\u696d\u754c\u306e\u591a\u304f\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u3001\u30a8\u30f3\u30b8\u30cb\u30a2\u3001\u7814\u7a76\u8005\u3001\u305d\u3057\u3066\u30c7\u30fc\u30bf\u79d1 \u5b66\u8005\u306b\u3068\u3063\u3066\u4e0d\u53ef\u6b20\u306a\u30c4\u30fc\u30eb\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u7af6\u5408\u3059\u308b\u30c4\u30fc\u30eb\u3068\u3057\u3066\u306f Microsoft Excel R MATLAB SPSS \u306a\u3069\u304c\u3042\u308b\u306e\u306f\u3054\u5b58\u77e5\u3067\u3057\u3087\u3046\u3002 \u4e0a\u8a18\u306e\u30e9\u30a4\u30d0\u30eb\u305f\u3061\u306b\u6bd4\u3057\u3066 Python \u306f\u5927\u898f\u6a21\u3067\u6210\u719f\u3057\u305f\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u306b\u652f\u3048\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u7279\u5fb4\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002\u9006\u306b\u8a00\u3048\u3070 Python \u3092\u4f7f\u3063\u3066\u3044\u306a\u3044\u3068\u6709\u52b9\u306a\u60c5\u5831\u304c\u5f97\u3089\u308c\u306a\u3044\u3053\u3068\u304c\u591a\u3044\u3088\u3046\u3067\u3059\u3002 \u3053\u306e\u8fba\u306e\u4e8b\u60c5\u306f\uff0c\u30d3\u30b8\u30cd\u30b9\u306b\u304a\u3051\u308b Microsoft Excel\uff0cWeb \u958b\u767a\u306b\u304a\u3051\u308b javascript \u3068\u540c\u3058\u72b6\u6cc1\u3060\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002 NumPy \u591a\u6b21\u5143\u914d\u5217\u306e\u64cd\u4f5c\uff0c\u8a08\u7b97\u306a\u3069 SciPy \u6570\u5b66\uff0c\u79d1\u5b66\uff0c\u6280\u8853\uff0c\u306e\u6570\u5024\u8a08\u7b97\u306a\u3069 Pandas \u30c7\u30fc\u30bf\u51e6\u7406\uff0c\u64cd\u4f5c\u306a\u3069 Matplotlib \u56f3\u306a\u3069 Scikit-Learn \u6a5f\u68b0\u5b66\u7fd2\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u9069\u7528 seaborn matplotlib \u306b\u57fa\u3065\u304f\u30c7\u30fc\u30bf\u8996\u899a\u5316\u30a4\u30f3\u30bf\u30d5\u30a7\u30a4\u30b9 Jupyter noteboook Python \u3092 Web \u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u5b9f\u884c Colaboratory jupyter notebook \u306e\u30af\u30e9\u30a6\u30c9\u7248\u3060\u3068\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002\u5225\u9805\u3067\u8aac\u660e\u3057\u307e\u3059","title":"Python modules"},{"location":"python_numpy_intro_ja/","text":"Python \u57fa\u672c\u30c7\u30fc\u30bf\u578b \u30b3\u30f3\u30c6\u30ca \u30ea\u30b9\u30c8 \u8f9e\u66f8 \u96c6\u5408 \u30bf\u30d7\u30eb \u95a2\u6570 \u30af\u30e9\u30b9 Numpy Arrays Array indexing Datatypes Array math Broadcasting SciPy Image operations MATLAB files Distance between points Matplotlib \u30d7\u30ed\u30c3\u30c8 \u30b5\u30d6\u30d7\u30ed\u30c3\u30c8 \u753b\u50cf Python \u00b6 Python \u306f\u9ad8\u7d1a\u8a00\u8a9e\u3067\u3042\u308a\u52d5\u7684\u30de\u30eb\u30c1\u30d1\u30e9\u30c0\u30a4\u30e0\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3042\u308b\u3002 Python \u306e\u30b3\u30fc\u30c9\u306f\u5f37\u529b\u306a\u30a2\u30a4\u30c7\u30a2\u3092\u6570\u884c\u3067\u8868\u73fe\u3067\u304d\u308b\u64ec\u4f3c\u8a00\u8a9e\u306b\u55a9\u3048\u3089\u308c\u308b\u3002 \u4f8b\u3048\u3070\u53e4\u5178\u7684\u306a\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f Python \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b: 1 2 3 4 5 6 7 8 9 10 def quicksort (arr): if len (arr) <= 1 : return arr pivot = arr[ int ( len (arr) / 2 )] left = [x for x in arr if x < pivot] middle = [x for x in arr if x == pivot] right = [x for x in arr if x > pivot] return quicksort(left) + middle + quicksort(right) print (quicksort([ 3 , 6 , 8 , 10 , 1 , 2 , 1 ])) # \u5370\u5b57( \"[1, 1, 2, 3, 6, 8, 10]\") Python \u306e\u30d0\u30fc\u30b8\u30e7\u30f3 \u00b6 \u73fe\u5728 Python \u306f 2 \u7a2e\u985e\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30022.7 \u7cfb \u3068 3 \u7cfb \u3067\u3042\u308b\u3002 Python 3.0 \u4ee5\u6765\uff0c\u524d\u65b9\u4e92\u63db\u6027\u304c\u5ec3\u68c4\u3055\u308c\u3066 2.7 \u7cfb \u3068 3 \u7cfb\u3067\u306f\u4e92\u3044\u306b\u4ea4\u63db\u53ef\u80fd\u3067\u306a\u3044\u3002 \u672c\u7a3f\u5168\u30b3\u30fc\u30c9 2.7 \u3067\u52d5\u4f5c\u3059\u308b\u3002 Python \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8abf\u3079\u308b\u306b\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089 python \u2013version \u3068\u3059\u308b\u3068\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u3002 \u57fa\u672c\u30c7\u30fc\u30bf\u578b \u00b6 \u4ed6\u306e\u591a\u304f\u306e\u8a00\u8a9e\u3068\u540c\u3058\u304fPython\u306b\u306f \u6574\u6570\u578b , \u6d6e\u52d5\u5c0f\u6570\u70b9\u578b , \u30d6\u30fc\u30eb(\u771f\u507d)\u578b , \u6587\u5b57\u5217\u578b \u3068\u3044\u3046\u57fa\u672c\u30c7\u30fc\u30bf\u578b\u304c\u3042\u308b\u3002 \u3053\u308c\u3089\u306e\u30c7\u30fc\u30bf\u578b\u306f\u4ed6\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3068\u985e\u4f3c\u3057\u3066\u3044\u308b\u3002 \u6570\u5024 \u00b6 \u6574\u6570\u578b\u3068\u6d6e\u52d5\u5c0f\u6570\u70b9\u578b\u306f\u4ed6\u8a00\u8a9e\u3068\u540c\u69d8\u306b\u52d5\u4f5c\u3059\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 x = 3 print ( type (x)) # \u5370\u5b57 \"<type 'int'>\" print (x) # \u5370\u5b57\"3\" print (x + 1 ) # \u52a0\u7b97; \u5370\u5b57 \"4\" print (x - 1 ) # \u6e1b\u7b97; \u5370\u5b57 \"2\" print (x * 2 ) # \u4e57\u7b97; \u5370\u5b57 \"6\" print (x ** 2 ) # \u6307\u6570; \u5370\u5b57 \"9\" x += 1 print (x) # \u5370\u5b57 \"4\" x *= ( 2 ) print (x) # \u5370\u5b57 \"8\" y = 2.5 print ( type (y)) # \u5370\u5b57 \"<type 'float'>\" print (y, y + 1 , y * 2 , y ** 2 ) # \u5370\u5b57 \"2.5 3.5 5.0 6.25\" \u4ed6\u8a00\u8a9e\u3068\u7570\u306a\u308aPython\u306b\u306f\u5897\u5206 x++ \uff0c\u6e1b\u5206 x\u2013 \u3092\u884c\u3046\u5358\u9805\u6f14\u7b97\u5b50\u306f \u306a\u3044\u3002 Python\u306b\u306f\u500d\u7cbe\u5ea6\u6574\u6570\uff0c\u8907\u7d20\u6570\u578b\u3082\u6a19\u6e96\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3002\u8a73\u7d30\u306f https://docs.python.org/2/library/stdtypes.html#numeric-types-int-float-long-complex \u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u3002 \u30d6\u30fc\u30eb\u578b(\u771f\u507d\u578b): Python\u306f2\u5024\u8ad6\u7406\u6f14\u7b97\u7528\u306e\u8a18\u53f7([ && ] [ || ], \u306a\u3069)\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002 1 2 3 4 5 6 7 t = True f = False print ( type (t)) # \u5370\u5b57 \"<type 'bool'>\" print (t and f) # \u8ad6\u7406\u7a4d AND; \u5370\u5b57 \"False\" print (t or f) # \u8ad6\u7406\u548c OR; \u5370\u5b57 \"True\" print ( not t) # \u8ad6\u7406\u5426\u5b9a NOT; \u5370\u5b57 \"False\" print (t != f) # \u6392\u4ed6\u7684\u8ad6\u7406\u548c XOR; \u5370\u5b57 \"True\" \u6587\u5b57\u5217 \u00b6 Python\u306f\u6587\u5b57\u5217\u306e\u6271\u3044\u306b\u512a\u308c\u308b 1 2 3 4 5 6 7 8 hello = 'hello' # \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306f\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8 world = \"world\" # \u3042\u308b\u3044\u306f\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3002\u4e21\u65b9\u53ef\u80fd print (hello) # \u5370\u5b57 \"hello\" print ( len (hello)) # \u6587\u5b57\u5217\u9577\u306e\u5370\u5b57; \u5370\u5b57 \"5\" hw = hello + ' ' + world # \u6587\u5b57\u5217\u9023\u7d50 print (hw) # \u5370\u5b57 \"hello world\" hw12 = '%s %s %d' % (hello, world, 12 ) # sprintf \u5f62\u5f0f\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 print (hw12) # \u5370\u5b57 \"hello world 12\" \u6587\u5b57\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u6709\u76ca\u306a\u30e1\u30bd\u30c3\u30c9\u7fa4\u3067\u3042\u308b\u3002 1 2 3 4 5 6 7 s = \"hello\" print (s.capitalize()) # \u6587\u5b57\u5217\u306e\u8a9e\u982d\u306e\u5927\u6587\u5b57\u5316; \u5370\u5b57 \"Hello\" print (s.upper()) # \u6587\u5b57\u5217\u306e\u5927\u6587\u5b57\u5316; \u5370\u5b57 \"HELLO\" print (s.rjust( 7 )) # \u6587\u5b57\u5217\u306e\u53f3\u5bc4\u305b, \u7a7a\u767d\u3067\u57cb\u307e\u308b; \u5370\u5b57 \" hello\" print (s.center( 7 )) # \u6587\u5b57\u5217\u306e\u30bb\u30f3\u30bf\u30ea\u30f3\u30b0\uff0c\u7a7a\u767d\u3067\u57cb\u3081\u308b; \u5370\u5b57 \" hello \" print (s.replace( 'l' , '(ell)' )) # \u90e8\u5206\u6587\u5b57\u5217\u306e\u7f6e\u63db; \u5370\u5b57 \"he(ell)(ell)o\" print ( ' world ' .strip()) # \u7a7a\u767d\u306e\u9664\u53bb; \u5370\u5b57 \"world\" \u5168\u6587\u5b57\u5217\u30e1\u30bd\u30c3\u30c9\u306f https://docs.python.org/2/library/stdtypes.html#string-methods \u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3002 \u30b3\u30f3\u30c6\u30ca \u00b6 Python \u306b\u306f\u30ea\u30b9\u30c8\uff0c\u8f9e\u66f8\uff0c\u96c6\u5408\uff0c\u30bf\u30d7\u30eb\u3068\u3044\u3046\u30b3\u30f3\u30c6\u30ca\u304c\u6a19\u6e96\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3002 \u30ea\u30b9\u30c8 \u00b6 \u30ea\u30b9\u30c8\u306f\u914d\u5217\u306ePython\u5b9f\u88c5\u3067\u3042\u308b\u304c\uff0c\u30b5\u30a4\u30ba\u53ef\u5909\uff0c\u304b\u3064\uff0c\u7570\u306a\u308b\u8981\u7d20\u3092\u6301\u3064\u3053\u3068\u304c \u3067\u304d\u308b\u3002 1 2 3 4 5 6 7 8 9 xs = [ 3 , 1 , 2 ] # \u30ea\u30b9\u30c8\u306e\u4f5c\u6210 print (xs, xs[ 2 ]) # \u5370\u5b57 \"[3, 1, 2] 2\" print (xs[- 1 ]) # \u8ca0\u306e\u6307\u5b9a\u5b50\u306f\u30ea\u30b9\u30c8\u672b\u7aef\u304b\u3089\u306e\u8a08\u6570; \u5370\u5b57 \"2\" xs[ 2 ] = 'foo' # \u30ea\u30b9\u30c8\u306b\u306f\u7570\u306a\u308b\u8981\u7d20\u3092\u542b\u3080\u3053\u3068\u304c\u3067\u304d\u308b print (xs) # \u5370\u5b57 \"[3, 1, 'foo']\" xs.append( 'bar' ) # \u30ea\u30b9\u30c8\u672b\u306b\u65b0\u8981\u7d20\u3092\u8ffd\u52a0 print (xs) # \u5370\u5b57 x = xs.pop() # \u30ea\u30b9\u30c8\u306e\u6700\u7d42\u8981\u7d20\u53d6\u308a\u9664\u304d\u305d\u306e\u5024\u3092\u8fd4\u3059 print (x, xs) # \u5370\u5b57 \"bar [3, 1, 'foo']\" \u4e0a\u3068\u540c\u69d8\u306b\u8840\u307f\u3069\u308d\u306e\u5168\u30ea\u30b9\u30c8\u306e\u8a73\u7d30\u304c https://docs.python.org/2/tutorial/datastructures.html#more-on-lists \u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3002 \u30b9\u30e9\u30a4\u30b9: \u00b6 Python \u306b\u306f\u4e00\u65e6\u30ea\u30b9\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308c\u3070\uff0c\u305d\u306e\u4e0b\u4f4d\u30ea\u30b9\u30c8\u3078\u7c21\u4fbf\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u8a18\u6cd5\u304c\u3042\u308b\u3002\u3053\u308c\u3092\u30b9\u30e9\u30a4\u30b9\u3068\u547c\u3076\u3002 1 2 3 4 5 6 7 8 9 nums = list ( range ( 5 )) # range \u306f\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u3067\u6574\u6570\u304b\u3089\u306a\u308b\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3059\u308b print (nums) # \u5370\u5b57 \"[0, 1, 2, 3, 4]\" print (nums[ 2 : 4 ]) # 2\u756a\u76ee\u306e\u8981\u7d20\u304b\u30894\u756a\u76ee\u672a\u6e80\u306e\u30b9\u30e9\u30a4\u30b9; \u5370\u5b57 \"[2, 3]\" print (nums[ 2 :]) # 2\u756a\u76ee\u304b\u3089\u6700\u5f8c\u307e\u3067\u306e\u30b9\u30e9\u30a4\u30b9; \u5370\u5b57 \"[2, 3, 4]\" print (nums[: 2 ]) # \u5148\u982d\u8981\u7d20\u304b\u3089\u6307\u5b9a\u5b502\u307e\u3067\u306e\u8981\u7d20\u3092\u30b9\u30e9\u30a4\u30b9; \u5370\u5b57 \"[0, 1]\" print (nums[:]) # \u30ea\u30b9\u30c8\u5168\u4f53\u306e\u30b9\u30e9\u30a4\u30b9\u3092\u5f97\u308b; \u5370\u5b57 \"[0, 1, 2, 3, 4]\" print (nums[:- 1 ]) # \u30b9\u30e9\u30a4\u30b9\u6307\u5b9a\u5b50\u306b\u306f\u8ca0\u5024\u3082\u3068\u308b\u3053\u3068\u304c\u3067\u304d\u308b; \u5370\u5b57 \"[0, 1, 2, 3]\" nums[ 2 : 4 ] = [ 8 , 9 ] # \u30b9\u30e9\u30a4\u30b9\u3057\u3066\u65b0\u3057\u3044\u5024\u3092\u5272\u308a\u5f53\u3066\u308b print (nums) # \u5370\u5b57 \"[0, 1, 8, 8, 4]\" NumPy\u306e\u914d\u5217\u306e\u9805\u306b\u304a\u3044\u3066\u30b9\u30e9\u30a4\u30b7\u30f3\u30b0\u306b\u3064\u3044\u3066\u518d\u3073\u89e6\u308c\u308b\u3053\u3068\u3068\u3059\u308b\u3002 \u30eb\u30fc\u30d7: \u00b6 \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30ea\u30b9\u30c8\u306e\u8981\u7d20\u3092\u7e70\u308a\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002 1 2 3 4 animals = [ 'cat' , 'dog' , 'monkey' ] for animal in animals: print (animal) # \u5404\u884c\u306b\u5370\u5b57 \"cat\", \"dog\", \"monkey\" \u3042\u308b\u30eb\u30fc\u30d7\u5185\u3067\u5404\u8981\u7d20\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u53c2\u7167\u3057\u305f\u3051\u308c\u3070\uff0c\u7e70\u308a\u8fd4\u3057\u5185\u90e8\u3067\u7d44\u307f\u8fbc\u307f \u95a2\u6570[ enumerate ]\u3092\u4f7f\u3048\u3070\u826f\u3044\u3002 1 2 3 4 animals = [ 'cat' , 'dog' , 'monkey' ] for idx, animal in enumerate (animals): print ( '#%d: %s' % (idx + 1 , animal)) # \u5370\u5b57\u884c\u6bce\u306b \"#1: cat\", \"#2: dog\", \"#3: monkey\" \u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18: \u00b6 \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u304a\u3044\u3066\u306f\u3042\u308b\u578b\u306e\u30c7\u30fc\u30bf\u3092\u5225\u306e\u578b\u3078\u5909\u63db\u3057\u305f \u3044\u5834\u5408\u304c\u591a\u3044\u3002\u81ea\u4e57\u3092\u8a08\u7b97\u3059\u308b\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u793a\u3059: 1 2 3 4 5 nums = [ 0 , 1 , 2 , 3 , 4 ] squares = [] for x in nums: squares.append(x ** 2 ) print (squares) # \u5370\u5b57 [0, 1, 4, 9, 16] \u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18 \u3092\u4f7f\u3048\u3070\u3088\u308a\u7c21\u5358\u306a\u30b3\u30fc\u30c9\u304c\u66f8\u3051\u308b: 1 2 3 nums = [ 0 , 1 , 2 , 3 , 4 ] squares = [x ** 2 for x in nums] print (squares) # \u5370\u5b57 [0, 1, 4, 9, 16] \u8f9e\u66f8: \u00b6 Java \u306e Map \u3084 Javascript \u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u540c\u69d8\uff0c\u8f9e\u66f8\u3068\u306f\uff0c\u30ad\u30fc\u5024\u3068\u30da\u30a2\u5024\u3092 \u96c6\u3081\u305f\u3082\u306e\u3067\u3042\u308b\u3002 1 2 3 4 5 6 7 8 9 10 d = { 'cat' : 'cute' , 'dog' : 'furry' } # \u30c7\u30fc\u30bf\u304b\u3089\u8f9e\u66f8\u3092\u4f5c\u6210 print (d[ 'cat' ]) # \u8f9e\u66f8\u306e\u9805\u76ee\u304b\u3089\u5185\u5bb9\u3092\u8868\u793a; \u5370\u5b57 \"cute\" print ( 'cat' in d) # \u8f9e\u66f8\u5185\u3092\u691c\u7d22\u3057\u30ad\u30fc\u306e\u5b58\u5728\u3092\u8fd4\u3059; \u5370\u5b57 \"True\" d[ 'fish' ] = 'wet' # \u65b0\u9805\u76ee\u3092\u8ffd\u52a0 print (d[ 'fish' ]) # \u5370\u5b57 \"wet\" # print(d['monkey']) # \u8f9e\u66f8 d \u304b\u3089\u30ad\u30fc'monkey'\u3092\u691c\u7d22\u3002\u5b58\u5728\u3057\u306a\u3044\u3068\u30ad\u30fc\u30a8\u30e9\u30fc print (d.get( 'monkey' , 'N/A' )) # \u8f9e\u66f8\u306e\u691c\u7d22\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u4ed8\u304d; \u5370\u5b57 \"N/A\" print (d.get( 'fish' , 'N/A' )) # \u8f9e\u66f8\u306e\u691c\u7d22\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u4ed8\u304d; \u5370\u5b57 \"wet\" del (d[ 'fish' ]) # \u8f9e\u66f8\u5185\u306e\u9805\u76ee\u3092\u524a\u9664 print (d.get( 'fish' , 'N/A' )) # \"fish\" \u306f\u8f9e\u66f8\u306b\u306a\u3044\u306e\u3067 \"N/A\" \u8f9e\u66f8\u306b\u3064\u3044\u3066\u3082\u30a6\u30a7\u30d6\u4e0a\u306b\u6587\u66f8\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u3002 \u30eb\u30fc\u30d7: \u00b6 \u8f9e\u66f8\u306e\u30ad\u30fc\u3092\u7e70\u308a\u8fd4\u3059\u7c21\u4fbf\u6cd5\u304c\u30eb\u30fc\u30d7\u3067\u3042\u308b: 1 2 3 4 5 d = { 'person' : 2 , 'cat' : 4 , 'spider' : 8 } for animal in d: legs = d[animal] print ( 'A %s has %d legs' % (animal, legs)) # \u5370\u5b57 \"A person has 2 legs\", \"A spider has 8 legs\", \"A cat has 4 legs\" \u8f9e\u66f8\u306e\u5404\u9805\u76ee\u306b\u5bfe\u5fdc\u3059\u308b\u5024\u3092\u53d6\u308a\u51fa\u3059\u306b\u306f iteritems \u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u308b: 1 2 3 4 d = { 'person' : 2 , 'cat' : 4 , 'spider' : 8 } for animal, legs in d.items(): print ( 'A %s has %d legs' % (animal, legs)) # \u5370\u5b57 \"A person has 2 legs\", \"A spider has 8 legs\", \"A cat has 4 legs\" \u8f9e\u66f8\u5185\u5305\u8868\u8a18: \u00b6 \u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3068\u540c\u69d8\uff0c\u8f9e\u66f8\u5185\u5305\u8868\u8a18\u306b\u3082\u7c21\u4fbf\u306a\u65b9\u6cd5\u304c\u5b58\u5728\u3059\u308b\u3002\u4ee5\u4e0b\u306e\u4f8b\u306e\u3068\u304a\u308a: 1 2 3 nums = [ 0 , 1 , 2 , 3 , 4 ] even_num_to_square = {x: x ** 2 for x in nums if x % 2 == 0 } print (even_num_to_square) # \u5370\u5b57 \"{0: 0, 2: 4, 4: 16}\" \u96c6\u5408: \u00b6 \u96c6\u5408\u3068\u306f\u7570\u306a\u308b\u8981\u7d20\u3092\u6301\u3064\u9806\u756a\u3092\u6301\u305f\u306a\u3044\u30c7\u30fc\u30bf\u306e\u96c6\u307e\u308a\u3067\u3042\u308b\u3002\u4ee5\u4e0b\u306e\u4f8b\u3092\u53c2\u7167: 1 2 3 4 5 6 7 8 9 10 animals = { 'cat' , 'dog' } print ( 'cat' in animals) # \u96c6\u5408\u5185\u306e\u8981\u7d20\u306e\u5b58\u5728\u306e\u6709\u7121\u306e\u30c1\u30a7\u30c3\u30af; \u5370\u5b57 \"True\" print ( 'fish' in animals) # \u5370\u5b57 \"False\" animals.add( 'fish' ) # \u96c6\u5408\u306b\u8981\u7d20\u3092\u8ffd\u52a0 print ( 'fish' in animals) # \u5370\u5b57 \"True\" print ( len (animals)) # \u96c6\u5408\u306e\u8981\u7d20\u6570\u3092\u8fd4\u3059; \u5370\u5b57 \"3\" animals.add( 'cat' ) # \u96c6\u5408\u306b\u65e2\u5b58\u306e\u8981\u7d20\u3092\u52a0\u3048\u3066\u3082\u4f55\u3082\u8d77\u304d\u306a\u3044 print ( len (animals)) # \u5370\u5b57 \"3\" animals.remove( 'cat' ) # \u96c6\u5408\u304b\u3089\u8981\u7d20\u3092\u524a\u9664 print ( len (animals)) # \u5370\u5b57 \"2\" \u4eca\u307e\u3067\u3068\u540c\u3058\u304f\uff0c\u96c6\u5408\u306e\u5168\u3066\u306b\u3064\u3044\u3066\u8a18\u8ff0\u3057\u305f\u6587\u66f8\u304c\u4e0a\u6893\u3055\u308c\u3066\u3044\u308b\u3002 \u7e70\u308a\u8fd4\u3057: \u00b6 \u96c6\u5408\u306b\u304a\u3051\u308b\u7e70\u308a\u8fd4\u3057\u3082\u30ea\u30b9\u30c8\u306b\u5bfe\u3059\u308b\u7e70\u308a\u8fd4\u3057\u3068\u540c\u3058\u8a18\u6cd5\u3067\u3042\u308b\u3002 \u3057\u304b\u3057\u96c6\u5408\u306b\u306f\u9806\u5e8f\u304c\u306a\u3044\u306e\u3067\uff0c\u96c6\u5408\u5185\u306e\u5404\u8981\u7d20\u306b\u3064\u3044\u3066\u9806\u756a\u3092\u4eee\u5b9a\u3057\u3066\u306f\u306a\u3089\u306a\u3044: 1 2 3 4 animals = { 'cat' , 'dog' , 'fish' } for idx, animal in enumerate (animals): print ( '#%d: %s' % (idx + 1 , animal)) # \u5370\u5b57 \"#1: fish\", \"#2: dog\", \"#3: cat\" \u96c6\u5408\u5185\u5305\u8868\u8a18: \u00b6 \u30ea\u30b9\u30c8\u3084\u8f9e\u66f8\u3068\u540c\u69d8\uff0c\u96c6\u5408\u5185\u5305\u306b\u3082\u7c21\u6613\u8a18\u6cd5\u304c\u5b58\u5728\u3059\u308b: 1 2 3 from math import sqrt nums = { int (sqrt(x)) for x in range ( 30 )} print (nums) # \u5370\u5b57 \"set([0, 1, 2, 3, 4, 5])\" \u30bf\u30d7\u30eb: \u00b6 \u30bf\u30d7\u30eb\u3068\u306f\u5024\u306e\u9806\u5e8f\u306e\u5909\u66f4\u304c\u4e0d\u80fd\u306a\u9806\u5e8f\u4ed8\u304d\u30ea\u30b9\u30c8\u3067\u3042\u308b\u3002\u30bf\u30d7\u30eb\u306f\u30ea\u30b9\u30c8\u306b\u985e\u4f3c \u3057\u3066\u3044\u308b\u304c\uff0c\u8f9e\u66f8\u306e\u30ad\u30fc\u3068\u3057\u3066\u96c6\u5408\u3092\u8981\u7d20\u3068\u3057\u3066\u6301\u3064\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\u30ea\u30b9\u30c8\u306b \u306f\u3053\u306e\u7279\u5fb4\u306f\u7121\u3044\u3002\u7c21\u5358\u306a\u4f8b\u3092\u793a\u3059: 1 2 3 4 5 d = {(x, x + 1 ): x for x in range ( 10 )} # \u30bf\u30d7\u30eb\u30ad\u30fc\u3092\u6301\u3064\u8f9e\u66f8\u306e\u751f\u6210 t = ( 5 , 6 ) # \u30bf\u30d7\u30eb\u306e\u751f\u6210 print ( type (t)) # \u5370\u5b57 \"<type 'tuple'>\" print (d[t]) # \u5370\u5b57 \"5\" print (d[( 1 , 2 )]) # \u5370\u5b57 \"1\" https://docs.python.org/2/tutorial/datastructures.html#tuples-and-sequences \u306b\u306f\u66f4\u306b\u8a73\u3057\u3044\u60c5\u5831\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3002 \u95a2\u6570 \u00b6 Python \u306e\u95a2\u6570\u306f\u30ad\u30fc\u30ef\u30fc\u30c9 def \u3092\u7528\u3044\u3066\u5b9a\u7fa9\u3055\u308c\u308b\u3002\u4ee5\u4e0b\u306e\u4f8b: 1 2 3 4 5 6 7 8 9 10 11 def sign (x): if x > 0 : return 'positive' elif x < 0 : return 'negative' else : return 'zero' for x in [- 1 , 0 , 1 ]: print (sign(x)) # \u5370\u5b57 \"negative\", \"zero\", \"positive\" \u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u30ad\u30fc\u30ef\u30fc\u30c9\u4ed8\u304d\u3067\u5b9a\u7fa9\u53ef\u80fd\u3067\u3042\u308b: 1 2 3 4 5 6 7 8 def hello(name, loud= False ): if loud: print( 'HELLO, %s' % name. upper ()) else : print( 'Hello, %s!' % name) hello( 'Bob' ) # \u5370\u5b57 \"Hello, Bob\" hello( 'Fred' , loud= True ) # \u5370\u5b57 \"HELLO, FRED!\" Python \u306e\u30af\u30e9\u30b9\u60c5\u5831\u306f https://docs.python.org/2/tutorial/controlflow.html#defining-functions \u3092\u53c2\u7167\u306e\u3053\u3068 \u30af\u30e9\u30b9 \u00b6 Python\u306b\u304a\u3051\u308b\u30af\u30e9\u30b9\u5b9a\u7fa9\u306e\u8a18\u6cd5\u306f\u76f4\u622a\u7684\u3067\u3042\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Greeter : # Constructor def __init__ ( self , name): self .name = name # \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210 # Instance method def greet ( self , loud= False ): if loud: print ( 'HELLO, %s!' % self .name.upper()) else : print ( 'Hello, %s' % self .name) g = Greeter( 'Fred' ) # Greeter \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210 g.greet() # \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057; \u5370\u5b57 \"Hello, Fred\" g.greet(loud= True ) # \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057; \u5370\u5b57 \"HELLO, FRED!\" \u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30\u306f\u4ee5\u4e0b\u3067\u3042\u308b https://docs.python.org/2/tutorial/classes.html NumPy \u00b6 NumPy\u306fPython\u306b\u304a\u3051\u308b\u79d1\u5b66\u6280\u8853\u8a08\u7b97\u306e\u6838\u3068\u306a\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u3002\u9ad8\u6027\u80fd\u591a\u6b21\u5143\u914d\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u914d\u5217\u51e6\u7406\u7528\u30c4\u30fc\u30eb\u304b\u3089\u69cb\u6210\u3055\u308c\u3066\u3044\u308b\u3002MATLAB \u304c\u65e2\u77e5\u306a\u3089\u3070\uff0c\u672c\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u304b\u3089NumPy\u3092\u59cb\u3081\u308b\u306e\u304c\u826f\u3044\u3060\u308d\u3046\u3002 \u914d\u5217 \u00b6 NumPy\u306e\u914d\u5217\u306f\u5024\u306e\u683c\u5b50\u72b6\u914d\u7f6e\u3067\u3042\u308b\u3002\u5168\u8981\u7d20\u306e\u5024\u306f\u540c\u3058\u30c7\u30fc\u30bf\u578b\u3067\u3042\u308a\uff0c\u975e\u8ca0\u6574\u6570\u306e\u30bf\u30d7\u30eb\u3067\u6307\u5b9a\u53ef\u80fd\u3067\u3042\u308b\u3002 Python\u306b\u304a\u3051\u308b\u914d\u5217\u306f\u5165\u308c\u5b50\u306b\u306a\u3063\u305f\u30ea\u30b9\u30c8\u3067\u3042\u308a\uff0c\u30ab\u30ae\u30ab\u30c3\u30b3\u3092\u7528\u3044\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 import numpy as np a = np.array([ 1 , 2 , 3 ]) # \u6b21\u5143\u6570 1 \u306e\u914d\u5217\u306e\u4f5c\u6210 print ( type (a)) # \u5370\u5b57 \"<type 'numpy.ndarray'>\" print (a.shape) # \u5370\u5b57 \"(3,)\" print (a[ 0 ], a[ 1 ], a[ 2 ]) # \u5370\u5b57 \"1 2 3\" a[ 0 ] = 5 # \u914d\u5217\u306e\u8981\u7d20\u3092\u4e00\u3064\u5909\u66f4 print (a) # \u5370\u5b57 \"[5, 2, 3]\" b = np.array([[ 1 , 2 , 3 ],[ 4 , 5 , 6 ]]) # \u6b21\u5143\u6570\u304c 2 \u306e\u914d\u5217\u306e\u4f5c\u6210 print (b.shape) # \u5370\u5b57 \"(2, 3)\" print (b[ 0 , 0 ], b[ 0 , 1 ], b[ 1 , 0 ]) # \u5370\u5b57 \"1 2 4\" NumPy \u306b\u306f\u914d\u5217\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import numpy as np a = np.zeros(( 2 , 2 )) # \u5168\u8981\u7d20\u304c\u30bc\u30ed\u306e\u914d\u5217\u306e\u4f5c\u6210 print (a) # \u5370\u5b57 \"[[ 0. 0.] # [ 0. 0.]]\" b = np.ones(( 1 , 2 )) # \u5168\u8981\u7d20\u304c\u30bc\u30ed\u306e\u914d\u5217\u306e\u4f5c\u6210 print (b) # \u5370\u5b57 \"[[ 1. 1.]]\" c = np.full(( 2 , 2 ), 7 ) # \u5b9a\u6570\u884c\u5217\u3092\u4f5c\u6210 print (c) # \u5370\u5b57 \"[[ 7. 7.] # [ 7. 7.]]\" d = np.eye( 2 ) # 2x2 \u306e\u5358\u4f4d\u884c\u5217\u306e\u4f5c\u6210 print (d) # \u5370\u5b57 \"[[ 1. 0.] # [ 0. 1.]]\" e = np.random.random(( 2 , 2 )) # \u4e71\u6570\u3067\u521d\u671f\u5316\u3057\u305f\u914d\u5217\u306e\u4f5c\u6210 print (e) # \u5370\u5b57\u4f8b \"[[ 0.91940167 0.08143941] # [ 0.68744134 0.87236687]]\" \u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\u4ed6\u306e\u65b9\u6cd5\u306f http://docs.scipy.org/doc/numpy/user/basics.creation.html#arrays-creation \u3067\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u914d\u5217\u6307\u5b9a \u00b6 NumPy \u306b\u306f\u6307\u5b9a\u5b50\u3092\u914d\u5217\u5316\u3059\u308b\u65b9\u6cd5\u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u3002 \u30b9\u30e9\u30a4\u30b9: \u00b6 Python\u306b\u304a\u3051\u308b\u30ea\u30b9\u30c8\u3068\u540c\u69d8\uff0cNumPy\u306e\u914d\u5217\u306b\u306f\u30b9\u30e9\u30a4\u30b9 \u304c\u9069\u7528\u53ef\u80fd\u3067\u3042\u308b\u3002\u914d\u5217\u306e\u5404\u6b21\u5143\u6bce\u306b\u30b9\u30e9\u30a4\u30b9\u3092\u6307\u5b9a\u53ef\u80fd\u3067\u3042\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import numpy as np # 3\u884c4\u5217\u3067\u968e\u6570\u304c2\u306e\u884c\u5217\u306e\u4f5c\u6210 # [[ 1 2 3 4] # [ 5 6 7 8] # [ 9 10 11 12]] a = np. array ([[ 1 , 2 , 3 , 4 ], [ 5 , 6 , 7 , 8 ], [ 9 , 10 , 11 , 12 ]]) # \u4e0b\u4f4d\u884c\u5217\u306e\u30b9\u30e9\u30a4\u30b9\u3057\uff0c\u4e0a2\u884c\u306e1\u5217\u76ee2\u5217\u76ee\u3092\u7528\u3044\u30662\u884c2\u5217\u306e\u884c\u5217\u3092\u4f5c\u6210 # [[2 3] # [6 7]] b = a[: 2 , 1 : 3 ] # \u30b9\u30e9\u30a4\u30b9\u306f\u5143\u884c\u5217\u3078\u306e\u53c2\u7167\u306a\u306e\u3067\uff0c\u30b9\u30e9\u30a4\u30b9\u3078\u306e\u5909\u66f4\u306f\u5143\u30c7\u30fc\u30bf\u306b\u5f71\u97ff\u3092\u53ca\u307c\u3059 print (a[ 0 , 1 ]) # \u5370\u5b57 \"2\" b[ 0 , 0 ] = 77 # b[0, 0] \u306f a[0, 1] \u3068\u7b49\u4fa1 print (a[ 0 , 1 ]) # \u5370\u5b57 \"77\" \u6574\u6570\u6307\u5b9a\u5b50\u3068\u30b9\u30e9\u30a4\u30b9\u6307\u5b9a\u5b50\u3092\u6df7\u5728\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u3057\u304b\u3057\uff0c\u305d\u3046\u3059\u308b\u3068\u5143\u884c\u5217\u3088\u308a\u3082\u6b21\u5143\u306e\u4f4e\u3044\u884c\u5217\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002 MATLAB \u306b\u304a\u3051\u308b\u884c\u5217\u30b9\u30e9\u30a4\u30b9\u3068\u306f\u7570\u306a\u308b\u3053\u3068\u306b\u6ce8\u610f\u305b\u3088\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import numpy as np # 3\u884c4\u5217\u306e2\u6b21\u306e\u884c\u5217\u3092\u4f5c\u6210 # [[ 1 2 3 5] # [ 4 6 7 8] # [ 9 10 11 12]] a = np.array([[ 1 , 2 , 3 , 4 ], [ 5 , 6 , 7 , 8 ], [ 9 , 10 , 11 , 12 ]]) # \u884c\u5217\u306e\u4e2d\u592e\u884c\u3078\u306e\u30a2\u30af\u30bb\u30b92\u7a2e\u985e # \u30b9\u30e9\u30a4\u30b9\u3068\u6574\u6570\u306e\u6df7\u5728\u306f\u968e\u6570\u306e\u4f4e\u4e0b\u3092\u3082\u305f\u3089\u3059 # \u4e00\u65b9\uff0c\u30b9\u30e9\u30a4\u30b9\u306e\u307f\u3092\u4f7f\u7528\u3057\u305f\u5834\u5408\u306b\u306f\u539f\u884c\u5217\u306e\u6b21\u5143\u4f4e\u6e1b\u306f\u767a\u751f\u3057\u306a\u3044 row_r1 = a[ 1 , :] # \u884c\u5217 a \u306e 2 \u884c\u76ee\u306e\u5168\u5217\u8868\u793a row_r2 = a[ 1 : 2 , :] # \u884c\u5217 a \u306e 2 \u884c\u76ee\u306e\u5168\u5217\u8868\u793a print (row_r1, row_r1.shape) # \u5370\u5b57 \"[5 6 7 8] (4,)\" print (row_r2, row_r2.shape) # \u5370\u5b57 \"[[5 6 7 8]] (1, 4)\" # \u884c\u5217\u306b\u5bfe\u3059\u308b\u5217\u3078\u306e\u64cd\u4f5c\u3082\u540c\u69d8 col_r1 = a[:, 1 ] col_r2 = a[:, 1 : 2 ] print (col_r1, col_r1.shape) # \u5370\u5b57 \"[ 2 6 10] (3,)\" print (col_r2, col_r2.shape) # \u5370\u5b57 \"[[ 2] # [ 6] # [10]] (3, 1)\" \u6574\u6570\u578b\u914d\u5217\u6307\u5b9a\u5b50: \u00b6 NumPy\u306e\u914d\u5217\u306b\u5bfe\u3057\u3066\u30b9\u30e9\u30a4\u30b9\u3092\u5b9f\u884c\u3059\u308b\u3068\uff0c\u7d50\u679c\u306f\u5143\u884c\u5217\u306e\u4e0b\u4f4d\u914d\u5217\u3068\u306a\u308b\u3002 \u3053\u308c\u306b\u5bfe\u3057\u3066\uff0c\u6574\u6570\u578b\u5909\u6570\u304b\u3089\u306a\u308b\u914d\u5217\u306b\u5bfe\u3057\u3066\u30b9\u30e9\u30a4\u30b9\u3092\u5b9f\u884c\u3059\u308c\u3070\uff0c \u65b0\u305f\u306a\u914d\u5217\u304c\u69cb\u6210\u3055\u308c\u308b\u3002\u4ee5\u4e0b\u306e\u3068\u304a\u308a: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import numpy as np a = np.array([[ 1 , 2 ], [ 3 , 4 ], [ 5 , 6 ]]) # \u6574\u6570\u578b\u914d\u5217\u306e\u4f8b \u623b\u308a\u5024\u306e\u914d\u5217\u306e shape \u306f (3,) print (a[[ 0 , 1 , 2 ], [ 0 , 1 , 0 ]]) # \u5370\u5b57 \"[1 4 5]\" # \u4e0a\u4f8b\u306f\u6574\u6570\u578b\u914d\u5217\u3092\u6307\u5b9a\u5b50\u3068\u3057\u305f\u5834\u5408\u3068\u7b49\u3057\u3044: print (np.array([a[ 0 , 0 ], a[ 1 , 1 ], a[ 2 , 0 ]])) # \u5370\u5b57 \"[1 4 5]\" # \u6574\u6570\u578b\u914d\u5217\u3092\u6307\u5b9a\u5b50\u3068\u3057\u3066\u7528\u3044\u308b\u3068\u5143\u914d\u5217\u3068\u540c\u3058\u8981\u7d20\u3092\u518d\u5229\u7528\u3067\u304d\u308b print (a[[ 0 , 0 ], [ 1 , 1 ]]) # \u5370\u5b57 \"[2 2]\" # \u5148\u306e\u6574\u6570\u578b\u306e\u914d\u5217\u6307\u5b9a\u5b50\u306b\u7b49\u3057\u3044 print (np.array([a[ 0 , 1 ], a[ 0 , 1 ]])) # \u5370\u5b57 \"[2 2]\" print (np.array([a[ 0 , 1 ], a[ 0 , 1 ]])) # \u5370\u5b57 \"[2 2]\" \u30d6\u30fc\u30ea\u30a2\u30f3\u914d\u5217\u6307\u5b9a\u5b50: \u00b6 \u30fc\u30eb(2\u5024)\u578b\u914d\u5217\u6307\u5b9a\u5b50\u306f\u914d\u5217\u306e\u4efb\u610f\u306e\u8981\u7d20\u3092\u53d6\u308a \u51fa\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\u3053\u306e\u6307\u5b9a\u5b50\u306b\u3088\u308a\u914d\u5217\u304b\u3089\u4efb\u610f\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u8981\u7d20\u304b\u3089\u306a \u308b\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import numpy as np a = np.array([[ 1 , 2 ], [ 3 , 4 ], [ 5 , 6 ]]) bool_idx = (a > 2 ) # 2\u3000\u3088\u308a\u5927\u304d\u3044\u914d\u5217\u306e\u8981\u7d20\u3092\u63a2\u3059 # \u3053\u308c\u306b\u3088\u308a numpy \u306e\u914d\u5217\u3068\u7b49\u3057\u3044 shape \u3067\u30d6\u30fc\u30eb\u578b\u306e # \u914d\u5217\u3092\u8fd4\u3059\u3002bool_idx \u306f a \u306e\u5404\u8981\u7d20\u304c 2 \u3088\u308a\u5927\u304d\u3044 # \u304b\u5426\u304b\u3092\u793a\u3059 print (bool_idx) # \u5370\u5b57 \"[[False False] # [ True True] # [ True True]]\" # \u30d6\u30fc\u30eb\u578b\u914d\u5217\u6307\u5b9a\u5b50\u3092\u7528\u3044\u3066\u968e\u65701\u306e\u884c\u5217\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b # bool_idx \u306e True \u306b\u5bfe\u5fdc\u3059\u308b\u8981\u7d20\u3067\u69cb\u6210\u3055\u308c\u308b\u884c\u5217\u3067\u3042\u308b print (a[bool_idx]) # \u5370\u5b57 \"[3 4 5 6]\" # \u4e0a\u4f8b\u3092\u7c21\u6f54\u306b\u8868\u8a18\u53ef\u80fd\u3067\u3042\u308b print (a[a > 2 ]) # \u5370\u5b57 \"[3 4 5 6]\" \u672c\u7a3f\u306e\u7c21\u6f54\u6027\u3086\u3048NumPy\u306e\u914d\u5217\u6307\u5b9a\u5b50\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u591a\u304f\u3092\u8a18\u8f09\u3057\u3066\u3044\u306a\u3044\u3002 \u8a73\u7d30\u306f\u6587\u732e\u3092\u53c2\u7167\u306e\u3053\u3068\u3002 \u30c7\u30fc\u30bf\u578b \u00b6 NumPy \u306e\u914d\u5217\u306f\u540c\u3058\u578b\u306e\u8981\u7d20\u304b\u3089\u306a\u308b\u30b0\u30ea\u30c3\u30c9\u3067\u3042\u308b\u3002 \u914d\u5217\u4f5c\u6210\u306b\u306f\u4e00\u9023\u306e\u30c7\u30fc\u30bf\u578b\u3092\u5229\u7528\u53ef\u80fd\u3067\u3042\u308b\u3002 NumPy\u306f\u914d\u5217\u306e\u30c7\u30fc\u30bf\u578b\u304c\u4f55\u3067\u3042\u308b\u304b\u3092\u985e\u63a8\u3057\u3088\u3046\u3068\u3059\u308b\u3002 \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\u306b\u3088\u308a\u660e\u793a\u7684\u306b\u914d\u5217\u306e\u30c7\u30fc\u30bf\u578b\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b: 1 2 3 4 5 6 7 8 9 10 import numpy as np x = np.array([ 1 , 2 ]) # numpy \u306b\u30c7\u30fc\u30bf\u578b\u3092\u9078\u629e\u3055\u305b\u308b print (x.dtype) # \u5370\u5b57 \"int64\" x = np.array([ 1.0 , 2.0 ]) # numpy \u306b\u30c7\u30fc\u30bf\u578b\u3092\u9078\u629e\u3055\u305b\u308b print (x.dtype) # \u5370\u5b57 \"float64\" x = np.array([ 1 , 2 ], dtype=np.int64) # \u30c7\u30fc\u30bf\u578b\u306e\u5f37\u5236\u6307\u5b9a print (x.dtype) # \u5370\u5b57 \"int64\" NumPy \u306e\u5168\u30c7\u30fc\u30bf\u578b\u306b\u3064\u3044\u3066\u306f http://docs.scipy.org/doc/numpy/reference/arrays.dtypes.html \u3092\u53c2\u7167\u306e\u3053\u3068\u3002 \u6570\u5b66\u7684\u914d\u5217 \u00b6 \u57fa\u672c\u7684\u6570\u5b66\u95a2\u6570\u306e\u64cd\u4f5c\u306f\u914d\u5217\u306e\u8981\u7d20\u6bce\u306e\u6f14\u7b97\u3067\u3042\u308b\u3002 NumPy \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u95a2\u6570\u3068\u3057\u3066\u6f14\u7b97\u5b50\u3092\u4e0a\u66f8\u304d\u53ef\u80fd\u3067\u3042\u308b\uff0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 import numpy as np x = np.array([[ 1 , 2 ],[ 3 , 4 ]], dtype=np.float64) y = np.array([[ 5 , 6 ],[ 7 , 8 ]], dtype=np.float64) # \u5bfe\u5fdc\u3059\u308b\u8981\u7d20\u306e\u548c\uff0c\u4e21\u4f8b\u3068\u3082\u540c\u3058\u7d50\u679c\u3092\u5f97\u308b # [[ 6.0 8.0] # [10.0 12.0]] print (x + y) print (np.add(x, y)) # \u5bfe\u5fdc\u3059\u308b\u8981\u7d20\u306e\u5dee\uff0c\u4e21\u4f8b\u3068\u3082\u540c\u3058\u7d50\u679c\u3092\u5f97\u308b # [[-4.0 -4.0] # [-4.0 -4.0]] print (x - y) print (np.subtract(x, y)) # \u5bfe\u5fdc\u3059\u308b\u8981\u7d20\u306e\u7a4d\uff0c\u4e21\u4f8b\u3068\u3082\u540c\u3058\u7d50\u679c\u3092\u5f97\u308b # [[ 5.0 12.0] # [21.0 32.0]] print (x * y) print (np.multiply(x, y)) # \u5bfe\u5fdc\u3059\u308b\u8981\u7d20\u306e\u5f90\uff0c\u4e21\u4f8b\u3068\u3082\u540c\u3058\u7d50\u679c\u3092\u5f97\u308b # [[ 0.2 0.33333333] # [ 0.42857143 0.5 ]] print (x / y) print (np.divide(x, y)) # \u5404\u8981\u7d20\u306e\u5e73\u65b9\u6839 # [[ 1. 1.41421356] # [ 1.73205081 2. ]] print (np.sqrt(x)) MATLAB \u3068\u7570\u306a\u308a\uff0c[ * ] \u306f\u8981\u7d20\u6bce\u306e\u7a4d\u3067\u3042\u308a\uff0c\u884c\u5217\u306e\u7a4d\u3067\u306f\u306a\u3044\u3002 \u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\uff0c\u30d9\u30af\u30c8\u30eb\u3068\u884c\u5217\u306e\u7a4d\uff0c\u884c\u5217\u306e\u7a4d\u306b\u306f[ dot ]\u3092\u7528\u3044\u308b\u3002 [ dot ]\u306f NumPy \u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u914d\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b \u9069\u7528\u53ef\u80fd\u3067\u3042\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import numpy as np x = np.array([[ 1 , 2 ],[ 3 , 4 ]]) y = np.array([[ 5 , 6 ],[ 7 , 8 ]]) v = np.array([ 9 , 10 ]) w = np.array([ 11 , 12 ]) # \u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\u4e21\u8005\u3068\u3082\u540c\u3058\u304f 219 \u3092\u5f97\u308b print (v.dot(w)) print (np.dot(v, w)) # \u884c\u5217\u3068\u30d9\u30af\u30c8\u30eb\u306e\u7a4d\u3002\u4e21\u8005\u3068\u3082\u540c\u3058\u304f [29 67] \u3092\u5f97\u308b print (x.dot(v)) print (np.dot(x, v)) # \u884c\u5217\u3068\u884c\u5217\u306e\u7a4d\u3002\u4e21\u8005\u3068\u3082\u540c\u3058\u304f\u4ee5\u4e0b\u306e\u884c\u5217\u3092\u5f97\u308b # [[19 22] # [43 50]] print (x.dot(y)) print (np.dot(x, y)) NumPy \u306f\u884c\u5217\u64cd\u4f5c\u9042\u884c\u306b\u6709\u5f79\u306a\u95a2\u6570\u3092\u6570\u591a\u304f\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3002[ sum ] \u306a\u3069 1 2 3 4 5 6 7 import numpy as np x = np.array([[ 1 , 2 ],[ 3 , 4 ]]) print (np.sum(x)) # \u7dcf\u548c\u3092\u8a08\u7b97 10\u3068\u5370\u5b57 print (np.sum(x, axis= 0 )) # \u5404\u5217\u306e\u7dcf\u548c\u3092\u8a08\u7b97: \"[4 6]\" \u3068\u5370\u5b57 print (np.sum(x, axis= 1 )) # \u5404\u884c\u306e\u7dcf\u548c\u3092\u8a08\u7b97: \"[3 7]\" \u3068\u5370\u5b57 NumPy\u306e\u5168\u6570\u5b66\u95a2\u6570\u30ea\u30b9\u30c8\u306f http://docs.scipy.org/doc/numpy/reference/routines.math.html \u304b\u3089\u5165\u624b\u53ef \u80fd\u3067\u3042\u308b\u3002 \u914d\u5217\u3092\u7528\u3044\u305f\u6570\u5b66\u95a2\u6570\u306e\u8a08\u7b97\u3060\u3051\u3067\u306a\u304f\uff0c\u914d\u5217\u306e reshae \u3084\u4ed6\u306e\u30c7\u30fc\u30bf\u64cd\u4f5c\u304c\u591a\u6570\u5fc5 \u8981\u3068\u306a\u308b\u3002\u5358\u7d14\u306a\u4f8b\u306f\u884c\u5217\u306e\u8ee2\u7f6e\u3067\u3042\u308b\u3002\u884c\u5217\u306e\u8ee2\u7f6e\u306b\u306f\u914d\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e [ T ] \u3092\u4f7f\u3048\u3070\u3088\u3044\u3002 1 2 3 4 5 6 7 8 9 10 11 12 import numpy as np x = np.array([[ 1 , 2 ], [ 3 , 4 ]]) print (x) # \u5370\u5b57 \"[[1 2] # [3 4]]\" print (x.T) # \u5370\u5b57 \"[[1 3] # [2 4]]\" # \u968e\u65701\u306e\u884c\u5217\u3092\u8ee2\u7f6e\u3057\u3066\u3082\u306a\u306b\u3082\u5909\u308f\u3089\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f v = np.array([ 1 , 2 , 3 ]) print (v) # \u5370\u5b57 \"[1 2 3]\" print (v.T) # \u5370\u5b57 \"[1 2 3]\" NumPy \u306f\u914d\u5217\u64cd\u4f5c\u95a2\u6570\u304c\u591a\u3044\u3002 http://docs.scipy.org/doc/numpy/reference/routines.array-manipulation.html \u3092\u53c2\u7167\u3055\u308c\u305f\u3044\u3002 \u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8 \u00b6 \u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u306f\u7b97\u8853\u7684\u64cd\u4f5c\u3092\u884c\u3046\u969b\u3001NumPy\u304c\u7570\u306a\u308b shape \u306e\u914d\u5217\u306b\u5f37\u529b\u306a\u51e6 \u7406\u6a5f\u69cb\u3092\u884c\u3046\u3053\u3068\u3092\u53ef\u80fd\u306b\u3059\u308b\u3002 \u884c\u5217\u306e\u5404\u884c\u306b\u5bfe\u3057\u3066\u5b9a\u6570\u30d9\u30af\u30c8\u30eb\u3092\u52a0\u3048\u308b\u5834\u5408\u3092\u4ee5\u4e0b\u306b\u793a\u3059: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import numpy as np # \u884c\u5217 x \u306e\u5404\u884c\u306b\u5bfe\u3057\u3066\u30d9\u30af\u30c8\u30eb v \u3092\u52a0\u3048\u7d50\u679c\u3092 y \u306b\u683c\u7d0d x = np.array([[ 1 , 2 , 3 ], [ 4 , 5 , 6 ], [ 7 , 8 , 9 ], [ 10 , 11 , 12 ]]) v = np.array([ 1 , 0 , 1 ]) y = np.empty_like(x) # x \u3068\u540c\u3058 shape \u3092\u6301\u3064\u7a7a\u884c\u5217\u3092\u751f\u6210 # \u660e\u793a\u7684\u7e70\u308a\u8fd4\u3057\u3092\u7528\u3044\u3066\u884c\u5217 x \u306e\u5404\u884c\u306b\u30d9\u30af\u30c8\u30eb v \u306e\u8981\u7d20\u3092\u52a0\u7b97 for i in range ( 4 ): y[i, :] = x[i, :] + v # y \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b # [[ 2 2 4] # [ 5 5 7] # [ 8 8 10] # [11 11 13]] print (y) \u884c\u5217 x \u304c\u5de8\u5927\u306a\u5834\u5408Python\u306e\u660e\u793a\u7684\u306a\u30eb\u30fc\u30d7\u306f\u9045\u3044\u3002\u884c\u5217 x \u306e\u5404\u884c \u306b\u30d9\u30af\u30c8\u30eb v \u3092\u52a0\u3048\u308b\u3053\u3068\u306f\u30b9\u30bf\u30c3\u30af\u9818\u57df\u306b\u7a4d\u307e\u308c\u305f v \u306e\u30b3\u30d4\u30fc\u3068\u884c \u5217 vv \u306e\u548c\u3092\u69cb\u6210\u3059\u308b\u3053\u3068\u306b\u7b49\u3057\u3044\u3002\u4ee5\u4e0b\u306e\u4f8b\u306e\u3088\u3046\u306b\u306a\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import numpy as np # \u884c\u5217 x \u306e\u5404\u8981\u7d20\u306b\u30d9\u30af\u30c8\u30eb v \u3092\u52a0\u3048\u308b # \u884c\u5217 y \u306b\u7d50\u679c\u3092\u683c\u7d0d x = np. array ([[ 1 , 2 , 3 ], [ 4 , 5 , 6 ], [ 7 , 8 , 9 ], [ 10 , 11 , 12 ]]) v = np. array ([ 1 , 0 , 1 ]) vv = np. tile (v, ( 4 , 1 )) # v \u304b\u30894\u3064\u306e\u30b9\u30bf\u30c3\u30af\u3092\u4f5c\u6210 print (vv) # \u5370\u5b57 \"[[1 0 1] # [1 0 1] # [1 0 1] # [1 0 1]]\" y = x + vv # x \u3068 vv \u306e\u5404\u8981\u7d20\u3092\u52a0\u3048\u308b print (y) # \u5370\u5b57 \"[[ 2 2 4 # [ 5 5 7] # [ 8 8 10] # [11 11 13]]\" NumPy \u306e\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u306f y \u306e\u591a\u91cd\u30b3\u30d4\u30fc\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306a\u304f\u8a08\u7b97\u3092 \u5b9f\u884c\u3059\u308b\u3002\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3092\u7528\u3044\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4ee5\u4e0b\u306b\u793a\u3059: 1 2 3 4 5 6 7 8 9 10 11 import numpy as np # \u884c\u5217 x \u306e\u5404\u884c\u306b\u30d9\u30af\u30c8\u30eb v \u3092\u52a0\u3048\u308b # \u7d50\u679c\u3092\u884c\u5217 y \u306b\u683c\u7d0d\u3059\u308b x = np.array([[ 1 , 2 , 3 ], [ 4 , 5 , 6 ], [ 7 , 8 , 9 ], [ 10 , 11 , 12 ]]) v = np.array([ 1 , 0 , 1 ]) y = x + v # \u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3092\u4f7f\u3063\u3066 x \u306e\u5404\u884c\u306b v \u3092\u52a0\u3048\u308b print (y) # \u5370\u5b57 \"[[ 2 2 4] # [ 5 5 7] # [ 8 8 10] # [11 11 13]]\" y = x + v \u306e\u884c\u306f\uff0c x \u306f (4,3) \u306e\u6b21\u6570\u3092\u6301\u3061\uff0c v \u306f (3,) \u306e\u6b21\u6570\u3092\u6301\u3064\u3053\u3068\u304c\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u306b\u3088\u308a y = x + v \u304c\u8a08\u7b97\u3055\u308c \u308b\u3002\u3082\u3057 v \u304c\u6b21\u6570 (4,3) \u3067\u3042\u308b\u3088\u3046\u306b\u4f5c\u7528\u3059\u308b\u3002\u5404\u884c\u306f v \u306e \u30b3\u30d4\u30fc\u3067\u3042\u308a\u5404\u8981\u7d20\u306e\u548c\u304c\u8a08\u7b97\u3055\u308c\u308b\u3002 2\u3064\u306e\u884c\u5217\u3092\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u5834\u5408\u4ee5\u4e0b\u306e\u898f\u5247\u306b\u5f93\u3046: \u3082\u3057\u4e8c\u3064\u306e\u884c\u5217\u304c\u540c\u3058\u6b21\u6570\u3067\u306a\u3051\u308c\u3070\u4f4e\u6b21\u6570\u306e\u884c\u5217\u3092\u62e1\u5f35\u3057\u3066\u7b49\u3057\u304f\u3059\u308b\u3002 \u4e8c\u3064\u306e\u884c\u5217\u304c\uff0c\u7279\u5b9a\u306e\u6b21\u5143\u306e\u307f\u4e00\u81f4\u3057\u3066\u3044\u308b\u5834\u5408\uff0c\u7247\u65b9\u306e\u914d\u5217\u306e\u6b21\u5143\u304c1\u3067\u3042\u3063\u3066\u3082\u3001\u4ed6\u306e\u6b21\u5143\u3082\u540c\u3058\u30b5\u30a4\u30ba\u306e\u6b21\u5143\u306b\u3059\u308b\u3002 \u4e8c\u3064\u306e\u914d\u5217\u5168\u3066\u306e\u6b21\u5143\u306b\u4e92\u63db\u6027\u304c\u3042\u308c\u3070\u4e21\u8005\u3068\u3082\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3055\u308c\u308b\u3002 \u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u5f8c\uff0c\u5404\u914d\u5217\u306f\u4e21\u5165\u529b\u914d\u5217\u306e\u6b21\u6570\u304c\u7b49\u3057\u3044\u3068\u3057\u3066\u632f\u308b\u821e\u3046\u3002 \u4e00\u65b9\u306e\u914d\u5217\u306e\u30b5\u30a4\u30ba\u304c1\u3067\u3042\u308a\u4ed6\u65b9\u306e\u914d\u5217\u30b5\u30a4\u30ba\u304c1\u3088\u308a\u5927\u304d\u3044\u5834\u5408\uff0c\u6700\u521d\u306e \u914d\u5217\u306f\u6b21\u5143\u3092\u7e70\u308a\u8fd4\u3057\u8907\u5199\u3057\u3066\u52d5\u4f5c\u3059\u308b \u4e0a\u8a18\u306e\u610f\u5473\u304c\u4e0d\u660e\u306a\u3089\uff0c http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html \u306e http://wiki.scipy.org/EricsBroadcastingDoc \u8aac\u660e\u3092\u8aad\u307e\u308c\u305f\u3044\u3002 \u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u95a2\u6570\u306f\u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u95a2\u6570\u3068\u3057\u3066\u77e5\u3089\u308c\u308b\u3002 \u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u95a2\u6570\u306e\u30ea\u30b9\u30c8\u306f http://docs.scipy.org/doc/numpy/reference/ufuncs.html#available-ufuncs \u3092\u53c2\u7167\u306e\u3053\u3068\u3002 \u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u306e\u4f8b\u3092\u793a\u3059: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 import numpy as np # \u30d9\u30af\u30c8\u30eb\u306e\u5916\u7a4d\u3092\u8a08\u7b97 v = np.array([ 1 , 2 , 3 ]) # v \u306e\u6b21\u6570 (3,) w = np.array([ 4 , 5 ]) # w \u306e\u6b21\u6570 (2,) # \u5916\u7a4d\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081 v \u306e\u6b21\u6570\u3092\u5217\u3078\u3068\u5909\u5f62\u3059\u308b # \u6b21\u6570 (3, 1) \u306e\u30d9\u30af\u30c8\u30eb; w \u306b\u5bfe\u3057\u3066\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3059\u308b # \u5916\u7a4d\u306e\u8a08\u7b97\u7d50\u679c\u3067\u3042\u308b\u6b21\u6570 (3, 2) \u306e\u884c\u5217\u3092\u5f97\u308b # [[ 4 5] # [ 8 10] # [12 15]] print (np.reshape(v, ( 3 , 1 )) * w) # \u884c\u5217\u306e\u5404\u884c\u306b\u30d9\u30af\u30c8\u30eb\u3092\u52a0\u7b97\u3059\u308b x = np.array([[ 1 , 2 , 3 ], [ 4 , 5 , 6 ]]) # x \u306f\u6b21\u6570 (2,3) \u3067\u3042\u308a v \u306f (3,) \u3067\u3042\u308b\u3002v \u306f\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3055\u308c\u3066 (2,3) \u3068\u306a\u308a # x has shape (2, 3) and v has shape (3,) so they broadcast to (2, 3), # \u4ee5\u4e0b\u306e\u884c\u5217\u3092\u5f97\u308b: # [[2 4 6] # [5 7 9]] print (x + v) # \u884c\u5217\u306e\u5404\u5217\u306b\u30d9\u30af\u30c8\u30eb\u3092\u52a0\u3048\u308b # x \u306e\u6b21\u6570\u306f (2, 3) \u3067\u3042\u308a\uff0cw \u306e\u6b21\u6570\u306f (2,) \u3067\u3042\u308b\u3002 x \u3092\u8ee2\u7f6e\u3059\u308c\u3070 # \u6b21\u6570\u306f (3, 2) \u3068\u306a\u308a w \u306f\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3055\u308c\u6b21\u6570\u306f (3, 2) \u3068\u306a\u308b\u3002 # \u7d50\u679c\u306f\u8ee2\u7f6e\u3055\u308c\u6b21\u6570 (2, 3) \u306e\u884c\u5217\u3068\u306a\u308a\u4ee5\u4e0b\u306e\u884c\u5217\u3092\u5f97\u308b: # [[ 5 6 7] # [ 9 10 11]] print ((x.T + w).T) # \u5225\u89e3\u3068\u3057\u3066\u306f\u6b21\u6570 (2, 1) \u306e\u884c\u30d9\u30af\u30c8\u30eb\u306b\u5bfe\u3057\u3066\u6b21\u6570\u3092\u5909\u63db\u3057\uff0c # \u305d\u306e\u7d50\u679c\u3092\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u76f4\u63a5\u5916\u7a4d\u3092\u8a08\u7b97\u3059\u308b print (x + np.reshape(w, ( 2 , 1 ))) # \u884c\u5217\u306e\u5b9a\u6570\u500d: # \u884c\u5217 x \u306e\u6b21\u6570\u306f (2, 3). Numpy \u306f\u30b9\u30ab\u30e9\u3092\u6b21\u6570 () \u306e\u914d\u5217\u3068\u3057\u3066\u6271\u3046: # \u30b9\u30ab\u30e9\u306f\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3055\u308c\u6b21\u6570 (2, 3) \u306e\u884c\u5217\u3068\u306a\u308a\u4ee5\u4e0b\u306e\u7d50\u679c\u3092\u5f97\u308b # [[ 2 4 6] # [ 8 10 12]] print (x * 2 ) \u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u306b\u3088\u308a\u30b3\u30fc\u30c9\u306f\u7c21\u6f54\u306b\u306a\u308a\uff0c\u9ad8\u901f\u5316\u3059\u308b\u3002 \u53ef\u80fd\u306a\u9650\u308a\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3092\u4f7f\u3046\u3088\u3046\u52aa\u3081\u308b\u3079\u304d\u3067\u3042\u308b\u3002 NumPy \u306e\u6587\u66f8 \u00b6 \u3053\u3053\u3067\u306f NumPy \u306b\u95a2\u3057\u3066\u6982\u8aac\u3057\u305f\u304c\u5b8c\u5168\u306a\u8a18\u8ff0\u306b\u306f\u7a0b\u9060\u3044\u3002NumPy \u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 http://docs.scipy.org/doc/numpy/reference/ \u306b\u306f\u8a73\u7d30\u304c\u8a18\u3055\u308c\u3066\u3044\u308b\u3002 SciPy \u00b6 NumPy \u306f\u9ad8\u6027\u80fd\u306a\u591a\u6b21\u5143\u914d\u5217\u3092\u63d0\u4f9b\u3057\uff0c\u914d\u5217\u64cd\u4f5c\u306e\u57fa\u672c\u9053\u5177\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3002 SciPy \u306f( http://docs.scipy.org/doc/scipy/reference/ ) NumPy \u3067\u5b9a\u7fa9\u3055\u308c\u305f\u914d\u5217\u3068\u79d1\u5b66\u6280\u8853\u306b\u6709\u76ca\u306a\u95a2\u6570\u6570\u591a\u304f\u7528\u610f\u3057\u3066\u3044\u308b\u3002 SciPy \u3092\u7406\u89e3\u3059\u308b\u306b\u306f http://docs.scipy.org/doc/scipy/reference/index.html \u3092\u89b3\u308b\u3053\u3068\u3067\u3042\u308b\u3002\u3053\u3053\u3067\u306fSciPy \u306e\u6709\u76ca\u70b9\u3044\u304f\u3064\u304b\u306b\u7126\u70b9\u3092\u3042\u3066\u308b\u3002 \u753b\u50cf\u64cd\u4f5c \u00b6 SciPy \u306f\u753b\u50cf\u64cd\u4f5c\u306e\u57fa\u672c\u95a2\u6570\u3092\u63d0\u4f9b\u3059\u308b\u3002 \u4f8b\u3048\u3070\uff0c\u30c7\u30a3\u30b9\u30af\u304b\u3089\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3093\u3067 NumPy \u306e\u914d\u5217\u306b\u4ee3\u5165\u3057\uff0c NumPy \u306e\u914d\u5217\u3092\u753b\u50cf\u3068\u3057\u3066\u30c7\u30a3\u30b9\u30af\u306b\u66f8\u304d\u8fbc\u307f\uff0c \u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3059\u308b\u95a2\u6570\u306a\u3069\u3067\u3042\u308b\u3002 \u3053\u3053\u3067\u306f\uff0c\u3053\u308c\u3089\u306e\u95a2\u6570\u4f8b\u3092\u4f9b\u89a7\u3059\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 from scipy.misc import imread, imsave, imresize # JPEG \u753b\u50cf\u3092\\NumPy \u914d\u5217\u306b\u8aad\u307f\u8fbc\u3080 img = imread( 'assets/cat.jpg' ) print (img.dtype, img.shape) # \u5370\u5b57 \"uint8 (400, 248, 3)\" # \u5404\u8272\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u7570\u306a\u308b\u30b9\u30ab\u30e9\u5b9a\u6570\u306b\u3088\u308a\u8272\u5408\u3044\u3092\u5909\u3048\u308b\u3002 # \u753b\u50cf\u306f (400, 248, 3) \u306e\u6b21\u6570\u3067\u3042\u308b\u3002 # \u6b21\u6570 (3,) \u306e\u914d\u5217 [1, 0.95, 0.9] \u3092\u639b\u3051\u308b; # numpy \u306e\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u306f\u8d64\u30c1\u30e3\u30f3\u30cd\u30eb\u306f\u5909\u66f4\u305b\u305a\uff0c # \u7dd1\u3068\u9752\u3068\u3092\u305d\u308c\u305e\u308c 0.95 \u500d\uff0c0.9 \u500d\u3059\u308b img_tinted = img * [ 1 , 0.95 , 0.9 ] # \u8272\u5408\u3044\u3092\u5909\u66f4\u3057\u305f\u753b\u50cf\u3092\u7e26\u6a2a 300 \u753b\u7d20\u306e\u753b\u50cf\u306b\u5909\u63db\u3059\u308b img_tinted = imresize(img_tinted, ( 300 , 300 )) # \u5909\u66f4\u3057\u305f\u753b\u50cf\u3092\u30c7\u30a3\u30b9\u30af\u306b\u66f8\u304d\u51fa\u3059 imsave( 'assets/cat_tinted.jpg' , img_tinted) Distance between points \u00b6 SciPy \u306f\u70b9\u306e\u96c6\u5408\u9593\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306e\u6709\u76ca\u306a\u95a2\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002 [ scipy.spatial.distance.pdist ] \u95a2\u6570\u306f\u6240\u4e0e\u306e\u96c6\u5408\u306b\u5c5e\u3059\u308b\u5168\u70b9 \u9593\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\u3059\u308b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import numpy as np from scipy.spatial.distance import pdist, squareform # 2\u6b21\u306e\u884c\u304b\u3089\u306a\u308b\u4ee5\u4e0b\u306e\u914d\u5217\u3092\u5b9a\u7fa9\u3059\u308b: # [[0 1] # [1 0] # [2 0]] x = np.array([[ 0 , 1 ], [ 1 , 0 ], [ 2 , 0 ]]) print (x) # x \u306e\u5168\u3066\u306e\u884c\u306e\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u306e\u8a08\u7b97 # d[i, j] \u306f x[i, :] \u3068 x[j, :] \u3068\u306e\u8ddd\u96e2\u3067\u3042\u308a\u4ee5\u4e0b\u306e\u884c\u5217\u3068\u306a\u308b # [[ 0. 1.41421356 2.23606798] # [ 1.41421356 0. 1. ] # [ 2.23606798 1. 0. ]] d = squareform(pdist(x, 'euclidean' )) print (d) \u8a73\u7d30\u306f http://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.distance.pdist.html \u306b\u8a18\u3055\u308c\u3066\u3044\u308b\u3002 \u985e\u4f3c\u306e\u95a2\u6570[ scipy.spatial.distance.cdist ] \u306f 2 \u3064\u306e\u96c6\u5408\u306e 2 \u70b9\u9593\u306e\u5168\u5bfe\u306e\u8ddd \u96e2\u3092\u8a08\u7b97\u3059\u308b\u3002 http://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.distance.cdist.html \u3092\u53c2\u7167\u306e\u3053\u3068\u3002 Matplotlib \u00b6 Matplotlib \u306f\u63cf\u753b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u3002 \u672c\u7bc0\u3067\u306f Mycmdmatplotlib.pyplot \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u6982\u8aac\u3059\u308b\u3002 MATLAB \u3068\u540c\u7b49\u306e\u3082\u306e\u3067\u3042\u308b\u3002 \u30d7\u30ed\u30c3\u30c8 \u00b6 Matplotlib \u306e\u6700\u91cd\u8981\u95a2\u6570\u306f[ plot ] \u3067\u3042\u308b\u30022 \u6b21\u5143\u306e\u63cf\u753b\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\u4ee5\u4e0b\u306b\u4f8b\u3092\u793a\u3059: 1 2 3 4 5 6 7 8 9 10 import numpy as np import matplotlib.pyplot as plt # x, y \u5ea7\u6a19\u306b\u6b63\u5f26\u6ce2\u3092\u63cf\u304f x = np.arange( 0 , 3 * np.pi, 0.1 ) y = np.sin(x) # matplotlib \u306e plot \u95a2\u6570\u3067\u63cf\u753b plt.plot(x, y) plt.show() # \u753b\u9762\u306b\u8868\u793a\u3059\u308b\u305f\u3081\u306b plt.show() \u3092\u4f7f\u3046 \u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u753b\u50cf\u3092\u5f97\u308b\u3002 \u3055\u3089\u306b\u624b\u3092\u52a0\u3048\u308b\u3068\u8907\u6570\u306e\u7dda\uff0c\u30bf\u30a4\u30c8\u30eb\uff0c\u51e1\u4f8b\uff0c\u8ef8\u30e9\u30d9\u30eb\u3092\u63cf\u753b\u53ef\u80fd\u3067\u3042\u308b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import numpy as np import matplotlib.pyplot as plt # x, y \u5ea7\u6a19\u4e0a\u306b\u6b63\u5f26\u6ce2\u3068\u4f59\u5f26\u6ce2\u306e\u66f2\u7dda\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b x = np.arange( 0 , 3 * np.pi, 0.1 ) y_sin = np.sin(x) y_cos = np.cos(x) # matplotlib \u306e plot \u3092\u7528\u3044\u308b plt.plot(x, y_sin) plt.plot(x, y_cos) plt.xlabel( 'x axis label' ) plt.ylabel( 'y axis label' ) plt.title( 'Sine and Cosine' ) plt.legend([ 'Sine' , 'Cosine' ]) plt.show() [ plot ]\u95a2\u6570\u306e\u8a73\u7d30\u306f http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot \u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u30b5\u30d6\u30d7\u30ed\u30c3\u30c8 \u00b6 [ subplot ]\u95a2\u6570\u3092\u7528\u308c\u3070\u540c\u4e00\u56f3\u306b\u5225\u306e\u30d7\u30ed\u30c3\u30c8\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u4ee5\u4e0b\u306b\u4f8b\u3092\u793a\u3059: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import numpy as np import matplotlib.pyplot as plt # x, y \u5ea7\u6a19\u4e0a\u3067\u6b63\u5f26\u6ce2\u3068\u4f59\u5f26\u6ce2\u3092\u30d7\u30ed\u30c3\u30c8 x = np. arange ( 0 , 3 * np.pi, 0.1 ) y_sin = np. sin (x) y_cos = np. cos (x) # \u9ad8\u30552\u3001\u5e451\u306e\u30b5\u30d6\u30d7\u30ed\u30c3\u30c8\u7528\u683c\u5b50\u3092\u8a2d\u5b9a # \u6700\u521d\u306e\u30b5\u30d6\u30d7\u30ed\u30c3\u30c8\u3092\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u3059\u308b plt.subplot( 2 , 1 , 1 ) # \u6700\u521d\u306e\u30d7\u30ed\u30c3\u30c8\u3092\u4f5c\u6210 plt.plot(x, y_sin) plt.title( 'Sine' ) # 2\u756a\u76ee\u306e\u30b5\u30d6\u30d7\u30ed\u30c3\u30c8\u3092\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u3057\uff0c\u30d7\u30ed\u30c3\u30c8\u3092\u4f5c\u6210 plt.subplot( 2 , 1 , 2 ) plt.plot(x, y_cos) plt.title( 'Cosine' ) # \u56f3\u306e\u753b\u9762\u8868\u793a plt.show() [ subplot ]\u95a2\u6570\u306e\u8a73\u7d30\u306f http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.subplot \u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u753b\u50cf \u00b6 [ imshow ]\u95a2\u6570\u3092\u4f7f\u3066\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import numpy as np from scipy.misc import imread, imresize import matplotlib.pyplot as plt img = imread( 'assets/cat.jpg' ) img_tinted = img * [ 1 , 0.95 , 0.9 ] # \u539f\u753b\u50cf\u306e\u8868\u793a plt.subplot( 1 , 2 , 1 ) plt.imshow(img) # \u8272\u5408\u3044\u3092\u5909\u3048\u305f\u753b\u50cf\u306e\u8868\u793a plt.subplot( 1 , 2 , 2 ) plt.imshow(img_tinted) plt.show() 1 2.7 \u7cfb\u3068 3.4 \u7cfb\u306e\u76f8\u9055\u306b\u3064\u3044\u3066\u306f\u30bb\u30d0\u30b9\u30c1\u30e3\u30f3\u30fb\u30e9\u30b7\u30e5\u30ab(Sebastian Raschk) \u306e\u30d6\u30ed\u30b0\u8a18\u4e8b\u304c\u53c2\u8003\u306b\u306a\u3063\u305f(<http://sebastianraschka.com/Articles/2014_python_2_3_key_diff.html>)\u3002\u90a6\u8a33\u3082\u5b58\u5728\u3059\u308b(<http://postd.cc/the-key-differences-between-python-2-7-x-and-python-3-x-with-examples/>) [^2]: \u8a33\u6ce8: \u73fe\u884c\u3067\u306f[ python3 ]\u30b3\u30de\u30f3 \u30c9\u3067 3 \u7cfb\u306e Python \u304c\u52d5\u4f5c\u3059\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u6563\u898b\u3055\u308c\u308b(Anaconda<, Ubuntu, Homebrew, MacPorts, \u306a\u3069) [^3]: \u8a33\u6ce8:\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f URL\u3000\u76f4\u4e0b\u306e\u6570\u5b57\u304c 2 \u304b 3 \u304b\u306e\u9055\u3044\u306b\u3088\u308a\uff0c\u30d0\u30fc\u30b8\u30e7\u30f3\u3054\u3068\u306b\u6587\u66f8\u304c\u6574\u5099\u3055\u308c\u3066\u3044\u308b\u306e\u3067 3 \u7cfb\u306e URL \u3092\u9010\u6b21\u7d39\u4ecb\u3059\u308b\u3053\u3068\u306f\u907f\u3051\u308b 1 \u3060\u304b\u3089\u3068\u8a00\u3063\u3066\u65e5\u672c\u8a9e\u6587\u5b57\u30d5\u30a1\u30a4\u30eb\u540d\u554f\u984c\u304c\u89e3\u6c7a\u3057\u305f\u8a33\u3067\u306f\u306a\u3044\u3002\u3082\u3061\u308d\u3093\u305d\u308c\u306fPython\u306e\u8cac\u4efb\u3067\u306f\u306a\u3044 [^6]: Python, NumPy \u7528\u8a9e\u3067 rank \u3068\u306f\u914d\u5217\u306e\u6b21\u5143\u6570\u3092\u8868\u3059(1\u306a\u3089\u30d9\u30af\u30c8\u30eb\uff0c2\u306a\u3089\u884c\u5217)\uff0c shape \u3068\u306f\u914d\u5217\u306e\u5404\u6b21\u5143\u306e\u8981\u7d20\u6570\u3092\u6307\u3059\u30bf\u30d7\u30eb","title":"Python \u306e\u57fa\u790e"},{"location":"python_numpy_intro_ja/#python","text":"Python \u306f\u9ad8\u7d1a\u8a00\u8a9e\u3067\u3042\u308a\u52d5\u7684\u30de\u30eb\u30c1\u30d1\u30e9\u30c0\u30a4\u30e0\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3042\u308b\u3002 Python \u306e\u30b3\u30fc\u30c9\u306f\u5f37\u529b\u306a\u30a2\u30a4\u30c7\u30a2\u3092\u6570\u884c\u3067\u8868\u73fe\u3067\u304d\u308b\u64ec\u4f3c\u8a00\u8a9e\u306b\u55a9\u3048\u3089\u308c\u308b\u3002 \u4f8b\u3048\u3070\u53e4\u5178\u7684\u306a\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f Python \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b: 1 2 3 4 5 6 7 8 9 10 def quicksort (arr): if len (arr) <= 1 : return arr pivot = arr[ int ( len (arr) / 2 )] left = [x for x in arr if x < pivot] middle = [x for x in arr if x == pivot] right = [x for x in arr if x > pivot] return quicksort(left) + middle + quicksort(right) print (quicksort([ 3 , 6 , 8 , 10 , 1 , 2 , 1 ])) # \u5370\u5b57( \"[1, 1, 2, 3, 6, 8, 10]\")","title":"Python"},{"location":"python_numpy_intro_ja/#python_1","text":"\u73fe\u5728 Python \u306f 2 \u7a2e\u985e\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30022.7 \u7cfb \u3068 3 \u7cfb \u3067\u3042\u308b\u3002 Python 3.0 \u4ee5\u6765\uff0c\u524d\u65b9\u4e92\u63db\u6027\u304c\u5ec3\u68c4\u3055\u308c\u3066 2.7 \u7cfb \u3068 3 \u7cfb\u3067\u306f\u4e92\u3044\u306b\u4ea4\u63db\u53ef\u80fd\u3067\u306a\u3044\u3002 \u672c\u7a3f\u5168\u30b3\u30fc\u30c9 2.7 \u3067\u52d5\u4f5c\u3059\u308b\u3002 Python \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8abf\u3079\u308b\u306b\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089 python \u2013version \u3068\u3059\u308b\u3068\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u3002","title":"Python \u306e\u30d0\u30fc\u30b8\u30e7\u30f3"},{"location":"python_numpy_intro_ja/#_1","text":"\u4ed6\u306e\u591a\u304f\u306e\u8a00\u8a9e\u3068\u540c\u3058\u304fPython\u306b\u306f \u6574\u6570\u578b , \u6d6e\u52d5\u5c0f\u6570\u70b9\u578b , \u30d6\u30fc\u30eb(\u771f\u507d)\u578b , \u6587\u5b57\u5217\u578b \u3068\u3044\u3046\u57fa\u672c\u30c7\u30fc\u30bf\u578b\u304c\u3042\u308b\u3002 \u3053\u308c\u3089\u306e\u30c7\u30fc\u30bf\u578b\u306f\u4ed6\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3068\u985e\u4f3c\u3057\u3066\u3044\u308b\u3002","title":"\u57fa\u672c\u30c7\u30fc\u30bf\u578b"},{"location":"python_numpy_intro_ja/#_2","text":"\u6574\u6570\u578b\u3068\u6d6e\u52d5\u5c0f\u6570\u70b9\u578b\u306f\u4ed6\u8a00\u8a9e\u3068\u540c\u69d8\u306b\u52d5\u4f5c\u3059\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 x = 3 print ( type (x)) # \u5370\u5b57 \"<type 'int'>\" print (x) # \u5370\u5b57\"3\" print (x + 1 ) # \u52a0\u7b97; \u5370\u5b57 \"4\" print (x - 1 ) # \u6e1b\u7b97; \u5370\u5b57 \"2\" print (x * 2 ) # \u4e57\u7b97; \u5370\u5b57 \"6\" print (x ** 2 ) # \u6307\u6570; \u5370\u5b57 \"9\" x += 1 print (x) # \u5370\u5b57 \"4\" x *= ( 2 ) print (x) # \u5370\u5b57 \"8\" y = 2.5 print ( type (y)) # \u5370\u5b57 \"<type 'float'>\" print (y, y + 1 , y * 2 , y ** 2 ) # \u5370\u5b57 \"2.5 3.5 5.0 6.25\" \u4ed6\u8a00\u8a9e\u3068\u7570\u306a\u308aPython\u306b\u306f\u5897\u5206 x++ \uff0c\u6e1b\u5206 x\u2013 \u3092\u884c\u3046\u5358\u9805\u6f14\u7b97\u5b50\u306f \u306a\u3044\u3002 Python\u306b\u306f\u500d\u7cbe\u5ea6\u6574\u6570\uff0c\u8907\u7d20\u6570\u578b\u3082\u6a19\u6e96\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3002\u8a73\u7d30\u306f https://docs.python.org/2/library/stdtypes.html#numeric-types-int-float-long-complex \u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u3002 \u30d6\u30fc\u30eb\u578b(\u771f\u507d\u578b): Python\u306f2\u5024\u8ad6\u7406\u6f14\u7b97\u7528\u306e\u8a18\u53f7([ && ] [ || ], \u306a\u3069)\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002 1 2 3 4 5 6 7 t = True f = False print ( type (t)) # \u5370\u5b57 \"<type 'bool'>\" print (t and f) # \u8ad6\u7406\u7a4d AND; \u5370\u5b57 \"False\" print (t or f) # \u8ad6\u7406\u548c OR; \u5370\u5b57 \"True\" print ( not t) # \u8ad6\u7406\u5426\u5b9a NOT; \u5370\u5b57 \"False\" print (t != f) # \u6392\u4ed6\u7684\u8ad6\u7406\u548c XOR; \u5370\u5b57 \"True\"","title":"\u6570\u5024"},{"location":"python_numpy_intro_ja/#_3","text":"Python\u306f\u6587\u5b57\u5217\u306e\u6271\u3044\u306b\u512a\u308c\u308b 1 2 3 4 5 6 7 8 hello = 'hello' # \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306f\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8 world = \"world\" # \u3042\u308b\u3044\u306f\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3002\u4e21\u65b9\u53ef\u80fd print (hello) # \u5370\u5b57 \"hello\" print ( len (hello)) # \u6587\u5b57\u5217\u9577\u306e\u5370\u5b57; \u5370\u5b57 \"5\" hw = hello + ' ' + world # \u6587\u5b57\u5217\u9023\u7d50 print (hw) # \u5370\u5b57 \"hello world\" hw12 = '%s %s %d' % (hello, world, 12 ) # sprintf \u5f62\u5f0f\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 print (hw12) # \u5370\u5b57 \"hello world 12\" \u6587\u5b57\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u6709\u76ca\u306a\u30e1\u30bd\u30c3\u30c9\u7fa4\u3067\u3042\u308b\u3002 1 2 3 4 5 6 7 s = \"hello\" print (s.capitalize()) # \u6587\u5b57\u5217\u306e\u8a9e\u982d\u306e\u5927\u6587\u5b57\u5316; \u5370\u5b57 \"Hello\" print (s.upper()) # \u6587\u5b57\u5217\u306e\u5927\u6587\u5b57\u5316; \u5370\u5b57 \"HELLO\" print (s.rjust( 7 )) # \u6587\u5b57\u5217\u306e\u53f3\u5bc4\u305b, \u7a7a\u767d\u3067\u57cb\u307e\u308b; \u5370\u5b57 \" hello\" print (s.center( 7 )) # \u6587\u5b57\u5217\u306e\u30bb\u30f3\u30bf\u30ea\u30f3\u30b0\uff0c\u7a7a\u767d\u3067\u57cb\u3081\u308b; \u5370\u5b57 \" hello \" print (s.replace( 'l' , '(ell)' )) # \u90e8\u5206\u6587\u5b57\u5217\u306e\u7f6e\u63db; \u5370\u5b57 \"he(ell)(ell)o\" print ( ' world ' .strip()) # \u7a7a\u767d\u306e\u9664\u53bb; \u5370\u5b57 \"world\" \u5168\u6587\u5b57\u5217\u30e1\u30bd\u30c3\u30c9\u306f https://docs.python.org/2/library/stdtypes.html#string-methods \u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3002","title":"\u6587\u5b57\u5217"},{"location":"python_numpy_intro_ja/#_4","text":"Python \u306b\u306f\u30ea\u30b9\u30c8\uff0c\u8f9e\u66f8\uff0c\u96c6\u5408\uff0c\u30bf\u30d7\u30eb\u3068\u3044\u3046\u30b3\u30f3\u30c6\u30ca\u304c\u6a19\u6e96\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3002","title":"\u30b3\u30f3\u30c6\u30ca"},{"location":"python_numpy_intro_ja/#_5","text":"\u30ea\u30b9\u30c8\u306f\u914d\u5217\u306ePython\u5b9f\u88c5\u3067\u3042\u308b\u304c\uff0c\u30b5\u30a4\u30ba\u53ef\u5909\uff0c\u304b\u3064\uff0c\u7570\u306a\u308b\u8981\u7d20\u3092\u6301\u3064\u3053\u3068\u304c \u3067\u304d\u308b\u3002 1 2 3 4 5 6 7 8 9 xs = [ 3 , 1 , 2 ] # \u30ea\u30b9\u30c8\u306e\u4f5c\u6210 print (xs, xs[ 2 ]) # \u5370\u5b57 \"[3, 1, 2] 2\" print (xs[- 1 ]) # \u8ca0\u306e\u6307\u5b9a\u5b50\u306f\u30ea\u30b9\u30c8\u672b\u7aef\u304b\u3089\u306e\u8a08\u6570; \u5370\u5b57 \"2\" xs[ 2 ] = 'foo' # \u30ea\u30b9\u30c8\u306b\u306f\u7570\u306a\u308b\u8981\u7d20\u3092\u542b\u3080\u3053\u3068\u304c\u3067\u304d\u308b print (xs) # \u5370\u5b57 \"[3, 1, 'foo']\" xs.append( 'bar' ) # \u30ea\u30b9\u30c8\u672b\u306b\u65b0\u8981\u7d20\u3092\u8ffd\u52a0 print (xs) # \u5370\u5b57 x = xs.pop() # \u30ea\u30b9\u30c8\u306e\u6700\u7d42\u8981\u7d20\u53d6\u308a\u9664\u304d\u305d\u306e\u5024\u3092\u8fd4\u3059 print (x, xs) # \u5370\u5b57 \"bar [3, 1, 'foo']\" \u4e0a\u3068\u540c\u69d8\u306b\u8840\u307f\u3069\u308d\u306e\u5168\u30ea\u30b9\u30c8\u306e\u8a73\u7d30\u304c https://docs.python.org/2/tutorial/datastructures.html#more-on-lists \u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3002","title":"\u30ea\u30b9\u30c8"},{"location":"python_numpy_intro_ja/#_6","text":"Python \u306b\u306f\u4e00\u65e6\u30ea\u30b9\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308c\u3070\uff0c\u305d\u306e\u4e0b\u4f4d\u30ea\u30b9\u30c8\u3078\u7c21\u4fbf\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u8a18\u6cd5\u304c\u3042\u308b\u3002\u3053\u308c\u3092\u30b9\u30e9\u30a4\u30b9\u3068\u547c\u3076\u3002 1 2 3 4 5 6 7 8 9 nums = list ( range ( 5 )) # range \u306f\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u3067\u6574\u6570\u304b\u3089\u306a\u308b\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3059\u308b print (nums) # \u5370\u5b57 \"[0, 1, 2, 3, 4]\" print (nums[ 2 : 4 ]) # 2\u756a\u76ee\u306e\u8981\u7d20\u304b\u30894\u756a\u76ee\u672a\u6e80\u306e\u30b9\u30e9\u30a4\u30b9; \u5370\u5b57 \"[2, 3]\" print (nums[ 2 :]) # 2\u756a\u76ee\u304b\u3089\u6700\u5f8c\u307e\u3067\u306e\u30b9\u30e9\u30a4\u30b9; \u5370\u5b57 \"[2, 3, 4]\" print (nums[: 2 ]) # \u5148\u982d\u8981\u7d20\u304b\u3089\u6307\u5b9a\u5b502\u307e\u3067\u306e\u8981\u7d20\u3092\u30b9\u30e9\u30a4\u30b9; \u5370\u5b57 \"[0, 1]\" print (nums[:]) # \u30ea\u30b9\u30c8\u5168\u4f53\u306e\u30b9\u30e9\u30a4\u30b9\u3092\u5f97\u308b; \u5370\u5b57 \"[0, 1, 2, 3, 4]\" print (nums[:- 1 ]) # \u30b9\u30e9\u30a4\u30b9\u6307\u5b9a\u5b50\u306b\u306f\u8ca0\u5024\u3082\u3068\u308b\u3053\u3068\u304c\u3067\u304d\u308b; \u5370\u5b57 \"[0, 1, 2, 3]\" nums[ 2 : 4 ] = [ 8 , 9 ] # \u30b9\u30e9\u30a4\u30b9\u3057\u3066\u65b0\u3057\u3044\u5024\u3092\u5272\u308a\u5f53\u3066\u308b print (nums) # \u5370\u5b57 \"[0, 1, 8, 8, 4]\" NumPy\u306e\u914d\u5217\u306e\u9805\u306b\u304a\u3044\u3066\u30b9\u30e9\u30a4\u30b7\u30f3\u30b0\u306b\u3064\u3044\u3066\u518d\u3073\u89e6\u308c\u308b\u3053\u3068\u3068\u3059\u308b\u3002","title":"\u30b9\u30e9\u30a4\u30b9:"},{"location":"python_numpy_intro_ja/#_7","text":"\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30ea\u30b9\u30c8\u306e\u8981\u7d20\u3092\u7e70\u308a\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002 1 2 3 4 animals = [ 'cat' , 'dog' , 'monkey' ] for animal in animals: print (animal) # \u5404\u884c\u306b\u5370\u5b57 \"cat\", \"dog\", \"monkey\" \u3042\u308b\u30eb\u30fc\u30d7\u5185\u3067\u5404\u8981\u7d20\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u53c2\u7167\u3057\u305f\u3051\u308c\u3070\uff0c\u7e70\u308a\u8fd4\u3057\u5185\u90e8\u3067\u7d44\u307f\u8fbc\u307f \u95a2\u6570[ enumerate ]\u3092\u4f7f\u3048\u3070\u826f\u3044\u3002 1 2 3 4 animals = [ 'cat' , 'dog' , 'monkey' ] for idx, animal in enumerate (animals): print ( '#%d: %s' % (idx + 1 , animal)) # \u5370\u5b57\u884c\u6bce\u306b \"#1: cat\", \"#2: dog\", \"#3: monkey\"","title":"\u30eb\u30fc\u30d7:"},{"location":"python_numpy_intro_ja/#_8","text":"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u304a\u3044\u3066\u306f\u3042\u308b\u578b\u306e\u30c7\u30fc\u30bf\u3092\u5225\u306e\u578b\u3078\u5909\u63db\u3057\u305f \u3044\u5834\u5408\u304c\u591a\u3044\u3002\u81ea\u4e57\u3092\u8a08\u7b97\u3059\u308b\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u793a\u3059: 1 2 3 4 5 nums = [ 0 , 1 , 2 , 3 , 4 ] squares = [] for x in nums: squares.append(x ** 2 ) print (squares) # \u5370\u5b57 [0, 1, 4, 9, 16] \u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18 \u3092\u4f7f\u3048\u3070\u3088\u308a\u7c21\u5358\u306a\u30b3\u30fc\u30c9\u304c\u66f8\u3051\u308b: 1 2 3 nums = [ 0 , 1 , 2 , 3 , 4 ] squares = [x ** 2 for x in nums] print (squares) # \u5370\u5b57 [0, 1, 4, 9, 16]","title":"\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18:"},{"location":"python_numpy_intro_ja/#_9","text":"Java \u306e Map \u3084 Javascript \u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u540c\u69d8\uff0c\u8f9e\u66f8\u3068\u306f\uff0c\u30ad\u30fc\u5024\u3068\u30da\u30a2\u5024\u3092 \u96c6\u3081\u305f\u3082\u306e\u3067\u3042\u308b\u3002 1 2 3 4 5 6 7 8 9 10 d = { 'cat' : 'cute' , 'dog' : 'furry' } # \u30c7\u30fc\u30bf\u304b\u3089\u8f9e\u66f8\u3092\u4f5c\u6210 print (d[ 'cat' ]) # \u8f9e\u66f8\u306e\u9805\u76ee\u304b\u3089\u5185\u5bb9\u3092\u8868\u793a; \u5370\u5b57 \"cute\" print ( 'cat' in d) # \u8f9e\u66f8\u5185\u3092\u691c\u7d22\u3057\u30ad\u30fc\u306e\u5b58\u5728\u3092\u8fd4\u3059; \u5370\u5b57 \"True\" d[ 'fish' ] = 'wet' # \u65b0\u9805\u76ee\u3092\u8ffd\u52a0 print (d[ 'fish' ]) # \u5370\u5b57 \"wet\" # print(d['monkey']) # \u8f9e\u66f8 d \u304b\u3089\u30ad\u30fc'monkey'\u3092\u691c\u7d22\u3002\u5b58\u5728\u3057\u306a\u3044\u3068\u30ad\u30fc\u30a8\u30e9\u30fc print (d.get( 'monkey' , 'N/A' )) # \u8f9e\u66f8\u306e\u691c\u7d22\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u4ed8\u304d; \u5370\u5b57 \"N/A\" print (d.get( 'fish' , 'N/A' )) # \u8f9e\u66f8\u306e\u691c\u7d22\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u4ed8\u304d; \u5370\u5b57 \"wet\" del (d[ 'fish' ]) # \u8f9e\u66f8\u5185\u306e\u9805\u76ee\u3092\u524a\u9664 print (d.get( 'fish' , 'N/A' )) # \"fish\" \u306f\u8f9e\u66f8\u306b\u306a\u3044\u306e\u3067 \"N/A\" \u8f9e\u66f8\u306b\u3064\u3044\u3066\u3082\u30a6\u30a7\u30d6\u4e0a\u306b\u6587\u66f8\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u3002","title":"\u8f9e\u66f8:"},{"location":"python_numpy_intro_ja/#_10","text":"\u8f9e\u66f8\u306e\u30ad\u30fc\u3092\u7e70\u308a\u8fd4\u3059\u7c21\u4fbf\u6cd5\u304c\u30eb\u30fc\u30d7\u3067\u3042\u308b: 1 2 3 4 5 d = { 'person' : 2 , 'cat' : 4 , 'spider' : 8 } for animal in d: legs = d[animal] print ( 'A %s has %d legs' % (animal, legs)) # \u5370\u5b57 \"A person has 2 legs\", \"A spider has 8 legs\", \"A cat has 4 legs\" \u8f9e\u66f8\u306e\u5404\u9805\u76ee\u306b\u5bfe\u5fdc\u3059\u308b\u5024\u3092\u53d6\u308a\u51fa\u3059\u306b\u306f iteritems \u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u308b: 1 2 3 4 d = { 'person' : 2 , 'cat' : 4 , 'spider' : 8 } for animal, legs in d.items(): print ( 'A %s has %d legs' % (animal, legs)) # \u5370\u5b57 \"A person has 2 legs\", \"A spider has 8 legs\", \"A cat has 4 legs\"","title":"\u30eb\u30fc\u30d7:"},{"location":"python_numpy_intro_ja/#_11","text":"\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3068\u540c\u69d8\uff0c\u8f9e\u66f8\u5185\u5305\u8868\u8a18\u306b\u3082\u7c21\u4fbf\u306a\u65b9\u6cd5\u304c\u5b58\u5728\u3059\u308b\u3002\u4ee5\u4e0b\u306e\u4f8b\u306e\u3068\u304a\u308a: 1 2 3 nums = [ 0 , 1 , 2 , 3 , 4 ] even_num_to_square = {x: x ** 2 for x in nums if x % 2 == 0 } print (even_num_to_square) # \u5370\u5b57 \"{0: 0, 2: 4, 4: 16}\"","title":"\u8f9e\u66f8\u5185\u5305\u8868\u8a18:"},{"location":"python_numpy_intro_ja/#_12","text":"\u96c6\u5408\u3068\u306f\u7570\u306a\u308b\u8981\u7d20\u3092\u6301\u3064\u9806\u756a\u3092\u6301\u305f\u306a\u3044\u30c7\u30fc\u30bf\u306e\u96c6\u307e\u308a\u3067\u3042\u308b\u3002\u4ee5\u4e0b\u306e\u4f8b\u3092\u53c2\u7167: 1 2 3 4 5 6 7 8 9 10 animals = { 'cat' , 'dog' } print ( 'cat' in animals) # \u96c6\u5408\u5185\u306e\u8981\u7d20\u306e\u5b58\u5728\u306e\u6709\u7121\u306e\u30c1\u30a7\u30c3\u30af; \u5370\u5b57 \"True\" print ( 'fish' in animals) # \u5370\u5b57 \"False\" animals.add( 'fish' ) # \u96c6\u5408\u306b\u8981\u7d20\u3092\u8ffd\u52a0 print ( 'fish' in animals) # \u5370\u5b57 \"True\" print ( len (animals)) # \u96c6\u5408\u306e\u8981\u7d20\u6570\u3092\u8fd4\u3059; \u5370\u5b57 \"3\" animals.add( 'cat' ) # \u96c6\u5408\u306b\u65e2\u5b58\u306e\u8981\u7d20\u3092\u52a0\u3048\u3066\u3082\u4f55\u3082\u8d77\u304d\u306a\u3044 print ( len (animals)) # \u5370\u5b57 \"3\" animals.remove( 'cat' ) # \u96c6\u5408\u304b\u3089\u8981\u7d20\u3092\u524a\u9664 print ( len (animals)) # \u5370\u5b57 \"2\" \u4eca\u307e\u3067\u3068\u540c\u3058\u304f\uff0c\u96c6\u5408\u306e\u5168\u3066\u306b\u3064\u3044\u3066\u8a18\u8ff0\u3057\u305f\u6587\u66f8\u304c\u4e0a\u6893\u3055\u308c\u3066\u3044\u308b\u3002","title":"\u96c6\u5408:"},{"location":"python_numpy_intro_ja/#_13","text":"\u96c6\u5408\u306b\u304a\u3051\u308b\u7e70\u308a\u8fd4\u3057\u3082\u30ea\u30b9\u30c8\u306b\u5bfe\u3059\u308b\u7e70\u308a\u8fd4\u3057\u3068\u540c\u3058\u8a18\u6cd5\u3067\u3042\u308b\u3002 \u3057\u304b\u3057\u96c6\u5408\u306b\u306f\u9806\u5e8f\u304c\u306a\u3044\u306e\u3067\uff0c\u96c6\u5408\u5185\u306e\u5404\u8981\u7d20\u306b\u3064\u3044\u3066\u9806\u756a\u3092\u4eee\u5b9a\u3057\u3066\u306f\u306a\u3089\u306a\u3044: 1 2 3 4 animals = { 'cat' , 'dog' , 'fish' } for idx, animal in enumerate (animals): print ( '#%d: %s' % (idx + 1 , animal)) # \u5370\u5b57 \"#1: fish\", \"#2: dog\", \"#3: cat\"","title":"\u7e70\u308a\u8fd4\u3057:"},{"location":"python_numpy_intro_ja/#_14","text":"\u30ea\u30b9\u30c8\u3084\u8f9e\u66f8\u3068\u540c\u69d8\uff0c\u96c6\u5408\u5185\u5305\u306b\u3082\u7c21\u6613\u8a18\u6cd5\u304c\u5b58\u5728\u3059\u308b: 1 2 3 from math import sqrt nums = { int (sqrt(x)) for x in range ( 30 )} print (nums) # \u5370\u5b57 \"set([0, 1, 2, 3, 4, 5])\"","title":"\u96c6\u5408\u5185\u5305\u8868\u8a18:"},{"location":"python_numpy_intro_ja/#_15","text":"\u30bf\u30d7\u30eb\u3068\u306f\u5024\u306e\u9806\u5e8f\u306e\u5909\u66f4\u304c\u4e0d\u80fd\u306a\u9806\u5e8f\u4ed8\u304d\u30ea\u30b9\u30c8\u3067\u3042\u308b\u3002\u30bf\u30d7\u30eb\u306f\u30ea\u30b9\u30c8\u306b\u985e\u4f3c \u3057\u3066\u3044\u308b\u304c\uff0c\u8f9e\u66f8\u306e\u30ad\u30fc\u3068\u3057\u3066\u96c6\u5408\u3092\u8981\u7d20\u3068\u3057\u3066\u6301\u3064\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\u30ea\u30b9\u30c8\u306b \u306f\u3053\u306e\u7279\u5fb4\u306f\u7121\u3044\u3002\u7c21\u5358\u306a\u4f8b\u3092\u793a\u3059: 1 2 3 4 5 d = {(x, x + 1 ): x for x in range ( 10 )} # \u30bf\u30d7\u30eb\u30ad\u30fc\u3092\u6301\u3064\u8f9e\u66f8\u306e\u751f\u6210 t = ( 5 , 6 ) # \u30bf\u30d7\u30eb\u306e\u751f\u6210 print ( type (t)) # \u5370\u5b57 \"<type 'tuple'>\" print (d[t]) # \u5370\u5b57 \"5\" print (d[( 1 , 2 )]) # \u5370\u5b57 \"1\" https://docs.python.org/2/tutorial/datastructures.html#tuples-and-sequences \u306b\u306f\u66f4\u306b\u8a73\u3057\u3044\u60c5\u5831\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3002","title":"\u30bf\u30d7\u30eb:"},{"location":"python_numpy_intro_ja/#_16","text":"Python \u306e\u95a2\u6570\u306f\u30ad\u30fc\u30ef\u30fc\u30c9 def \u3092\u7528\u3044\u3066\u5b9a\u7fa9\u3055\u308c\u308b\u3002\u4ee5\u4e0b\u306e\u4f8b: 1 2 3 4 5 6 7 8 9 10 11 def sign (x): if x > 0 : return 'positive' elif x < 0 : return 'negative' else : return 'zero' for x in [- 1 , 0 , 1 ]: print (sign(x)) # \u5370\u5b57 \"negative\", \"zero\", \"positive\" \u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u30ad\u30fc\u30ef\u30fc\u30c9\u4ed8\u304d\u3067\u5b9a\u7fa9\u53ef\u80fd\u3067\u3042\u308b: 1 2 3 4 5 6 7 8 def hello(name, loud= False ): if loud: print( 'HELLO, %s' % name. upper ()) else : print( 'Hello, %s!' % name) hello( 'Bob' ) # \u5370\u5b57 \"Hello, Bob\" hello( 'Fred' , loud= True ) # \u5370\u5b57 \"HELLO, FRED!\" Python \u306e\u30af\u30e9\u30b9\u60c5\u5831\u306f https://docs.python.org/2/tutorial/controlflow.html#defining-functions \u3092\u53c2\u7167\u306e\u3053\u3068","title":"\u95a2\u6570"},{"location":"python_numpy_intro_ja/#_17","text":"Python\u306b\u304a\u3051\u308b\u30af\u30e9\u30b9\u5b9a\u7fa9\u306e\u8a18\u6cd5\u306f\u76f4\u622a\u7684\u3067\u3042\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Greeter : # Constructor def __init__ ( self , name): self .name = name # \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210 # Instance method def greet ( self , loud= False ): if loud: print ( 'HELLO, %s!' % self .name.upper()) else : print ( 'Hello, %s' % self .name) g = Greeter( 'Fred' ) # Greeter \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210 g.greet() # \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057; \u5370\u5b57 \"Hello, Fred\" g.greet(loud= True ) # \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057; \u5370\u5b57 \"HELLO, FRED!\" \u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30\u306f\u4ee5\u4e0b\u3067\u3042\u308b https://docs.python.org/2/tutorial/classes.html","title":"\u30af\u30e9\u30b9"},{"location":"python_numpy_intro_ja/#numpy","text":"NumPy\u306fPython\u306b\u304a\u3051\u308b\u79d1\u5b66\u6280\u8853\u8a08\u7b97\u306e\u6838\u3068\u306a\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u3002\u9ad8\u6027\u80fd\u591a\u6b21\u5143\u914d\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u914d\u5217\u51e6\u7406\u7528\u30c4\u30fc\u30eb\u304b\u3089\u69cb\u6210\u3055\u308c\u3066\u3044\u308b\u3002MATLAB \u304c\u65e2\u77e5\u306a\u3089\u3070\uff0c\u672c\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u304b\u3089NumPy\u3092\u59cb\u3081\u308b\u306e\u304c\u826f\u3044\u3060\u308d\u3046\u3002","title":"NumPy"},{"location":"python_numpy_intro_ja/#_18","text":"NumPy\u306e\u914d\u5217\u306f\u5024\u306e\u683c\u5b50\u72b6\u914d\u7f6e\u3067\u3042\u308b\u3002\u5168\u8981\u7d20\u306e\u5024\u306f\u540c\u3058\u30c7\u30fc\u30bf\u578b\u3067\u3042\u308a\uff0c\u975e\u8ca0\u6574\u6570\u306e\u30bf\u30d7\u30eb\u3067\u6307\u5b9a\u53ef\u80fd\u3067\u3042\u308b\u3002 Python\u306b\u304a\u3051\u308b\u914d\u5217\u306f\u5165\u308c\u5b50\u306b\u306a\u3063\u305f\u30ea\u30b9\u30c8\u3067\u3042\u308a\uff0c\u30ab\u30ae\u30ab\u30c3\u30b3\u3092\u7528\u3044\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 import numpy as np a = np.array([ 1 , 2 , 3 ]) # \u6b21\u5143\u6570 1 \u306e\u914d\u5217\u306e\u4f5c\u6210 print ( type (a)) # \u5370\u5b57 \"<type 'numpy.ndarray'>\" print (a.shape) # \u5370\u5b57 \"(3,)\" print (a[ 0 ], a[ 1 ], a[ 2 ]) # \u5370\u5b57 \"1 2 3\" a[ 0 ] = 5 # \u914d\u5217\u306e\u8981\u7d20\u3092\u4e00\u3064\u5909\u66f4 print (a) # \u5370\u5b57 \"[5, 2, 3]\" b = np.array([[ 1 , 2 , 3 ],[ 4 , 5 , 6 ]]) # \u6b21\u5143\u6570\u304c 2 \u306e\u914d\u5217\u306e\u4f5c\u6210 print (b.shape) # \u5370\u5b57 \"(2, 3)\" print (b[ 0 , 0 ], b[ 0 , 1 ], b[ 1 , 0 ]) # \u5370\u5b57 \"1 2 4\" NumPy \u306b\u306f\u914d\u5217\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import numpy as np a = np.zeros(( 2 , 2 )) # \u5168\u8981\u7d20\u304c\u30bc\u30ed\u306e\u914d\u5217\u306e\u4f5c\u6210 print (a) # \u5370\u5b57 \"[[ 0. 0.] # [ 0. 0.]]\" b = np.ones(( 1 , 2 )) # \u5168\u8981\u7d20\u304c\u30bc\u30ed\u306e\u914d\u5217\u306e\u4f5c\u6210 print (b) # \u5370\u5b57 \"[[ 1. 1.]]\" c = np.full(( 2 , 2 ), 7 ) # \u5b9a\u6570\u884c\u5217\u3092\u4f5c\u6210 print (c) # \u5370\u5b57 \"[[ 7. 7.] # [ 7. 7.]]\" d = np.eye( 2 ) # 2x2 \u306e\u5358\u4f4d\u884c\u5217\u306e\u4f5c\u6210 print (d) # \u5370\u5b57 \"[[ 1. 0.] # [ 0. 1.]]\" e = np.random.random(( 2 , 2 )) # \u4e71\u6570\u3067\u521d\u671f\u5316\u3057\u305f\u914d\u5217\u306e\u4f5c\u6210 print (e) # \u5370\u5b57\u4f8b \"[[ 0.91940167 0.08143941] # [ 0.68744134 0.87236687]]\" \u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\u4ed6\u306e\u65b9\u6cd5\u306f http://docs.scipy.org/doc/numpy/user/basics.creation.html#arrays-creation \u3067\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3002","title":"\u914d\u5217"},{"location":"python_numpy_intro_ja/#_19","text":"NumPy \u306b\u306f\u6307\u5b9a\u5b50\u3092\u914d\u5217\u5316\u3059\u308b\u65b9\u6cd5\u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u3002","title":"\u914d\u5217\u6307\u5b9a"},{"location":"python_numpy_intro_ja/#_20","text":"Python\u306b\u304a\u3051\u308b\u30ea\u30b9\u30c8\u3068\u540c\u69d8\uff0cNumPy\u306e\u914d\u5217\u306b\u306f\u30b9\u30e9\u30a4\u30b9 \u304c\u9069\u7528\u53ef\u80fd\u3067\u3042\u308b\u3002\u914d\u5217\u306e\u5404\u6b21\u5143\u6bce\u306b\u30b9\u30e9\u30a4\u30b9\u3092\u6307\u5b9a\u53ef\u80fd\u3067\u3042\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import numpy as np # 3\u884c4\u5217\u3067\u968e\u6570\u304c2\u306e\u884c\u5217\u306e\u4f5c\u6210 # [[ 1 2 3 4] # [ 5 6 7 8] # [ 9 10 11 12]] a = np. array ([[ 1 , 2 , 3 , 4 ], [ 5 , 6 , 7 , 8 ], [ 9 , 10 , 11 , 12 ]]) # \u4e0b\u4f4d\u884c\u5217\u306e\u30b9\u30e9\u30a4\u30b9\u3057\uff0c\u4e0a2\u884c\u306e1\u5217\u76ee2\u5217\u76ee\u3092\u7528\u3044\u30662\u884c2\u5217\u306e\u884c\u5217\u3092\u4f5c\u6210 # [[2 3] # [6 7]] b = a[: 2 , 1 : 3 ] # \u30b9\u30e9\u30a4\u30b9\u306f\u5143\u884c\u5217\u3078\u306e\u53c2\u7167\u306a\u306e\u3067\uff0c\u30b9\u30e9\u30a4\u30b9\u3078\u306e\u5909\u66f4\u306f\u5143\u30c7\u30fc\u30bf\u306b\u5f71\u97ff\u3092\u53ca\u307c\u3059 print (a[ 0 , 1 ]) # \u5370\u5b57 \"2\" b[ 0 , 0 ] = 77 # b[0, 0] \u306f a[0, 1] \u3068\u7b49\u4fa1 print (a[ 0 , 1 ]) # \u5370\u5b57 \"77\" \u6574\u6570\u6307\u5b9a\u5b50\u3068\u30b9\u30e9\u30a4\u30b9\u6307\u5b9a\u5b50\u3092\u6df7\u5728\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u3057\u304b\u3057\uff0c\u305d\u3046\u3059\u308b\u3068\u5143\u884c\u5217\u3088\u308a\u3082\u6b21\u5143\u306e\u4f4e\u3044\u884c\u5217\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002 MATLAB \u306b\u304a\u3051\u308b\u884c\u5217\u30b9\u30e9\u30a4\u30b9\u3068\u306f\u7570\u306a\u308b\u3053\u3068\u306b\u6ce8\u610f\u305b\u3088\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import numpy as np # 3\u884c4\u5217\u306e2\u6b21\u306e\u884c\u5217\u3092\u4f5c\u6210 # [[ 1 2 3 5] # [ 4 6 7 8] # [ 9 10 11 12]] a = np.array([[ 1 , 2 , 3 , 4 ], [ 5 , 6 , 7 , 8 ], [ 9 , 10 , 11 , 12 ]]) # \u884c\u5217\u306e\u4e2d\u592e\u884c\u3078\u306e\u30a2\u30af\u30bb\u30b92\u7a2e\u985e # \u30b9\u30e9\u30a4\u30b9\u3068\u6574\u6570\u306e\u6df7\u5728\u306f\u968e\u6570\u306e\u4f4e\u4e0b\u3092\u3082\u305f\u3089\u3059 # \u4e00\u65b9\uff0c\u30b9\u30e9\u30a4\u30b9\u306e\u307f\u3092\u4f7f\u7528\u3057\u305f\u5834\u5408\u306b\u306f\u539f\u884c\u5217\u306e\u6b21\u5143\u4f4e\u6e1b\u306f\u767a\u751f\u3057\u306a\u3044 row_r1 = a[ 1 , :] # \u884c\u5217 a \u306e 2 \u884c\u76ee\u306e\u5168\u5217\u8868\u793a row_r2 = a[ 1 : 2 , :] # \u884c\u5217 a \u306e 2 \u884c\u76ee\u306e\u5168\u5217\u8868\u793a print (row_r1, row_r1.shape) # \u5370\u5b57 \"[5 6 7 8] (4,)\" print (row_r2, row_r2.shape) # \u5370\u5b57 \"[[5 6 7 8]] (1, 4)\" # \u884c\u5217\u306b\u5bfe\u3059\u308b\u5217\u3078\u306e\u64cd\u4f5c\u3082\u540c\u69d8 col_r1 = a[:, 1 ] col_r2 = a[:, 1 : 2 ] print (col_r1, col_r1.shape) # \u5370\u5b57 \"[ 2 6 10] (3,)\" print (col_r2, col_r2.shape) # \u5370\u5b57 \"[[ 2] # [ 6] # [10]] (3, 1)\"","title":"\u30b9\u30e9\u30a4\u30b9:"},{"location":"python_numpy_intro_ja/#_21","text":"NumPy\u306e\u914d\u5217\u306b\u5bfe\u3057\u3066\u30b9\u30e9\u30a4\u30b9\u3092\u5b9f\u884c\u3059\u308b\u3068\uff0c\u7d50\u679c\u306f\u5143\u884c\u5217\u306e\u4e0b\u4f4d\u914d\u5217\u3068\u306a\u308b\u3002 \u3053\u308c\u306b\u5bfe\u3057\u3066\uff0c\u6574\u6570\u578b\u5909\u6570\u304b\u3089\u306a\u308b\u914d\u5217\u306b\u5bfe\u3057\u3066\u30b9\u30e9\u30a4\u30b9\u3092\u5b9f\u884c\u3059\u308c\u3070\uff0c \u65b0\u305f\u306a\u914d\u5217\u304c\u69cb\u6210\u3055\u308c\u308b\u3002\u4ee5\u4e0b\u306e\u3068\u304a\u308a: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import numpy as np a = np.array([[ 1 , 2 ], [ 3 , 4 ], [ 5 , 6 ]]) # \u6574\u6570\u578b\u914d\u5217\u306e\u4f8b \u623b\u308a\u5024\u306e\u914d\u5217\u306e shape \u306f (3,) print (a[[ 0 , 1 , 2 ], [ 0 , 1 , 0 ]]) # \u5370\u5b57 \"[1 4 5]\" # \u4e0a\u4f8b\u306f\u6574\u6570\u578b\u914d\u5217\u3092\u6307\u5b9a\u5b50\u3068\u3057\u305f\u5834\u5408\u3068\u7b49\u3057\u3044: print (np.array([a[ 0 , 0 ], a[ 1 , 1 ], a[ 2 , 0 ]])) # \u5370\u5b57 \"[1 4 5]\" # \u6574\u6570\u578b\u914d\u5217\u3092\u6307\u5b9a\u5b50\u3068\u3057\u3066\u7528\u3044\u308b\u3068\u5143\u914d\u5217\u3068\u540c\u3058\u8981\u7d20\u3092\u518d\u5229\u7528\u3067\u304d\u308b print (a[[ 0 , 0 ], [ 1 , 1 ]]) # \u5370\u5b57 \"[2 2]\" # \u5148\u306e\u6574\u6570\u578b\u306e\u914d\u5217\u6307\u5b9a\u5b50\u306b\u7b49\u3057\u3044 print (np.array([a[ 0 , 1 ], a[ 0 , 1 ]])) # \u5370\u5b57 \"[2 2]\" print (np.array([a[ 0 , 1 ], a[ 0 , 1 ]])) # \u5370\u5b57 \"[2 2]\"","title":"\u6574\u6570\u578b\u914d\u5217\u6307\u5b9a\u5b50:"},{"location":"python_numpy_intro_ja/#_22","text":"\u30fc\u30eb(2\u5024)\u578b\u914d\u5217\u6307\u5b9a\u5b50\u306f\u914d\u5217\u306e\u4efb\u610f\u306e\u8981\u7d20\u3092\u53d6\u308a \u51fa\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\u3053\u306e\u6307\u5b9a\u5b50\u306b\u3088\u308a\u914d\u5217\u304b\u3089\u4efb\u610f\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u8981\u7d20\u304b\u3089\u306a \u308b\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import numpy as np a = np.array([[ 1 , 2 ], [ 3 , 4 ], [ 5 , 6 ]]) bool_idx = (a > 2 ) # 2\u3000\u3088\u308a\u5927\u304d\u3044\u914d\u5217\u306e\u8981\u7d20\u3092\u63a2\u3059 # \u3053\u308c\u306b\u3088\u308a numpy \u306e\u914d\u5217\u3068\u7b49\u3057\u3044 shape \u3067\u30d6\u30fc\u30eb\u578b\u306e # \u914d\u5217\u3092\u8fd4\u3059\u3002bool_idx \u306f a \u306e\u5404\u8981\u7d20\u304c 2 \u3088\u308a\u5927\u304d\u3044 # \u304b\u5426\u304b\u3092\u793a\u3059 print (bool_idx) # \u5370\u5b57 \"[[False False] # [ True True] # [ True True]]\" # \u30d6\u30fc\u30eb\u578b\u914d\u5217\u6307\u5b9a\u5b50\u3092\u7528\u3044\u3066\u968e\u65701\u306e\u884c\u5217\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b # bool_idx \u306e True \u306b\u5bfe\u5fdc\u3059\u308b\u8981\u7d20\u3067\u69cb\u6210\u3055\u308c\u308b\u884c\u5217\u3067\u3042\u308b print (a[bool_idx]) # \u5370\u5b57 \"[3 4 5 6]\" # \u4e0a\u4f8b\u3092\u7c21\u6f54\u306b\u8868\u8a18\u53ef\u80fd\u3067\u3042\u308b print (a[a > 2 ]) # \u5370\u5b57 \"[3 4 5 6]\" \u672c\u7a3f\u306e\u7c21\u6f54\u6027\u3086\u3048NumPy\u306e\u914d\u5217\u6307\u5b9a\u5b50\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u591a\u304f\u3092\u8a18\u8f09\u3057\u3066\u3044\u306a\u3044\u3002 \u8a73\u7d30\u306f\u6587\u732e\u3092\u53c2\u7167\u306e\u3053\u3068\u3002","title":"\u30d6\u30fc\u30ea\u30a2\u30f3\u914d\u5217\u6307\u5b9a\u5b50:"},{"location":"python_numpy_intro_ja/#_23","text":"NumPy \u306e\u914d\u5217\u306f\u540c\u3058\u578b\u306e\u8981\u7d20\u304b\u3089\u306a\u308b\u30b0\u30ea\u30c3\u30c9\u3067\u3042\u308b\u3002 \u914d\u5217\u4f5c\u6210\u306b\u306f\u4e00\u9023\u306e\u30c7\u30fc\u30bf\u578b\u3092\u5229\u7528\u53ef\u80fd\u3067\u3042\u308b\u3002 NumPy\u306f\u914d\u5217\u306e\u30c7\u30fc\u30bf\u578b\u304c\u4f55\u3067\u3042\u308b\u304b\u3092\u985e\u63a8\u3057\u3088\u3046\u3068\u3059\u308b\u3002 \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\u306b\u3088\u308a\u660e\u793a\u7684\u306b\u914d\u5217\u306e\u30c7\u30fc\u30bf\u578b\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b: 1 2 3 4 5 6 7 8 9 10 import numpy as np x = np.array([ 1 , 2 ]) # numpy \u306b\u30c7\u30fc\u30bf\u578b\u3092\u9078\u629e\u3055\u305b\u308b print (x.dtype) # \u5370\u5b57 \"int64\" x = np.array([ 1.0 , 2.0 ]) # numpy \u306b\u30c7\u30fc\u30bf\u578b\u3092\u9078\u629e\u3055\u305b\u308b print (x.dtype) # \u5370\u5b57 \"float64\" x = np.array([ 1 , 2 ], dtype=np.int64) # \u30c7\u30fc\u30bf\u578b\u306e\u5f37\u5236\u6307\u5b9a print (x.dtype) # \u5370\u5b57 \"int64\" NumPy \u306e\u5168\u30c7\u30fc\u30bf\u578b\u306b\u3064\u3044\u3066\u306f http://docs.scipy.org/doc/numpy/reference/arrays.dtypes.html \u3092\u53c2\u7167\u306e\u3053\u3068\u3002","title":"\u30c7\u30fc\u30bf\u578b"},{"location":"python_numpy_intro_ja/#_24","text":"\u57fa\u672c\u7684\u6570\u5b66\u95a2\u6570\u306e\u64cd\u4f5c\u306f\u914d\u5217\u306e\u8981\u7d20\u6bce\u306e\u6f14\u7b97\u3067\u3042\u308b\u3002 NumPy \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u95a2\u6570\u3068\u3057\u3066\u6f14\u7b97\u5b50\u3092\u4e0a\u66f8\u304d\u53ef\u80fd\u3067\u3042\u308b\uff0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 import numpy as np x = np.array([[ 1 , 2 ],[ 3 , 4 ]], dtype=np.float64) y = np.array([[ 5 , 6 ],[ 7 , 8 ]], dtype=np.float64) # \u5bfe\u5fdc\u3059\u308b\u8981\u7d20\u306e\u548c\uff0c\u4e21\u4f8b\u3068\u3082\u540c\u3058\u7d50\u679c\u3092\u5f97\u308b # [[ 6.0 8.0] # [10.0 12.0]] print (x + y) print (np.add(x, y)) # \u5bfe\u5fdc\u3059\u308b\u8981\u7d20\u306e\u5dee\uff0c\u4e21\u4f8b\u3068\u3082\u540c\u3058\u7d50\u679c\u3092\u5f97\u308b # [[-4.0 -4.0] # [-4.0 -4.0]] print (x - y) print (np.subtract(x, y)) # \u5bfe\u5fdc\u3059\u308b\u8981\u7d20\u306e\u7a4d\uff0c\u4e21\u4f8b\u3068\u3082\u540c\u3058\u7d50\u679c\u3092\u5f97\u308b # [[ 5.0 12.0] # [21.0 32.0]] print (x * y) print (np.multiply(x, y)) # \u5bfe\u5fdc\u3059\u308b\u8981\u7d20\u306e\u5f90\uff0c\u4e21\u4f8b\u3068\u3082\u540c\u3058\u7d50\u679c\u3092\u5f97\u308b # [[ 0.2 0.33333333] # [ 0.42857143 0.5 ]] print (x / y) print (np.divide(x, y)) # \u5404\u8981\u7d20\u306e\u5e73\u65b9\u6839 # [[ 1. 1.41421356] # [ 1.73205081 2. ]] print (np.sqrt(x)) MATLAB \u3068\u7570\u306a\u308a\uff0c[ * ] \u306f\u8981\u7d20\u6bce\u306e\u7a4d\u3067\u3042\u308a\uff0c\u884c\u5217\u306e\u7a4d\u3067\u306f\u306a\u3044\u3002 \u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\uff0c\u30d9\u30af\u30c8\u30eb\u3068\u884c\u5217\u306e\u7a4d\uff0c\u884c\u5217\u306e\u7a4d\u306b\u306f[ dot ]\u3092\u7528\u3044\u308b\u3002 [ dot ]\u306f NumPy \u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u914d\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b \u9069\u7528\u53ef\u80fd\u3067\u3042\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import numpy as np x = np.array([[ 1 , 2 ],[ 3 , 4 ]]) y = np.array([[ 5 , 6 ],[ 7 , 8 ]]) v = np.array([ 9 , 10 ]) w = np.array([ 11 , 12 ]) # \u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\u4e21\u8005\u3068\u3082\u540c\u3058\u304f 219 \u3092\u5f97\u308b print (v.dot(w)) print (np.dot(v, w)) # \u884c\u5217\u3068\u30d9\u30af\u30c8\u30eb\u306e\u7a4d\u3002\u4e21\u8005\u3068\u3082\u540c\u3058\u304f [29 67] \u3092\u5f97\u308b print (x.dot(v)) print (np.dot(x, v)) # \u884c\u5217\u3068\u884c\u5217\u306e\u7a4d\u3002\u4e21\u8005\u3068\u3082\u540c\u3058\u304f\u4ee5\u4e0b\u306e\u884c\u5217\u3092\u5f97\u308b # [[19 22] # [43 50]] print (x.dot(y)) print (np.dot(x, y)) NumPy \u306f\u884c\u5217\u64cd\u4f5c\u9042\u884c\u306b\u6709\u5f79\u306a\u95a2\u6570\u3092\u6570\u591a\u304f\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3002[ sum ] \u306a\u3069 1 2 3 4 5 6 7 import numpy as np x = np.array([[ 1 , 2 ],[ 3 , 4 ]]) print (np.sum(x)) # \u7dcf\u548c\u3092\u8a08\u7b97 10\u3068\u5370\u5b57 print (np.sum(x, axis= 0 )) # \u5404\u5217\u306e\u7dcf\u548c\u3092\u8a08\u7b97: \"[4 6]\" \u3068\u5370\u5b57 print (np.sum(x, axis= 1 )) # \u5404\u884c\u306e\u7dcf\u548c\u3092\u8a08\u7b97: \"[3 7]\" \u3068\u5370\u5b57 NumPy\u306e\u5168\u6570\u5b66\u95a2\u6570\u30ea\u30b9\u30c8\u306f http://docs.scipy.org/doc/numpy/reference/routines.math.html \u304b\u3089\u5165\u624b\u53ef \u80fd\u3067\u3042\u308b\u3002 \u914d\u5217\u3092\u7528\u3044\u305f\u6570\u5b66\u95a2\u6570\u306e\u8a08\u7b97\u3060\u3051\u3067\u306a\u304f\uff0c\u914d\u5217\u306e reshae \u3084\u4ed6\u306e\u30c7\u30fc\u30bf\u64cd\u4f5c\u304c\u591a\u6570\u5fc5 \u8981\u3068\u306a\u308b\u3002\u5358\u7d14\u306a\u4f8b\u306f\u884c\u5217\u306e\u8ee2\u7f6e\u3067\u3042\u308b\u3002\u884c\u5217\u306e\u8ee2\u7f6e\u306b\u306f\u914d\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e [ T ] \u3092\u4f7f\u3048\u3070\u3088\u3044\u3002 1 2 3 4 5 6 7 8 9 10 11 12 import numpy as np x = np.array([[ 1 , 2 ], [ 3 , 4 ]]) print (x) # \u5370\u5b57 \"[[1 2] # [3 4]]\" print (x.T) # \u5370\u5b57 \"[[1 3] # [2 4]]\" # \u968e\u65701\u306e\u884c\u5217\u3092\u8ee2\u7f6e\u3057\u3066\u3082\u306a\u306b\u3082\u5909\u308f\u3089\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f v = np.array([ 1 , 2 , 3 ]) print (v) # \u5370\u5b57 \"[1 2 3]\" print (v.T) # \u5370\u5b57 \"[1 2 3]\" NumPy \u306f\u914d\u5217\u64cd\u4f5c\u95a2\u6570\u304c\u591a\u3044\u3002 http://docs.scipy.org/doc/numpy/reference/routines.array-manipulation.html \u3092\u53c2\u7167\u3055\u308c\u305f\u3044\u3002","title":"\u6570\u5b66\u7684\u914d\u5217"},{"location":"python_numpy_intro_ja/#_25","text":"\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u306f\u7b97\u8853\u7684\u64cd\u4f5c\u3092\u884c\u3046\u969b\u3001NumPy\u304c\u7570\u306a\u308b shape \u306e\u914d\u5217\u306b\u5f37\u529b\u306a\u51e6 \u7406\u6a5f\u69cb\u3092\u884c\u3046\u3053\u3068\u3092\u53ef\u80fd\u306b\u3059\u308b\u3002 \u884c\u5217\u306e\u5404\u884c\u306b\u5bfe\u3057\u3066\u5b9a\u6570\u30d9\u30af\u30c8\u30eb\u3092\u52a0\u3048\u308b\u5834\u5408\u3092\u4ee5\u4e0b\u306b\u793a\u3059: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import numpy as np # \u884c\u5217 x \u306e\u5404\u884c\u306b\u5bfe\u3057\u3066\u30d9\u30af\u30c8\u30eb v \u3092\u52a0\u3048\u7d50\u679c\u3092 y \u306b\u683c\u7d0d x = np.array([[ 1 , 2 , 3 ], [ 4 , 5 , 6 ], [ 7 , 8 , 9 ], [ 10 , 11 , 12 ]]) v = np.array([ 1 , 0 , 1 ]) y = np.empty_like(x) # x \u3068\u540c\u3058 shape \u3092\u6301\u3064\u7a7a\u884c\u5217\u3092\u751f\u6210 # \u660e\u793a\u7684\u7e70\u308a\u8fd4\u3057\u3092\u7528\u3044\u3066\u884c\u5217 x \u306e\u5404\u884c\u306b\u30d9\u30af\u30c8\u30eb v \u306e\u8981\u7d20\u3092\u52a0\u7b97 for i in range ( 4 ): y[i, :] = x[i, :] + v # y \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b # [[ 2 2 4] # [ 5 5 7] # [ 8 8 10] # [11 11 13]] print (y) \u884c\u5217 x \u304c\u5de8\u5927\u306a\u5834\u5408Python\u306e\u660e\u793a\u7684\u306a\u30eb\u30fc\u30d7\u306f\u9045\u3044\u3002\u884c\u5217 x \u306e\u5404\u884c \u306b\u30d9\u30af\u30c8\u30eb v \u3092\u52a0\u3048\u308b\u3053\u3068\u306f\u30b9\u30bf\u30c3\u30af\u9818\u57df\u306b\u7a4d\u307e\u308c\u305f v \u306e\u30b3\u30d4\u30fc\u3068\u884c \u5217 vv \u306e\u548c\u3092\u69cb\u6210\u3059\u308b\u3053\u3068\u306b\u7b49\u3057\u3044\u3002\u4ee5\u4e0b\u306e\u4f8b\u306e\u3088\u3046\u306b\u306a\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import numpy as np # \u884c\u5217 x \u306e\u5404\u8981\u7d20\u306b\u30d9\u30af\u30c8\u30eb v \u3092\u52a0\u3048\u308b # \u884c\u5217 y \u306b\u7d50\u679c\u3092\u683c\u7d0d x = np. array ([[ 1 , 2 , 3 ], [ 4 , 5 , 6 ], [ 7 , 8 , 9 ], [ 10 , 11 , 12 ]]) v = np. array ([ 1 , 0 , 1 ]) vv = np. tile (v, ( 4 , 1 )) # v \u304b\u30894\u3064\u306e\u30b9\u30bf\u30c3\u30af\u3092\u4f5c\u6210 print (vv) # \u5370\u5b57 \"[[1 0 1] # [1 0 1] # [1 0 1] # [1 0 1]]\" y = x + vv # x \u3068 vv \u306e\u5404\u8981\u7d20\u3092\u52a0\u3048\u308b print (y) # \u5370\u5b57 \"[[ 2 2 4 # [ 5 5 7] # [ 8 8 10] # [11 11 13]]\" NumPy \u306e\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u306f y \u306e\u591a\u91cd\u30b3\u30d4\u30fc\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306a\u304f\u8a08\u7b97\u3092 \u5b9f\u884c\u3059\u308b\u3002\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3092\u7528\u3044\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4ee5\u4e0b\u306b\u793a\u3059: 1 2 3 4 5 6 7 8 9 10 11 import numpy as np # \u884c\u5217 x \u306e\u5404\u884c\u306b\u30d9\u30af\u30c8\u30eb v \u3092\u52a0\u3048\u308b # \u7d50\u679c\u3092\u884c\u5217 y \u306b\u683c\u7d0d\u3059\u308b x = np.array([[ 1 , 2 , 3 ], [ 4 , 5 , 6 ], [ 7 , 8 , 9 ], [ 10 , 11 , 12 ]]) v = np.array([ 1 , 0 , 1 ]) y = x + v # \u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3092\u4f7f\u3063\u3066 x \u306e\u5404\u884c\u306b v \u3092\u52a0\u3048\u308b print (y) # \u5370\u5b57 \"[[ 2 2 4] # [ 5 5 7] # [ 8 8 10] # [11 11 13]]\" y = x + v \u306e\u884c\u306f\uff0c x \u306f (4,3) \u306e\u6b21\u6570\u3092\u6301\u3061\uff0c v \u306f (3,) \u306e\u6b21\u6570\u3092\u6301\u3064\u3053\u3068\u304c\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u306b\u3088\u308a y = x + v \u304c\u8a08\u7b97\u3055\u308c \u308b\u3002\u3082\u3057 v \u304c\u6b21\u6570 (4,3) \u3067\u3042\u308b\u3088\u3046\u306b\u4f5c\u7528\u3059\u308b\u3002\u5404\u884c\u306f v \u306e \u30b3\u30d4\u30fc\u3067\u3042\u308a\u5404\u8981\u7d20\u306e\u548c\u304c\u8a08\u7b97\u3055\u308c\u308b\u3002 2\u3064\u306e\u884c\u5217\u3092\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u5834\u5408\u4ee5\u4e0b\u306e\u898f\u5247\u306b\u5f93\u3046: \u3082\u3057\u4e8c\u3064\u306e\u884c\u5217\u304c\u540c\u3058\u6b21\u6570\u3067\u306a\u3051\u308c\u3070\u4f4e\u6b21\u6570\u306e\u884c\u5217\u3092\u62e1\u5f35\u3057\u3066\u7b49\u3057\u304f\u3059\u308b\u3002 \u4e8c\u3064\u306e\u884c\u5217\u304c\uff0c\u7279\u5b9a\u306e\u6b21\u5143\u306e\u307f\u4e00\u81f4\u3057\u3066\u3044\u308b\u5834\u5408\uff0c\u7247\u65b9\u306e\u914d\u5217\u306e\u6b21\u5143\u304c1\u3067\u3042\u3063\u3066\u3082\u3001\u4ed6\u306e\u6b21\u5143\u3082\u540c\u3058\u30b5\u30a4\u30ba\u306e\u6b21\u5143\u306b\u3059\u308b\u3002 \u4e8c\u3064\u306e\u914d\u5217\u5168\u3066\u306e\u6b21\u5143\u306b\u4e92\u63db\u6027\u304c\u3042\u308c\u3070\u4e21\u8005\u3068\u3082\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3055\u308c\u308b\u3002 \u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u5f8c\uff0c\u5404\u914d\u5217\u306f\u4e21\u5165\u529b\u914d\u5217\u306e\u6b21\u6570\u304c\u7b49\u3057\u3044\u3068\u3057\u3066\u632f\u308b\u821e\u3046\u3002 \u4e00\u65b9\u306e\u914d\u5217\u306e\u30b5\u30a4\u30ba\u304c1\u3067\u3042\u308a\u4ed6\u65b9\u306e\u914d\u5217\u30b5\u30a4\u30ba\u304c1\u3088\u308a\u5927\u304d\u3044\u5834\u5408\uff0c\u6700\u521d\u306e \u914d\u5217\u306f\u6b21\u5143\u3092\u7e70\u308a\u8fd4\u3057\u8907\u5199\u3057\u3066\u52d5\u4f5c\u3059\u308b \u4e0a\u8a18\u306e\u610f\u5473\u304c\u4e0d\u660e\u306a\u3089\uff0c http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html \u306e http://wiki.scipy.org/EricsBroadcastingDoc \u8aac\u660e\u3092\u8aad\u307e\u308c\u305f\u3044\u3002 \u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u95a2\u6570\u306f\u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u95a2\u6570\u3068\u3057\u3066\u77e5\u3089\u308c\u308b\u3002 \u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u95a2\u6570\u306e\u30ea\u30b9\u30c8\u306f http://docs.scipy.org/doc/numpy/reference/ufuncs.html#available-ufuncs \u3092\u53c2\u7167\u306e\u3053\u3068\u3002 \u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u306e\u4f8b\u3092\u793a\u3059: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 import numpy as np # \u30d9\u30af\u30c8\u30eb\u306e\u5916\u7a4d\u3092\u8a08\u7b97 v = np.array([ 1 , 2 , 3 ]) # v \u306e\u6b21\u6570 (3,) w = np.array([ 4 , 5 ]) # w \u306e\u6b21\u6570 (2,) # \u5916\u7a4d\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081 v \u306e\u6b21\u6570\u3092\u5217\u3078\u3068\u5909\u5f62\u3059\u308b # \u6b21\u6570 (3, 1) \u306e\u30d9\u30af\u30c8\u30eb; w \u306b\u5bfe\u3057\u3066\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3059\u308b # \u5916\u7a4d\u306e\u8a08\u7b97\u7d50\u679c\u3067\u3042\u308b\u6b21\u6570 (3, 2) \u306e\u884c\u5217\u3092\u5f97\u308b # [[ 4 5] # [ 8 10] # [12 15]] print (np.reshape(v, ( 3 , 1 )) * w) # \u884c\u5217\u306e\u5404\u884c\u306b\u30d9\u30af\u30c8\u30eb\u3092\u52a0\u7b97\u3059\u308b x = np.array([[ 1 , 2 , 3 ], [ 4 , 5 , 6 ]]) # x \u306f\u6b21\u6570 (2,3) \u3067\u3042\u308a v \u306f (3,) \u3067\u3042\u308b\u3002v \u306f\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3055\u308c\u3066 (2,3) \u3068\u306a\u308a # x has shape (2, 3) and v has shape (3,) so they broadcast to (2, 3), # \u4ee5\u4e0b\u306e\u884c\u5217\u3092\u5f97\u308b: # [[2 4 6] # [5 7 9]] print (x + v) # \u884c\u5217\u306e\u5404\u5217\u306b\u30d9\u30af\u30c8\u30eb\u3092\u52a0\u3048\u308b # x \u306e\u6b21\u6570\u306f (2, 3) \u3067\u3042\u308a\uff0cw \u306e\u6b21\u6570\u306f (2,) \u3067\u3042\u308b\u3002 x \u3092\u8ee2\u7f6e\u3059\u308c\u3070 # \u6b21\u6570\u306f (3, 2) \u3068\u306a\u308a w \u306f\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3055\u308c\u6b21\u6570\u306f (3, 2) \u3068\u306a\u308b\u3002 # \u7d50\u679c\u306f\u8ee2\u7f6e\u3055\u308c\u6b21\u6570 (2, 3) \u306e\u884c\u5217\u3068\u306a\u308a\u4ee5\u4e0b\u306e\u884c\u5217\u3092\u5f97\u308b: # [[ 5 6 7] # [ 9 10 11]] print ((x.T + w).T) # \u5225\u89e3\u3068\u3057\u3066\u306f\u6b21\u6570 (2, 1) \u306e\u884c\u30d9\u30af\u30c8\u30eb\u306b\u5bfe\u3057\u3066\u6b21\u6570\u3092\u5909\u63db\u3057\uff0c # \u305d\u306e\u7d50\u679c\u3092\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u76f4\u63a5\u5916\u7a4d\u3092\u8a08\u7b97\u3059\u308b print (x + np.reshape(w, ( 2 , 1 ))) # \u884c\u5217\u306e\u5b9a\u6570\u500d: # \u884c\u5217 x \u306e\u6b21\u6570\u306f (2, 3). Numpy \u306f\u30b9\u30ab\u30e9\u3092\u6b21\u6570 () \u306e\u914d\u5217\u3068\u3057\u3066\u6271\u3046: # \u30b9\u30ab\u30e9\u306f\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3055\u308c\u6b21\u6570 (2, 3) \u306e\u884c\u5217\u3068\u306a\u308a\u4ee5\u4e0b\u306e\u7d50\u679c\u3092\u5f97\u308b # [[ 2 4 6] # [ 8 10 12]] print (x * 2 ) \u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u306b\u3088\u308a\u30b3\u30fc\u30c9\u306f\u7c21\u6f54\u306b\u306a\u308a\uff0c\u9ad8\u901f\u5316\u3059\u308b\u3002 \u53ef\u80fd\u306a\u9650\u308a\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3092\u4f7f\u3046\u3088\u3046\u52aa\u3081\u308b\u3079\u304d\u3067\u3042\u308b\u3002","title":"\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8"},{"location":"python_numpy_intro_ja/#numpy_1","text":"\u3053\u3053\u3067\u306f NumPy \u306b\u95a2\u3057\u3066\u6982\u8aac\u3057\u305f\u304c\u5b8c\u5168\u306a\u8a18\u8ff0\u306b\u306f\u7a0b\u9060\u3044\u3002NumPy \u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 http://docs.scipy.org/doc/numpy/reference/ \u306b\u306f\u8a73\u7d30\u304c\u8a18\u3055\u308c\u3066\u3044\u308b\u3002","title":"NumPy \u306e\u6587\u66f8"},{"location":"python_numpy_intro_ja/#scipy","text":"NumPy \u306f\u9ad8\u6027\u80fd\u306a\u591a\u6b21\u5143\u914d\u5217\u3092\u63d0\u4f9b\u3057\uff0c\u914d\u5217\u64cd\u4f5c\u306e\u57fa\u672c\u9053\u5177\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3002 SciPy \u306f( http://docs.scipy.org/doc/scipy/reference/ ) NumPy \u3067\u5b9a\u7fa9\u3055\u308c\u305f\u914d\u5217\u3068\u79d1\u5b66\u6280\u8853\u306b\u6709\u76ca\u306a\u95a2\u6570\u6570\u591a\u304f\u7528\u610f\u3057\u3066\u3044\u308b\u3002 SciPy \u3092\u7406\u89e3\u3059\u308b\u306b\u306f http://docs.scipy.org/doc/scipy/reference/index.html \u3092\u89b3\u308b\u3053\u3068\u3067\u3042\u308b\u3002\u3053\u3053\u3067\u306fSciPy \u306e\u6709\u76ca\u70b9\u3044\u304f\u3064\u304b\u306b\u7126\u70b9\u3092\u3042\u3066\u308b\u3002","title":"SciPy"},{"location":"python_numpy_intro_ja/#_26","text":"SciPy \u306f\u753b\u50cf\u64cd\u4f5c\u306e\u57fa\u672c\u95a2\u6570\u3092\u63d0\u4f9b\u3059\u308b\u3002 \u4f8b\u3048\u3070\uff0c\u30c7\u30a3\u30b9\u30af\u304b\u3089\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3093\u3067 NumPy \u306e\u914d\u5217\u306b\u4ee3\u5165\u3057\uff0c NumPy \u306e\u914d\u5217\u3092\u753b\u50cf\u3068\u3057\u3066\u30c7\u30a3\u30b9\u30af\u306b\u66f8\u304d\u8fbc\u307f\uff0c \u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3059\u308b\u95a2\u6570\u306a\u3069\u3067\u3042\u308b\u3002 \u3053\u3053\u3067\u306f\uff0c\u3053\u308c\u3089\u306e\u95a2\u6570\u4f8b\u3092\u4f9b\u89a7\u3059\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 from scipy.misc import imread, imsave, imresize # JPEG \u753b\u50cf\u3092\\NumPy \u914d\u5217\u306b\u8aad\u307f\u8fbc\u3080 img = imread( 'assets/cat.jpg' ) print (img.dtype, img.shape) # \u5370\u5b57 \"uint8 (400, 248, 3)\" # \u5404\u8272\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u7570\u306a\u308b\u30b9\u30ab\u30e9\u5b9a\u6570\u306b\u3088\u308a\u8272\u5408\u3044\u3092\u5909\u3048\u308b\u3002 # \u753b\u50cf\u306f (400, 248, 3) \u306e\u6b21\u6570\u3067\u3042\u308b\u3002 # \u6b21\u6570 (3,) \u306e\u914d\u5217 [1, 0.95, 0.9] \u3092\u639b\u3051\u308b; # numpy \u306e\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u306f\u8d64\u30c1\u30e3\u30f3\u30cd\u30eb\u306f\u5909\u66f4\u305b\u305a\uff0c # \u7dd1\u3068\u9752\u3068\u3092\u305d\u308c\u305e\u308c 0.95 \u500d\uff0c0.9 \u500d\u3059\u308b img_tinted = img * [ 1 , 0.95 , 0.9 ] # \u8272\u5408\u3044\u3092\u5909\u66f4\u3057\u305f\u753b\u50cf\u3092\u7e26\u6a2a 300 \u753b\u7d20\u306e\u753b\u50cf\u306b\u5909\u63db\u3059\u308b img_tinted = imresize(img_tinted, ( 300 , 300 )) # \u5909\u66f4\u3057\u305f\u753b\u50cf\u3092\u30c7\u30a3\u30b9\u30af\u306b\u66f8\u304d\u51fa\u3059 imsave( 'assets/cat_tinted.jpg' , img_tinted)","title":"\u753b\u50cf\u64cd\u4f5c"},{"location":"python_numpy_intro_ja/#distance-between-points","text":"SciPy \u306f\u70b9\u306e\u96c6\u5408\u9593\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306e\u6709\u76ca\u306a\u95a2\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002 [ scipy.spatial.distance.pdist ] \u95a2\u6570\u306f\u6240\u4e0e\u306e\u96c6\u5408\u306b\u5c5e\u3059\u308b\u5168\u70b9 \u9593\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\u3059\u308b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import numpy as np from scipy.spatial.distance import pdist, squareform # 2\u6b21\u306e\u884c\u304b\u3089\u306a\u308b\u4ee5\u4e0b\u306e\u914d\u5217\u3092\u5b9a\u7fa9\u3059\u308b: # [[0 1] # [1 0] # [2 0]] x = np.array([[ 0 , 1 ], [ 1 , 0 ], [ 2 , 0 ]]) print (x) # x \u306e\u5168\u3066\u306e\u884c\u306e\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u306e\u8a08\u7b97 # d[i, j] \u306f x[i, :] \u3068 x[j, :] \u3068\u306e\u8ddd\u96e2\u3067\u3042\u308a\u4ee5\u4e0b\u306e\u884c\u5217\u3068\u306a\u308b # [[ 0. 1.41421356 2.23606798] # [ 1.41421356 0. 1. ] # [ 2.23606798 1. 0. ]] d = squareform(pdist(x, 'euclidean' )) print (d) \u8a73\u7d30\u306f http://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.distance.pdist.html \u306b\u8a18\u3055\u308c\u3066\u3044\u308b\u3002 \u985e\u4f3c\u306e\u95a2\u6570[ scipy.spatial.distance.cdist ] \u306f 2 \u3064\u306e\u96c6\u5408\u306e 2 \u70b9\u9593\u306e\u5168\u5bfe\u306e\u8ddd \u96e2\u3092\u8a08\u7b97\u3059\u308b\u3002 http://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.distance.cdist.html \u3092\u53c2\u7167\u306e\u3053\u3068\u3002","title":"Distance between points"},{"location":"python_numpy_intro_ja/#matplotlib","text":"Matplotlib \u306f\u63cf\u753b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u3002 \u672c\u7bc0\u3067\u306f Mycmdmatplotlib.pyplot \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u6982\u8aac\u3059\u308b\u3002 MATLAB \u3068\u540c\u7b49\u306e\u3082\u306e\u3067\u3042\u308b\u3002","title":"Matplotlib"},{"location":"python_numpy_intro_ja/#_27","text":"Matplotlib \u306e\u6700\u91cd\u8981\u95a2\u6570\u306f[ plot ] \u3067\u3042\u308b\u30022 \u6b21\u5143\u306e\u63cf\u753b\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\u4ee5\u4e0b\u306b\u4f8b\u3092\u793a\u3059: 1 2 3 4 5 6 7 8 9 10 import numpy as np import matplotlib.pyplot as plt # x, y \u5ea7\u6a19\u306b\u6b63\u5f26\u6ce2\u3092\u63cf\u304f x = np.arange( 0 , 3 * np.pi, 0.1 ) y = np.sin(x) # matplotlib \u306e plot \u95a2\u6570\u3067\u63cf\u753b plt.plot(x, y) plt.show() # \u753b\u9762\u306b\u8868\u793a\u3059\u308b\u305f\u3081\u306b plt.show() \u3092\u4f7f\u3046 \u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u753b\u50cf\u3092\u5f97\u308b\u3002 \u3055\u3089\u306b\u624b\u3092\u52a0\u3048\u308b\u3068\u8907\u6570\u306e\u7dda\uff0c\u30bf\u30a4\u30c8\u30eb\uff0c\u51e1\u4f8b\uff0c\u8ef8\u30e9\u30d9\u30eb\u3092\u63cf\u753b\u53ef\u80fd\u3067\u3042\u308b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import numpy as np import matplotlib.pyplot as plt # x, y \u5ea7\u6a19\u4e0a\u306b\u6b63\u5f26\u6ce2\u3068\u4f59\u5f26\u6ce2\u306e\u66f2\u7dda\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b x = np.arange( 0 , 3 * np.pi, 0.1 ) y_sin = np.sin(x) y_cos = np.cos(x) # matplotlib \u306e plot \u3092\u7528\u3044\u308b plt.plot(x, y_sin) plt.plot(x, y_cos) plt.xlabel( 'x axis label' ) plt.ylabel( 'y axis label' ) plt.title( 'Sine and Cosine' ) plt.legend([ 'Sine' , 'Cosine' ]) plt.show() [ plot ]\u95a2\u6570\u306e\u8a73\u7d30\u306f http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot \u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3002","title":"\u30d7\u30ed\u30c3\u30c8"},{"location":"python_numpy_intro_ja/#_28","text":"[ subplot ]\u95a2\u6570\u3092\u7528\u308c\u3070\u540c\u4e00\u56f3\u306b\u5225\u306e\u30d7\u30ed\u30c3\u30c8\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u4ee5\u4e0b\u306b\u4f8b\u3092\u793a\u3059: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import numpy as np import matplotlib.pyplot as plt # x, y \u5ea7\u6a19\u4e0a\u3067\u6b63\u5f26\u6ce2\u3068\u4f59\u5f26\u6ce2\u3092\u30d7\u30ed\u30c3\u30c8 x = np. arange ( 0 , 3 * np.pi, 0.1 ) y_sin = np. sin (x) y_cos = np. cos (x) # \u9ad8\u30552\u3001\u5e451\u306e\u30b5\u30d6\u30d7\u30ed\u30c3\u30c8\u7528\u683c\u5b50\u3092\u8a2d\u5b9a # \u6700\u521d\u306e\u30b5\u30d6\u30d7\u30ed\u30c3\u30c8\u3092\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u3059\u308b plt.subplot( 2 , 1 , 1 ) # \u6700\u521d\u306e\u30d7\u30ed\u30c3\u30c8\u3092\u4f5c\u6210 plt.plot(x, y_sin) plt.title( 'Sine' ) # 2\u756a\u76ee\u306e\u30b5\u30d6\u30d7\u30ed\u30c3\u30c8\u3092\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u3057\uff0c\u30d7\u30ed\u30c3\u30c8\u3092\u4f5c\u6210 plt.subplot( 2 , 1 , 2 ) plt.plot(x, y_cos) plt.title( 'Cosine' ) # \u56f3\u306e\u753b\u9762\u8868\u793a plt.show() [ subplot ]\u95a2\u6570\u306e\u8a73\u7d30\u306f http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.subplot \u304b\u3089\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3002","title":"\u30b5\u30d6\u30d7\u30ed\u30c3\u30c8"},{"location":"python_numpy_intro_ja/#_29","text":"[ imshow ]\u95a2\u6570\u3092\u4f7f\u3066\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import numpy as np from scipy.misc import imread, imresize import matplotlib.pyplot as plt img = imread( 'assets/cat.jpg' ) img_tinted = img * [ 1 , 0.95 , 0.9 ] # \u539f\u753b\u50cf\u306e\u8868\u793a plt.subplot( 1 , 2 , 1 ) plt.imshow(img) # \u8272\u5408\u3044\u3092\u5909\u3048\u305f\u753b\u50cf\u306e\u8868\u793a plt.subplot( 1 , 2 , 2 ) plt.imshow(img_tinted) plt.show() 1 2.7 \u7cfb\u3068 3.4 \u7cfb\u306e\u76f8\u9055\u306b\u3064\u3044\u3066\u306f\u30bb\u30d0\u30b9\u30c1\u30e3\u30f3\u30fb\u30e9\u30b7\u30e5\u30ab(Sebastian Raschk) \u306e\u30d6\u30ed\u30b0\u8a18\u4e8b\u304c\u53c2\u8003\u306b\u306a\u3063\u305f(<http://sebastianraschka.com/Articles/2014_python_2_3_key_diff.html>)\u3002\u90a6\u8a33\u3082\u5b58\u5728\u3059\u308b(<http://postd.cc/the-key-differences-between-python-2-7-x-and-python-3-x-with-examples/>) [^2]: \u8a33\u6ce8: \u73fe\u884c\u3067\u306f[ python3 ]\u30b3\u30de\u30f3 \u30c9\u3067 3 \u7cfb\u306e Python \u304c\u52d5\u4f5c\u3059\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u6563\u898b\u3055\u308c\u308b(Anaconda<, Ubuntu, Homebrew, MacPorts, \u306a\u3069) [^3]: \u8a33\u6ce8:\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f URL\u3000\u76f4\u4e0b\u306e\u6570\u5b57\u304c 2 \u304b 3 \u304b\u306e\u9055\u3044\u306b\u3088\u308a\uff0c\u30d0\u30fc\u30b8\u30e7\u30f3\u3054\u3068\u306b\u6587\u66f8\u304c\u6574\u5099\u3055\u308c\u3066\u3044\u308b\u306e\u3067 3 \u7cfb\u306e URL \u3092\u9010\u6b21\u7d39\u4ecb\u3059\u308b\u3053\u3068\u306f\u907f\u3051\u308b 1 \u3060\u304b\u3089\u3068\u8a00\u3063\u3066\u65e5\u672c\u8a9e\u6587\u5b57\u30d5\u30a1\u30a4\u30eb\u540d\u554f\u984c\u304c\u89e3\u6c7a\u3057\u305f\u8a33\u3067\u306f\u306a\u3044\u3002\u3082\u3061\u308d\u3093\u305d\u308c\u306fPython\u306e\u8cac\u4efb\u3067\u306f\u306a\u3044 [^6]: Python, NumPy \u7528\u8a9e\u3067 rank \u3068\u306f\u914d\u5217\u306e\u6b21\u5143\u6570\u3092\u8868\u3059(1\u306a\u3089\u30d9\u30af\u30c8\u30eb\uff0c2\u306a\u3089\u884c\u5217)\uff0c shape \u3068\u306f\u914d\u5217\u306e\u5404\u6b21\u5143\u306e\u8981\u7d20\u6570\u3092\u6307\u3059\u30bf\u30d7\u30eb","title":"\u753b\u50cf"},{"location":"t-SNE/","text":"\u6b21\u5143\u524a\u6e1b\uff0c\u6b21\u5143\u5727\u7e2e (dimensionality reduction) t-SNE \u00b6 Van der Maaten \u306e \u30da\u30fc\u30b8 \u306b\u3088\u308c\u3070 \u6b21\u5143\u5727\u7e2e dimensionality reduction \u306b\u306f 34 \u7a2e\u985e\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002PCA, FA, MDS \u306a\u3069\u304c\u5fc3\u7406\u5b66\u3067\u306f\u4f1d\u7d71\u7684 \u7121\u6279\u5224 \u306b\u4f7f\u308f\u308c\u3066\u304d\u307e\u3057\u305f\u3002 \u5fc3\u7406\u5b66\u8005\u306f\u56e0\u5b50\u5206\u6790\u3092\u597d\u3080 \u56e0\u5b50\u5206\u6790\u504f\u611b\u8005\uff0c\u56e0\u5b50\u5206\u6790\u30d5\u30a7\u30c1\uff0cfactor analysis-pheria \u65b9\u304c\u591a\u3044\u3088\u3046\u3067\u3059\u3002\u3067\u3059\u304c\uff0c\u305d\u306e\u3053\u3068\u3092\u652f\u6301\u3059\u308b\u7406\u8ad6\u7684\u6839\u62e0\u306f\u5b58\u5728\u3057\u307e\u305b\u3093 PCA \u00b6 \u4e3b\u6210\u5206\u5206\u6790 PCA: principal component analysis \u306f\u4e00\u756a\u6700\u521d\u306b\u63d0\u6848\u3055\u308c\u305f\u624b\u6cd5\u3067\uff0c \u56fa\u6709\u5024\u5206\u89e3 \u306b\u57fa\u3065\u304d\u307e\u3059\u3002 \u7279\u306b 2 \u6b21\u5143\u3078\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u306f\u76ae\u8cea\u5730\u56f3 cortial map \u3068\u306e\u5bfe\u5fdc\u304c\u8003\u3048\u3089\u308c\u308b\u306e\u3067\u8208\u5473\u6df1\u3044 \u6761\u4ef6\u4ed8\u304d\u6700\u5927\u5024\u3092\u6c42\u3081\u308b\u4e00\u822c\u7684\u65b9\u6cd5\u3067\u30e9\u30b0\u30e9\u30f3\u30b8\u30a2\u30f3 Lagrangian\uff0c\u3042\u308b\u3044\u306f\u30e9\u30b0\u30e9\u30f3\u30b8\u30a7\u306e\u672a\u5b9a\u4e57\u6570\u6cd5 Lagrange multiplier \u304c\u5b9a\u7fa9\u3055\u308c\u308b\u3002 (\u6700\u521d\u306f) \u77e5\u3089\u306a\u3044\u65b9\u304c\u826f\u3044 \u77e5\u3089\u306a\u304f\u3066\u3082\u826f\u3044\u30e9\u30b0\u30e9\u30f3\u30b8\u30a2\u30f3 (\u30e9\u30b0\u30e9\u30f3\u30b8\u30a7\u65b9\u7a0b\u5f0f) \u306e\u8aac\u660e \u00b6 Khan \u30a2\u30ab\u30c7\u30df\u30fc\u306e\u30e9\u30b0\u30e9\u30f3\u30b8\u30a2\u30f3\u306e\u8aac\u660e , YouTube Constrained optimization introduction , YouTube Lagrange multipliers, using tangency to solve constrained optimization , YouTube Finishing the intro lagrange multiplier example YouTube The Lagrangian , YouTube Meaning of the Lagrange multiplier , YouTube \\begin{equation} \\mathcal{L}=\\mathbf{w}^\\top\\mathbf{X}^\\top\\mathbf{Xw}+\\lambda\\left({\\mathbf{ww}^\\top-1}\\right) \\end{equation} \u3061\u306a\u307f\u306b \u30ac\u30f3\u30de\u95a2\u6570\u3068\u306f\u6b21\u306e Python \u30b3\u30fc\u30c9\u304b\u3089\u5206\u304b\u308b\u3088\u3046\u306b\uff0c\u9806\u5217\u306e\u4e00\u822c\u5316\u3067\u3059 1 2 3 4 5 import math math.gamma( 1 ) math.gamma( 2 ) math.gamma( 3 ) t-SNE \u00b6 t-SNE \u306f\u300c\u30c6\u30a3\u30fc\u30ba\u30cb\u30fc\u300d\u3068\u767a\u97f3\u3057\u307e\u3059\u3002 \u5fc3\u7406\u5b66\u8005\u4ee5\u5916\u3067\u306f\u652f\u914d\u7684(\u304b\u3082) t: ** t -\u5206\u5e03 S: S tochastic \u78ba\u7387\u7684 N: N eigbor \u96a3\u63a5(\u96a3\u4eba) E: E mbedding \u57cb\u3081\u8fbc\u307f PCA, FA, \u53e4\u5178\u7684 MDS (Torgerson) \u304c\u56fa\u6709\u5024\u306b\u57fa\u3065\u304f\u306e\u306b\u5bfe\u3057\u3066\uff0ct-SNE \u306f\u591a\u6b21\u5143\u7a7a\u9593\u3068\u4f4e\u6b21\u5143\u7a7a\u6709\u9593\u3078\u306e\u5199\u50cf\u306b\u3064\u3044\u3066\u78ba\u7387\u7684\u306a\u4eee\u5b9a\u3092\u8003\u3048\uff0c\u4e21\u8005\u306e\u5206\u5e03\u304c\u8fd1\u3065\u304f\u3088\u3046\u306b\u5b66\u7fd2\u3092\u884c\u3046\u3002 \u3053\u3053\u3067\uff0c2 \u3064\u306e\u5206\u5e03\u306e\u8ddd\u96e2\u3092\u8003\u3048\u308b\u3002\u8ddd\u96e2\u306e\u5b9a\u7fa9\u306b\u306f\u69d8\u3005\u304c\u63d0\u6848\u304c\u306a\u3055\u308c\u3066\u3044\u308b\u304c \u30ab\u30eb\u30d0\u30c3\u30af=\u30e9\u30a4\u30d6\u30e9\u30fc \u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9(\u3042\u308b\u3044\u306f KL \u8ddd\u96e2)\u304c\u7528\u3044\u3089\u308c\u308b\u3002 \u60c5\u5831\u7406\u8ad6 \u3092\u307f\u3066\u304f\u3060\u3055\u3044\u3002 \u4ee5\u4e0b\u306f van der Maaten and Hinton (2008) \u306e\u30aa\u30ea\u30b8\u30ca\u30eb\u8ad6\u6587\u306b\u63b2\u8f09\u3055\u308c\u305f\u7d50\u679c van der Maaten and Hinton (2008) Fig.2 t \u5206\u5e03( \\nu=1 )\u3068\u6a19\u6e96\u6b63\u898f\u5206\u5e03\u306e\u78ba\u7387\u5bc6\u5ea6\u5206\u5e03 pdf PCA \u3068 t-SNE \u306e\u6bd4\u8f03\u5b9f\u9a13 colab \u7248 \u6570\u5b66\u6050\u6016\u75c7 (math-phobia) \u6570\u5b66\u611b\u597d\u8005 \u306e\u7686\u69d8\u3078 \u00b6 \u30b9\u30c1\u30e5\u30fc\u30c7\u30f3\u30c8\u306e t \u5206\u5e03 \u306e\u78ba\u7387\u5bc6\u5ea6\u95a2\u6570 pdf \u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a: \\begin{equation} p(x,\\nu)=\\frac{\\Gamma\\left(\\frac{\\nu+1}{2}\\right)}{\\sqrt{\\nu\\pi}\\,\\Gamma\\left(\\frac{\\nu}{2}\\right)}\\left(1+\\frac{x^2}{\\nu}\\right)^{-\\frac{\\nu+1}{2}}. \\end{equation} \u304a\u305d\u308d\u3057\u3044\u5f62\u3092\u3057\u3066\u3044\u307e\u3059\u304c\uff0c\u30dd\u30a4\u30f3\u30c8\u306f \\Gamma \u95a2\u6570(\u304c\u3093\u307e\u304b\u3093\u3059\u3046)\u3067\u3042\u308a\uff0c\u5185\u90e8\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b \\nu (\u300c\u306b\u3085\u3046\u300d\u3068\u8aad\u3080\u30ae\u30ea\u30b7\u30e3\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8)\u306f\u81ea\u7531\u3067\u30c7\u30fc\u30bf\u6570 -1 \u3067\u3059\u3002 \\Gamma \u306f \u30ac\u30f3\u30de\u95a2\u6570 \u3067\u3042\u308a\uff0c \u968e\u4e57\u306e\u9023\u7d9a\u91cf\u3078\u306e\u62e1\u5f35\u3068\u307f\u306a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u6700\u3082\u7c21\u5358\u306a\u5834\u5408 \\nu=1 \u3092\u8003\u3048\u308c\u3070\uff0c\u4e0a\u5f0f\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \\begin{equation} p(x,\\nu=1)=\\frac{\\Gamma\\left(1\\right)}{\\sqrt{\\nu\\pi}\\,\\Gamma\\left(\\frac{1}{2}\\right)}\\left(1+x^2\\right)^{-1}. \\end{equation} \u3055\u3089\u306b \\Gamma(1)=1 , \\displaystyle\\Gamma\\left(\\frac{1}{2}\\right)=\\sqrt{\\pi} \u3092\u8003\u616e\u3059\u308c\u3070\uff0c\u4ee5\u4e0b\u306e\u5f0f\u3092\u5f97\u307e\u3059\u3002 \\begin{equation} p(x,\\nu=1)=\\frac{1}{\\pi}\\frac{1}{1+x^2}, \\end{equation} \\pi \u306f\u5186\u5468\u7387\u3067\u5b9a\u6570\u3067\u3059\u304b\u3089\uff0c\u30b0\u30e9\u30d5\u306e\u5f62\u3092\u8003\u3048\u308b\u3068\u304d\u306b\u306f\u7121\u8996\u3057\u3066\u69cb\u3044\u307e\u305b\u3093\u3002\u5f93\u3063\u3066 t \u5206\u5e03\u306e\u672c\u8cea\u306f \\displaystyle\\frac{1}{1+x^2} \u3067\u3042\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092 colab \u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import numpy as np import math print (math.gamma( 1 / 2 )) for i in range ( 1 , 11 ): print (i, math.gamma(i)) math.sqrt(math.pi) == math.gamma( 1 / 2 ) # \u30ac\u30f3\u30de\u95a2\u6570\u306e\u6982\u5f62\u3092\u63cf\u3044\u3066\u307f\u307e\u3057\u3087\u3046 import matplotlib.pyplot as plt x = np.linspace( 0.25 , 4 ) y = [math.gamma(xi) for xi in x] plt.plot(x,y) # \u3064\u3065\u3044\u3066\u6b63\u898f\u5206\u5e03\u3068 $t$-\u5206\u5e03\u3068\u3092\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u3087\u3046 from scipy.stats import norm x = np.linspace(norm.ppf( 0.001 ), norm.ppf( 0.999 ), 100 ) nu = 1 plt.plot(x, t.pdf(x, nu), 'b-' , lw= 2 , label= 't' ) plt.plot(x, norm.pdf(x), 'r-' , lw= 2 , label= 'norm' ) plt.legend() \u53c2\u8003\u8cc7\u6599 \u00b6 t-SNE \u30aa\u30ea\u30b8\u30ca\u30eb\u4f5c\u8005 Van Maaten \u306e\u30da\u30fc\u30b8 tSNEJS demo Karpathy \u306b\u3088\u308b\u89e3\u8aac\u8a18\u4e8b, blog Embedding Projector How to Use t-SNE Effectively distill \u306e\u8a18\u4e8b\u8ad6\u6587","title":"\u6b21\u5143\u5727\u7e2e t-SNE"},{"location":"t-SNE/#dimensionality-reduction-t-sne","text":"Van der Maaten \u306e \u30da\u30fc\u30b8 \u306b\u3088\u308c\u3070 \u6b21\u5143\u5727\u7e2e dimensionality reduction \u306b\u306f 34 \u7a2e\u985e\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002PCA, FA, MDS \u306a\u3069\u304c\u5fc3\u7406\u5b66\u3067\u306f\u4f1d\u7d71\u7684 \u7121\u6279\u5224 \u306b\u4f7f\u308f\u308c\u3066\u304d\u307e\u3057\u305f\u3002 \u5fc3\u7406\u5b66\u8005\u306f\u56e0\u5b50\u5206\u6790\u3092\u597d\u3080 \u56e0\u5b50\u5206\u6790\u504f\u611b\u8005\uff0c\u56e0\u5b50\u5206\u6790\u30d5\u30a7\u30c1\uff0cfactor analysis-pheria \u65b9\u304c\u591a\u3044\u3088\u3046\u3067\u3059\u3002\u3067\u3059\u304c\uff0c\u305d\u306e\u3053\u3068\u3092\u652f\u6301\u3059\u308b\u7406\u8ad6\u7684\u6839\u62e0\u306f\u5b58\u5728\u3057\u307e\u305b\u3093","title":"\u6b21\u5143\u524a\u6e1b\uff0c\u6b21\u5143\u5727\u7e2e (dimensionality reduction) t-SNE"},{"location":"t-SNE/#pca","text":"\u4e3b\u6210\u5206\u5206\u6790 PCA: principal component analysis \u306f\u4e00\u756a\u6700\u521d\u306b\u63d0\u6848\u3055\u308c\u305f\u624b\u6cd5\u3067\uff0c \u56fa\u6709\u5024\u5206\u89e3 \u306b\u57fa\u3065\u304d\u307e\u3059\u3002 \u7279\u306b 2 \u6b21\u5143\u3078\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u306f\u76ae\u8cea\u5730\u56f3 cortial map \u3068\u306e\u5bfe\u5fdc\u304c\u8003\u3048\u3089\u308c\u308b\u306e\u3067\u8208\u5473\u6df1\u3044 \u6761\u4ef6\u4ed8\u304d\u6700\u5927\u5024\u3092\u6c42\u3081\u308b\u4e00\u822c\u7684\u65b9\u6cd5\u3067\u30e9\u30b0\u30e9\u30f3\u30b8\u30a2\u30f3 Lagrangian\uff0c\u3042\u308b\u3044\u306f\u30e9\u30b0\u30e9\u30f3\u30b8\u30a7\u306e\u672a\u5b9a\u4e57\u6570\u6cd5 Lagrange multiplier \u304c\u5b9a\u7fa9\u3055\u308c\u308b\u3002","title":"PCA"},{"location":"t-SNE/#_1","text":"Khan \u30a2\u30ab\u30c7\u30df\u30fc\u306e\u30e9\u30b0\u30e9\u30f3\u30b8\u30a2\u30f3\u306e\u8aac\u660e , YouTube Constrained optimization introduction , YouTube Lagrange multipliers, using tangency to solve constrained optimization , YouTube Finishing the intro lagrange multiplier example YouTube The Lagrangian , YouTube Meaning of the Lagrange multiplier , YouTube \\begin{equation} \\mathcal{L}=\\mathbf{w}^\\top\\mathbf{X}^\\top\\mathbf{Xw}+\\lambda\\left({\\mathbf{ww}^\\top-1}\\right) \\end{equation} \u3061\u306a\u307f\u306b \u30ac\u30f3\u30de\u95a2\u6570\u3068\u306f\u6b21\u306e Python \u30b3\u30fc\u30c9\u304b\u3089\u5206\u304b\u308b\u3088\u3046\u306b\uff0c\u9806\u5217\u306e\u4e00\u822c\u5316\u3067\u3059 1 2 3 4 5 import math math.gamma( 1 ) math.gamma( 2 ) math.gamma( 3 )","title":"(\u6700\u521d\u306f)  \u77e5\u3089\u306a\u3044\u65b9\u304c\u826f\u3044 \u77e5\u3089\u306a\u304f\u3066\u3082\u826f\u3044\u30e9\u30b0\u30e9\u30f3\u30b8\u30a2\u30f3 (\u30e9\u30b0\u30e9\u30f3\u30b8\u30a7\u65b9\u7a0b\u5f0f) \u306e\u8aac\u660e"},{"location":"t-SNE/#t-sne","text":"t-SNE \u306f\u300c\u30c6\u30a3\u30fc\u30ba\u30cb\u30fc\u300d\u3068\u767a\u97f3\u3057\u307e\u3059\u3002 \u5fc3\u7406\u5b66\u8005\u4ee5\u5916\u3067\u306f\u652f\u914d\u7684(\u304b\u3082) t: ** t -\u5206\u5e03 S: S tochastic \u78ba\u7387\u7684 N: N eigbor \u96a3\u63a5(\u96a3\u4eba) E: E mbedding \u57cb\u3081\u8fbc\u307f PCA, FA, \u53e4\u5178\u7684 MDS (Torgerson) \u304c\u56fa\u6709\u5024\u306b\u57fa\u3065\u304f\u306e\u306b\u5bfe\u3057\u3066\uff0ct-SNE \u306f\u591a\u6b21\u5143\u7a7a\u9593\u3068\u4f4e\u6b21\u5143\u7a7a\u6709\u9593\u3078\u306e\u5199\u50cf\u306b\u3064\u3044\u3066\u78ba\u7387\u7684\u306a\u4eee\u5b9a\u3092\u8003\u3048\uff0c\u4e21\u8005\u306e\u5206\u5e03\u304c\u8fd1\u3065\u304f\u3088\u3046\u306b\u5b66\u7fd2\u3092\u884c\u3046\u3002 \u3053\u3053\u3067\uff0c2 \u3064\u306e\u5206\u5e03\u306e\u8ddd\u96e2\u3092\u8003\u3048\u308b\u3002\u8ddd\u96e2\u306e\u5b9a\u7fa9\u306b\u306f\u69d8\u3005\u304c\u63d0\u6848\u304c\u306a\u3055\u308c\u3066\u3044\u308b\u304c \u30ab\u30eb\u30d0\u30c3\u30af=\u30e9\u30a4\u30d6\u30e9\u30fc \u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9(\u3042\u308b\u3044\u306f KL \u8ddd\u96e2)\u304c\u7528\u3044\u3089\u308c\u308b\u3002 \u60c5\u5831\u7406\u8ad6 \u3092\u307f\u3066\u304f\u3060\u3055\u3044\u3002 \u4ee5\u4e0b\u306f van der Maaten and Hinton (2008) \u306e\u30aa\u30ea\u30b8\u30ca\u30eb\u8ad6\u6587\u306b\u63b2\u8f09\u3055\u308c\u305f\u7d50\u679c van der Maaten and Hinton (2008) Fig.2 t \u5206\u5e03( \\nu=1 )\u3068\u6a19\u6e96\u6b63\u898f\u5206\u5e03\u306e\u78ba\u7387\u5bc6\u5ea6\u5206\u5e03 pdf PCA \u3068 t-SNE \u306e\u6bd4\u8f03\u5b9f\u9a13 colab \u7248","title":"t-SNE"},{"location":"t-SNE/#math-phobia","text":"\u30b9\u30c1\u30e5\u30fc\u30c7\u30f3\u30c8\u306e t \u5206\u5e03 \u306e\u78ba\u7387\u5bc6\u5ea6\u95a2\u6570 pdf \u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a: \\begin{equation} p(x,\\nu)=\\frac{\\Gamma\\left(\\frac{\\nu+1}{2}\\right)}{\\sqrt{\\nu\\pi}\\,\\Gamma\\left(\\frac{\\nu}{2}\\right)}\\left(1+\\frac{x^2}{\\nu}\\right)^{-\\frac{\\nu+1}{2}}. \\end{equation} \u304a\u305d\u308d\u3057\u3044\u5f62\u3092\u3057\u3066\u3044\u307e\u3059\u304c\uff0c\u30dd\u30a4\u30f3\u30c8\u306f \\Gamma \u95a2\u6570(\u304c\u3093\u307e\u304b\u3093\u3059\u3046)\u3067\u3042\u308a\uff0c\u5185\u90e8\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b \\nu (\u300c\u306b\u3085\u3046\u300d\u3068\u8aad\u3080\u30ae\u30ea\u30b7\u30e3\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8)\u306f\u81ea\u7531\u3067\u30c7\u30fc\u30bf\u6570 -1 \u3067\u3059\u3002 \\Gamma \u306f \u30ac\u30f3\u30de\u95a2\u6570 \u3067\u3042\u308a\uff0c \u968e\u4e57\u306e\u9023\u7d9a\u91cf\u3078\u306e\u62e1\u5f35\u3068\u307f\u306a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u6700\u3082\u7c21\u5358\u306a\u5834\u5408 \\nu=1 \u3092\u8003\u3048\u308c\u3070\uff0c\u4e0a\u5f0f\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \\begin{equation} p(x,\\nu=1)=\\frac{\\Gamma\\left(1\\right)}{\\sqrt{\\nu\\pi}\\,\\Gamma\\left(\\frac{1}{2}\\right)}\\left(1+x^2\\right)^{-1}. \\end{equation} \u3055\u3089\u306b \\Gamma(1)=1 , \\displaystyle\\Gamma\\left(\\frac{1}{2}\\right)=\\sqrt{\\pi} \u3092\u8003\u616e\u3059\u308c\u3070\uff0c\u4ee5\u4e0b\u306e\u5f0f\u3092\u5f97\u307e\u3059\u3002 \\begin{equation} p(x,\\nu=1)=\\frac{1}{\\pi}\\frac{1}{1+x^2}, \\end{equation} \\pi \u306f\u5186\u5468\u7387\u3067\u5b9a\u6570\u3067\u3059\u304b\u3089\uff0c\u30b0\u30e9\u30d5\u306e\u5f62\u3092\u8003\u3048\u308b\u3068\u304d\u306b\u306f\u7121\u8996\u3057\u3066\u69cb\u3044\u307e\u305b\u3093\u3002\u5f93\u3063\u3066 t \u5206\u5e03\u306e\u672c\u8cea\u306f \\displaystyle\\frac{1}{1+x^2} \u3067\u3042\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092 colab \u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import numpy as np import math print (math.gamma( 1 / 2 )) for i in range ( 1 , 11 ): print (i, math.gamma(i)) math.sqrt(math.pi) == math.gamma( 1 / 2 ) # \u30ac\u30f3\u30de\u95a2\u6570\u306e\u6982\u5f62\u3092\u63cf\u3044\u3066\u307f\u307e\u3057\u3087\u3046 import matplotlib.pyplot as plt x = np.linspace( 0.25 , 4 ) y = [math.gamma(xi) for xi in x] plt.plot(x,y) # \u3064\u3065\u3044\u3066\u6b63\u898f\u5206\u5e03\u3068 $t$-\u5206\u5e03\u3068\u3092\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u3087\u3046 from scipy.stats import norm x = np.linspace(norm.ppf( 0.001 ), norm.ppf( 0.999 ), 100 ) nu = 1 plt.plot(x, t.pdf(x, nu), 'b-' , lw= 2 , label= 't' ) plt.plot(x, norm.pdf(x), 'r-' , lw= 2 , label= 'norm' ) plt.legend()","title":"  \u6570\u5b66\u6050\u6016\u75c7 (math-phobia)     \u6570\u5b66\u611b\u597d\u8005 \u306e\u7686\u69d8\u3078"},{"location":"t-SNE/#_2","text":"t-SNE \u30aa\u30ea\u30b8\u30ca\u30eb\u4f5c\u8005 Van Maaten \u306e\u30da\u30fc\u30b8 tSNEJS demo Karpathy \u306b\u3088\u308b\u89e3\u8aac\u8a18\u4e8b, blog Embedding Projector How to Use t-SNE Effectively distill \u306e\u8a18\u4e8b\u8ad6\u6587","title":"\u53c2\u8003\u8cc7\u6599"},{"location":"whatisNN/","text":"\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u306f\u4f55\u304b \u00b6 \u5f62\u5f0f\u30cb\u30e5\u30fc\u30ed\u30f3\u306f\uff0c\u30b7\u30ca\u30d7\u30b9\u7d50\u5408\u8377\u91cd\u30d9\u30af\u30c8\u30eb\u3068\u51fa\u529b\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u306e\u4f1d\u9054\u95a2\u6570\u3068\u3067\u69cb\u6210\u3055\u308c\u6b21\u5f0f\u3067\u8868\u73fe\u3055\u308c\u308b\u3002 y_i=\\phi\\left(\\sum_jw_{ij}x_j\\right) \u3053\u3053\u3067 y_i \u306f i \u756a\u76ee\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u51fa\u529b\uff0c x_j \u306f j \u756a\u76ee\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u51fa\u529b\uff0c w_{ij} \u306f\u30cb\u30e5\u30fc\u30ed\u30f3 i \u3068 j \u3068\u306e\u9593\u306e \u30b7\u30ca\u30d7\u30b9\u7d50\u5408\u8377\u91cd \u3067\u3042\u308b\u3002 \\phi \u306f\u6d3b\u6027\u5316\u95a2\u6570\u3068\u547c\u3070\u308c\u308b\u3002 \u5f62\u5f0f\u30cb\u30e5\u30fc\u30ed\u30f3 2\u5c64\u4ee5\u4e0a\u306e\u4e2d\u9593\u5c64\u3092\u6301\u3064\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092 deep neural networks \u3068\u547c\u3076\u3002 3\u5c64 MLP: multi-layered Perceptrons h_1 = \\sigma\\left(\\mathbf{W}_1\\mathbf{x}+\\mathbf{b}_1\\right) h_2 = \\sigma\\left(\\mathbf{W}_1\\mathbf{h}_1+\\mathbf{b}_2\\right) P = \\mbox{softmax}\\left(\\mathbf{W}_{o}+\\mathbf{b}_o\\right) \u6d3b\u6027\u5316\u95a2\u6570 activation function \u306b\u306f \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570 logistic function \u304c\u4f7f\u308f\u308c\u3066\u304d\u305f\u3000 \\sigma(x) = \\left(1+e^{-x}\\right)^{-1} \u82f1\u8a9e\u3067 S \u5b57\u66f2\u7dda\u306e\u610f\u5473\u3092\u6301\u3064 \u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570 sigmoid function \u3068\u3044\u3046\u8a00\u8449\u3082\u7528\u3044\u3089\u308c\u308b\u3002 \u6b21\u306e \u30cf\u30a4\u30d1\u30fc\u30bf\u30f3\u30b8\u30a7\u30f3\u30c8 \u3082\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u3067\u3042\u308b \\phi(x) = \\tanh(x) = \\frac{e^{x}-e^{-x}}{e^{x}+e^{-x}} \u8fd1\u5e74\u3067\u306f\u3088\u308a\u7c21\u5358\u306a\u975e\u7dda\u5f62\u95a2\u6570\u3092\u7528\u3044\u308b\u50be\u5411 ReLU ( \u6574\u6d41\u7dda\u5f62\u30e6\u30cb\u30c3\u30c8 ) \u306a\u3069\u3002 ReLU = \\max(0, x) ReLU \u3068 tanh \u306e\u6bd4\u8f03 Krizensky et. al,2012 \u3088\u308a \u7a2e\u3005\u306e\u6d3b\u6027\u95a2\u6570\u306e\u30b0\u30e9\u30d5 \u51fa\u529b\u5c64\u306b\u304a\u3051\u308b\u8aa4\u5dee\uff0c\u3042\u308b\u3044\u306f\u640d\u5931\u3092\u6700\u5c0f\u306b\u3059\u308b\u3088\u3046\u306a\u5b66\u7fd2\u3002 \u4f8b\u3048\u3070\u640d\u5931\u3068\u3057\u3066 \u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc cross entropy \u3092\u7528\u3044\u308b\u3053\u3068\u306b\u3059\u308c\u3070 l(t,y) = \\mathbf{t}^T\\log\\left(\\mathbf{y}\\right) \u3042\u308b\u3044\u306f l(t,y)=-\\sum_{i=1}^{m}\\left[t_{i}\\log(y_{i})+(1-t_{i})\\log(1-y_{i})\\right] \u56de\u5e30\u3067\u306f\u306a\u304f\u30af\u30e9\u30b9\u5206\u985e\u306e\u5834\u5408\u306b\u306f\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u640d\u5931\u3092\u7528\u3044\u308b\u3053\u3068\u304c \u591a\u3044\u3002\u7406\u7531\u306f [\u30cb\u30fc\u30eb\u30bb\u30f3\u306e\u30d6\u30ed\u30b0]((http://neuralnetworksanddeeplearning.com/chap3.html) \u306b\u3082\u8a73\u7d30\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3002 \u548c\u8a33 \u307e\u305f Ng \u306e MOOC \u30ed\u30b8\u30b9\u30c6\u30c3\u30af\u56de\u5e30\u306e\u8aac\u660e\u306b\u8a73\u3057\u3044\u3002","title":"\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u306f\u4f55\u304b"},{"location":"whatisNN/#_1","text":"\u5f62\u5f0f\u30cb\u30e5\u30fc\u30ed\u30f3\u306f\uff0c\u30b7\u30ca\u30d7\u30b9\u7d50\u5408\u8377\u91cd\u30d9\u30af\u30c8\u30eb\u3068\u51fa\u529b\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u306e\u4f1d\u9054\u95a2\u6570\u3068\u3067\u69cb\u6210\u3055\u308c\u6b21\u5f0f\u3067\u8868\u73fe\u3055\u308c\u308b\u3002 y_i=\\phi\\left(\\sum_jw_{ij}x_j\\right) \u3053\u3053\u3067 y_i \u306f i \u756a\u76ee\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u51fa\u529b\uff0c x_j \u306f j \u756a\u76ee\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u51fa\u529b\uff0c w_{ij} \u306f\u30cb\u30e5\u30fc\u30ed\u30f3 i \u3068 j \u3068\u306e\u9593\u306e \u30b7\u30ca\u30d7\u30b9\u7d50\u5408\u8377\u91cd \u3067\u3042\u308b\u3002 \\phi \u306f\u6d3b\u6027\u5316\u95a2\u6570\u3068\u547c\u3070\u308c\u308b\u3002 \u5f62\u5f0f\u30cb\u30e5\u30fc\u30ed\u30f3 2\u5c64\u4ee5\u4e0a\u306e\u4e2d\u9593\u5c64\u3092\u6301\u3064\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092 deep neural networks \u3068\u547c\u3076\u3002 3\u5c64 MLP: multi-layered Perceptrons h_1 = \\sigma\\left(\\mathbf{W}_1\\mathbf{x}+\\mathbf{b}_1\\right) h_2 = \\sigma\\left(\\mathbf{W}_1\\mathbf{h}_1+\\mathbf{b}_2\\right) P = \\mbox{softmax}\\left(\\mathbf{W}_{o}+\\mathbf{b}_o\\right) \u6d3b\u6027\u5316\u95a2\u6570 activation function \u306b\u306f \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570 logistic function \u304c\u4f7f\u308f\u308c\u3066\u304d\u305f\u3000 \\sigma(x) = \\left(1+e^{-x}\\right)^{-1} \u82f1\u8a9e\u3067 S \u5b57\u66f2\u7dda\u306e\u610f\u5473\u3092\u6301\u3064 \u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570 sigmoid function \u3068\u3044\u3046\u8a00\u8449\u3082\u7528\u3044\u3089\u308c\u308b\u3002 \u6b21\u306e \u30cf\u30a4\u30d1\u30fc\u30bf\u30f3\u30b8\u30a7\u30f3\u30c8 \u3082\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u3067\u3042\u308b \\phi(x) = \\tanh(x) = \\frac{e^{x}-e^{-x}}{e^{x}+e^{-x}} \u8fd1\u5e74\u3067\u306f\u3088\u308a\u7c21\u5358\u306a\u975e\u7dda\u5f62\u95a2\u6570\u3092\u7528\u3044\u308b\u50be\u5411 ReLU ( \u6574\u6d41\u7dda\u5f62\u30e6\u30cb\u30c3\u30c8 ) \u306a\u3069\u3002 ReLU = \\max(0, x) ReLU \u3068 tanh \u306e\u6bd4\u8f03 Krizensky et. al,2012 \u3088\u308a \u7a2e\u3005\u306e\u6d3b\u6027\u95a2\u6570\u306e\u30b0\u30e9\u30d5 \u51fa\u529b\u5c64\u306b\u304a\u3051\u308b\u8aa4\u5dee\uff0c\u3042\u308b\u3044\u306f\u640d\u5931\u3092\u6700\u5c0f\u306b\u3059\u308b\u3088\u3046\u306a\u5b66\u7fd2\u3002 \u4f8b\u3048\u3070\u640d\u5931\u3068\u3057\u3066 \u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc cross entropy \u3092\u7528\u3044\u308b\u3053\u3068\u306b\u3059\u308c\u3070 l(t,y) = \\mathbf{t}^T\\log\\left(\\mathbf{y}\\right) \u3042\u308b\u3044\u306f l(t,y)=-\\sum_{i=1}^{m}\\left[t_{i}\\log(y_{i})+(1-t_{i})\\log(1-y_{i})\\right] \u56de\u5e30\u3067\u306f\u306a\u304f\u30af\u30e9\u30b9\u5206\u985e\u306e\u5834\u5408\u306b\u306f\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u640d\u5931\u3092\u7528\u3044\u308b\u3053\u3068\u304c \u591a\u3044\u3002\u7406\u7531\u306f [\u30cb\u30fc\u30eb\u30bb\u30f3\u306e\u30d6\u30ed\u30b0]((http://neuralnetworksanddeeplearning.com/chap3.html) \u306b\u3082\u8a73\u7d30\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3002 \u548c\u8a33 \u307e\u305f Ng \u306e MOOC \u30ed\u30b8\u30b9\u30c6\u30c3\u30af\u56de\u5e30\u306e\u8aac\u660e\u306b\u8a73\u3057\u3044\u3002","title":"\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u306f\u4f55\u304b"}]}